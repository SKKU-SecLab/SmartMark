{
  "name": "Analysis_2022-07-06_21-03-41",
  "address": "",
  "binarySource": "7361d21b5aec39d91d3e27b13f3a4286fa0069b1b930146080604052600436106100575763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166368f0bcaa811461005c575b600080fd5b81801561006857600080fd5b506040805160206004803580820135838102808601850190965280855261016195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506101639650505050505050565b005b600080606060008651885114801561017c575085518851145b151561018757600080fd5b60009350600092505b87518310156103715785838151811015156101a757fe5b906020019060200201516040519080825280601f01601f1916602001820160405280156101de578160200160208202803883390190505b509150600090505b85838151811015156101f457fe5b906020019060200201518110156102a857848481518110151561021357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110151561026c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600193840193016101e6565b87838151811015156102b657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1687848151811015156102e457fe5b906020019060200201518360405180828051906020019080838360005b83811015610319578181015183820152602001610301565b50505050905090810190601f1680156103465780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af192505050151561036657600080fd5b600190920191610190565b50505050505050505600a165627a7a72305820941c4b25f19ef0b36c7297efcc8da445db3cdd59886a966fd504553dc4f4849e0029",
  "binaryHash": "5169b1ab",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820941c4b25f19ef0b36c7297efcc8da445db3cdd59886a966fd504553dc4f4849e0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657109021305
    }
  },
  "runtimeCfg": {
    "bytecode": "7361d21b5aec39d91d3e27b13f3a4286fa0069b1b930146080604052600436106100575763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166368f0bcaa811461005c575b600080fd5b81801561006857600080fd5b506040805160206004803580820135838102808601850190965280855261016195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506101639650505050505050565b005b600080606060008651885114801561017c575085518851145b151561018757600080fd5b60009350600092505b87518310156103715785838151811015156101a757fe5b906020019060200201516040519080825280601f01601f1916602001820160405280156101de578160200160208202803883390190505b509150600090505b85838151811015156101f457fe5b906020019060200201518110156102a857848481518110151561021357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110151561026c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600193840193016101e6565b87838151811015156102b657fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1687848151811015156102e457fe5b906020019060200201518360405180828051906020019080838360005b83811015610319578181015183820152602001610301565b50505050905090810190601f1680156103465780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af192505050151561036657600080fd5b600190920191610190565b50505050505050505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 36,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "7361d21b5aec39d91d3e27b13f3a4286fa0069b1b9301460806040526004361061005757",
        "parsedOpcodes": "0: PUSH20 0x61d21b5aec39d91d3e27b13f3a4286fa0069b1b9\n21: ADDRESS\n22: EQ\n23: PUSH1 0x80\n25: PUSH1 0x40\n27: MSTORE\n28: PUSH1 0x04\n30: CALLDATASIZE\n31: LT\n32: PUSH2 0x0057\n35: JUMPI"
      },
      {
        "offset": 36,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166368f0bcaa811461005c57",
        "parsedOpcodes": "36: PUSH4 0xffffffff\n41: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n71: PUSH1 0x00\n73: CALLDATALOAD\n74: DIV\n75: AND\n76: PUSH4 0x68f0bcaa\n81: DUP2\n82: EQ\n83: PUSH2 0x005c\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "87: JUMPDEST\n88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b81801561006857",
        "parsedOpcodes": "92: JUMPDEST\n93: DUP2\n94: DUP1\n95: ISZERO\n96: PUSH2 0x0068\n99: JUMPI"
      },
      {
        "offset": 100,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "100: PUSH1 0x00\n102: DUP1\n103: REVERT"
      },
      {
        "offset": 104,
        "length": 249,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b506040805160206004803580820135838102808601850190965280855261016195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610163965050505050505056",
        "parsedOpcodes": "104: JUMPDEST\n105: POP\n106: PUSH1 0x40\n108: DUP1\n109: MLOAD\n110: PUSH1 0x20\n112: PUSH1 0x04\n114: DUP1\n115: CALLDATALOAD\n116: DUP1\n117: DUP3\n118: ADD\n119: CALLDATALOAD\n120: DUP4\n121: DUP2\n122: MUL\n123: DUP1\n124: DUP7\n125: ADD\n126: DUP6\n127: ADD\n128: SWAP1\n129: SWAP7\n130: MSTORE\n131: DUP1\n132: DUP6\n133: MSTORE\n134: PUSH2 0x0161\n137: SWAP6\n138: CALLDATASIZE\n139: SWAP6\n140: SWAP4\n141: SWAP5\n142: PUSH1 0x24\n144: SWAP5\n145: SWAP4\n146: DUP6\n147: ADD\n148: SWAP3\n149: SWAP2\n150: DUP3\n151: SWAP2\n152: DUP6\n153: ADD\n154: SWAP1\n155: DUP5\n156: SWAP1\n157: DUP1\n158: DUP3\n159: DUP5\n160: CALLDATACOPY\n161: POP\n162: POP\n163: PUSH1 0x40\n165: DUP1\n166: MLOAD\n167: DUP8\n168: CALLDATALOAD\n169: DUP10\n170: ADD\n171: DUP1\n172: CALLDATALOAD\n173: PUSH1 0x20\n175: DUP2\n176: DUP2\n177: MUL\n178: DUP5\n179: DUP2\n180: ADD\n181: DUP3\n182: ADD\n183: SWAP1\n184: SWAP6\n185: MSTORE\n186: DUP2\n187: DUP5\n188: MSTORE\n189: SWAP9\n190: SWAP12\n191: SWAP11\n192: SWAP10\n193: DUP10\n194: ADD\n195: SWAP9\n196: SWAP3\n197: SWAP8\n198: POP\n199: SWAP1\n200: DUP3\n201: ADD\n202: SWAP6\n203: POP\n204: SWAP4\n205: POP\n206: DUP4\n207: SWAP3\n208: POP\n209: DUP6\n210: ADD\n211: SWAP1\n212: DUP5\n213: SWAP1\n214: DUP1\n215: DUP3\n216: DUP5\n217: CALLDATACOPY\n218: POP\n219: POP\n220: PUSH1 0x40\n222: DUP1\n223: MLOAD\n224: DUP8\n225: CALLDATALOAD\n226: DUP10\n227: ADD\n228: DUP1\n229: CALLDATALOAD\n230: PUSH1 0x20\n232: DUP2\n233: DUP2\n234: MUL\n235: DUP5\n236: DUP2\n237: ADD\n238: DUP3\n239: ADD\n240: SWAP1\n241: SWAP6\n242: MSTORE\n243: DUP2\n244: DUP5\n245: MSTORE\n246: SWAP9\n247: SWAP12\n248: SWAP11\n249: SWAP10\n250: DUP10\n251: ADD\n252: SWAP9\n253: SWAP3\n254: SWAP8\n255: POP\n256: SWAP1\n257: DUP3\n258: ADD\n259: SWAP6\n260: POP\n261: SWAP4\n262: POP\n263: DUP4\n264: SWAP3\n265: POP\n266: DUP6\n267: ADD\n268: SWAP1\n269: DUP5\n270: SWAP1\n271: DUP1\n272: DUP3\n273: DUP5\n274: CALLDATACOPY\n275: POP\n276: POP\n277: PUSH1 0x40\n279: DUP1\n280: MLOAD\n281: PUSH1 0x20\n283: PUSH1 0x1f\n285: DUP10\n286: CALLDATALOAD\n287: DUP12\n288: ADD\n289: DUP1\n290: CALLDATALOAD\n291: SWAP2\n292: DUP3\n293: ADD\n294: DUP4\n295: SWAP1\n296: DIV\n297: DUP4\n298: MUL\n299: DUP5\n300: ADD\n301: DUP4\n302: ADD\n303: SWAP1\n304: SWAP5\n305: MSTORE\n306: DUP1\n307: DUP4\n308: MSTORE\n309: SWAP8\n310: SWAP11\n311: SWAP10\n312: SWAP9\n313: DUP2\n314: ADD\n315: SWAP8\n316: SWAP2\n317: SWAP7\n318: POP\n319: SWAP2\n320: DUP3\n321: ADD\n322: SWAP5\n323: POP\n324: SWAP3\n325: POP\n326: DUP3\n327: SWAP2\n328: POP\n329: DUP5\n330: ADD\n331: DUP4\n332: DUP3\n333: DUP1\n334: DUP3\n335: DUP5\n336: CALLDATACOPY\n337: POP\n338: SWAP5\n339: SWAP8\n340: POP\n341: PUSH2 0x0163\n344: SWAP7\n345: POP\n346: POP\n347: POP\n348: POP\n349: POP\n350: POP\n351: POP\n352: JUMP"
      },
      {
        "offset": 353,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "353: JUMPDEST\n354: STOP"
      },
      {
        "offset": 355,
        "length": 19,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b600080606060008651885114801561017c57",
        "parsedOpcodes": "355: JUMPDEST\n356: PUSH1 0x00\n358: DUP1\n359: PUSH1 0x60\n361: PUSH1 0x00\n363: DUP7\n364: MLOAD\n365: DUP9\n366: MLOAD\n367: EQ\n368: DUP1\n369: ISZERO\n370: PUSH2 0x017c\n373: JUMPI"
      },
      {
        "offset": 374,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508551885114",
        "parsedOpcodes": "374: POP\n375: DUP6\n376: MLOAD\n377: DUP9\n378: MLOAD\n379: EQ"
      },
      {
        "offset": 380,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b151561018757",
        "parsedOpcodes": "380: JUMPDEST\n381: ISZERO\n382: ISZERO\n383: PUSH2 0x0187\n386: JUMPI"
      },
      {
        "offset": 387,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "387: PUSH1 0x00\n389: DUP1\n390: REVERT"
      },
      {
        "offset": 391,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000935060009250",
        "parsedOpcodes": "391: JUMPDEST\n392: PUSH1 0x00\n394: SWAP4\n395: POP\n396: PUSH1 0x00\n398: SWAP3\n399: POP"
      },
      {
        "offset": 400,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b875183101561037157",
        "parsedOpcodes": "400: JUMPDEST\n401: DUP8\n402: MLOAD\n403: DUP4\n404: LT\n405: ISZERO\n406: PUSH2 0x0371\n409: JUMPI"
      },
      {
        "offset": 410,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "85838151811015156101a757",
        "parsedOpcodes": "410: DUP6\n411: DUP4\n412: DUP2\n413: MLOAD\n414: DUP2\n415: LT\n416: ISZERO\n417: ISZERO\n418: PUSH2 0x01a7\n421: JUMPI"
      },
      {
        "offset": 422,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "422: INVALID"
      },
      {
        "offset": 423,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b906020019060200201516040519080825280601f01601f1916602001820160405280156101de57",
        "parsedOpcodes": "423: JUMPDEST\n424: SWAP1\n425: PUSH1 0x20\n427: ADD\n428: SWAP1\n429: PUSH1 0x20\n431: MUL\n432: ADD\n433: MLOAD\n434: PUSH1 0x40\n436: MLOAD\n437: SWAP1\n438: DUP1\n439: DUP3\n440: MSTORE\n441: DUP1\n442: PUSH1 0x1f\n444: ADD\n445: PUSH1 0x1f\n447: NOT\n448: AND\n449: PUSH1 0x20\n451: ADD\n452: DUP3\n453: ADD\n454: PUSH1 0x40\n456: MSTORE\n457: DUP1\n458: ISZERO\n459: PUSH2 0x01de\n462: JUMPI"
      },
      {
        "offset": 463,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280388339019050",
        "parsedOpcodes": "463: DUP2\n464: PUSH1 0x20\n466: ADD\n467: PUSH1 0x20\n469: DUP3\n470: MUL\n471: DUP1\n472: CODESIZE\n473: DUP4\n474: CODECOPY\n475: ADD\n476: SWAP1\n477: POP"
      },
      {
        "offset": 478,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50915060009050",
        "parsedOpcodes": "478: JUMPDEST\n479: POP\n480: SWAP2\n481: POP\n482: PUSH1 0x00\n484: SWAP1\n485: POP"
      },
      {
        "offset": 486,
        "length": 13,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b85838151811015156101f457",
        "parsedOpcodes": "486: JUMPDEST\n487: DUP6\n488: DUP4\n489: DUP2\n490: MLOAD\n491: DUP2\n492: LT\n493: ISZERO\n494: ISZERO\n495: PUSH2 0x01f4\n498: JUMPI"
      },
      {
        "offset": 499,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "499: INVALID"
      },
      {
        "offset": 500,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b906020019060200201518110156102a857",
        "parsedOpcodes": "500: JUMPDEST\n501: SWAP1\n502: PUSH1 0x20\n504: ADD\n505: SWAP1\n506: PUSH1 0x20\n508: MUL\n509: ADD\n510: MLOAD\n511: DUP2\n512: LT\n513: ISZERO\n514: PUSH2 0x02a8\n517: JUMPI"
      },
      {
        "offset": 518,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "848481518110151561021357",
        "parsedOpcodes": "518: DUP5\n519: DUP5\n520: DUP2\n521: MLOAD\n522: DUP2\n523: LT\n524: ISZERO\n525: ISZERO\n526: PUSH2 0x0213\n529: JUMPI"
      },
      {
        "offset": 530,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "530: INVALID"
      },
      {
        "offset": 531,
        "length": 88,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110151561026c57",
        "parsedOpcodes": "531: JUMPDEST\n532: SWAP1\n533: PUSH1 0x20\n535: ADD\n536: ADD\n537: MLOAD\n538: PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000\n571: SWAP1\n572: DIV\n573: PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000\n606: MUL\n607: DUP3\n608: DUP3\n609: DUP2\n610: MLOAD\n611: DUP2\n612: LT\n613: ISZERO\n614: ISZERO\n615: PUSH2 0x026c\n618: JUMPI"
      },
      {
        "offset": 619,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "619: INVALID"
      },
      {
        "offset": 620,
        "length": 60,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600193840193016101e656",
        "parsedOpcodes": "620: JUMPDEST\n621: SWAP1\n622: PUSH1 0x20\n624: ADD\n625: ADD\n626: SWAP1\n627: PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n659: NOT\n660: AND\n661: SWAP1\n662: DUP2\n663: PUSH1 0x00\n665: BYTE\n666: SWAP1\n667: MSTORE8\n668: POP\n669: PUSH1 0x01\n671: SWAP4\n672: DUP5\n673: ADD\n674: SWAP4\n675: ADD\n676: PUSH2 0x01e6\n679: JUMP"
      },
      {
        "offset": 680,
        "length": 13,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b87838151811015156102b657",
        "parsedOpcodes": "680: JUMPDEST\n681: DUP8\n682: DUP4\n683: DUP2\n684: MLOAD\n685: DUP2\n686: LT\n687: ISZERO\n688: ISZERO\n689: PUSH2 0x02b6\n692: JUMPI"
      },
      {
        "offset": 693,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "693: INVALID"
      },
      {
        "offset": 694,
        "length": 45,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1687848151811015156102e457",
        "parsedOpcodes": "694: JUMPDEST\n695: SWAP1\n696: PUSH1 0x20\n698: ADD\n699: SWAP1\n700: PUSH1 0x20\n702: MUL\n703: ADD\n704: MLOAD\n705: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n726: AND\n727: DUP8\n728: DUP5\n729: DUP2\n730: MLOAD\n731: DUP2\n732: LT\n733: ISZERO\n734: ISZERO\n735: PUSH2 0x02e4\n738: JUMPI"
      },
      {
        "offset": 739,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "739: INVALID"
      },
      {
        "offset": 740,
        "length": 29,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b90602001906020020151836040518082805190602001908083836000",
        "parsedOpcodes": "740: JUMPDEST\n741: SWAP1\n742: PUSH1 0x20\n744: ADD\n745: SWAP1\n746: PUSH1 0x20\n748: MUL\n749: ADD\n750: MLOAD\n751: DUP4\n752: PUSH1 0x40\n754: MLOAD\n755: DUP1\n756: DUP3\n757: DUP1\n758: MLOAD\n759: SWAP1\n760: PUSH1 0x20\n762: ADD\n763: SWAP1\n764: DUP1\n765: DUP4\n766: DUP4\n767: PUSH1 0x00"
      },
      {
        "offset": 769,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561031957",
        "parsedOpcodes": "769: JUMPDEST\n770: DUP4\n771: DUP2\n772: LT\n773: ISZERO\n774: PUSH2 0x0319\n777: JUMPI"
      },
      {
        "offset": 778,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161030156",
        "parsedOpcodes": "778: DUP2\n779: DUP2\n780: ADD\n781: MLOAD\n782: DUP4\n783: DUP3\n784: ADD\n785: MSTORE\n786: PUSH1 0x20\n788: ADD\n789: PUSH2 0x0301\n792: JUMP"
      },
      {
        "offset": 793,
        "length": 20,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561034657",
        "parsedOpcodes": "793: JUMPDEST\n794: POP\n795: POP\n796: POP\n797: POP\n798: SWAP1\n799: POP\n800: SWAP1\n801: DUP2\n802: ADD\n803: SWAP1\n804: PUSH1 0x1f\n806: AND\n807: DUP1\n808: ISZERO\n809: PUSH2 0x0346\n812: JUMPI"
      },
      {
        "offset": 813,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "813: DUP1\n814: DUP3\n815: SUB\n816: DUP1\n817: MLOAD\n818: PUSH1 0x01\n820: DUP4\n821: PUSH1 0x20\n823: SUB\n824: PUSH2 0x0100\n827: EXP\n828: SUB\n829: NOT\n830: AND\n831: DUP2\n832: MSTORE\n833: PUSH1 0x20\n835: ADD\n836: SWAP2\n837: POP"
      },
      {
        "offset": 838,
        "length": 28,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b5091505060006040518083038185875af192505050151561036657",
        "parsedOpcodes": "838: JUMPDEST\n839: POP\n840: SWAP2\n841: POP\n842: POP\n843: PUSH1 0x00\n845: PUSH1 0x40\n847: MLOAD\n848: DUP1\n849: DUP4\n850: SUB\n851: DUP2\n852: DUP6\n853: DUP8\n854: GAS\n855: CALL\n856: SWAP3\n857: POP\n858: POP\n859: POP\n860: ISZERO\n861: ISZERO\n862: PUSH2 0x0366\n865: JUMPI"
      },
      {
        "offset": 866,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "866: PUSH1 0x00\n868: DUP1\n869: REVERT"
      },
      {
        "offset": 870,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60019092019161019056",
        "parsedOpcodes": "870: JUMPDEST\n871: PUSH1 0x01\n873: SWAP1\n874: SWAP3\n875: ADD\n876: SWAP2\n877: PUSH2 0x0190\n880: JUMP"
      },
      {
        "offset": 881,
        "length": 10,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b505050505050505056",
        "parsedOpcodes": "881: JUMPDEST\n882: POP\n883: POP\n884: POP\n885: POP\n886: POP\n887: POP\n888: POP\n889: POP\n890: JUMP"
      },
      {
        "offset": 891,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "891: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          36,
          87
        ]
      },
      {
        "from": 36,
        "to": [
          87,
          92
        ]
      },
      {
        "from": 87,
        "to": [
          891
        ]
      },
      {
        "from": 92,
        "to": [
          100,
          104
        ]
      },
      {
        "from": 100,
        "to": [
          891
        ]
      },
      {
        "from": 104,
        "to": [
          355
        ]
      },
      {
        "from": 353,
        "to": [
          891
        ]
      },
      {
        "from": 355,
        "to": [
          374,
          380
        ]
      },
      {
        "from": 374,
        "to": [
          380
        ]
      },
      {
        "from": 380,
        "to": [
          387,
          391
        ]
      },
      {
        "from": 387,
        "to": [
          891
        ]
      },
      {
        "from": 391,
        "to": [
          400
        ]
      },
      {
        "from": 400,
        "to": [
          410,
          881
        ]
      },
      {
        "from": 410,
        "to": [
          422,
          423
        ]
      },
      {
        "from": 422,
        "to": [
          891
        ]
      },
      {
        "from": 423,
        "to": [
          463,
          478
        ]
      },
      {
        "from": 463,
        "to": [
          478
        ]
      },
      {
        "from": 478,
        "to": [
          486
        ]
      },
      {
        "from": 486,
        "to": [
          499,
          500
        ]
      },
      {
        "from": 499,
        "to": [
          891
        ]
      },
      {
        "from": 500,
        "to": [
          518,
          680
        ]
      },
      {
        "from": 518,
        "to": [
          530,
          531
        ]
      },
      {
        "from": 530,
        "to": [
          891
        ]
      },
      {
        "from": 531,
        "to": [
          619,
          620
        ]
      },
      {
        "from": 619,
        "to": [
          891
        ]
      },
      {
        "from": 620,
        "to": [
          486,
          486,
          486,
          486,
          486,
          486
        ]
      },
      {
        "from": 680,
        "to": [
          693,
          694
        ]
      },
      {
        "from": 693,
        "to": [
          891
        ]
      },
      {
        "from": 694,
        "to": [
          739,
          740
        ]
      },
      {
        "from": 739,
        "to": [
          891
        ]
      },
      {
        "from": 740,
        "to": [
          769
        ]
      },
      {
        "from": 769,
        "to": [
          778,
          793
        ]
      },
      {
        "from": 778,
        "to": [
          769,
          769,
          769,
          769,
          769,
          769,
          769,
          769,
          769,
          769,
          769
        ]
      },
      {
        "from": 793,
        "to": [
          813,
          838
        ]
      },
      {
        "from": 813,
        "to": [
          838
        ]
      },
      {
        "from": 838,
        "to": [
          866,
          870
        ]
      },
      {
        "from": 866,
        "to": [
          891
        ]
      },
      {
        "from": 870,
        "to": [
          400,
          400,
          400,
          400,
          400,
          400
        ]
      },
      {
        "from": 881,
        "to": [
          353,
          353,
          353,
          353
        ]
      },
      {
        "from": 891,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 94
    }
  }
}