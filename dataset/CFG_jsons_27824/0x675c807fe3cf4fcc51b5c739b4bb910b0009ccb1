{
  "name": "Analysis_2022-04-04_17-03-06",
  "address": "",
  "binarySource": "606060405236156100b75763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302d05d3f81146100eb5780630d0092971461011a578063117de2fd1461013b5780631b7623be1461015f57806327e235e3146101835780634d130369146101b45780636de6220b146101e5578063ce845d1d14610214578063d7dc620314610239578063f1d2b3c21461026d578063f33280b21461029c578063f340fa01146102c1575b5b60045460009034106100e75750600160a060020a03331660009081526005602052604090208054349081019091555b5b50005b34156100f657600080fd5b6100fe6102d7565b604051600160a060020a03909116815260200160405180910390f35b341561012557600080fd5b610139600160a060020a03600435166102e6565b005b341561014657600080fd5b610139600160a060020a0360043516602435610312565b005b341561016a57600080fd5b610139600160a060020a03600435166024356103ec565b005b341561018e57600080fd5b6101a2600160a060020a0360043516610473565b60405190815260200160405180910390f35b34156101bf57600080fd5b6101a2600160a060020a0360043516610485565b60405190815260200160405180910390f35b34156101f057600080fd5b6100fe610497565b604051600160a060020a03909116815260200160405180910390f35b341561021f57600080fd5b6101a26104a6565b60405190815260200160405180910390f35b341561024457600080fd5b6101a2600160a060020a03600435166024356104b5565b60405190815260200160405180910390f35b341561027857600080fd5b6100fe6104de565b604051600160a060020a03909116815260200160405180910390f35b34156102a757600080fd5b6101a26104ed565b60405190815260200160405180910390f35b610139600160a060020a03600435166104f3565b005b600154600160a060020a031681565b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60015433600160a060020a039081169116148061033d575060005433600160a060020a039081169116145b80610356575060035433600160a060020a039081169116145b156103e657600160a060020a03821660009081526005602052604081205411156103e657600160a060020a03821681156108fc0282604051600060405180830381858888f19350505050507fe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf8282604051600160a060020a03909216825260208201526040908101905180910390a15b5b5b5050565b60015460009033600160a060020a039081169116148061041a575060005433600160a060020a039081169116145b80610433575060035433600160a060020a039081169116145b1561046c5761044283836104b5565b600160a060020a0384166000908152600660205260409020805482019055905061046c8382610312565b5b5b505050565b60056020526000908152604090205481565b60066020526000908152604090205481565b600254600160a060020a031681565b600160a060020a033016315b90565b600160a060020a03821660009081526005602052604081205460649083025b0490505b92915050565b600354600160a060020a031681565b60045481565b6000600434106103e65750600160a060020a03811660009081526005602052604090819020805434908101909155907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c908390839051600160a060020a03909216825260208201526040908101905180910390a15b5b5050565b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600a165627a7a723058205d405d7c4d7ec5cb5843e0134659c172e0988a2f42eecaca3574de680510f50b0029",
  "binaryHash": "6273e8c5",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a723058205d405d7c4d7ec5cb5843e0134659c172e0988a2f42eecaca3574de680510f50b0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649059386442
    }
  },
  "runtimeCfg": {
    "bytecode": "606060405236156100b75763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302d05d3f81146100eb5780630d0092971461011a578063117de2fd1461013b5780631b7623be1461015f57806327e235e3146101835780634d130369146101b45780636de6220b146101e5578063ce845d1d14610214578063d7dc620314610239578063f1d2b3c21461026d578063f33280b21461029c578063f340fa01146102c1575b5b60045460009034106100e75750600160a060020a03331660009081526005602052604090208054349081019091555b5b50005b34156100f657600080fd5b6100fe6102d7565b604051600160a060020a03909116815260200160405180910390f35b341561012557600080fd5b610139600160a060020a03600435166102e6565b005b341561014657600080fd5b610139600160a060020a0360043516602435610312565b005b341561016a57600080fd5b610139600160a060020a03600435166024356103ec565b005b341561018e57600080fd5b6101a2600160a060020a0360043516610473565b60405190815260200160405180910390f35b34156101bf57600080fd5b6101a2600160a060020a0360043516610485565b60405190815260200160405180910390f35b34156101f057600080fd5b6100fe610497565b604051600160a060020a03909116815260200160405180910390f35b341561021f57600080fd5b6101a26104a6565b60405190815260200160405180910390f35b341561024457600080fd5b6101a2600160a060020a03600435166024356104b5565b60405190815260200160405180910390f35b341561027857600080fd5b6100fe6104de565b604051600160a060020a03909116815260200160405180910390f35b34156102a757600080fd5b6101a26104ed565b60405190815260200160405180910390f35b610139600160a060020a03600435166104f3565b005b600154600160a060020a031681565b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60015433600160a060020a039081169116148061033d575060005433600160a060020a039081169116145b80610356575060035433600160a060020a039081169116145b156103e657600160a060020a03821660009081526005602052604081205411156103e657600160a060020a03821681156108fc0282604051600060405180830381858888f19350505050507fe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf8282604051600160a060020a03909216825260208201526040908101905180910390a15b5b5b5050565b60015460009033600160a060020a039081169116148061041a575060005433600160a060020a039081169116145b80610433575060035433600160a060020a039081169116145b1561046c5761044283836104b5565b600160a060020a0384166000908152600660205260409020805482019055905061046c8382610312565b5b5b505050565b60056020526000908152604090205481565b60066020526000908152604090205481565b600254600160a060020a031681565b600160a060020a033016315b90565b600160a060020a03821660009081526005602052604081205460649083025b0490505b92915050565b600354600160a060020a031681565b60045481565b6000600434106103e65750600160a060020a03811660009081526005602052604090819020805434908101909155907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c908390839051600160a060020a03909216825260208201526040908101905180910390a15b5b5050565b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600",
    "remainingData": "5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b505600",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "606060405236156100b757",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x00b7\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302d05d3f81146100eb57",
        "parsedOpcodes": "11: PUSH4 0xffffffff\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: PUSH1 0x00\n48: CALLDATALOAD\n49: DIV\n50: AND\n51: PUSH4 0x02d05d3f\n56: DUP2\n57: EQ\n58: PUSH2 0x00eb\n61: JUMPI"
      },
      {
        "offset": 62,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80630d0092971461011a57",
        "parsedOpcodes": "62: DUP1\n63: PUSH4 0x0d009297\n68: EQ\n69: PUSH2 0x011a\n72: JUMPI"
      },
      {
        "offset": 73,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063117de2fd1461013b57",
        "parsedOpcodes": "73: DUP1\n74: PUSH4 0x117de2fd\n79: EQ\n80: PUSH2 0x013b\n83: JUMPI"
      },
      {
        "offset": 84,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80631b7623be1461015f57",
        "parsedOpcodes": "84: DUP1\n85: PUSH4 0x1b7623be\n90: EQ\n91: PUSH2 0x015f\n94: JUMPI"
      },
      {
        "offset": 95,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806327e235e31461018357",
        "parsedOpcodes": "95: DUP1\n96: PUSH4 0x27e235e3\n101: EQ\n102: PUSH2 0x0183\n105: JUMPI"
      },
      {
        "offset": 106,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80634d130369146101b457",
        "parsedOpcodes": "106: DUP1\n107: PUSH4 0x4d130369\n112: EQ\n113: PUSH2 0x01b4\n116: JUMPI"
      },
      {
        "offset": 117,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80636de6220b146101e557",
        "parsedOpcodes": "117: DUP1\n118: PUSH4 0x6de6220b\n123: EQ\n124: PUSH2 0x01e5\n127: JUMPI"
      },
      {
        "offset": 128,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ce845d1d1461021457",
        "parsedOpcodes": "128: DUP1\n129: PUSH4 0xce845d1d\n134: EQ\n135: PUSH2 0x0214\n138: JUMPI"
      },
      {
        "offset": 139,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d7dc62031461023957",
        "parsedOpcodes": "139: DUP1\n140: PUSH4 0xd7dc6203\n145: EQ\n146: PUSH2 0x0239\n149: JUMPI"
      },
      {
        "offset": 150,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f1d2b3c21461026d57",
        "parsedOpcodes": "150: DUP1\n151: PUSH4 0xf1d2b3c2\n156: EQ\n157: PUSH2 0x026d\n160: JUMPI"
      },
      {
        "offset": 161,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f33280b21461029c57",
        "parsedOpcodes": "161: DUP1\n162: PUSH4 0xf33280b2\n167: EQ\n168: PUSH2 0x029c\n171: JUMPI"
      },
      {
        "offset": 172,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f340fa01146102c157",
        "parsedOpcodes": "172: DUP1\n173: PUSH4 0xf340fa01\n178: EQ\n179: PUSH2 0x02c1\n182: JUMPI"
      },
      {
        "offset": 183,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "183: JUMPDEST"
      },
      {
        "offset": 184,
        "length": 13,
        "type": "fallback",
        "stackBalance": 1,
        "bytecodeHex": "5b60045460009034106100e757",
        "parsedOpcodes": "184: JUMPDEST\n185: PUSH1 0x04\n187: SLOAD\n188: PUSH1 0x00\n190: SWAP1\n191: CALLVALUE\n192: LT\n193: PUSH2 0x00e7\n196: JUMPI"
      },
      {
        "offset": 197,
        "length": 34,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "50600160a060020a0333166000908152600560205260409020805434908101909155",
        "parsedOpcodes": "197: POP\n198: PUSH1 0x01\n200: PUSH1 0xa0\n202: PUSH1 0x02\n204: EXP\n205: SUB\n206: CALLER\n207: AND\n208: PUSH1 0x00\n210: SWAP1\n211: DUP2\n212: MSTORE\n213: PUSH1 0x05\n215: PUSH1 0x20\n217: MSTORE\n218: PUSH1 0x40\n220: SWAP1\n221: SHA3\n222: DUP1\n223: SLOAD\n224: CALLVALUE\n225: SWAP1\n226: DUP2\n227: ADD\n228: SWAP1\n229: SWAP2\n230: SSTORE"
      },
      {
        "offset": 231,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "231: JUMPDEST"
      },
      {
        "offset": 232,
        "length": 3,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b5000",
        "parsedOpcodes": "232: JUMPDEST\n233: POP\n234: STOP"
      },
      {
        "offset": 235,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100f657",
        "parsedOpcodes": "235: JUMPDEST\n236: CALLVALUE\n237: ISZERO\n238: PUSH2 0x00f6\n241: JUMPI"
      },
      {
        "offset": 242,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "242: PUSH1 0x00\n244: DUP1\n245: REVERT"
      },
      {
        "offset": 246,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100fe6102d756",
        "parsedOpcodes": "246: JUMPDEST\n247: PUSH2 0x00fe\n250: PUSH2 0x02d7\n253: JUMP"
      },
      {
        "offset": 254,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051600160a060020a03909116815260200160405180910390f3",
        "parsedOpcodes": "254: JUMPDEST\n255: PUSH1 0x40\n257: MLOAD\n258: PUSH1 0x01\n260: PUSH1 0xa0\n262: PUSH1 0x02\n264: EXP\n265: SUB\n266: SWAP1\n267: SWAP2\n268: AND\n269: DUP2\n270: MSTORE\n271: PUSH1 0x20\n273: ADD\n274: PUSH1 0x40\n276: MLOAD\n277: DUP1\n278: SWAP2\n279: SUB\n280: SWAP1\n281: RETURN"
      },
      {
        "offset": 282,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561012557",
        "parsedOpcodes": "282: JUMPDEST\n283: CALLVALUE\n284: ISZERO\n285: PUSH2 0x0125\n288: JUMPI"
      },
      {
        "offset": 289,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "289: PUSH1 0x00\n291: DUP1\n292: REVERT"
      },
      {
        "offset": 293,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b610139600160a060020a03600435166102e656",
        "parsedOpcodes": "293: JUMPDEST\n294: PUSH2 0x0139\n297: PUSH1 0x01\n299: PUSH1 0xa0\n301: PUSH1 0x02\n303: EXP\n304: SUB\n305: PUSH1 0x04\n307: CALLDATALOAD\n308: AND\n309: PUSH2 0x02e6\n312: JUMP"
      },
      {
        "offset": 313,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "313: JUMPDEST\n314: STOP"
      },
      {
        "offset": 315,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561014657",
        "parsedOpcodes": "315: JUMPDEST\n316: CALLVALUE\n317: ISZERO\n318: PUSH2 0x0146\n321: JUMPI"
      },
      {
        "offset": 322,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "322: PUSH1 0x00\n324: DUP1\n325: REVERT"
      },
      {
        "offset": 326,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b610139600160a060020a036004351660243561031256",
        "parsedOpcodes": "326: JUMPDEST\n327: PUSH2 0x0139\n330: PUSH1 0x01\n332: PUSH1 0xa0\n334: PUSH1 0x02\n336: EXP\n337: SUB\n338: PUSH1 0x04\n340: CALLDATALOAD\n341: AND\n342: PUSH1 0x24\n344: CALLDATALOAD\n345: PUSH2 0x0312\n348: JUMP"
      },
      {
        "offset": 349,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "349: JUMPDEST\n350: STOP"
      },
      {
        "offset": 351,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561016a57",
        "parsedOpcodes": "351: JUMPDEST\n352: CALLVALUE\n353: ISZERO\n354: PUSH2 0x016a\n357: JUMPI"
      },
      {
        "offset": 358,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "358: PUSH1 0x00\n360: DUP1\n361: REVERT"
      },
      {
        "offset": 362,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b610139600160a060020a03600435166024356103ec56",
        "parsedOpcodes": "362: JUMPDEST\n363: PUSH2 0x0139\n366: PUSH1 0x01\n368: PUSH1 0xa0\n370: PUSH1 0x02\n372: EXP\n373: SUB\n374: PUSH1 0x04\n376: CALLDATALOAD\n377: AND\n378: PUSH1 0x24\n380: CALLDATALOAD\n381: PUSH2 0x03ec\n384: JUMP"
      },
      {
        "offset": 385,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "385: JUMPDEST\n386: STOP"
      },
      {
        "offset": 387,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561018e57",
        "parsedOpcodes": "387: JUMPDEST\n388: CALLVALUE\n389: ISZERO\n390: PUSH2 0x018e\n393: JUMPI"
      },
      {
        "offset": 394,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "394: PUSH1 0x00\n396: DUP1\n397: REVERT"
      },
      {
        "offset": 398,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6101a2600160a060020a036004351661047356",
        "parsedOpcodes": "398: JUMPDEST\n399: PUSH2 0x01a2\n402: PUSH1 0x01\n404: PUSH1 0xa0\n406: PUSH1 0x02\n408: EXP\n409: SUB\n410: PUSH1 0x04\n412: CALLDATALOAD\n413: AND\n414: PUSH2 0x0473\n417: JUMP"
      },
      {
        "offset": 418,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405190815260200160405180910390f3",
        "parsedOpcodes": "418: JUMPDEST\n419: PUSH1 0x40\n421: MLOAD\n422: SWAP1\n423: DUP2\n424: MSTORE\n425: PUSH1 0x20\n427: ADD\n428: PUSH1 0x40\n430: MLOAD\n431: DUP1\n432: SWAP2\n433: SUB\n434: SWAP1\n435: RETURN"
      },
      {
        "offset": 436,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101bf57",
        "parsedOpcodes": "436: JUMPDEST\n437: CALLVALUE\n438: ISZERO\n439: PUSH2 0x01bf\n442: JUMPI"
      },
      {
        "offset": 443,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "443: PUSH1 0x00\n445: DUP1\n446: REVERT"
      },
      {
        "offset": 447,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6101a2600160a060020a036004351661048556",
        "parsedOpcodes": "447: JUMPDEST\n448: PUSH2 0x01a2\n451: PUSH1 0x01\n453: PUSH1 0xa0\n455: PUSH1 0x02\n457: EXP\n458: SUB\n459: PUSH1 0x04\n461: CALLDATALOAD\n462: AND\n463: PUSH2 0x0485\n466: JUMP"
      },
      {
        "offset": 467,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405190815260200160405180910390f3",
        "parsedOpcodes": "467: JUMPDEST\n468: PUSH1 0x40\n470: MLOAD\n471: SWAP1\n472: DUP2\n473: MSTORE\n474: PUSH1 0x20\n476: ADD\n477: PUSH1 0x40\n479: MLOAD\n480: DUP1\n481: SWAP2\n482: SUB\n483: SWAP1\n484: RETURN"
      },
      {
        "offset": 485,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101f057",
        "parsedOpcodes": "485: JUMPDEST\n486: CALLVALUE\n487: ISZERO\n488: PUSH2 0x01f0\n491: JUMPI"
      },
      {
        "offset": 492,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "492: PUSH1 0x00\n494: DUP1\n495: REVERT"
      },
      {
        "offset": 496,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100fe61049756",
        "parsedOpcodes": "496: JUMPDEST\n497: PUSH2 0x00fe\n500: PUSH2 0x0497\n503: JUMP"
      },
      {
        "offset": 504,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051600160a060020a03909116815260200160405180910390f3",
        "parsedOpcodes": "504: JUMPDEST\n505: PUSH1 0x40\n507: MLOAD\n508: PUSH1 0x01\n510: PUSH1 0xa0\n512: PUSH1 0x02\n514: EXP\n515: SUB\n516: SWAP1\n517: SWAP2\n518: AND\n519: DUP2\n520: MSTORE\n521: PUSH1 0x20\n523: ADD\n524: PUSH1 0x40\n526: MLOAD\n527: DUP1\n528: SWAP2\n529: SUB\n530: SWAP1\n531: RETURN"
      },
      {
        "offset": 532,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561021f57",
        "parsedOpcodes": "532: JUMPDEST\n533: CALLVALUE\n534: ISZERO\n535: PUSH2 0x021f\n538: JUMPI"
      },
      {
        "offset": 539,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "539: PUSH1 0x00\n541: DUP1\n542: REVERT"
      },
      {
        "offset": 543,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101a26104a656",
        "parsedOpcodes": "543: JUMPDEST\n544: PUSH2 0x01a2\n547: PUSH2 0x04a6\n550: JUMP"
      },
      {
        "offset": 551,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405190815260200160405180910390f3",
        "parsedOpcodes": "551: JUMPDEST\n552: PUSH1 0x40\n554: MLOAD\n555: SWAP1\n556: DUP2\n557: MSTORE\n558: PUSH1 0x20\n560: ADD\n561: PUSH1 0x40\n563: MLOAD\n564: DUP1\n565: SWAP2\n566: SUB\n567: SWAP1\n568: RETURN"
      },
      {
        "offset": 569,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561024457",
        "parsedOpcodes": "569: JUMPDEST\n570: CALLVALUE\n571: ISZERO\n572: PUSH2 0x0244\n575: JUMPI"
      },
      {
        "offset": 576,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "576: PUSH1 0x00\n578: DUP1\n579: REVERT"
      },
      {
        "offset": 580,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6101a2600160a060020a03600435166024356104b556",
        "parsedOpcodes": "580: JUMPDEST\n581: PUSH2 0x01a2\n584: PUSH1 0x01\n586: PUSH1 0xa0\n588: PUSH1 0x02\n590: EXP\n591: SUB\n592: PUSH1 0x04\n594: CALLDATALOAD\n595: AND\n596: PUSH1 0x24\n598: CALLDATALOAD\n599: PUSH2 0x04b5\n602: JUMP"
      },
      {
        "offset": 603,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405190815260200160405180910390f3",
        "parsedOpcodes": "603: JUMPDEST\n604: PUSH1 0x40\n606: MLOAD\n607: SWAP1\n608: DUP2\n609: MSTORE\n610: PUSH1 0x20\n612: ADD\n613: PUSH1 0x40\n615: MLOAD\n616: DUP1\n617: SWAP2\n618: SUB\n619: SWAP1\n620: RETURN"
      },
      {
        "offset": 621,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561027857",
        "parsedOpcodes": "621: JUMPDEST\n622: CALLVALUE\n623: ISZERO\n624: PUSH2 0x0278\n627: JUMPI"
      },
      {
        "offset": 628,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "628: PUSH1 0x00\n630: DUP1\n631: REVERT"
      },
      {
        "offset": 632,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100fe6104de56",
        "parsedOpcodes": "632: JUMPDEST\n633: PUSH2 0x00fe\n636: PUSH2 0x04de\n639: JUMP"
      },
      {
        "offset": 640,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051600160a060020a03909116815260200160405180910390f3",
        "parsedOpcodes": "640: JUMPDEST\n641: PUSH1 0x40\n643: MLOAD\n644: PUSH1 0x01\n646: PUSH1 0xa0\n648: PUSH1 0x02\n650: EXP\n651: SUB\n652: SWAP1\n653: SWAP2\n654: AND\n655: DUP2\n656: MSTORE\n657: PUSH1 0x20\n659: ADD\n660: PUSH1 0x40\n662: MLOAD\n663: DUP1\n664: SWAP2\n665: SUB\n666: SWAP1\n667: RETURN"
      },
      {
        "offset": 668,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156102a757",
        "parsedOpcodes": "668: JUMPDEST\n669: CALLVALUE\n670: ISZERO\n671: PUSH2 0x02a7\n674: JUMPI"
      },
      {
        "offset": 675,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "675: PUSH1 0x00\n677: DUP1\n678: REVERT"
      },
      {
        "offset": 679,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101a26104ed56",
        "parsedOpcodes": "679: JUMPDEST\n680: PUSH2 0x01a2\n683: PUSH2 0x04ed\n686: JUMP"
      },
      {
        "offset": 687,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405190815260200160405180910390f3",
        "parsedOpcodes": "687: JUMPDEST\n688: PUSH1 0x40\n690: MLOAD\n691: SWAP1\n692: DUP2\n693: MSTORE\n694: PUSH1 0x20\n696: ADD\n697: PUSH1 0x40\n699: MLOAD\n700: DUP1\n701: SWAP2\n702: SUB\n703: SWAP1\n704: RETURN"
      },
      {
        "offset": 705,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b610139600160a060020a03600435166104f356",
        "parsedOpcodes": "705: JUMPDEST\n706: PUSH2 0x0139\n709: PUSH1 0x01\n711: PUSH1 0xa0\n713: PUSH1 0x02\n715: EXP\n716: SUB\n717: PUSH1 0x04\n719: CALLDATALOAD\n720: AND\n721: PUSH2 0x04f3\n724: JUMP"
      },
      {
        "offset": 725,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "725: JUMPDEST\n726: STOP"
      },
      {
        "offset": 727,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600154600160a060020a03168156",
        "parsedOpcodes": "727: JUMPDEST\n728: PUSH1 0x01\n730: SLOAD\n731: PUSH1 0x01\n733: PUSH1 0xa0\n735: PUSH1 0x02\n737: EXP\n738: SUB\n739: AND\n740: DUP2\n741: JUMP"
      },
      {
        "offset": 742,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316179055",
        "parsedOpcodes": "742: JUMPDEST\n743: PUSH1 0x02\n745: DUP1\n746: SLOAD\n747: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n768: NOT\n769: AND\n770: PUSH1 0x01\n772: PUSH1 0xa0\n774: PUSH1 0x02\n776: EXP\n777: SUB\n778: DUP4\n779: AND\n780: OR\n781: SWAP1\n782: SSTORE"
      },
      {
        "offset": 783,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "783: JUMPDEST\n784: POP\n785: JUMP"
      },
      {
        "offset": 786,
        "length": 24,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60015433600160a060020a039081169116148061033d57",
        "parsedOpcodes": "786: JUMPDEST\n787: PUSH1 0x01\n789: SLOAD\n790: CALLER\n791: PUSH1 0x01\n793: PUSH1 0xa0\n795: PUSH1 0x02\n797: EXP\n798: SUB\n799: SWAP1\n800: DUP2\n801: AND\n802: SWAP2\n803: AND\n804: EQ\n805: DUP1\n806: PUSH2 0x033d\n809: JUMPI"
      },
      {
        "offset": 810,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060005433600160a060020a03908116911614",
        "parsedOpcodes": "810: POP\n811: PUSH1 0x00\n813: SLOAD\n814: CALLER\n815: PUSH1 0x01\n817: PUSH1 0xa0\n819: PUSH1 0x02\n821: EXP\n822: SUB\n823: SWAP1\n824: DUP2\n825: AND\n826: SWAP2\n827: AND\n828: EQ"
      },
      {
        "offset": 829,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8061035657",
        "parsedOpcodes": "829: JUMPDEST\n830: DUP1\n831: PUSH2 0x0356\n834: JUMPI"
      },
      {
        "offset": 835,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060035433600160a060020a03908116911614",
        "parsedOpcodes": "835: POP\n836: PUSH1 0x03\n838: SLOAD\n839: CALLER\n840: PUSH1 0x01\n842: PUSH1 0xa0\n844: PUSH1 0x02\n846: EXP\n847: SUB\n848: SWAP1\n849: DUP2\n850: AND\n851: SWAP2\n852: AND\n853: EQ"
      },
      {
        "offset": 854,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156103e657",
        "parsedOpcodes": "854: JUMPDEST\n855: ISZERO\n856: PUSH2 0x03e6\n859: JUMPI"
      },
      {
        "offset": 860,
        "length": 31,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600160a060020a03821660009081526005602052604081205411156103e657",
        "parsedOpcodes": "860: PUSH1 0x01\n862: PUSH1 0xa0\n864: PUSH1 0x02\n866: EXP\n867: SUB\n868: DUP3\n869: AND\n870: PUSH1 0x00\n872: SWAP1\n873: DUP2\n874: MSTORE\n875: PUSH1 0x05\n877: PUSH1 0x20\n879: MSTORE\n880: PUSH1 0x40\n882: DUP2\n883: SHA3\n884: SLOAD\n885: GT\n886: ISZERO\n887: PUSH2 0x03e6\n890: JUMPI"
      },
      {
        "offset": 891,
        "length": 107,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600160a060020a03821681156108fc0282604051600060405180830381858888f19350505050507fe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf8282604051600160a060020a03909216825260208201526040908101905180910390a1",
        "parsedOpcodes": "891: PUSH1 0x01\n893: PUSH1 0xa0\n895: PUSH1 0x02\n897: EXP\n898: SUB\n899: DUP3\n900: AND\n901: DUP2\n902: ISZERO\n903: PUSH2 0x08fc\n906: MUL\n907: DUP3\n908: PUSH1 0x40\n910: MLOAD\n911: PUSH1 0x00\n913: PUSH1 0x40\n915: MLOAD\n916: DUP1\n917: DUP4\n918: SUB\n919: DUP2\n920: DUP6\n921: DUP9\n922: DUP9\n923: CALL\n924: SWAP4\n925: POP\n926: POP\n927: POP\n928: POP\n929: POP\n930: PUSH32 0xe3987e0dbdbf4e59549b9a515a30f3b915efabc9a33f465a6da4db771831efaf\n963: DUP3\n964: DUP3\n965: PUSH1 0x40\n967: MLOAD\n968: PUSH1 0x01\n970: PUSH1 0xa0\n972: PUSH1 0x02\n974: EXP\n975: SUB\n976: SWAP1\n977: SWAP3\n978: AND\n979: DUP3\n980: MSTORE\n981: PUSH1 0x20\n983: DUP3\n984: ADD\n985: MSTORE\n986: PUSH1 0x40\n988: SWAP1\n989: DUP2\n990: ADD\n991: SWAP1\n992: MLOAD\n993: DUP1\n994: SWAP2\n995: SUB\n996: SWAP1\n997: LOG1"
      },
      {
        "offset": 998,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "998: JUMPDEST"
      },
      {
        "offset": 999,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "999: JUMPDEST"
      },
      {
        "offset": 1000,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1000: JUMPDEST\n1001: POP\n1002: POP\n1003: JUMP"
      },
      {
        "offset": 1004,
        "length": 27,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60015460009033600160a060020a039081169116148061041a57",
        "parsedOpcodes": "1004: JUMPDEST\n1005: PUSH1 0x01\n1007: SLOAD\n1008: PUSH1 0x00\n1010: SWAP1\n1011: CALLER\n1012: PUSH1 0x01\n1014: PUSH1 0xa0\n1016: PUSH1 0x02\n1018: EXP\n1019: SUB\n1020: SWAP1\n1021: DUP2\n1022: AND\n1023: SWAP2\n1024: AND\n1025: EQ\n1026: DUP1\n1027: PUSH2 0x041a\n1030: JUMPI"
      },
      {
        "offset": 1031,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060005433600160a060020a03908116911614",
        "parsedOpcodes": "1031: POP\n1032: PUSH1 0x00\n1034: SLOAD\n1035: CALLER\n1036: PUSH1 0x01\n1038: PUSH1 0xa0\n1040: PUSH1 0x02\n1042: EXP\n1043: SUB\n1044: SWAP1\n1045: DUP2\n1046: AND\n1047: SWAP2\n1048: AND\n1049: EQ"
      },
      {
        "offset": 1050,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8061043357",
        "parsedOpcodes": "1050: JUMPDEST\n1051: DUP1\n1052: PUSH2 0x0433\n1055: JUMPI"
      },
      {
        "offset": 1056,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060035433600160a060020a03908116911614",
        "parsedOpcodes": "1056: POP\n1057: PUSH1 0x03\n1059: SLOAD\n1060: CALLER\n1061: PUSH1 0x01\n1063: PUSH1 0xa0\n1065: PUSH1 0x02\n1067: EXP\n1068: SUB\n1069: SWAP1\n1070: DUP2\n1071: AND\n1072: SWAP2\n1073: AND\n1074: EQ"
      },
      {
        "offset": 1075,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561046c57",
        "parsedOpcodes": "1075: JUMPDEST\n1076: ISZERO\n1077: PUSH2 0x046c\n1080: JUMPI"
      },
      {
        "offset": 1081,
        "length": 9,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "61044283836104b556",
        "parsedOpcodes": "1081: PUSH2 0x0442\n1084: DUP4\n1085: DUP4\n1086: PUSH2 0x04b5\n1089: JUMP"
      },
      {
        "offset": 1090,
        "length": 42,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600160a060020a0384166000908152600660205260409020805482019055905061046c838261031256",
        "parsedOpcodes": "1090: JUMPDEST\n1091: PUSH1 0x01\n1093: PUSH1 0xa0\n1095: PUSH1 0x02\n1097: EXP\n1098: SUB\n1099: DUP5\n1100: AND\n1101: PUSH1 0x00\n1103: SWAP1\n1104: DUP2\n1105: MSTORE\n1106: PUSH1 0x06\n1108: PUSH1 0x20\n1110: MSTORE\n1111: PUSH1 0x40\n1113: SWAP1\n1114: SHA3\n1115: DUP1\n1116: SLOAD\n1117: DUP3\n1118: ADD\n1119: SWAP1\n1120: SSTORE\n1121: SWAP1\n1122: POP\n1123: PUSH2 0x046c\n1126: DUP4\n1127: DUP3\n1128: PUSH2 0x0312\n1131: JUMP"
      },
      {
        "offset": 1132,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1132: JUMPDEST"
      },
      {
        "offset": 1133,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1133: JUMPDEST"
      },
      {
        "offset": 1134,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "1134: JUMPDEST\n1135: POP\n1136: POP\n1137: POP\n1138: JUMP"
      },
      {
        "offset": 1139,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6005602052600090815260409020548156",
        "parsedOpcodes": "1139: JUMPDEST\n1140: PUSH1 0x05\n1142: PUSH1 0x20\n1144: MSTORE\n1145: PUSH1 0x00\n1147: SWAP1\n1148: DUP2\n1149: MSTORE\n1150: PUSH1 0x40\n1152: SWAP1\n1153: SHA3\n1154: SLOAD\n1155: DUP2\n1156: JUMP"
      },
      {
        "offset": 1157,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6006602052600090815260409020548156",
        "parsedOpcodes": "1157: JUMPDEST\n1158: PUSH1 0x06\n1160: PUSH1 0x20\n1162: MSTORE\n1163: PUSH1 0x00\n1165: SWAP1\n1166: DUP2\n1167: MSTORE\n1168: PUSH1 0x40\n1170: SWAP1\n1171: SHA3\n1172: SLOAD\n1173: DUP2\n1174: JUMP"
      },
      {
        "offset": 1175,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600254600160a060020a03168156",
        "parsedOpcodes": "1175: JUMPDEST\n1176: PUSH1 0x02\n1178: SLOAD\n1179: PUSH1 0x01\n1181: PUSH1 0xa0\n1183: PUSH1 0x02\n1185: EXP\n1186: SUB\n1187: AND\n1188: DUP2\n1189: JUMP"
      },
      {
        "offset": 1190,
        "length": 12,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a03301631",
        "parsedOpcodes": "1190: JUMPDEST\n1191: PUSH1 0x01\n1193: PUSH1 0xa0\n1195: PUSH1 0x02\n1197: EXP\n1198: SUB\n1199: ADDRESS\n1200: AND\n1201: BALANCE"
      },
      {
        "offset": 1202,
        "length": 3,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b9056",
        "parsedOpcodes": "1202: JUMPDEST\n1203: SWAP1\n1204: JUMP"
      },
      {
        "offset": 1205,
        "length": 31,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600160a060020a0382166000908152600560205260408120546064908302",
        "parsedOpcodes": "1205: JUMPDEST\n1206: PUSH1 0x01\n1208: PUSH1 0xa0\n1210: PUSH1 0x02\n1212: EXP\n1213: SUB\n1214: DUP3\n1215: AND\n1216: PUSH1 0x00\n1218: SWAP1\n1219: DUP2\n1220: MSTORE\n1221: PUSH1 0x05\n1223: PUSH1 0x20\n1225: MSTORE\n1226: PUSH1 0x40\n1228: DUP2\n1229: SHA3\n1230: SLOAD\n1231: PUSH1 0x64\n1233: SWAP1\n1234: DUP4\n1235: MUL"
      },
      {
        "offset": 1236,
        "length": 4,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b049050",
        "parsedOpcodes": "1236: JUMPDEST\n1237: DIV\n1238: SWAP1\n1239: POP"
      },
      {
        "offset": 1240,
        "length": 6,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b9291505056",
        "parsedOpcodes": "1240: JUMPDEST\n1241: SWAP3\n1242: SWAP2\n1243: POP\n1244: POP\n1245: JUMP"
      },
      {
        "offset": 1246,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600354600160a060020a03168156",
        "parsedOpcodes": "1246: JUMPDEST\n1247: PUSH1 0x03\n1249: SLOAD\n1250: PUSH1 0x01\n1252: PUSH1 0xa0\n1254: PUSH1 0x02\n1256: EXP\n1257: SUB\n1258: AND\n1259: DUP2\n1260: JUMP"
      },
      {
        "offset": 1261,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6004548156",
        "parsedOpcodes": "1261: JUMPDEST\n1262: PUSH1 0x04\n1264: SLOAD\n1265: DUP2\n1266: JUMP"
      },
      {
        "offset": 1267,
        "length": 11,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000600434106103e657",
        "parsedOpcodes": "1267: JUMPDEST\n1268: PUSH1 0x00\n1270: PUSH1 0x04\n1272: CALLVALUE\n1273: LT\n1274: PUSH2 0x03e6\n1277: JUMPI"
      },
      {
        "offset": 1278,
        "length": 106,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160a060020a03811660009081526005602052604090819020805434908101909155907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c908390839051600160a060020a03909216825260208201526040908101905180910390a1",
        "parsedOpcodes": "1278: POP\n1279: PUSH1 0x01\n1281: PUSH1 0xa0\n1283: PUSH1 0x02\n1285: EXP\n1286: SUB\n1287: DUP2\n1288: AND\n1289: PUSH1 0x00\n1291: SWAP1\n1292: DUP2\n1293: MSTORE\n1294: PUSH1 0x05\n1296: PUSH1 0x20\n1298: MSTORE\n1299: PUSH1 0x40\n1301: SWAP1\n1302: DUP2\n1303: SWAP1\n1304: SHA3\n1305: DUP1\n1306: SLOAD\n1307: CALLVALUE\n1308: SWAP1\n1309: DUP2\n1310: ADD\n1311: SWAP1\n1312: SWAP2\n1313: SSTORE\n1314: SWAP1\n1315: PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n1348: SWAP1\n1349: DUP4\n1350: SWAP1\n1351: DUP4\n1352: SWAP1\n1353: MLOAD\n1354: PUSH1 0x01\n1356: PUSH1 0xa0\n1358: PUSH1 0x02\n1360: EXP\n1361: SUB\n1362: SWAP1\n1363: SWAP3\n1364: AND\n1365: DUP3\n1366: MSTORE\n1367: PUSH1 0x20\n1369: DUP3\n1370: ADD\n1371: MSTORE\n1372: PUSH1 0x40\n1374: SWAP1\n1375: DUP2\n1376: ADD\n1377: SWAP1\n1378: MLOAD\n1379: DUP1\n1380: SWAP2\n1381: SUB\n1382: SWAP1\n1383: LOG1"
      },
      {
        "offset": 1384,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1384: JUMPDEST"
      },
      {
        "offset": 1385,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1385: JUMPDEST\n1386: POP\n1387: POP\n1388: JUMP"
      },
      {
        "offset": 1389,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1389: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          183
        ]
      },
      {
        "from": 11,
        "to": [
          62,
          235
        ]
      },
      {
        "from": 62,
        "to": [
          73,
          282
        ]
      },
      {
        "from": 73,
        "to": [
          84,
          315
        ]
      },
      {
        "from": 84,
        "to": [
          95,
          351
        ]
      },
      {
        "from": 95,
        "to": [
          106,
          387
        ]
      },
      {
        "from": 106,
        "to": [
          117,
          436
        ]
      },
      {
        "from": 117,
        "to": [
          128,
          485
        ]
      },
      {
        "from": 128,
        "to": [
          139,
          532
        ]
      },
      {
        "from": 139,
        "to": [
          150,
          569
        ]
      },
      {
        "from": 150,
        "to": [
          161,
          621
        ]
      },
      {
        "from": 161,
        "to": [
          172,
          668
        ]
      },
      {
        "from": 172,
        "to": [
          183,
          705
        ]
      },
      {
        "from": 183,
        "to": [
          184
        ]
      },
      {
        "from": 184,
        "to": [
          197,
          231
        ]
      },
      {
        "from": 197,
        "to": [
          231
        ]
      },
      {
        "from": 231,
        "to": [
          232
        ]
      },
      {
        "from": 232,
        "to": [
          1389
        ]
      },
      {
        "from": 235,
        "to": [
          242,
          246
        ]
      },
      {
        "from": 242,
        "to": [
          1389
        ]
      },
      {
        "from": 246,
        "to": [
          727,
          727
        ]
      },
      {
        "from": 254,
        "to": [
          1389
        ]
      },
      {
        "from": 282,
        "to": [
          289,
          293
        ]
      },
      {
        "from": 289,
        "to": [
          1389
        ]
      },
      {
        "from": 293,
        "to": [
          742,
          742
        ]
      },
      {
        "from": 313,
        "to": [
          1389
        ]
      },
      {
        "from": 315,
        "to": [
          322,
          326
        ]
      },
      {
        "from": 322,
        "to": [
          1389
        ]
      },
      {
        "from": 326,
        "to": [
          786,
          786
        ]
      },
      {
        "from": 349,
        "to": [
          1389
        ]
      },
      {
        "from": 351,
        "to": [
          358,
          362
        ]
      },
      {
        "from": 358,
        "to": [
          1389
        ]
      },
      {
        "from": 362,
        "to": [
          1004,
          1004
        ]
      },
      {
        "from": 385,
        "to": [
          1389
        ]
      },
      {
        "from": 387,
        "to": [
          394,
          398
        ]
      },
      {
        "from": 394,
        "to": [
          1389
        ]
      },
      {
        "from": 398,
        "to": [
          1139,
          1139
        ]
      },
      {
        "from": 418,
        "to": [
          1389
        ]
      },
      {
        "from": 436,
        "to": [
          443,
          447
        ]
      },
      {
        "from": 443,
        "to": [
          1389
        ]
      },
      {
        "from": 447,
        "to": [
          1157,
          1157
        ]
      },
      {
        "from": 467,
        "to": [
          1389
        ]
      },
      {
        "from": 485,
        "to": [
          492,
          496
        ]
      },
      {
        "from": 492,
        "to": [
          1389
        ]
      },
      {
        "from": 496,
        "to": [
          1175,
          1175
        ]
      },
      {
        "from": 504,
        "to": [
          1389
        ]
      },
      {
        "from": 532,
        "to": [
          539,
          543
        ]
      },
      {
        "from": 539,
        "to": [
          1389
        ]
      },
      {
        "from": 543,
        "to": [
          1190,
          1190
        ]
      },
      {
        "from": 551,
        "to": [
          1389
        ]
      },
      {
        "from": 569,
        "to": [
          576,
          580
        ]
      },
      {
        "from": 576,
        "to": [
          1389
        ]
      },
      {
        "from": 580,
        "to": [
          1205,
          1205
        ]
      },
      {
        "from": 603,
        "to": [
          1389
        ]
      },
      {
        "from": 621,
        "to": [
          628,
          632
        ]
      },
      {
        "from": 628,
        "to": [
          1389
        ]
      },
      {
        "from": 632,
        "to": [
          1246,
          1246
        ]
      },
      {
        "from": 640,
        "to": [
          1389
        ]
      },
      {
        "from": 668,
        "to": [
          675,
          679
        ]
      },
      {
        "from": 675,
        "to": [
          1389
        ]
      },
      {
        "from": 679,
        "to": [
          1261,
          1261
        ]
      },
      {
        "from": 687,
        "to": [
          1389
        ]
      },
      {
        "from": 705,
        "to": [
          1267,
          1267
        ]
      },
      {
        "from": 725,
        "to": [
          1389
        ]
      },
      {
        "from": 727,
        "to": [
          254
        ]
      },
      {
        "from": 742,
        "to": [
          783
        ]
      },
      {
        "from": 783,
        "to": [
          313
        ]
      },
      {
        "from": 786,
        "to": [
          810,
          829
        ]
      },
      {
        "from": 810,
        "to": [
          829
        ]
      },
      {
        "from": 829,
        "to": [
          835,
          854
        ]
      },
      {
        "from": 835,
        "to": [
          854
        ]
      },
      {
        "from": 854,
        "to": [
          860,
          998
        ]
      },
      {
        "from": 860,
        "to": [
          891,
          998
        ]
      },
      {
        "from": 891,
        "to": [
          998
        ]
      },
      {
        "from": 998,
        "to": [
          999
        ]
      },
      {
        "from": 999,
        "to": [
          1000
        ]
      },
      {
        "from": 1000,
        "to": [
          313,
          1132,
          313
        ]
      },
      {
        "from": 1004,
        "to": [
          1031,
          1050
        ]
      },
      {
        "from": 1031,
        "to": [
          1050
        ]
      },
      {
        "from": 1050,
        "to": [
          1056,
          1075
        ]
      },
      {
        "from": 1056,
        "to": [
          1075
        ]
      },
      {
        "from": 1075,
        "to": [
          1081,
          1132
        ]
      },
      {
        "from": 1081,
        "to": [
          1205,
          1205
        ]
      },
      {
        "from": 1090,
        "to": [
          786,
          786
        ]
      },
      {
        "from": 1132,
        "to": [
          1133
        ]
      },
      {
        "from": 1133,
        "to": [
          1134
        ]
      },
      {
        "from": 1134,
        "to": [
          313,
          313
        ]
      },
      {
        "from": 1139,
        "to": [
          418
        ]
      },
      {
        "from": 1157,
        "to": [
          418
        ]
      },
      {
        "from": 1175,
        "to": [
          254
        ]
      },
      {
        "from": 1190,
        "to": [
          1202
        ]
      },
      {
        "from": 1202,
        "to": [
          418
        ]
      },
      {
        "from": 1205,
        "to": [
          1236
        ]
      },
      {
        "from": 1236,
        "to": [
          1240
        ]
      },
      {
        "from": 1240,
        "to": [
          1090,
          418
        ]
      },
      {
        "from": 1246,
        "to": [
          254
        ]
      },
      {
        "from": 1261,
        "to": [
          418
        ]
      },
      {
        "from": 1267,
        "to": [
          1278,
          998
        ]
      },
      {
        "from": 1278,
        "to": [
          1384
        ]
      },
      {
        "from": 1384,
        "to": [
          1385
        ]
      },
      {
        "from": 1385,
        "to": [
          313
        ]
      },
      {
        "from": 1389,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 10 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 120
    }
  }
}