{
  "name": "Analysis_2022-04-05_00-07-54",
  "address": "",
  "binarySource": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ef1a23a146100725780636d28e805146100be578063b52c64c71461014f578063b54cd451146101b8578063beff6dbf146101f3575b600080fd5b34801561007e57600080fd5b506100bc6004803603810190808035600019169060200190929190803560ff1690602001909291908035600019169060200190929190505050610238565b005b3480156100ca57600080fd5b506100f76004803603810190808035600019169060200190929190803590602001909291905050506104d8565b6040518086600019166000191681526020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b34801561015b57600080fd5b506101b6600480360381019080803560001916906020019092919080359060200190929190803563ffffffff169060200190929190803563ffffffff1690602001909291908035600019169060200190929190505050610635565b005b3480156101c457600080fd5b506101f1600480360381019080803560001916906020019092919080359060200190929190505050610846565b005b3480156101ff57600080fd5b506102226004803603810190808035600019169060200190929190505050610b20565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104d257600090505b600160008560001916600019168152602001908152602001600020805490508110156104d0576102fd600160008660001916600019168152602001908152602001600020828154811015156102e557fe5b90600052602060002090600302016000015483610b9e565b156104c35760006001600086600019166000191681526020019081526020016000208281548110151561032c57fe5b906000526020600020906003020160020160089054906101000a900460ff1660ff1614156104c257826001600086600019166000191681526020019081526020016000208281548110151561037d57fe5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd8285600160008860001916600019168152602001908152602001600020848154811015156103f157fe5b906000526020600020906003020160020160009054906101000a900463ffffffff166001600089600019166000191681526020019081526020016000208581548110151561043b57fe5b906000526020600020906003020160020160049054906101000a900463ffffffff168760405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a16104d1565b5b8080600101915050610294565b5b5b50505050565b60008060008060006104e8610bed565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561062a576001600089600019166000191681526020019081526020016000208781548110151561056557fe5b906000526020600020906003020160a06040519081016040529081600082015460001916600019168152602001600182015481526020016002820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160089054906101000a900460ff1660ff1660ff1681525050905080600001518160200151826040015183606001518460800151955095509550955095505b509295509295909350565b61063d610bed565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561083e578481602001818152505083816040019063ffffffff16908163ffffffff168152505082816060019063ffffffff16908163ffffffff168152505081816000019060001916908160001916815250506000816080019060ff16908160ff16815250506001600087600019166000191681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001906000191690556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548160ff021916908360ff1602179055505050507f740610c472095940dbb97134b5a7c4f27fb03c69bd892fea239850fa66dc5480868585856040518085600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001826000191660001916815260200194505050505060405180910390a15b505050505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b1a5760019150600090505b60016000856000191660001916815260200190815260200160002080549050811015610b19576000600160008660001916600019168152602001908152602001600020828154811015156108f757fe5b906000526020600020906003020160020160089054906101000a900460ff1660ff161415610b0c57600191506001600085600019166000191681526020019081526020016000208181548110151561094b57fe5b90600052602060002090600302016001015483111561096957600291505b816001600086600019166000191681526020019081526020016000208281548110151561099257fe5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd60016000866000191660001916815260200190815260200160002082815481101515610a0457fe5b9060005260206000209060030201600001548560016000886000191660001916815260200190815260200160002084815481101515610a3f57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1660016000896000191660001916815260200190815260200160002085815481101515610a8957fe5b906000526020600020906003020160020160049054906101000a900463ffffffff168660405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a15b80806001019150506108a7565b5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b99576001600083600019166000191681526020019081526020016000208054905090505b919050565b6000816040518082600019166000191681526020019150506040518091039020600019168360405180826000191660001916815260200191505060405180910390206000191614905092915050565b60a0604051908101604052806000801916815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600060ff16815250905600a165627a7a72305820f36826c46e93d209425271e953b424fdd89a15f17800443766f6d52b1089091f0029",
  "binaryHash": "355ae882",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820f36826c46e93d209425271e953b424fdd89a15f17800443766f6d52b1089091f0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649084875013
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ef1a23a146100725780636d28e805146100be578063b52c64c71461014f578063b54cd451146101b8578063beff6dbf146101f3575b600080fd5b34801561007e57600080fd5b506100bc6004803603810190808035600019169060200190929190803560ff1690602001909291908035600019169060200190929190505050610238565b005b3480156100ca57600080fd5b506100f76004803603810190808035600019169060200190929190803590602001909291905050506104d8565b6040518086600019166000191681526020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390f35b34801561015b57600080fd5b506101b6600480360381019080803560001916906020019092919080359060200190929190803563ffffffff169060200190929190803563ffffffff1690602001909291908035600019169060200190929190505050610635565b005b3480156101c457600080fd5b506101f1600480360381019080803560001916906020019092919080359060200190929190505050610846565b005b3480156101ff57600080fd5b506102226004803603810190808035600019169060200190929190505050610b20565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104d257600090505b600160008560001916600019168152602001908152602001600020805490508110156104d0576102fd600160008660001916600019168152602001908152602001600020828154811015156102e557fe5b90600052602060002090600302016000015483610b9e565b156104c35760006001600086600019166000191681526020019081526020016000208281548110151561032c57fe5b906000526020600020906003020160020160089054906101000a900460ff1660ff1614156104c257826001600086600019166000191681526020019081526020016000208281548110151561037d57fe5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd8285600160008860001916600019168152602001908152602001600020848154811015156103f157fe5b906000526020600020906003020160020160009054906101000a900463ffffffff166001600089600019166000191681526020019081526020016000208581548110151561043b57fe5b906000526020600020906003020160020160049054906101000a900463ffffffff168760405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a16104d1565b5b8080600101915050610294565b5b5b50505050565b60008060008060006104e8610bed565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561062a576001600089600019166000191681526020019081526020016000208781548110151561056557fe5b906000526020600020906003020160a06040519081016040529081600082015460001916600019168152602001600182015481526020016002820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160089054906101000a900460ff1660ff1660ff1681525050905080600001518160200151826040015183606001518460800151955095509550955095505b509295509295909350565b61063d610bed565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561083e578481602001818152505083816040019063ffffffff16908163ffffffff168152505082816060019063ffffffff16908163ffffffff168152505081816000019060001916908160001916815250506000816080019060ff16908160ff16815250506001600087600019166000191681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001906000191690556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548160ff021916908360ff1602179055505050507f740610c472095940dbb97134b5a7c4f27fb03c69bd892fea239850fa66dc5480868585856040518085600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001826000191660001916815260200194505050505060405180910390a15b505050505050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b1a5760019150600090505b60016000856000191660001916815260200190815260200160002080549050811015610b19576000600160008660001916600019168152602001908152602001600020828154811015156108f757fe5b906000526020600020906003020160020160089054906101000a900460ff1660ff161415610b0c57600191506001600085600019166000191681526020019081526020016000208181548110151561094b57fe5b90600052602060002090600302016001015483111561096957600291505b816001600086600019166000191681526020019081526020016000208281548110151561099257fe5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd60016000866000191660001916815260200190815260200160002082815481101515610a0457fe5b9060005260206000209060030201600001548560016000886000191660001916815260200190815260200160002084815481101515610a3f57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1660016000896000191660001916815260200190815260200160002085815481101515610a8957fe5b906000526020600020906003020160020160049054906101000a900463ffffffff168660405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a15b80806001019150506108a7565b5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b99576001600083600019166000191681526020019081526020016000208054905090505b919050565b6000816040518082600019166000191681526020019150506040518091039020600019168360405180826000191660001916815260200191505060405180910390206000191614905092915050565b60a0604051908101604052806000801916815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600060ff16815250905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061006d57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x006d\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ef1a23a1461007257",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x4ef1a23a\n60: EQ\n61: PUSH2 0x0072\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80636d28e805146100be57",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x6d28e805\n71: EQ\n72: PUSH2 0x00be\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063b52c64c71461014f57",
        "parsedOpcodes": "76: DUP1\n77: PUSH4 0xb52c64c7\n82: EQ\n83: PUSH2 0x014f\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063b54cd451146101b857",
        "parsedOpcodes": "87: DUP1\n88: PUSH4 0xb54cd451\n93: EQ\n94: PUSH2 0x01b8\n97: JUMPI"
      },
      {
        "offset": 98,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063beff6dbf146101f357",
        "parsedOpcodes": "98: DUP1\n99: PUSH4 0xbeff6dbf\n104: EQ\n105: PUSH2 0x01f3\n108: JUMPI"
      },
      {
        "offset": 109,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "109: JUMPDEST\n110: PUSH1 0x00\n112: DUP1\n113: REVERT"
      },
      {
        "offset": 114,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561007e57",
        "parsedOpcodes": "114: JUMPDEST\n115: CALLVALUE\n116: DUP1\n117: ISZERO\n118: PUSH2 0x007e\n121: JUMPI"
      },
      {
        "offset": 122,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "122: PUSH1 0x00\n124: DUP1\n125: REVERT"
      },
      {
        "offset": 126,
        "length": 62,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b506100bc6004803603810190808035600019169060200190929190803560ff169060200190929190803560001916906020019092919050505061023856",
        "parsedOpcodes": "126: JUMPDEST\n127: POP\n128: PUSH2 0x00bc\n131: PUSH1 0x04\n133: DUP1\n134: CALLDATASIZE\n135: SUB\n136: DUP2\n137: ADD\n138: SWAP1\n139: DUP1\n140: DUP1\n141: CALLDATALOAD\n142: PUSH1 0x00\n144: NOT\n145: AND\n146: SWAP1\n147: PUSH1 0x20\n149: ADD\n150: SWAP1\n151: SWAP3\n152: SWAP2\n153: SWAP1\n154: DUP1\n155: CALLDATALOAD\n156: PUSH1 0xff\n158: AND\n159: SWAP1\n160: PUSH1 0x20\n162: ADD\n163: SWAP1\n164: SWAP3\n165: SWAP2\n166: SWAP1\n167: DUP1\n168: CALLDATALOAD\n169: PUSH1 0x00\n171: NOT\n172: AND\n173: SWAP1\n174: PUSH1 0x20\n176: ADD\n177: SWAP1\n178: SWAP3\n179: SWAP2\n180: SWAP1\n181: POP\n182: POP\n183: POP\n184: PUSH2 0x0238\n187: JUMP"
      },
      {
        "offset": 188,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "188: JUMPDEST\n189: STOP"
      },
      {
        "offset": 190,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100ca57",
        "parsedOpcodes": "190: JUMPDEST\n191: CALLVALUE\n192: DUP1\n193: ISZERO\n194: PUSH2 0x00ca\n197: JUMPI"
      },
      {
        "offset": 198,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "198: PUSH1 0x00\n200: DUP1\n201: REVERT"
      },
      {
        "offset": 202,
        "length": 45,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506100f76004803603810190808035600019169060200190929190803590602001909291905050506104d856",
        "parsedOpcodes": "202: JUMPDEST\n203: POP\n204: PUSH2 0x00f7\n207: PUSH1 0x04\n209: DUP1\n210: CALLDATASIZE\n211: SUB\n212: DUP2\n213: ADD\n214: SWAP1\n215: DUP1\n216: DUP1\n217: CALLDATALOAD\n218: PUSH1 0x00\n220: NOT\n221: AND\n222: SWAP1\n223: PUSH1 0x20\n225: ADD\n226: SWAP1\n227: SWAP3\n228: SWAP2\n229: SWAP1\n230: DUP1\n231: CALLDATALOAD\n232: SWAP1\n233: PUSH1 0x20\n235: ADD\n236: SWAP1\n237: SWAP3\n238: SWAP2\n239: SWAP1\n240: POP\n241: POP\n242: POP\n243: PUSH2 0x04d8\n246: JUMP"
      },
      {
        "offset": 247,
        "length": 88,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b6040518086600019166000191681526020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390f3",
        "parsedOpcodes": "247: JUMPDEST\n248: PUSH1 0x40\n250: MLOAD\n251: DUP1\n252: DUP7\n253: PUSH1 0x00\n255: NOT\n256: AND\n257: PUSH1 0x00\n259: NOT\n260: AND\n261: DUP2\n262: MSTORE\n263: PUSH1 0x20\n265: ADD\n266: DUP6\n267: DUP2\n268: MSTORE\n269: PUSH1 0x20\n271: ADD\n272: DUP5\n273: PUSH4 0xffffffff\n278: AND\n279: PUSH4 0xffffffff\n284: AND\n285: DUP2\n286: MSTORE\n287: PUSH1 0x20\n289: ADD\n290: DUP4\n291: PUSH4 0xffffffff\n296: AND\n297: PUSH4 0xffffffff\n302: AND\n303: DUP2\n304: MSTORE\n305: PUSH1 0x20\n307: ADD\n308: DUP3\n309: PUSH1 0xff\n311: AND\n312: PUSH1 0xff\n314: AND\n315: DUP2\n316: MSTORE\n317: PUSH1 0x20\n319: ADD\n320: SWAP6\n321: POP\n322: POP\n323: POP\n324: POP\n325: POP\n326: POP\n327: PUSH1 0x40\n329: MLOAD\n330: DUP1\n331: SWAP2\n332: SUB\n333: SWAP1\n334: RETURN"
      },
      {
        "offset": 335,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561015b57",
        "parsedOpcodes": "335: JUMPDEST\n336: CALLVALUE\n337: DUP1\n338: ISZERO\n339: PUSH2 0x015b\n342: JUMPI"
      },
      {
        "offset": 343,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "343: PUSH1 0x00\n345: DUP1\n346: REVERT"
      },
      {
        "offset": 347,
        "length": 91,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b506101b6600480360381019080803560001916906020019092919080359060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803560001916906020019092919050505061063556",
        "parsedOpcodes": "347: JUMPDEST\n348: POP\n349: PUSH2 0x01b6\n352: PUSH1 0x04\n354: DUP1\n355: CALLDATASIZE\n356: SUB\n357: DUP2\n358: ADD\n359: SWAP1\n360: DUP1\n361: DUP1\n362: CALLDATALOAD\n363: PUSH1 0x00\n365: NOT\n366: AND\n367: SWAP1\n368: PUSH1 0x20\n370: ADD\n371: SWAP1\n372: SWAP3\n373: SWAP2\n374: SWAP1\n375: DUP1\n376: CALLDATALOAD\n377: SWAP1\n378: PUSH1 0x20\n380: ADD\n381: SWAP1\n382: SWAP3\n383: SWAP2\n384: SWAP1\n385: DUP1\n386: CALLDATALOAD\n387: PUSH4 0xffffffff\n392: AND\n393: SWAP1\n394: PUSH1 0x20\n396: ADD\n397: SWAP1\n398: SWAP3\n399: SWAP2\n400: SWAP1\n401: DUP1\n402: CALLDATALOAD\n403: PUSH4 0xffffffff\n408: AND\n409: SWAP1\n410: PUSH1 0x20\n412: ADD\n413: SWAP1\n414: SWAP3\n415: SWAP2\n416: SWAP1\n417: DUP1\n418: CALLDATALOAD\n419: PUSH1 0x00\n421: NOT\n422: AND\n423: SWAP1\n424: PUSH1 0x20\n426: ADD\n427: SWAP1\n428: SWAP3\n429: SWAP2\n430: SWAP1\n431: POP\n432: POP\n433: POP\n434: PUSH2 0x0635\n437: JUMP"
      },
      {
        "offset": 438,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "438: JUMPDEST\n439: STOP"
      },
      {
        "offset": 440,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101c457",
        "parsedOpcodes": "440: JUMPDEST\n441: CALLVALUE\n442: DUP1\n443: ISZERO\n444: PUSH2 0x01c4\n447: JUMPI"
      },
      {
        "offset": 448,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "448: PUSH1 0x00\n450: DUP1\n451: REVERT"
      },
      {
        "offset": 452,
        "length": 45,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506101f160048036038101908080356000191690602001909291908035906020019092919050505061084656",
        "parsedOpcodes": "452: JUMPDEST\n453: POP\n454: PUSH2 0x01f1\n457: PUSH1 0x04\n459: DUP1\n460: CALLDATASIZE\n461: SUB\n462: DUP2\n463: ADD\n464: SWAP1\n465: DUP1\n466: DUP1\n467: CALLDATALOAD\n468: PUSH1 0x00\n470: NOT\n471: AND\n472: SWAP1\n473: PUSH1 0x20\n475: ADD\n476: SWAP1\n477: SWAP3\n478: SWAP2\n479: SWAP1\n480: DUP1\n481: CALLDATALOAD\n482: SWAP1\n483: PUSH1 0x20\n485: ADD\n486: SWAP1\n487: SWAP3\n488: SWAP2\n489: SWAP1\n490: POP\n491: POP\n492: POP\n493: PUSH2 0x0846\n496: JUMP"
      },
      {
        "offset": 497,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "497: JUMPDEST\n498: STOP"
      },
      {
        "offset": 499,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101ff57",
        "parsedOpcodes": "499: JUMPDEST\n500: CALLVALUE\n501: DUP1\n502: ISZERO\n503: PUSH2 0x01ff\n506: JUMPI"
      },
      {
        "offset": 507,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "507: PUSH1 0x00\n509: DUP1\n510: REVERT"
      },
      {
        "offset": 511,
        "length": 35,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506102226004803603810190808035600019169060200190929190505050610b2056",
        "parsedOpcodes": "511: JUMPDEST\n512: POP\n513: PUSH2 0x0222\n516: PUSH1 0x04\n518: DUP1\n519: CALLDATASIZE\n520: SUB\n521: DUP2\n522: ADD\n523: SWAP1\n524: DUP1\n525: DUP1\n526: CALLDATALOAD\n527: PUSH1 0x00\n529: NOT\n530: AND\n531: SWAP1\n532: PUSH1 0x20\n534: ADD\n535: SWAP1\n536: SWAP3\n537: SWAP2\n538: SWAP1\n539: POP\n540: POP\n541: POP\n542: PUSH2 0x0b20\n545: JUMP"
      },
      {
        "offset": 546,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "546: JUMPDEST\n547: PUSH1 0x40\n549: MLOAD\n550: DUP1\n551: DUP3\n552: DUP2\n553: MSTORE\n554: PUSH1 0x20\n556: ADD\n557: SWAP2\n558: POP\n559: POP\n560: PUSH1 0x40\n562: MLOAD\n563: DUP1\n564: SWAP2\n565: SUB\n566: SWAP1\n567: RETURN"
      },
      {
        "offset": 568,
        "length": 88,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104d257",
        "parsedOpcodes": "568: JUMPDEST\n569: PUSH1 0x00\n571: DUP1\n572: PUSH1 0x00\n574: SWAP1\n575: SLOAD\n576: SWAP1\n577: PUSH2 0x0100\n580: EXP\n581: SWAP1\n582: DIV\n583: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n604: AND\n605: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n626: AND\n627: CALLER\n628: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n649: AND\n650: EQ\n651: ISZERO\n652: PUSH2 0x04d2\n655: JUMPI"
      },
      {
        "offset": 656,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60009050",
        "parsedOpcodes": "656: PUSH1 0x00\n658: SWAP1\n659: POP"
      },
      {
        "offset": 660,
        "length": 39,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160008560001916600019168152602001908152602001600020805490508110156104d057",
        "parsedOpcodes": "660: JUMPDEST\n661: PUSH1 0x01\n663: PUSH1 0x00\n665: DUP6\n666: PUSH1 0x00\n668: NOT\n669: AND\n670: PUSH1 0x00\n672: NOT\n673: AND\n674: DUP2\n675: MSTORE\n676: PUSH1 0x20\n678: ADD\n679: SWAP1\n680: DUP2\n681: MSTORE\n682: PUSH1 0x20\n684: ADD\n685: PUSH1 0x00\n687: SHA3\n688: DUP1\n689: SLOAD\n690: SWAP1\n691: POP\n692: DUP2\n693: LT\n694: ISZERO\n695: PUSH2 0x04d0\n698: JUMPI"
      },
      {
        "offset": 699,
        "length": 41,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6102fd600160008660001916600019168152602001908152602001600020828154811015156102e557",
        "parsedOpcodes": "699: PUSH2 0x02fd\n702: PUSH1 0x01\n704: PUSH1 0x00\n706: DUP7\n707: PUSH1 0x00\n709: NOT\n710: AND\n711: PUSH1 0x00\n713: NOT\n714: AND\n715: DUP2\n716: MSTORE\n717: PUSH1 0x20\n719: ADD\n720: SWAP1\n721: DUP2\n722: MSTORE\n723: PUSH1 0x20\n725: ADD\n726: PUSH1 0x00\n728: SHA3\n729: DUP3\n730: DUP2\n731: SLOAD\n732: DUP2\n733: LT\n734: ISZERO\n735: ISZERO\n736: PUSH2 0x02e5\n739: JUMPI"
      },
      {
        "offset": 740,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "740: INVALID"
      },
      {
        "offset": 741,
        "length": 24,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b90600052602060002090600302016000015483610b9e56",
        "parsedOpcodes": "741: JUMPDEST\n742: SWAP1\n743: PUSH1 0x00\n745: MSTORE\n746: PUSH1 0x20\n748: PUSH1 0x00\n750: SHA3\n751: SWAP1\n752: PUSH1 0x03\n754: MUL\n755: ADD\n756: PUSH1 0x00\n758: ADD\n759: SLOAD\n760: DUP4\n761: PUSH2 0x0b9e\n764: JUMP"
      },
      {
        "offset": 765,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156104c357",
        "parsedOpcodes": "765: JUMPDEST\n766: ISZERO\n767: PUSH2 0x04c3\n770: JUMPI"
      },
      {
        "offset": 771,
        "length": 40,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "60006001600086600019166000191681526020019081526020016000208281548110151561032c57",
        "parsedOpcodes": "771: PUSH1 0x00\n773: PUSH1 0x01\n775: PUSH1 0x00\n777: DUP7\n778: PUSH1 0x00\n780: NOT\n781: AND\n782: PUSH1 0x00\n784: NOT\n785: AND\n786: DUP2\n787: MSTORE\n788: PUSH1 0x20\n790: ADD\n791: SWAP1\n792: DUP2\n793: MSTORE\n794: PUSH1 0x20\n796: ADD\n797: PUSH1 0x00\n799: SHA3\n800: DUP3\n801: DUP2\n802: SLOAD\n803: DUP2\n804: LT\n805: ISZERO\n806: ISZERO\n807: PUSH2 0x032c\n810: JUMPI"
      },
      {
        "offset": 811,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "811: INVALID"
      },
      {
        "offset": 812,
        "length": 41,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b906000526020600020906003020160020160089054906101000a900460ff1660ff1614156104c257",
        "parsedOpcodes": "812: JUMPDEST\n813: SWAP1\n814: PUSH1 0x00\n816: MSTORE\n817: PUSH1 0x20\n819: PUSH1 0x00\n821: SHA3\n822: SWAP1\n823: PUSH1 0x03\n825: MUL\n826: ADD\n827: PUSH1 0x02\n829: ADD\n830: PUSH1 0x08\n832: SWAP1\n833: SLOAD\n834: SWAP1\n835: PUSH2 0x0100\n838: EXP\n839: SWAP1\n840: DIV\n841: PUSH1 0xff\n843: AND\n844: PUSH1 0xff\n846: AND\n847: EQ\n848: ISZERO\n849: PUSH2 0x04c2\n852: JUMPI"
      },
      {
        "offset": 853,
        "length": 39,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "826001600086600019166000191681526020019081526020016000208281548110151561037d57",
        "parsedOpcodes": "853: DUP3\n854: PUSH1 0x01\n856: PUSH1 0x00\n858: DUP7\n859: PUSH1 0x00\n861: NOT\n862: AND\n863: PUSH1 0x00\n865: NOT\n866: AND\n867: DUP2\n868: MSTORE\n869: PUSH1 0x20\n871: ADD\n872: SWAP1\n873: DUP2\n874: MSTORE\n875: PUSH1 0x20\n877: ADD\n878: PUSH1 0x00\n880: SHA3\n881: DUP3\n882: DUP2\n883: SLOAD\n884: DUP2\n885: LT\n886: ISZERO\n887: ISZERO\n888: PUSH2 0x037d\n891: JUMPI"
      },
      {
        "offset": 892,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "892: INVALID"
      },
      {
        "offset": 893,
        "length": 115,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd8285600160008860001916600019168152602001908152602001600020848154811015156103f157",
        "parsedOpcodes": "893: JUMPDEST\n894: SWAP1\n895: PUSH1 0x00\n897: MSTORE\n898: PUSH1 0x20\n900: PUSH1 0x00\n902: SHA3\n903: SWAP1\n904: PUSH1 0x03\n906: MUL\n907: ADD\n908: PUSH1 0x02\n910: ADD\n911: PUSH1 0x08\n913: PUSH2 0x0100\n916: EXP\n917: DUP2\n918: SLOAD\n919: DUP2\n920: PUSH1 0xff\n922: MUL\n923: NOT\n924: AND\n925: SWAP1\n926: DUP4\n927: PUSH1 0xff\n929: AND\n930: MUL\n931: OR\n932: SWAP1\n933: SSTORE\n934: POP\n935: PUSH32 0x1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd\n968: DUP3\n969: DUP6\n970: PUSH1 0x01\n972: PUSH1 0x00\n974: DUP9\n975: PUSH1 0x00\n977: NOT\n978: AND\n979: PUSH1 0x00\n981: NOT\n982: AND\n983: DUP2\n984: MSTORE\n985: PUSH1 0x20\n987: ADD\n988: SWAP1\n989: DUP2\n990: MSTORE\n991: PUSH1 0x20\n993: ADD\n994: PUSH1 0x00\n996: SHA3\n997: DUP5\n998: DUP2\n999: SLOAD\n1000: DUP2\n1001: LT\n1002: ISZERO\n1003: ISZERO\n1004: PUSH2 0x03f1\n1007: JUMPI"
      },
      {
        "offset": 1008,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1008: INVALID"
      },
      {
        "offset": 1009,
        "length": 73,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b906000526020600020906003020160020160009054906101000a900463ffffffff166001600089600019166000191681526020019081526020016000208581548110151561043b57",
        "parsedOpcodes": "1009: JUMPDEST\n1010: SWAP1\n1011: PUSH1 0x00\n1013: MSTORE\n1014: PUSH1 0x20\n1016: PUSH1 0x00\n1018: SHA3\n1019: SWAP1\n1020: PUSH1 0x03\n1022: MUL\n1023: ADD\n1024: PUSH1 0x02\n1026: ADD\n1027: PUSH1 0x00\n1029: SWAP1\n1030: SLOAD\n1031: SWAP1\n1032: PUSH2 0x0100\n1035: EXP\n1036: SWAP1\n1037: DIV\n1038: PUSH4 0xffffffff\n1043: AND\n1044: PUSH1 0x01\n1046: PUSH1 0x00\n1048: DUP10\n1049: PUSH1 0x00\n1051: NOT\n1052: AND\n1053: PUSH1 0x00\n1055: NOT\n1056: AND\n1057: DUP2\n1058: MSTORE\n1059: PUSH1 0x20\n1061: ADD\n1062: SWAP1\n1063: DUP2\n1064: MSTORE\n1065: PUSH1 0x20\n1067: ADD\n1068: PUSH1 0x00\n1070: SHA3\n1071: DUP6\n1072: DUP2\n1073: SLOAD\n1074: DUP2\n1075: LT\n1076: ISZERO\n1077: ISZERO\n1078: PUSH2 0x043b\n1081: JUMPI"
      },
      {
        "offset": 1082,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1082: INVALID"
      },
      {
        "offset": 1083,
        "length": 135,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b906000526020600020906003020160020160049054906101000a900463ffffffff168760405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a16104d156",
        "parsedOpcodes": "1083: JUMPDEST\n1084: SWAP1\n1085: PUSH1 0x00\n1087: MSTORE\n1088: PUSH1 0x20\n1090: PUSH1 0x00\n1092: SHA3\n1093: SWAP1\n1094: PUSH1 0x03\n1096: MUL\n1097: ADD\n1098: PUSH1 0x02\n1100: ADD\n1101: PUSH1 0x04\n1103: SWAP1\n1104: SLOAD\n1105: SWAP1\n1106: PUSH2 0x0100\n1109: EXP\n1110: SWAP1\n1111: DIV\n1112: PUSH4 0xffffffff\n1117: AND\n1118: DUP8\n1119: PUSH1 0x40\n1121: MLOAD\n1122: DUP1\n1123: DUP7\n1124: PUSH1 0x00\n1126: NOT\n1127: AND\n1128: PUSH1 0x00\n1130: NOT\n1131: AND\n1132: DUP2\n1133: MSTORE\n1134: PUSH1 0x20\n1136: ADD\n1137: DUP6\n1138: PUSH1 0x00\n1140: NOT\n1141: AND\n1142: PUSH1 0x00\n1144: NOT\n1145: AND\n1146: DUP2\n1147: MSTORE\n1148: PUSH1 0x20\n1150: ADD\n1151: DUP5\n1152: PUSH4 0xffffffff\n1157: AND\n1158: PUSH4 0xffffffff\n1163: AND\n1164: DUP2\n1165: MSTORE\n1166: PUSH1 0x20\n1168: ADD\n1169: DUP4\n1170: PUSH4 0xffffffff\n1175: AND\n1176: PUSH4 0xffffffff\n1181: AND\n1182: DUP2\n1183: MSTORE\n1184: PUSH1 0x20\n1186: ADD\n1187: DUP3\n1188: PUSH1 0xff\n1190: AND\n1191: PUSH1 0xff\n1193: AND\n1194: DUP2\n1195: MSTORE\n1196: PUSH1 0x20\n1198: ADD\n1199: SWAP6\n1200: POP\n1201: POP\n1202: POP\n1203: POP\n1204: POP\n1205: POP\n1206: PUSH1 0x40\n1208: MLOAD\n1209: DUP1\n1210: SWAP2\n1211: SUB\n1212: SWAP1\n1213: LOG1\n1214: PUSH2 0x04d1\n1217: JUMP"
      },
      {
        "offset": 1218,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1218: JUMPDEST"
      },
      {
        "offset": 1219,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b808060010191505061029456",
        "parsedOpcodes": "1219: JUMPDEST\n1220: DUP1\n1221: DUP1\n1222: PUSH1 0x01\n1224: ADD\n1225: SWAP2\n1226: POP\n1227: POP\n1228: PUSH2 0x0294\n1231: JUMP"
      },
      {
        "offset": 1232,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1232: JUMPDEST"
      },
      {
        "offset": 1233,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1233: JUMPDEST"
      },
      {
        "offset": 1234,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "1234: JUMPDEST\n1235: POP\n1236: POP\n1237: POP\n1238: POP\n1239: JUMP"
      },
      {
        "offset": 1240,
        "length": 16,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b60008060008060006104e8610bed56",
        "parsedOpcodes": "1240: JUMPDEST\n1241: PUSH1 0x00\n1243: DUP1\n1244: PUSH1 0x00\n1246: DUP1\n1247: PUSH1 0x00\n1249: PUSH2 0x04e8\n1252: PUSH2 0x0bed\n1255: JUMP"
      },
      {
        "offset": 1256,
        "length": 86,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561062a57",
        "parsedOpcodes": "1256: JUMPDEST\n1257: PUSH1 0x00\n1259: DUP1\n1260: SWAP1\n1261: SLOAD\n1262: SWAP1\n1263: PUSH2 0x0100\n1266: EXP\n1267: SWAP1\n1268: DIV\n1269: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1290: AND\n1291: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1312: AND\n1313: CALLER\n1314: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1335: AND\n1336: EQ\n1337: ISZERO\n1338: PUSH2 0x062a\n1341: JUMPI"
      },
      {
        "offset": 1342,
        "length": 38,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "6001600089600019166000191681526020019081526020016000208781548110151561056557",
        "parsedOpcodes": "1342: PUSH1 0x01\n1344: PUSH1 0x00\n1346: DUP10\n1347: PUSH1 0x00\n1349: NOT\n1350: AND\n1351: PUSH1 0x00\n1353: NOT\n1354: AND\n1355: DUP2\n1356: MSTORE\n1357: PUSH1 0x20\n1359: ADD\n1360: SWAP1\n1361: DUP2\n1362: MSTORE\n1363: PUSH1 0x20\n1365: ADD\n1366: PUSH1 0x00\n1368: SHA3\n1369: DUP8\n1370: DUP2\n1371: SLOAD\n1372: DUP2\n1373: LT\n1374: ISZERO\n1375: ISZERO\n1376: PUSH2 0x0565\n1379: JUMPI"
      },
      {
        "offset": 1380,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1380: INVALID"
      },
      {
        "offset": 1381,
        "length": 197,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b906000526020600020906003020160a06040519081016040529081600082015460001916600019168152602001600182015481526020016002820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016002820160089054906101000a900460ff1660ff1660ff168152505090508060000151816020015182604001518360600151846080015195509550955095509550",
        "parsedOpcodes": "1381: JUMPDEST\n1382: SWAP1\n1383: PUSH1 0x00\n1385: MSTORE\n1386: PUSH1 0x20\n1388: PUSH1 0x00\n1390: SHA3\n1391: SWAP1\n1392: PUSH1 0x03\n1394: MUL\n1395: ADD\n1396: PUSH1 0xa0\n1398: PUSH1 0x40\n1400: MLOAD\n1401: SWAP1\n1402: DUP2\n1403: ADD\n1404: PUSH1 0x40\n1406: MSTORE\n1407: SWAP1\n1408: DUP2\n1409: PUSH1 0x00\n1411: DUP3\n1412: ADD\n1413: SLOAD\n1414: PUSH1 0x00\n1416: NOT\n1417: AND\n1418: PUSH1 0x00\n1420: NOT\n1421: AND\n1422: DUP2\n1423: MSTORE\n1424: PUSH1 0x20\n1426: ADD\n1427: PUSH1 0x01\n1429: DUP3\n1430: ADD\n1431: SLOAD\n1432: DUP2\n1433: MSTORE\n1434: PUSH1 0x20\n1436: ADD\n1437: PUSH1 0x02\n1439: DUP3\n1440: ADD\n1441: PUSH1 0x00\n1443: SWAP1\n1444: SLOAD\n1445: SWAP1\n1446: PUSH2 0x0100\n1449: EXP\n1450: SWAP1\n1451: DIV\n1452: PUSH4 0xffffffff\n1457: AND\n1458: PUSH4 0xffffffff\n1463: AND\n1464: PUSH4 0xffffffff\n1469: AND\n1470: DUP2\n1471: MSTORE\n1472: PUSH1 0x20\n1474: ADD\n1475: PUSH1 0x02\n1477: DUP3\n1478: ADD\n1479: PUSH1 0x04\n1481: SWAP1\n1482: SLOAD\n1483: SWAP1\n1484: PUSH2 0x0100\n1487: EXP\n1488: SWAP1\n1489: DIV\n1490: PUSH4 0xffffffff\n1495: AND\n1496: PUSH4 0xffffffff\n1501: AND\n1502: PUSH4 0xffffffff\n1507: AND\n1508: DUP2\n1509: MSTORE\n1510: PUSH1 0x20\n1512: ADD\n1513: PUSH1 0x02\n1515: DUP3\n1516: ADD\n1517: PUSH1 0x08\n1519: SWAP1\n1520: SLOAD\n1521: SWAP1\n1522: PUSH2 0x0100\n1525: EXP\n1526: SWAP1\n1527: DIV\n1528: PUSH1 0xff\n1530: AND\n1531: PUSH1 0xff\n1533: AND\n1534: PUSH1 0xff\n1536: AND\n1537: DUP2\n1538: MSTORE\n1539: POP\n1540: POP\n1541: SWAP1\n1542: POP\n1543: DUP1\n1544: PUSH1 0x00\n1546: ADD\n1547: MLOAD\n1548: DUP2\n1549: PUSH1 0x20\n1551: ADD\n1552: MLOAD\n1553: DUP3\n1554: PUSH1 0x40\n1556: ADD\n1557: MLOAD\n1558: DUP4\n1559: PUSH1 0x60\n1561: ADD\n1562: MLOAD\n1563: DUP5\n1564: PUSH1 0x80\n1566: ADD\n1567: MLOAD\n1568: SWAP6\n1569: POP\n1570: SWAP6\n1571: POP\n1572: SWAP6\n1573: POP\n1574: SWAP6\n1575: POP\n1576: SWAP6\n1577: POP"
      },
      {
        "offset": 1578,
        "length": 11,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50929550929590935056",
        "parsedOpcodes": "1578: JUMPDEST\n1579: POP\n1580: SWAP3\n1581: SWAP6\n1582: POP\n1583: SWAP3\n1584: SWAP6\n1585: SWAP1\n1586: SWAP4\n1587: POP\n1588: JUMP"
      },
      {
        "offset": 1589,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61063d610bed56",
        "parsedOpcodes": "1589: JUMPDEST\n1590: PUSH2 0x063d\n1593: PUSH2 0x0bed\n1596: JUMP"
      },
      {
        "offset": 1597,
        "length": 86,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561083e57",
        "parsedOpcodes": "1597: JUMPDEST\n1598: PUSH1 0x00\n1600: DUP1\n1601: SWAP1\n1602: SLOAD\n1603: SWAP1\n1604: PUSH2 0x0100\n1607: EXP\n1608: SWAP1\n1609: DIV\n1610: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1631: AND\n1632: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1653: AND\n1654: CALLER\n1655: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1676: AND\n1677: EQ\n1678: ISZERO\n1679: PUSH2 0x083e\n1682: JUMPI"
      },
      {
        "offset": 1683,
        "length": 427,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8481602001818152505083816040019063ffffffff16908163ffffffff168152505082816060019063ffffffff16908163ffffffff168152505081816000019060001916908160001916815250506000816080019060ff16908160ff16815250506001600087600019166000191681526020019081526020016000208190806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001906000191690556020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548160ff021916908360ff1602179055505050507f740610c472095940dbb97134b5a7c4f27fb03c69bd892fea239850fa66dc5480868585856040518085600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001826000191660001916815260200194505050505060405180910390a1",
        "parsedOpcodes": "1683: DUP5\n1684: DUP2\n1685: PUSH1 0x20\n1687: ADD\n1688: DUP2\n1689: DUP2\n1690: MSTORE\n1691: POP\n1692: POP\n1693: DUP4\n1694: DUP2\n1695: PUSH1 0x40\n1697: ADD\n1698: SWAP1\n1699: PUSH4 0xffffffff\n1704: AND\n1705: SWAP1\n1706: DUP2\n1707: PUSH4 0xffffffff\n1712: AND\n1713: DUP2\n1714: MSTORE\n1715: POP\n1716: POP\n1717: DUP3\n1718: DUP2\n1719: PUSH1 0x60\n1721: ADD\n1722: SWAP1\n1723: PUSH4 0xffffffff\n1728: AND\n1729: SWAP1\n1730: DUP2\n1731: PUSH4 0xffffffff\n1736: AND\n1737: DUP2\n1738: MSTORE\n1739: POP\n1740: POP\n1741: DUP2\n1742: DUP2\n1743: PUSH1 0x00\n1745: ADD\n1746: SWAP1\n1747: PUSH1 0x00\n1749: NOT\n1750: AND\n1751: SWAP1\n1752: DUP2\n1753: PUSH1 0x00\n1755: NOT\n1756: AND\n1757: DUP2\n1758: MSTORE\n1759: POP\n1760: POP\n1761: PUSH1 0x00\n1763: DUP2\n1764: PUSH1 0x80\n1766: ADD\n1767: SWAP1\n1768: PUSH1 0xff\n1770: AND\n1771: SWAP1\n1772: DUP2\n1773: PUSH1 0xff\n1775: AND\n1776: DUP2\n1777: MSTORE\n1778: POP\n1779: POP\n1780: PUSH1 0x01\n1782: PUSH1 0x00\n1784: DUP8\n1785: PUSH1 0x00\n1787: NOT\n1788: AND\n1789: PUSH1 0x00\n1791: NOT\n1792: AND\n1793: DUP2\n1794: MSTORE\n1795: PUSH1 0x20\n1797: ADD\n1798: SWAP1\n1799: DUP2\n1800: MSTORE\n1801: PUSH1 0x20\n1803: ADD\n1804: PUSH1 0x00\n1806: SHA3\n1807: DUP2\n1808: SWAP1\n1809: DUP1\n1810: PUSH1 0x01\n1812: DUP2\n1813: SLOAD\n1814: ADD\n1815: DUP1\n1816: DUP3\n1817: SSTORE\n1818: DUP1\n1819: SWAP2\n1820: POP\n1821: POP\n1822: SWAP1\n1823: PUSH1 0x01\n1825: DUP3\n1826: SUB\n1827: SWAP1\n1828: PUSH1 0x00\n1830: MSTORE\n1831: PUSH1 0x20\n1833: PUSH1 0x00\n1835: SHA3\n1836: SWAP1\n1837: PUSH1 0x03\n1839: MUL\n1840: ADD\n1841: PUSH1 0x00\n1843: SWAP1\n1844: SWAP2\n1845: SWAP3\n1846: SWAP1\n1847: SWAP2\n1848: SWAP1\n1849: SWAP2\n1850: POP\n1851: PUSH1 0x00\n1853: DUP3\n1854: ADD\n1855: MLOAD\n1856: DUP2\n1857: PUSH1 0x00\n1859: ADD\n1860: SWAP1\n1861: PUSH1 0x00\n1863: NOT\n1864: AND\n1865: SWAP1\n1866: SSTORE\n1867: PUSH1 0x20\n1869: DUP3\n1870: ADD\n1871: MLOAD\n1872: DUP2\n1873: PUSH1 0x01\n1875: ADD\n1876: SSTORE\n1877: PUSH1 0x40\n1879: DUP3\n1880: ADD\n1881: MLOAD\n1882: DUP2\n1883: PUSH1 0x02\n1885: ADD\n1886: PUSH1 0x00\n1888: PUSH2 0x0100\n1891: EXP\n1892: DUP2\n1893: SLOAD\n1894: DUP2\n1895: PUSH4 0xffffffff\n1900: MUL\n1901: NOT\n1902: AND\n1903: SWAP1\n1904: DUP4\n1905: PUSH4 0xffffffff\n1910: AND\n1911: MUL\n1912: OR\n1913: SWAP1\n1914: SSTORE\n1915: POP\n1916: PUSH1 0x60\n1918: DUP3\n1919: ADD\n1920: MLOAD\n1921: DUP2\n1922: PUSH1 0x02\n1924: ADD\n1925: PUSH1 0x04\n1927: PUSH2 0x0100\n1930: EXP\n1931: DUP2\n1932: SLOAD\n1933: DUP2\n1934: PUSH4 0xffffffff\n1939: MUL\n1940: NOT\n1941: AND\n1942: SWAP1\n1943: DUP4\n1944: PUSH4 0xffffffff\n1949: AND\n1950: MUL\n1951: OR\n1952: SWAP1\n1953: SSTORE\n1954: POP\n1955: PUSH1 0x80\n1957: DUP3\n1958: ADD\n1959: MLOAD\n1960: DUP2\n1961: PUSH1 0x02\n1963: ADD\n1964: PUSH1 0x08\n1966: PUSH2 0x0100\n1969: EXP\n1970: DUP2\n1971: SLOAD\n1972: DUP2\n1973: PUSH1 0xff\n1975: MUL\n1976: NOT\n1977: AND\n1978: SWAP1\n1979: DUP4\n1980: PUSH1 0xff\n1982: AND\n1983: MUL\n1984: OR\n1985: SWAP1\n1986: SSTORE\n1987: POP\n1988: POP\n1989: POP\n1990: POP\n1991: PUSH32 0x740610c472095940dbb97134b5a7c4f27fb03c69bd892fea239850fa66dc5480\n2024: DUP7\n2025: DUP6\n2026: DUP6\n2027: DUP6\n2028: PUSH1 0x40\n2030: MLOAD\n2031: DUP1\n2032: DUP6\n2033: PUSH1 0x00\n2035: NOT\n2036: AND\n2037: PUSH1 0x00\n2039: NOT\n2040: AND\n2041: DUP2\n2042: MSTORE\n2043: PUSH1 0x20\n2045: ADD\n2046: DUP5\n2047: PUSH4 0xffffffff\n2052: AND\n2053: PUSH4 0xffffffff\n2058: AND\n2059: DUP2\n2060: MSTORE\n2061: PUSH1 0x20\n2063: ADD\n2064: DUP4\n2065: PUSH4 0xffffffff\n2070: AND\n2071: PUSH4 0xffffffff\n2076: AND\n2077: DUP2\n2078: MSTORE\n2079: PUSH1 0x20\n2081: ADD\n2082: DUP3\n2083: PUSH1 0x00\n2085: NOT\n2086: AND\n2087: PUSH1 0x00\n2089: NOT\n2090: AND\n2091: DUP2\n2092: MSTORE\n2093: PUSH1 0x20\n2095: ADD\n2096: SWAP5\n2097: POP\n2098: POP\n2099: POP\n2100: POP\n2101: POP\n2102: PUSH1 0x40\n2104: MLOAD\n2105: DUP1\n2106: SWAP2\n2107: SUB\n2108: SWAP1\n2109: LOG1"
      },
      {
        "offset": 2110,
        "length": 8,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b50505050505056",
        "parsedOpcodes": "2110: JUMPDEST\n2111: POP\n2112: POP\n2113: POP\n2114: POP\n2115: POP\n2116: POP\n2117: JUMP"
      },
      {
        "offset": 2118,
        "length": 89,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b1a57",
        "parsedOpcodes": "2118: JUMPDEST\n2119: PUSH1 0x00\n2121: DUP1\n2122: PUSH1 0x00\n2124: DUP1\n2125: SWAP1\n2126: SLOAD\n2127: SWAP1\n2128: PUSH2 0x0100\n2131: EXP\n2132: SWAP1\n2133: DIV\n2134: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2155: AND\n2156: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2177: AND\n2178: CALLER\n2179: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2200: AND\n2201: EQ\n2202: ISZERO\n2203: PUSH2 0x0b1a\n2206: JUMPI"
      },
      {
        "offset": 2207,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6001915060009050",
        "parsedOpcodes": "2207: PUSH1 0x01\n2209: SWAP2\n2210: POP\n2211: PUSH1 0x00\n2213: SWAP1\n2214: POP"
      },
      {
        "offset": 2215,
        "length": 39,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60016000856000191660001916815260200190815260200160002080549050811015610b1957",
        "parsedOpcodes": "2215: JUMPDEST\n2216: PUSH1 0x01\n2218: PUSH1 0x00\n2220: DUP6\n2221: PUSH1 0x00\n2223: NOT\n2224: AND\n2225: PUSH1 0x00\n2227: NOT\n2228: AND\n2229: DUP2\n2230: MSTORE\n2231: PUSH1 0x20\n2233: ADD\n2234: SWAP1\n2235: DUP2\n2236: MSTORE\n2237: PUSH1 0x20\n2239: ADD\n2240: PUSH1 0x00\n2242: SHA3\n2243: DUP1\n2244: SLOAD\n2245: SWAP1\n2246: POP\n2247: DUP2\n2248: LT\n2249: ISZERO\n2250: PUSH2 0x0b19\n2253: JUMPI"
      },
      {
        "offset": 2254,
        "length": 40,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6000600160008660001916600019168152602001908152602001600020828154811015156108f757",
        "parsedOpcodes": "2254: PUSH1 0x00\n2256: PUSH1 0x01\n2258: PUSH1 0x00\n2260: DUP7\n2261: PUSH1 0x00\n2263: NOT\n2264: AND\n2265: PUSH1 0x00\n2267: NOT\n2268: AND\n2269: DUP2\n2270: MSTORE\n2271: PUSH1 0x20\n2273: ADD\n2274: SWAP1\n2275: DUP2\n2276: MSTORE\n2277: PUSH1 0x20\n2279: ADD\n2280: PUSH1 0x00\n2282: SHA3\n2283: DUP3\n2284: DUP2\n2285: SLOAD\n2286: DUP2\n2287: LT\n2288: ISZERO\n2289: ISZERO\n2290: PUSH2 0x08f7\n2293: JUMPI"
      },
      {
        "offset": 2294,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2294: INVALID"
      },
      {
        "offset": 2295,
        "length": 41,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b906000526020600020906003020160020160089054906101000a900460ff1660ff161415610b0c57",
        "parsedOpcodes": "2295: JUMPDEST\n2296: SWAP1\n2297: PUSH1 0x00\n2299: MSTORE\n2300: PUSH1 0x20\n2302: PUSH1 0x00\n2304: SHA3\n2305: SWAP1\n2306: PUSH1 0x03\n2308: MUL\n2309: ADD\n2310: PUSH1 0x02\n2312: ADD\n2313: PUSH1 0x08\n2315: SWAP1\n2316: SLOAD\n2317: SWAP1\n2318: PUSH2 0x0100\n2321: EXP\n2322: SWAP1\n2323: DIV\n2324: PUSH1 0xff\n2326: AND\n2327: PUSH1 0xff\n2329: AND\n2330: EQ\n2331: ISZERO\n2332: PUSH2 0x0b0c\n2335: JUMPI"
      },
      {
        "offset": 2336,
        "length": 42,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "600191506001600085600019166000191681526020019081526020016000208181548110151561094b57",
        "parsedOpcodes": "2336: PUSH1 0x01\n2338: SWAP2\n2339: POP\n2340: PUSH1 0x01\n2342: PUSH1 0x00\n2344: DUP6\n2345: PUSH1 0x00\n2347: NOT\n2348: AND\n2349: PUSH1 0x00\n2351: NOT\n2352: AND\n2353: DUP2\n2354: MSTORE\n2355: PUSH1 0x20\n2357: ADD\n2358: SWAP1\n2359: DUP2\n2360: MSTORE\n2361: PUSH1 0x20\n2363: ADD\n2364: PUSH1 0x00\n2366: SHA3\n2367: DUP2\n2368: DUP2\n2369: SLOAD\n2370: DUP2\n2371: LT\n2372: ISZERO\n2373: ISZERO\n2374: PUSH2 0x094b\n2377: JUMPI"
      },
      {
        "offset": 2378,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2378: INVALID"
      },
      {
        "offset": 2379,
        "length": 26,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b90600052602060002090600302016001015483111561096957",
        "parsedOpcodes": "2379: JUMPDEST\n2380: SWAP1\n2381: PUSH1 0x00\n2383: MSTORE\n2384: PUSH1 0x20\n2386: PUSH1 0x00\n2388: SHA3\n2389: SWAP1\n2390: PUSH1 0x03\n2392: MUL\n2393: ADD\n2394: PUSH1 0x01\n2396: ADD\n2397: SLOAD\n2398: DUP4\n2399: GT\n2400: ISZERO\n2401: PUSH2 0x0969\n2404: JUMPI"
      },
      {
        "offset": 2405,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60029150",
        "parsedOpcodes": "2405: PUSH1 0x02\n2407: SWAP2\n2408: POP"
      },
      {
        "offset": 2409,
        "length": 40,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b816001600086600019166000191681526020019081526020016000208281548110151561099257",
        "parsedOpcodes": "2409: JUMPDEST\n2410: DUP2\n2411: PUSH1 0x01\n2413: PUSH1 0x00\n2415: DUP7\n2416: PUSH1 0x00\n2418: NOT\n2419: AND\n2420: PUSH1 0x00\n2422: NOT\n2423: AND\n2424: DUP2\n2425: MSTORE\n2426: PUSH1 0x20\n2428: ADD\n2429: SWAP1\n2430: DUP2\n2431: MSTORE\n2432: PUSH1 0x20\n2434: ADD\n2435: PUSH1 0x00\n2437: SHA3\n2438: DUP3\n2439: DUP2\n2440: SLOAD\n2441: DUP2\n2442: LT\n2443: ISZERO\n2444: ISZERO\n2445: PUSH2 0x0992\n2448: JUMPI"
      },
      {
        "offset": 2449,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2449: INVALID"
      },
      {
        "offset": 2450,
        "length": 113,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b906000526020600020906003020160020160086101000a81548160ff021916908360ff1602179055507f1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd60016000866000191660001916815260200190815260200160002082815481101515610a0457",
        "parsedOpcodes": "2450: JUMPDEST\n2451: SWAP1\n2452: PUSH1 0x00\n2454: MSTORE\n2455: PUSH1 0x20\n2457: PUSH1 0x00\n2459: SHA3\n2460: SWAP1\n2461: PUSH1 0x03\n2463: MUL\n2464: ADD\n2465: PUSH1 0x02\n2467: ADD\n2468: PUSH1 0x08\n2470: PUSH2 0x0100\n2473: EXP\n2474: DUP2\n2475: SLOAD\n2476: DUP2\n2477: PUSH1 0xff\n2479: MUL\n2480: NOT\n2481: AND\n2482: SWAP1\n2483: DUP4\n2484: PUSH1 0xff\n2486: AND\n2487: MUL\n2488: OR\n2489: SWAP1\n2490: SSTORE\n2491: POP\n2492: PUSH32 0x1a6e2df3135fe8e5b7327d8181b265f9d5b7c981402cd1b82faf820f0cc054bd\n2525: PUSH1 0x01\n2527: PUSH1 0x00\n2529: DUP7\n2530: PUSH1 0x00\n2532: NOT\n2533: AND\n2534: PUSH1 0x00\n2536: NOT\n2537: AND\n2538: DUP2\n2539: MSTORE\n2540: PUSH1 0x20\n2542: ADD\n2543: SWAP1\n2544: DUP2\n2545: MSTORE\n2546: PUSH1 0x20\n2548: ADD\n2549: PUSH1 0x00\n2551: SHA3\n2552: DUP3\n2553: DUP2\n2554: SLOAD\n2555: DUP2\n2556: LT\n2557: ISZERO\n2558: ISZERO\n2559: PUSH2 0x0a04\n2562: JUMPI"
      },
      {
        "offset": 2563,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2563: INVALID"
      },
      {
        "offset": 2564,
        "length": 58,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b9060005260206000209060030201600001548560016000886000191660001916815260200190815260200160002084815481101515610a3f57",
        "parsedOpcodes": "2564: JUMPDEST\n2565: SWAP1\n2566: PUSH1 0x00\n2568: MSTORE\n2569: PUSH1 0x20\n2571: PUSH1 0x00\n2573: SHA3\n2574: SWAP1\n2575: PUSH1 0x03\n2577: MUL\n2578: ADD\n2579: PUSH1 0x00\n2581: ADD\n2582: SLOAD\n2583: DUP6\n2584: PUSH1 0x01\n2586: PUSH1 0x00\n2588: DUP9\n2589: PUSH1 0x00\n2591: NOT\n2592: AND\n2593: PUSH1 0x00\n2595: NOT\n2596: AND\n2597: DUP2\n2598: MSTORE\n2599: PUSH1 0x20\n2601: ADD\n2602: SWAP1\n2603: DUP2\n2604: MSTORE\n2605: PUSH1 0x20\n2607: ADD\n2608: PUSH1 0x00\n2610: SHA3\n2611: DUP5\n2612: DUP2\n2613: SLOAD\n2614: DUP2\n2615: LT\n2616: ISZERO\n2617: ISZERO\n2618: PUSH2 0x0a3f\n2621: JUMPI"
      },
      {
        "offset": 2622,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2622: INVALID"
      },
      {
        "offset": 2623,
        "length": 73,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b906000526020600020906003020160020160009054906101000a900463ffffffff1660016000896000191660001916815260200190815260200160002085815481101515610a8957",
        "parsedOpcodes": "2623: JUMPDEST\n2624: SWAP1\n2625: PUSH1 0x00\n2627: MSTORE\n2628: PUSH1 0x20\n2630: PUSH1 0x00\n2632: SHA3\n2633: SWAP1\n2634: PUSH1 0x03\n2636: MUL\n2637: ADD\n2638: PUSH1 0x02\n2640: ADD\n2641: PUSH1 0x00\n2643: SWAP1\n2644: SLOAD\n2645: SWAP1\n2646: PUSH2 0x0100\n2649: EXP\n2650: SWAP1\n2651: DIV\n2652: PUSH4 0xffffffff\n2657: AND\n2658: PUSH1 0x01\n2660: PUSH1 0x00\n2662: DUP10\n2663: PUSH1 0x00\n2665: NOT\n2666: AND\n2667: PUSH1 0x00\n2669: NOT\n2670: AND\n2671: DUP2\n2672: MSTORE\n2673: PUSH1 0x20\n2675: ADD\n2676: SWAP1\n2677: DUP2\n2678: MSTORE\n2679: PUSH1 0x20\n2681: ADD\n2682: PUSH1 0x00\n2684: SHA3\n2685: DUP6\n2686: DUP2\n2687: SLOAD\n2688: DUP2\n2689: LT\n2690: ISZERO\n2691: ISZERO\n2692: PUSH2 0x0a89\n2695: JUMPI"
      },
      {
        "offset": 2696,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2696: INVALID"
      },
      {
        "offset": 2697,
        "length": 131,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b906000526020600020906003020160020160049054906101000a900463ffffffff168660405180866000191660001916815260200185600019166000191681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018260ff1660ff1681526020019550505050505060405180910390a1",
        "parsedOpcodes": "2697: JUMPDEST\n2698: SWAP1\n2699: PUSH1 0x00\n2701: MSTORE\n2702: PUSH1 0x20\n2704: PUSH1 0x00\n2706: SHA3\n2707: SWAP1\n2708: PUSH1 0x03\n2710: MUL\n2711: ADD\n2712: PUSH1 0x02\n2714: ADD\n2715: PUSH1 0x04\n2717: SWAP1\n2718: SLOAD\n2719: SWAP1\n2720: PUSH2 0x0100\n2723: EXP\n2724: SWAP1\n2725: DIV\n2726: PUSH4 0xffffffff\n2731: AND\n2732: DUP7\n2733: PUSH1 0x40\n2735: MLOAD\n2736: DUP1\n2737: DUP7\n2738: PUSH1 0x00\n2740: NOT\n2741: AND\n2742: PUSH1 0x00\n2744: NOT\n2745: AND\n2746: DUP2\n2747: MSTORE\n2748: PUSH1 0x20\n2750: ADD\n2751: DUP6\n2752: PUSH1 0x00\n2754: NOT\n2755: AND\n2756: PUSH1 0x00\n2758: NOT\n2759: AND\n2760: DUP2\n2761: MSTORE\n2762: PUSH1 0x20\n2764: ADD\n2765: DUP5\n2766: PUSH4 0xffffffff\n2771: AND\n2772: PUSH4 0xffffffff\n2777: AND\n2778: DUP2\n2779: MSTORE\n2780: PUSH1 0x20\n2782: ADD\n2783: DUP4\n2784: PUSH4 0xffffffff\n2789: AND\n2790: PUSH4 0xffffffff\n2795: AND\n2796: DUP2\n2797: MSTORE\n2798: PUSH1 0x20\n2800: ADD\n2801: DUP3\n2802: PUSH1 0xff\n2804: AND\n2805: PUSH1 0xff\n2807: AND\n2808: DUP2\n2809: MSTORE\n2810: PUSH1 0x20\n2812: ADD\n2813: SWAP6\n2814: POP\n2815: POP\n2816: POP\n2817: POP\n2818: POP\n2819: POP\n2820: PUSH1 0x40\n2822: MLOAD\n2823: DUP1\n2824: SWAP2\n2825: SUB\n2826: SWAP1\n2827: LOG1"
      },
      {
        "offset": 2828,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b80806001019150506108a756",
        "parsedOpcodes": "2828: JUMPDEST\n2829: DUP1\n2830: DUP1\n2831: PUSH1 0x01\n2833: ADD\n2834: SWAP2\n2835: POP\n2836: POP\n2837: PUSH2 0x08a7\n2840: JUMP"
      },
      {
        "offset": 2841,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2841: JUMPDEST"
      },
      {
        "offset": 2842,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "2842: JUMPDEST\n2843: POP\n2844: POP\n2845: POP\n2846: POP\n2847: JUMP"
      },
      {
        "offset": 2848,
        "length": 88,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610b9957",
        "parsedOpcodes": "2848: JUMPDEST\n2849: PUSH1 0x00\n2851: DUP1\n2852: PUSH1 0x00\n2854: SWAP1\n2855: SLOAD\n2856: SWAP1\n2857: PUSH2 0x0100\n2860: EXP\n2861: SWAP1\n2862: DIV\n2863: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2884: AND\n2885: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2906: AND\n2907: CALLER\n2908: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2929: AND\n2930: EQ\n2931: ISZERO\n2932: PUSH2 0x0b99\n2935: JUMPI"
      },
      {
        "offset": 2936,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600160008360001916600019168152602001908152602001600020805490509050",
        "parsedOpcodes": "2936: PUSH1 0x01\n2938: PUSH1 0x00\n2940: DUP4\n2941: PUSH1 0x00\n2943: NOT\n2944: AND\n2945: PUSH1 0x00\n2947: NOT\n2948: AND\n2949: DUP2\n2950: MSTORE\n2951: PUSH1 0x20\n2953: ADD\n2954: SWAP1\n2955: DUP2\n2956: MSTORE\n2957: PUSH1 0x20\n2959: ADD\n2960: PUSH1 0x00\n2962: SHA3\n2963: DUP1\n2964: SLOAD\n2965: SWAP1\n2966: POP\n2967: SWAP1\n2968: POP"
      },
      {
        "offset": 2969,
        "length": 5,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b91905056",
        "parsedOpcodes": "2969: JUMPDEST\n2970: SWAP2\n2971: SWAP1\n2972: POP\n2973: JUMP"
      },
      {
        "offset": 2974,
        "length": 79,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b600081604051808260001916600019168152602001915050604051809103902060001916836040518082600019166000191681526020019150506040518091039020600019161490509291505056",
        "parsedOpcodes": "2974: JUMPDEST\n2975: PUSH1 0x00\n2977: DUP2\n2978: PUSH1 0x40\n2980: MLOAD\n2981: DUP1\n2982: DUP3\n2983: PUSH1 0x00\n2985: NOT\n2986: AND\n2987: PUSH1 0x00\n2989: NOT\n2990: AND\n2991: DUP2\n2992: MSTORE\n2993: PUSH1 0x20\n2995: ADD\n2996: SWAP2\n2997: POP\n2998: POP\n2999: PUSH1 0x40\n3001: MLOAD\n3002: DUP1\n3003: SWAP2\n3004: SUB\n3005: SWAP1\n3006: SHA3\n3007: PUSH1 0x00\n3009: NOT\n3010: AND\n3011: DUP4\n3012: PUSH1 0x40\n3014: MLOAD\n3015: DUP1\n3016: DUP3\n3017: PUSH1 0x00\n3019: NOT\n3020: AND\n3021: PUSH1 0x00\n3023: NOT\n3024: AND\n3025: DUP2\n3026: MSTORE\n3027: PUSH1 0x20\n3029: ADD\n3030: SWAP2\n3031: POP\n3032: POP\n3033: PUSH1 0x40\n3035: MLOAD\n3036: DUP1\n3037: SWAP2\n3038: SUB\n3039: SWAP1\n3040: SHA3\n3041: PUSH1 0x00\n3043: NOT\n3044: AND\n3045: EQ\n3046: SWAP1\n3047: POP\n3048: SWAP3\n3049: SWAP2\n3050: POP\n3051: POP\n3052: JUMP"
      },
      {
        "offset": 3053,
        "length": 66,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60a0604051908101604052806000801916815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600060ff168152509056",
        "parsedOpcodes": "3053: JUMPDEST\n3054: PUSH1 0xa0\n3056: PUSH1 0x40\n3058: MLOAD\n3059: SWAP1\n3060: DUP2\n3061: ADD\n3062: PUSH1 0x40\n3064: MSTORE\n3065: DUP1\n3066: PUSH1 0x00\n3068: DUP1\n3069: NOT\n3070: AND\n3071: DUP2\n3072: MSTORE\n3073: PUSH1 0x20\n3075: ADD\n3076: PUSH1 0x00\n3078: DUP2\n3079: MSTORE\n3080: PUSH1 0x20\n3082: ADD\n3083: PUSH1 0x00\n3085: PUSH4 0xffffffff\n3090: AND\n3091: DUP2\n3092: MSTORE\n3093: PUSH1 0x20\n3095: ADD\n3096: PUSH1 0x00\n3098: PUSH4 0xffffffff\n3103: AND\n3104: DUP2\n3105: MSTORE\n3106: PUSH1 0x20\n3108: ADD\n3109: PUSH1 0x00\n3111: PUSH1 0xff\n3113: AND\n3114: DUP2\n3115: MSTORE\n3116: POP\n3117: SWAP1\n3118: JUMP"
      },
      {
        "offset": 3119,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "3119: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          109
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          114
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          190
        ]
      },
      {
        "from": 76,
        "to": [
          87,
          335
        ]
      },
      {
        "from": 87,
        "to": [
          98,
          440
        ]
      },
      {
        "from": 98,
        "to": [
          109,
          499
        ]
      },
      {
        "from": 109,
        "to": [
          3119
        ]
      },
      {
        "from": 114,
        "to": [
          122,
          126
        ]
      },
      {
        "from": 122,
        "to": [
          3119
        ]
      },
      {
        "from": 126,
        "to": [
          568,
          568
        ]
      },
      {
        "from": 188,
        "to": [
          3119
        ]
      },
      {
        "from": 190,
        "to": [
          198,
          202
        ]
      },
      {
        "from": 198,
        "to": [
          3119
        ]
      },
      {
        "from": 202,
        "to": [
          1240,
          1240
        ]
      },
      {
        "from": 247,
        "to": [
          3119
        ]
      },
      {
        "from": 335,
        "to": [
          343,
          347
        ]
      },
      {
        "from": 343,
        "to": [
          3119
        ]
      },
      {
        "from": 347,
        "to": [
          1589,
          1589
        ]
      },
      {
        "from": 438,
        "to": [
          3119
        ]
      },
      {
        "from": 440,
        "to": [
          448,
          452
        ]
      },
      {
        "from": 448,
        "to": [
          3119
        ]
      },
      {
        "from": 452,
        "to": [
          2118,
          2118
        ]
      },
      {
        "from": 497,
        "to": [
          3119
        ]
      },
      {
        "from": 499,
        "to": [
          507,
          511
        ]
      },
      {
        "from": 507,
        "to": [
          3119
        ]
      },
      {
        "from": 511,
        "to": [
          2848,
          2848
        ]
      },
      {
        "from": 546,
        "to": [
          3119
        ]
      },
      {
        "from": 568,
        "to": [
          656,
          1234
        ]
      },
      {
        "from": 656,
        "to": [
          660
        ]
      },
      {
        "from": 660,
        "to": [
          699,
          1232
        ]
      },
      {
        "from": 699,
        "to": [
          740,
          741
        ]
      },
      {
        "from": 740,
        "to": [
          3119
        ]
      },
      {
        "from": 741,
        "to": [
          2974,
          2974,
          2974
        ]
      },
      {
        "from": 765,
        "to": [
          771,
          1219
        ]
      },
      {
        "from": 771,
        "to": [
          811,
          812
        ]
      },
      {
        "from": 811,
        "to": [
          3119
        ]
      },
      {
        "from": 812,
        "to": [
          853,
          1218
        ]
      },
      {
        "from": 853,
        "to": [
          892,
          893
        ]
      },
      {
        "from": 892,
        "to": [
          3119
        ]
      },
      {
        "from": 893,
        "to": [
          1008,
          1009
        ]
      },
      {
        "from": 1008,
        "to": [
          3119
        ]
      },
      {
        "from": 1009,
        "to": [
          1082,
          1083
        ]
      },
      {
        "from": 1082,
        "to": [
          3119
        ]
      },
      {
        "from": 1083,
        "to": [
          1233,
          1233,
          1233
        ]
      },
      {
        "from": 1218,
        "to": [
          1219
        ]
      },
      {
        "from": 1219,
        "to": [
          660,
          660,
          660,
          660,
          660
        ]
      },
      {
        "from": 1232,
        "to": [
          1233
        ]
      },
      {
        "from": 1233,
        "to": [
          1234
        ]
      },
      {
        "from": 1234,
        "to": [
          188,
          188,
          188
        ]
      },
      {
        "from": 1240,
        "to": [
          3053,
          3053
        ]
      },
      {
        "from": 1256,
        "to": [
          1342,
          1578
        ]
      },
      {
        "from": 1342,
        "to": [
          1380,
          1381
        ]
      },
      {
        "from": 1380,
        "to": [
          3119
        ]
      },
      {
        "from": 1381,
        "to": [
          1578
        ]
      },
      {
        "from": 1578,
        "to": [
          247,
          247
        ]
      },
      {
        "from": 1589,
        "to": [
          3053,
          3053
        ]
      },
      {
        "from": 1597,
        "to": [
          1683,
          2110
        ]
      },
      {
        "from": 1683,
        "to": [
          2110
        ]
      },
      {
        "from": 2110,
        "to": [
          438,
          438
        ]
      },
      {
        "from": 2118,
        "to": [
          2207,
          2842
        ]
      },
      {
        "from": 2207,
        "to": [
          2215
        ]
      },
      {
        "from": 2215,
        "to": [
          2254,
          2841
        ]
      },
      {
        "from": 2254,
        "to": [
          2294,
          2295
        ]
      },
      {
        "from": 2294,
        "to": [
          3119
        ]
      },
      {
        "from": 2295,
        "to": [
          2336,
          2828
        ]
      },
      {
        "from": 2336,
        "to": [
          2378,
          2379
        ]
      },
      {
        "from": 2378,
        "to": [
          3119
        ]
      },
      {
        "from": 2379,
        "to": [
          2405,
          2409
        ]
      },
      {
        "from": 2405,
        "to": [
          2409
        ]
      },
      {
        "from": 2409,
        "to": [
          2449,
          2450
        ]
      },
      {
        "from": 2449,
        "to": [
          3119
        ]
      },
      {
        "from": 2450,
        "to": [
          2563,
          2564
        ]
      },
      {
        "from": 2563,
        "to": [
          3119
        ]
      },
      {
        "from": 2564,
        "to": [
          2622,
          2623
        ]
      },
      {
        "from": 2622,
        "to": [
          3119
        ]
      },
      {
        "from": 2623,
        "to": [
          2696,
          2697
        ]
      },
      {
        "from": 2696,
        "to": [
          3119
        ]
      },
      {
        "from": 2697,
        "to": [
          2828
        ]
      },
      {
        "from": 2828,
        "to": [
          2215,
          2215,
          2215,
          2215,
          2215,
          2215,
          2215,
          2215
        ]
      },
      {
        "from": 2841,
        "to": [
          2842
        ]
      },
      {
        "from": 2842,
        "to": [
          497,
          497,
          497,
          497
        ]
      },
      {
        "from": 2848,
        "to": [
          2936,
          2969
        ]
      },
      {
        "from": 2936,
        "to": [
          2969
        ]
      },
      {
        "from": 2969,
        "to": [
          546,
          546
        ]
      },
      {
        "from": 2974,
        "to": [
          765,
          765
        ]
      },
      {
        "from": 3053,
        "to": [
          1256,
          1597
        ]
      },
      {
        "from": 3119,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 89
    }
  }
}