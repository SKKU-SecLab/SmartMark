{
  "name": "Analysis_2022-04-05_02-18-46",
  "address": "",
  "binarySource": "6060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806329a870231461008e578063392efb52146100d857806356d399e8146101145780638328b6101461013a5780638459254e1461015a5780638cdff1d4146101a8578063abd7bd4d146101d5578063ca074a4014610230575bfe5b341561009657fe5b6100c2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610268565b6040518082815260200191505060405180910390f35b34156100e057fe5b6100fa60048080356000191690602001909190505061034c565b604051808215151515815260200191505060405180910390f35b341561011c57fe5b61012461036c565b6040518082815260200191505060405180910390f35b341561014257fe5b6101586004808035906020019091905050610372565b005b341561016257fe5b61018e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610409565b604051808215151515815260200191505060405180910390f35b34156101b057fe5b6101d3600480803560001916906020019091908035906020019091905050610436565b005b34156101dd57fe5b610216600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919050506104e7565b604051808215151515815260200191505060405180910390f35b341561023857fe5b610252600480803560001916906020019091905050610549565b6040518082815260200191505060405180910390f35b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561032c57fe5b6102c65a03f1151561033a57fe5b5050506040518051905090505b919050565b60016020528060005260406000206000915054906101000a900460ff1681565b60025481565b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156103fc5760006000fd5b816002819055505b5b5050565b600060025461041783610268565b1015156104275760019050610431565b60009050610431565b5b919050565b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156104c05760006000fd5b81600360008560001916600019168152602001908152602001600020819055505b5b505050565b60008260006104f582610268565b1115156105025760006000fd5b6003600084600019166000191681526020019081526020016000205461052785610268565b1015156105375760019150610541565b60009150610541565b5b5b5092915050565b600360205280600052604060002060009150905054815600a165627a7a72305820ef390da4faef1d625870376a929c2d5868852aa5b5589648b849b7be3edbdb630029",
  "binaryHash": "7f1d4023",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820ef390da4faef1d625870376a929c2d5868852aa5b5589648b849b7be3edbdb630029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649092726145
    }
  },
  "runtimeCfg": {
    "bytecode": "6060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806329a870231461008e578063392efb52146100d857806356d399e8146101145780638328b6101461013a5780638459254e1461015a5780638cdff1d4146101a8578063abd7bd4d146101d5578063ca074a4014610230575bfe5b341561009657fe5b6100c2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610268565b6040518082815260200191505060405180910390f35b34156100e057fe5b6100fa60048080356000191690602001909190505061034c565b604051808215151515815260200191505060405180910390f35b341561011c57fe5b61012461036c565b6040518082815260200191505060405180910390f35b341561014257fe5b6101586004808035906020019091905050610372565b005b341561016257fe5b61018e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610409565b604051808215151515815260200191505060405180910390f35b34156101b057fe5b6101d3600480803560001916906020019091908035906020019091905050610436565b005b34156101dd57fe5b610216600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919050506104e7565b604051808215151515815260200191505060405180910390f35b341561023857fe5b610252600480803560001916906020019091905050610549565b6040518082815260200191505060405180910390f35b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561032c57fe5b6102c65a03f1151561033a57fe5b5050506040518051905090505b919050565b60016020528060005260406000206000915054906101000a900460ff1681565b60025481565b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156103fc5760006000fd5b816002819055505b5b5050565b600060025461041783610268565b1015156104275760019050610431565b60009050610431565b5b919050565b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156104c05760006000fd5b81600360008560001916600019168152602001908152602001600020819055505b5b505050565b60008260006104f582610268565b1115156105025760006000fd5b6003600084600019166000191681526020019081526020016000205461052785610268565b1015156105375760019150610541565b60009150610541565b5b5b5092915050565b600360205280600052604060002060009150905054815600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052361561008c57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x008c\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806329a870231461008e57",
        "parsedOpcodes": "11: PUSH1 0x00\n13: CALLDATALOAD\n14: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n44: SWAP1\n45: DIV\n46: PUSH4 0xffffffff\n51: AND\n52: DUP1\n53: PUSH4 0x29a87023\n58: EQ\n59: PUSH2 0x008e\n62: JUMPI"
      },
      {
        "offset": 63,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063392efb52146100d857",
        "parsedOpcodes": "63: DUP1\n64: PUSH4 0x392efb52\n69: EQ\n70: PUSH2 0x00d8\n73: JUMPI"
      },
      {
        "offset": 74,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806356d399e81461011457",
        "parsedOpcodes": "74: DUP1\n75: PUSH4 0x56d399e8\n80: EQ\n81: PUSH2 0x0114\n84: JUMPI"
      },
      {
        "offset": 85,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638328b6101461013a57",
        "parsedOpcodes": "85: DUP1\n86: PUSH4 0x8328b610\n91: EQ\n92: PUSH2 0x013a\n95: JUMPI"
      },
      {
        "offset": 96,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638459254e1461015a57",
        "parsedOpcodes": "96: DUP1\n97: PUSH4 0x8459254e\n102: EQ\n103: PUSH2 0x015a\n106: JUMPI"
      },
      {
        "offset": 107,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638cdff1d4146101a857",
        "parsedOpcodes": "107: DUP1\n108: PUSH4 0x8cdff1d4\n113: EQ\n114: PUSH2 0x01a8\n117: JUMPI"
      },
      {
        "offset": 118,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063abd7bd4d146101d557",
        "parsedOpcodes": "118: DUP1\n119: PUSH4 0xabd7bd4d\n124: EQ\n125: PUSH2 0x01d5\n128: JUMPI"
      },
      {
        "offset": 129,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ca074a401461023057",
        "parsedOpcodes": "129: DUP1\n130: PUSH4 0xca074a40\n135: EQ\n136: PUSH2 0x0230\n139: JUMPI"
      },
      {
        "offset": 140,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5bfe",
        "parsedOpcodes": "140: JUMPDEST\n141: INVALID"
      },
      {
        "offset": 142,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561009657",
        "parsedOpcodes": "142: JUMPDEST\n143: CALLVALUE\n144: ISZERO\n145: PUSH2 0x0096\n148: JUMPI"
      },
      {
        "offset": 149,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "149: INVALID"
      },
      {
        "offset": 150,
        "length": 44,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100c2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061026856",
        "parsedOpcodes": "150: JUMPDEST\n151: PUSH2 0x00c2\n154: PUSH1 0x04\n156: DUP1\n157: DUP1\n158: CALLDATALOAD\n159: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n180: AND\n181: SWAP1\n182: PUSH1 0x20\n184: ADD\n185: SWAP1\n186: SWAP2\n187: SWAP1\n188: POP\n189: POP\n190: PUSH2 0x0268\n193: JUMP"
      },
      {
        "offset": 194,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "194: JUMPDEST\n195: PUSH1 0x40\n197: MLOAD\n198: DUP1\n199: DUP3\n200: DUP2\n201: MSTORE\n202: PUSH1 0x20\n204: ADD\n205: SWAP2\n206: POP\n207: POP\n208: PUSH1 0x40\n210: MLOAD\n211: DUP1\n212: SWAP2\n213: SUB\n214: SWAP1\n215: RETURN"
      },
      {
        "offset": 216,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100e057",
        "parsedOpcodes": "216: JUMPDEST\n217: CALLVALUE\n218: ISZERO\n219: PUSH2 0x00e0\n222: JUMPI"
      },
      {
        "offset": 223,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "223: INVALID"
      },
      {
        "offset": 224,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100fa60048080356000191690602001909190505061034c56",
        "parsedOpcodes": "224: JUMPDEST\n225: PUSH2 0x00fa\n228: PUSH1 0x04\n230: DUP1\n231: DUP1\n232: CALLDATALOAD\n233: PUSH1 0x00\n235: NOT\n236: AND\n237: SWAP1\n238: PUSH1 0x20\n240: ADD\n241: SWAP1\n242: SWAP2\n243: SWAP1\n244: POP\n245: POP\n246: PUSH2 0x034c\n249: JUMP"
      },
      {
        "offset": 250,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808215151515815260200191505060405180910390f3",
        "parsedOpcodes": "250: JUMPDEST\n251: PUSH1 0x40\n253: MLOAD\n254: DUP1\n255: DUP3\n256: ISZERO\n257: ISZERO\n258: ISZERO\n259: ISZERO\n260: DUP2\n261: MSTORE\n262: PUSH1 0x20\n264: ADD\n265: SWAP2\n266: POP\n267: POP\n268: PUSH1 0x40\n270: MLOAD\n271: DUP1\n272: SWAP2\n273: SUB\n274: SWAP1\n275: RETURN"
      },
      {
        "offset": 276,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561011c57",
        "parsedOpcodes": "276: JUMPDEST\n277: CALLVALUE\n278: ISZERO\n279: PUSH2 0x011c\n282: JUMPI"
      },
      {
        "offset": 283,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "283: INVALID"
      },
      {
        "offset": 284,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61012461036c56",
        "parsedOpcodes": "284: JUMPDEST\n285: PUSH2 0x0124\n288: PUSH2 0x036c\n291: JUMP"
      },
      {
        "offset": 292,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "292: JUMPDEST\n293: PUSH1 0x40\n295: MLOAD\n296: DUP1\n297: DUP3\n298: DUP2\n299: MSTORE\n300: PUSH1 0x20\n302: ADD\n303: SWAP2\n304: POP\n305: POP\n306: PUSH1 0x40\n308: MLOAD\n309: DUP1\n310: SWAP2\n311: SUB\n312: SWAP1\n313: RETURN"
      },
      {
        "offset": 314,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561014257",
        "parsedOpcodes": "314: JUMPDEST\n315: CALLVALUE\n316: ISZERO\n317: PUSH2 0x0142\n320: JUMPI"
      },
      {
        "offset": 321,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "321: INVALID"
      },
      {
        "offset": 322,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b610158600480803590602001909190505061037256",
        "parsedOpcodes": "322: JUMPDEST\n323: PUSH2 0x0158\n326: PUSH1 0x04\n328: DUP1\n329: DUP1\n330: CALLDATALOAD\n331: SWAP1\n332: PUSH1 0x20\n334: ADD\n335: SWAP1\n336: SWAP2\n337: SWAP1\n338: POP\n339: POP\n340: PUSH2 0x0372\n343: JUMP"
      },
      {
        "offset": 344,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "344: JUMPDEST\n345: STOP"
      },
      {
        "offset": 346,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561016257",
        "parsedOpcodes": "346: JUMPDEST\n347: CALLVALUE\n348: ISZERO\n349: PUSH2 0x0162\n352: JUMPI"
      },
      {
        "offset": 353,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "353: INVALID"
      },
      {
        "offset": 354,
        "length": 44,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61018e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061040956",
        "parsedOpcodes": "354: JUMPDEST\n355: PUSH2 0x018e\n358: PUSH1 0x04\n360: DUP1\n361: DUP1\n362: CALLDATALOAD\n363: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n384: AND\n385: SWAP1\n386: PUSH1 0x20\n388: ADD\n389: SWAP1\n390: SWAP2\n391: SWAP1\n392: POP\n393: POP\n394: PUSH2 0x0409\n397: JUMP"
      },
      {
        "offset": 398,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808215151515815260200191505060405180910390f3",
        "parsedOpcodes": "398: JUMPDEST\n399: PUSH1 0x40\n401: MLOAD\n402: DUP1\n403: DUP3\n404: ISZERO\n405: ISZERO\n406: ISZERO\n407: ISZERO\n408: DUP2\n409: MSTORE\n410: PUSH1 0x20\n412: ADD\n413: SWAP2\n414: POP\n415: POP\n416: PUSH1 0x40\n418: MLOAD\n419: DUP1\n420: SWAP2\n421: SUB\n422: SWAP1\n423: RETURN"
      },
      {
        "offset": 424,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101b057",
        "parsedOpcodes": "424: JUMPDEST\n425: CALLVALUE\n426: ISZERO\n427: PUSH2 0x01b0\n430: JUMPI"
      },
      {
        "offset": 431,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "431: INVALID"
      },
      {
        "offset": 432,
        "length": 35,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6101d360048080356000191690602001909190803590602001909190505061043656",
        "parsedOpcodes": "432: JUMPDEST\n433: PUSH2 0x01d3\n436: PUSH1 0x04\n438: DUP1\n439: DUP1\n440: CALLDATALOAD\n441: PUSH1 0x00\n443: NOT\n444: AND\n445: SWAP1\n446: PUSH1 0x20\n448: ADD\n449: SWAP1\n450: SWAP2\n451: SWAP1\n452: DUP1\n453: CALLDATALOAD\n454: SWAP1\n455: PUSH1 0x20\n457: ADD\n458: SWAP1\n459: SWAP2\n460: SWAP1\n461: POP\n462: POP\n463: PUSH2 0x0436\n466: JUMP"
      },
      {
        "offset": 467,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "467: JUMPDEST\n468: STOP"
      },
      {
        "offset": 469,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101dd57",
        "parsedOpcodes": "469: JUMPDEST\n470: CALLVALUE\n471: ISZERO\n472: PUSH2 0x01dd\n475: JUMPI"
      },
      {
        "offset": 476,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "476: INVALID"
      },
      {
        "offset": 477,
        "length": 57,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b610216600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919050506104e756",
        "parsedOpcodes": "477: JUMPDEST\n478: PUSH2 0x0216\n481: PUSH1 0x04\n483: DUP1\n484: DUP1\n485: CALLDATALOAD\n486: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n507: AND\n508: SWAP1\n509: PUSH1 0x20\n511: ADD\n512: SWAP1\n513: SWAP2\n514: SWAP1\n515: DUP1\n516: CALLDATALOAD\n517: PUSH1 0x00\n519: NOT\n520: AND\n521: SWAP1\n522: PUSH1 0x20\n524: ADD\n525: SWAP1\n526: SWAP2\n527: SWAP1\n528: POP\n529: POP\n530: PUSH2 0x04e7\n533: JUMP"
      },
      {
        "offset": 534,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808215151515815260200191505060405180910390f3",
        "parsedOpcodes": "534: JUMPDEST\n535: PUSH1 0x40\n537: MLOAD\n538: DUP1\n539: DUP3\n540: ISZERO\n541: ISZERO\n542: ISZERO\n543: ISZERO\n544: DUP2\n545: MSTORE\n546: PUSH1 0x20\n548: ADD\n549: SWAP2\n550: POP\n551: POP\n552: PUSH1 0x40\n554: MLOAD\n555: DUP1\n556: SWAP2\n557: SUB\n558: SWAP1\n559: RETURN"
      },
      {
        "offset": 560,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561023857",
        "parsedOpcodes": "560: JUMPDEST\n561: CALLVALUE\n562: ISZERO\n563: PUSH2 0x0238\n566: JUMPI"
      },
      {
        "offset": 567,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "567: INVALID"
      },
      {
        "offset": 568,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61025260048080356000191690602001909190505061054956",
        "parsedOpcodes": "568: JUMPDEST\n569: PUSH2 0x0252\n572: PUSH1 0x04\n574: DUP1\n575: DUP1\n576: CALLDATALOAD\n577: PUSH1 0x00\n579: NOT\n580: AND\n581: SWAP1\n582: PUSH1 0x20\n584: ADD\n585: SWAP1\n586: SWAP2\n587: SWAP1\n588: POP\n589: POP\n590: PUSH2 0x0549\n593: JUMP"
      },
      {
        "offset": 594,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "594: JUMPDEST\n595: PUSH1 0x40\n597: MLOAD\n598: DUP1\n599: DUP3\n600: DUP2\n601: MSTORE\n602: PUSH1 0x20\n604: ADD\n605: SWAP2\n606: POP\n607: POP\n608: PUSH1 0x40\n610: MLOAD\n611: DUP1\n612: SWAP2\n613: SUB\n614: SWAP1\n615: RETURN"
      },
      {
        "offset": 616,
        "length": 195,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561032c57",
        "parsedOpcodes": "616: JUMPDEST\n617: PUSH1 0x00\n619: PUSH1 0x00\n621: PUSH1 0x00\n623: SWAP1\n624: SLOAD\n625: SWAP1\n626: PUSH2 0x0100\n629: EXP\n630: SWAP1\n631: DIV\n632: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n653: AND\n654: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n675: AND\n676: PUSH4 0x70a08231\n681: DUP4\n682: PUSH1 0x00\n684: PUSH1 0x40\n686: MLOAD\n687: PUSH1 0x20\n689: ADD\n690: MSTORE\n691: PUSH1 0x40\n693: MLOAD\n694: DUP3\n695: PUSH4 0xffffffff\n700: AND\n701: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n731: MUL\n732: DUP2\n733: MSTORE\n734: PUSH1 0x04\n736: ADD\n737: DUP1\n738: DUP3\n739: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n760: AND\n761: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n782: AND\n783: DUP2\n784: MSTORE\n785: PUSH1 0x20\n787: ADD\n788: SWAP2\n789: POP\n790: POP\n791: PUSH1 0x20\n793: PUSH1 0x40\n795: MLOAD\n796: DUP1\n797: DUP4\n798: SUB\n799: DUP2\n800: PUSH1 0x00\n802: DUP8\n803: DUP1\n804: EXTCODESIZE\n805: ISZERO\n806: ISZERO\n807: PUSH2 0x032c\n810: JUMPI"
      },
      {
        "offset": 811,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "811: INVALID"
      },
      {
        "offset": 812,
        "length": 13,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b6102c65a03f1151561033a57",
        "parsedOpcodes": "812: JUMPDEST\n813: PUSH2 0x02c6\n816: GAS\n817: SUB\n818: CALL\n819: ISZERO\n820: ISZERO\n821: PUSH2 0x033a\n824: JUMPI"
      },
      {
        "offset": 825,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "825: INVALID"
      },
      {
        "offset": 826,
        "length": 13,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505050604051805190509050",
        "parsedOpcodes": "826: JUMPDEST\n827: POP\n828: POP\n829: POP\n830: PUSH1 0x40\n832: MLOAD\n833: DUP1\n834: MLOAD\n835: SWAP1\n836: POP\n837: SWAP1\n838: POP"
      },
      {
        "offset": 839,
        "length": 5,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b91905056",
        "parsedOpcodes": "839: JUMPDEST\n840: SWAP2\n841: SWAP1\n842: POP\n843: JUMP"
      },
      {
        "offset": 844,
        "length": 32,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60016020528060005260406000206000915054906101000a900460ff168156",
        "parsedOpcodes": "844: JUMPDEST\n845: PUSH1 0x01\n847: PUSH1 0x20\n849: MSTORE\n850: DUP1\n851: PUSH1 0x00\n853: MSTORE\n854: PUSH1 0x40\n856: PUSH1 0x00\n858: SHA3\n859: PUSH1 0x00\n861: SWAP2\n862: POP\n863: SLOAD\n864: SWAP1\n865: PUSH2 0x0100\n868: EXP\n869: SWAP1\n870: DIV\n871: PUSH1 0xff\n873: AND\n874: DUP2\n875: JUMP"
      },
      {
        "offset": 876,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6002548156",
        "parsedOpcodes": "876: JUMPDEST\n877: PUSH1 0x02\n879: SLOAD\n880: DUP2\n881: JUMP"
      },
      {
        "offset": 882,
        "length": 133,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156103fc57",
        "parsedOpcodes": "882: JUMPDEST\n883: PUSH1 0x00\n885: CALLER\n886: SWAP1\n887: POP\n888: PUSH1 0x01\n890: PUSH1 0x00\n892: DUP3\n893: PUSH1 0x40\n895: MLOAD\n896: DUP1\n897: DUP3\n898: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n919: AND\n920: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n941: AND\n942: PUSH13 0x01000000000000000000000000\n956: MUL\n957: DUP2\n958: MSTORE\n959: PUSH1 0x14\n961: ADD\n962: SWAP2\n963: POP\n964: POP\n965: PUSH1 0x40\n967: MLOAD\n968: DUP1\n969: SWAP2\n970: SUB\n971: SWAP1\n972: SHA3\n973: PUSH1 0x00\n975: NOT\n976: AND\n977: PUSH1 0x00\n979: NOT\n980: AND\n981: DUP2\n982: MSTORE\n983: PUSH1 0x20\n985: ADD\n986: SWAP1\n987: DUP2\n988: MSTORE\n989: PUSH1 0x20\n991: ADD\n992: PUSH1 0x00\n994: SHA3\n995: PUSH1 0x00\n997: SWAP1\n998: SLOAD\n999: SWAP1\n1000: PUSH2 0x0100\n1003: EXP\n1004: SWAP1\n1005: DIV\n1006: PUSH1 0xff\n1008: AND\n1009: ISZERO\n1010: ISZERO\n1011: PUSH2 0x03fc\n1014: JUMPI"
      },
      {
        "offset": 1015,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1015: PUSH1 0x00\n1017: PUSH1 0x00\n1019: REVERT"
      },
      {
        "offset": 1020,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b81600281905550",
        "parsedOpcodes": "1020: JUMPDEST\n1021: DUP2\n1022: PUSH1 0x02\n1024: DUP2\n1025: SWAP1\n1026: SSTORE\n1027: POP"
      },
      {
        "offset": 1028,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1028: JUMPDEST"
      },
      {
        "offset": 1029,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1029: JUMPDEST\n1030: POP\n1031: POP\n1032: JUMP"
      },
      {
        "offset": 1033,
        "length": 14,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b60006002546104178361026856",
        "parsedOpcodes": "1033: JUMPDEST\n1034: PUSH1 0x00\n1036: PUSH1 0x02\n1038: SLOAD\n1039: PUSH2 0x0417\n1042: DUP4\n1043: PUSH2 0x0268\n1046: JUMP"
      },
      {
        "offset": 1047,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b10151561042757",
        "parsedOpcodes": "1047: JUMPDEST\n1048: LT\n1049: ISZERO\n1050: ISZERO\n1051: PUSH2 0x0427\n1054: JUMPI"
      },
      {
        "offset": 1055,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6001905061043156",
        "parsedOpcodes": "1055: PUSH1 0x01\n1057: SWAP1\n1058: POP\n1059: PUSH2 0x0431\n1062: JUMP"
      },
      {
        "offset": 1063,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000905061043156",
        "parsedOpcodes": "1063: JUMPDEST\n1064: PUSH1 0x00\n1066: SWAP1\n1067: POP\n1068: PUSH2 0x0431\n1071: JUMP"
      },
      {
        "offset": 1072,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1072: JUMPDEST"
      },
      {
        "offset": 1073,
        "length": 5,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b91905056",
        "parsedOpcodes": "1073: JUMPDEST\n1074: SWAP2\n1075: SWAP1\n1076: POP\n1077: JUMP"
      },
      {
        "offset": 1078,
        "length": 133,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60003390506001600082604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140191505060405180910390206000191660001916815260200190815260200160002060009054906101000a900460ff1615156104c057",
        "parsedOpcodes": "1078: JUMPDEST\n1079: PUSH1 0x00\n1081: CALLER\n1082: SWAP1\n1083: POP\n1084: PUSH1 0x01\n1086: PUSH1 0x00\n1088: DUP3\n1089: PUSH1 0x40\n1091: MLOAD\n1092: DUP1\n1093: DUP3\n1094: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1115: AND\n1116: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1137: AND\n1138: PUSH13 0x01000000000000000000000000\n1152: MUL\n1153: DUP2\n1154: MSTORE\n1155: PUSH1 0x14\n1157: ADD\n1158: SWAP2\n1159: POP\n1160: POP\n1161: PUSH1 0x40\n1163: MLOAD\n1164: DUP1\n1165: SWAP2\n1166: SUB\n1167: SWAP1\n1168: SHA3\n1169: PUSH1 0x00\n1171: NOT\n1172: AND\n1173: PUSH1 0x00\n1175: NOT\n1176: AND\n1177: DUP2\n1178: MSTORE\n1179: PUSH1 0x20\n1181: ADD\n1182: SWAP1\n1183: DUP2\n1184: MSTORE\n1185: PUSH1 0x20\n1187: ADD\n1188: PUSH1 0x00\n1190: SHA3\n1191: PUSH1 0x00\n1193: SWAP1\n1194: SLOAD\n1195: SWAP1\n1196: PUSH2 0x0100\n1199: EXP\n1200: SWAP1\n1201: DIV\n1202: PUSH1 0xff\n1204: AND\n1205: ISZERO\n1206: ISZERO\n1207: PUSH2 0x04c0\n1210: JUMPI"
      },
      {
        "offset": 1211,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1211: PUSH1 0x00\n1213: PUSH1 0x00\n1215: REVERT"
      },
      {
        "offset": 1216,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8160036000856000191660001916815260200190815260200160002081905550",
        "parsedOpcodes": "1216: JUMPDEST\n1217: DUP2\n1218: PUSH1 0x03\n1220: PUSH1 0x00\n1222: DUP6\n1223: PUSH1 0x00\n1225: NOT\n1226: AND\n1227: PUSH1 0x00\n1229: NOT\n1230: AND\n1231: DUP2\n1232: MSTORE\n1233: PUSH1 0x20\n1235: ADD\n1236: SWAP1\n1237: DUP2\n1238: MSTORE\n1239: PUSH1 0x20\n1241: ADD\n1242: PUSH1 0x00\n1244: SHA3\n1245: DUP2\n1246: SWAP1\n1247: SSTORE\n1248: POP"
      },
      {
        "offset": 1249,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1249: JUMPDEST"
      },
      {
        "offset": 1250,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "1250: JUMPDEST\n1251: POP\n1252: POP\n1253: POP\n1254: JUMP"
      },
      {
        "offset": 1255,
        "length": 14,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b60008260006104f58261026856",
        "parsedOpcodes": "1255: JUMPDEST\n1256: PUSH1 0x00\n1258: DUP3\n1259: PUSH1 0x00\n1261: PUSH2 0x04f5\n1264: DUP3\n1265: PUSH2 0x0268\n1268: JUMP"
      },
      {
        "offset": 1269,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b11151561050257",
        "parsedOpcodes": "1269: JUMPDEST\n1270: GT\n1271: ISZERO\n1272: ISZERO\n1273: PUSH2 0x0502\n1276: JUMPI"
      },
      {
        "offset": 1277,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1277: PUSH1 0x00\n1279: PUSH1 0x00\n1281: REVERT"
      },
      {
        "offset": 1282,
        "length": 37,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600360008460001916600019168152602001908152602001600020546105278561026856",
        "parsedOpcodes": "1282: JUMPDEST\n1283: PUSH1 0x03\n1285: PUSH1 0x00\n1287: DUP5\n1288: PUSH1 0x00\n1290: NOT\n1291: AND\n1292: PUSH1 0x00\n1294: NOT\n1295: AND\n1296: DUP2\n1297: MSTORE\n1298: PUSH1 0x20\n1300: ADD\n1301: SWAP1\n1302: DUP2\n1303: MSTORE\n1304: PUSH1 0x20\n1306: ADD\n1307: PUSH1 0x00\n1309: SHA3\n1310: SLOAD\n1311: PUSH2 0x0527\n1314: DUP6\n1315: PUSH2 0x0268\n1318: JUMP"
      },
      {
        "offset": 1319,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b10151561053757",
        "parsedOpcodes": "1319: JUMPDEST\n1320: LT\n1321: ISZERO\n1322: ISZERO\n1323: PUSH2 0x0537\n1326: JUMPI"
      },
      {
        "offset": 1327,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6001915061054156",
        "parsedOpcodes": "1327: PUSH1 0x01\n1329: SWAP2\n1330: POP\n1331: PUSH2 0x0541\n1334: JUMP"
      },
      {
        "offset": 1335,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000915061054156",
        "parsedOpcodes": "1335: JUMPDEST\n1336: PUSH1 0x00\n1338: SWAP2\n1339: POP\n1340: PUSH2 0x0541\n1343: JUMP"
      },
      {
        "offset": 1344,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1344: JUMPDEST"
      },
      {
        "offset": 1345,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1345: JUMPDEST"
      },
      {
        "offset": 1346,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b509291505056",
        "parsedOpcodes": "1346: JUMPDEST\n1347: POP\n1348: SWAP3\n1349: SWAP2\n1350: POP\n1351: POP\n1352: JUMP"
      },
      {
        "offset": 1353,
        "length": 24,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6003602052806000526040600020600091509050548156",
        "parsedOpcodes": "1353: JUMPDEST\n1354: PUSH1 0x03\n1356: PUSH1 0x20\n1358: MSTORE\n1359: DUP1\n1360: PUSH1 0x00\n1362: MSTORE\n1363: PUSH1 0x40\n1365: PUSH1 0x00\n1367: SHA3\n1368: PUSH1 0x00\n1370: SWAP2\n1371: POP\n1372: SWAP1\n1373: POP\n1374: SLOAD\n1375: DUP2\n1376: JUMP"
      },
      {
        "offset": 1377,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1377: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          140
        ]
      },
      {
        "from": 11,
        "to": [
          63,
          142
        ]
      },
      {
        "from": 63,
        "to": [
          74,
          216
        ]
      },
      {
        "from": 74,
        "to": [
          85,
          276
        ]
      },
      {
        "from": 85,
        "to": [
          96,
          314
        ]
      },
      {
        "from": 96,
        "to": [
          107,
          346
        ]
      },
      {
        "from": 107,
        "to": [
          118,
          424
        ]
      },
      {
        "from": 118,
        "to": [
          129,
          469
        ]
      },
      {
        "from": 129,
        "to": [
          140,
          560
        ]
      },
      {
        "from": 140,
        "to": [
          1377
        ]
      },
      {
        "from": 142,
        "to": [
          149,
          150
        ]
      },
      {
        "from": 149,
        "to": [
          1377
        ]
      },
      {
        "from": 150,
        "to": [
          616,
          616
        ]
      },
      {
        "from": 194,
        "to": [
          1377
        ]
      },
      {
        "from": 216,
        "to": [
          223,
          224
        ]
      },
      {
        "from": 223,
        "to": [
          1377
        ]
      },
      {
        "from": 224,
        "to": [
          844,
          844
        ]
      },
      {
        "from": 250,
        "to": [
          1377
        ]
      },
      {
        "from": 276,
        "to": [
          283,
          284
        ]
      },
      {
        "from": 283,
        "to": [
          1377
        ]
      },
      {
        "from": 284,
        "to": [
          876,
          876
        ]
      },
      {
        "from": 292,
        "to": [
          1377
        ]
      },
      {
        "from": 314,
        "to": [
          321,
          322
        ]
      },
      {
        "from": 321,
        "to": [
          1377
        ]
      },
      {
        "from": 322,
        "to": [
          882,
          882
        ]
      },
      {
        "from": 344,
        "to": [
          1377
        ]
      },
      {
        "from": 346,
        "to": [
          353,
          354
        ]
      },
      {
        "from": 353,
        "to": [
          1377
        ]
      },
      {
        "from": 354,
        "to": [
          1033,
          1033
        ]
      },
      {
        "from": 398,
        "to": [
          1377
        ]
      },
      {
        "from": 424,
        "to": [
          431,
          432
        ]
      },
      {
        "from": 431,
        "to": [
          1377
        ]
      },
      {
        "from": 432,
        "to": [
          1078,
          1078
        ]
      },
      {
        "from": 467,
        "to": [
          1377
        ]
      },
      {
        "from": 469,
        "to": [
          476,
          477
        ]
      },
      {
        "from": 476,
        "to": [
          1377
        ]
      },
      {
        "from": 477,
        "to": [
          1255,
          1255
        ]
      },
      {
        "from": 534,
        "to": [
          1377
        ]
      },
      {
        "from": 560,
        "to": [
          567,
          568
        ]
      },
      {
        "from": 567,
        "to": [
          1377
        ]
      },
      {
        "from": 568,
        "to": [
          1353,
          1353
        ]
      },
      {
        "from": 594,
        "to": [
          1377
        ]
      },
      {
        "from": 616,
        "to": [
          811,
          812
        ]
      },
      {
        "from": 811,
        "to": [
          1377
        ]
      },
      {
        "from": 812,
        "to": [
          825,
          826
        ]
      },
      {
        "from": 825,
        "to": [
          1377
        ]
      },
      {
        "from": 826,
        "to": [
          839
        ]
      },
      {
        "from": 839,
        "to": [
          194,
          1047,
          1269,
          1319
        ]
      },
      {
        "from": 844,
        "to": [
          250
        ]
      },
      {
        "from": 876,
        "to": [
          292
        ]
      },
      {
        "from": 882,
        "to": [
          1015,
          1020
        ]
      },
      {
        "from": 1015,
        "to": [
          1377
        ]
      },
      {
        "from": 1020,
        "to": [
          1028
        ]
      },
      {
        "from": 1028,
        "to": [
          1029
        ]
      },
      {
        "from": 1029,
        "to": [
          344
        ]
      },
      {
        "from": 1033,
        "to": [
          616,
          616
        ]
      },
      {
        "from": 1047,
        "to": [
          1055,
          1063
        ]
      },
      {
        "from": 1055,
        "to": [
          1073,
          1073
        ]
      },
      {
        "from": 1063,
        "to": [
          1073,
          1073
        ]
      },
      {
        "from": 1072,
        "to": [
          1073
        ]
      },
      {
        "from": 1073,
        "to": [
          398,
          398
        ]
      },
      {
        "from": 1078,
        "to": [
          1211,
          1216
        ]
      },
      {
        "from": 1211,
        "to": [
          1377
        ]
      },
      {
        "from": 1216,
        "to": [
          1249
        ]
      },
      {
        "from": 1249,
        "to": [
          1250
        ]
      },
      {
        "from": 1250,
        "to": [
          467
        ]
      },
      {
        "from": 1255,
        "to": [
          616,
          616
        ]
      },
      {
        "from": 1269,
        "to": [
          1277,
          1282
        ]
      },
      {
        "from": 1277,
        "to": [
          1377
        ]
      },
      {
        "from": 1282,
        "to": [
          616,
          616
        ]
      },
      {
        "from": 1319,
        "to": [
          1327,
          1335
        ]
      },
      {
        "from": 1327,
        "to": [
          1345,
          1345
        ]
      },
      {
        "from": 1335,
        "to": [
          1345,
          1345
        ]
      },
      {
        "from": 1344,
        "to": [
          1345
        ]
      },
      {
        "from": 1345,
        "to": [
          1346
        ]
      },
      {
        "from": 1346,
        "to": [
          534,
          534
        ]
      },
      {
        "from": 1353,
        "to": [
          594
        ]
      },
      {
        "from": 1377,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 3 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 57
    }
  }
}