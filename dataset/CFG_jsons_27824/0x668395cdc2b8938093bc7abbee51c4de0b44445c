{
  "name": "Analysis_2022-04-04_17-05-34",
  "address": "",
  "binarySource": "6060604052361561006a5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337e18b94811461019957806366fd3cd8146101ab57806370a082311461020d5780639afd9d781461023b578063bb3d45621461024d575b6101975b600160a060020a03331660009081526001602052604090208054349081019182905590670de0b6b3a76400008110156100a657610193565b6040604051908101604052806000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750505092845250504260209283015250600160a060020a0333166000908152600282526040902082518051919261011992849290910190610588565b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a97336000366040518084600160a060020a0316600160a060020a031681526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a15b5050565b005b34156101a157fe5b6101976102f9565b005b6101f9600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965061032195505050505050565b604080519115158252519081900360200190f35b341561021557fe5b610229600160a060020a0360043516610479565b60408051918252519081900360200190f35b341561024357fe5b61019761048b565b005b341561025557fe5b610269600160a060020a0360043516610572565b60408051602081018390528181528354600260001961010060018416150201909116049181018290529081906060820190859080156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050935050505060405180910390f35b60005433600160a060020a039081169116141561031e57600054600160a060020a0316ff5b5b565b600160a060020a03331660009081526001602052604081208054349081019182905590670de0b6b3a764000081101561035d5760009250610472565b60408051808201825285815242602080830191909152600160a060020a03331660009081526002825292909220815180519293919261039f9284920190610588565b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a9733856040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360008314610433575b80518252602083111561043357601f199092019160209182019101610413565b505050905090810190601f16801561045f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1600192505b5050919050565b60016020526000908152604090205481565b600160a060020a033316600090815260026020526040812060010154620151800142819011156104bb5760006000fd5b600160a060020a03331660009081526001602090815260408083205460029092528220909350906104ec8282610607565b5060006001919091015560408051600160a060020a033316815290517fa7428bdcc97b96593334ec7f05608c93b48dfee6026c18c2e38db1b4155e479e9181900360200190a1600160a060020a0333166108fc6064845b046009029081150290604051809050600060405180830381858888f19350505050151561019357fe5b5b5b5050565b6002602052600090815260409020600181015482565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105c957805160ff19168380011785556105f6565b828001600101855582156105f6579182015b828111156105f65782518255916020019190600101906105db565b5b5061060392915061064f565b5090565b50805460018160011615610100020316600290046000825580601f1061062d575061064b565b601f01602090049060005260206000209081019061064b919061064f565b5b50565b61066d91905b808211156106035760008155600101610655565b5090565b905600a165627a7a7230582063c0cf3057984adf9a033f9b6cb6400e23187140cb9dfc6f84a13c3d00ac5d2c0029",
  "binaryHash": "d7aa531f",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a7230582063c0cf3057984adf9a033f9b6cb6400e23187140cb9dfc6f84a13c3d00ac5d2c0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649059534609
    }
  },
  "runtimeCfg": {
    "bytecode": "6060604052361561006a5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337e18b94811461019957806366fd3cd8146101ab57806370a082311461020d5780639afd9d781461023b578063bb3d45621461024d575b6101975b600160a060020a03331660009081526001602052604090208054349081019182905590670de0b6b3a76400008110156100a657610193565b6040604051908101604052806000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750505092845250504260209283015250600160a060020a0333166000908152600282526040902082518051919261011992849290910190610588565b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a97336000366040518084600160a060020a0316600160a060020a031681526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a15b5050565b005b34156101a157fe5b6101976102f9565b005b6101f9600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965061032195505050505050565b604080519115158252519081900360200190f35b341561021557fe5b610229600160a060020a0360043516610479565b60408051918252519081900360200190f35b341561024357fe5b61019761048b565b005b341561025557fe5b610269600160a060020a0360043516610572565b60408051602081018390528181528354600260001961010060018416150201909116049181018290529081906060820190859080156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050935050505060405180910390f35b60005433600160a060020a039081169116141561031e57600054600160a060020a0316ff5b5b565b600160a060020a03331660009081526001602052604081208054349081019182905590670de0b6b3a764000081101561035d5760009250610472565b60408051808201825285815242602080830191909152600160a060020a03331660009081526002825292909220815180519293919261039f9284920190610588565b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a9733856040518083600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360008314610433575b80518252602083111561043357601f199092019160209182019101610413565b505050905090810190601f16801561045f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1600192505b5050919050565b60016020526000908152604090205481565b600160a060020a033316600090815260026020526040812060010154620151800142819011156104bb5760006000fd5b600160a060020a03331660009081526001602090815260408083205460029092528220909350906104ec8282610607565b5060006001919091015560408051600160a060020a033316815290517fa7428bdcc97b96593334ec7f05608c93b48dfee6026c18c2e38db1b4155e479e9181900360200190a1600160a060020a0333166108fc6064845b046009029081150290604051809050600060405180830381858888f19350505050151561019357fe5b5b5b5050565b6002602052600090815260409020600181015482565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105c957805160ff19168380011785556105f6565b828001600101855582156105f6579182015b828111156105f65782518255916020019190600101906105db565b5b5061060392915061064f565b5090565b50805460018160011615610100020316600290046000825580601f1061062d575061064b565b601f01602090049060005260206000209081019061064b919061064f565b5b50565b61066d91905b808211156106035760008155600101610655565b5090565b905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052361561006a57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x006a\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166337e18b94811461019957",
        "parsedOpcodes": "11: PUSH4 0xffffffff\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: PUSH1 0x00\n48: CALLDATALOAD\n49: DIV\n50: AND\n51: PUSH4 0x37e18b94\n56: DUP2\n57: EQ\n58: PUSH2 0x0199\n61: JUMPI"
      },
      {
        "offset": 62,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806366fd3cd8146101ab57",
        "parsedOpcodes": "62: DUP1\n63: PUSH4 0x66fd3cd8\n68: EQ\n69: PUSH2 0x01ab\n72: JUMPI"
      },
      {
        "offset": 73,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806370a082311461020d57",
        "parsedOpcodes": "73: DUP1\n74: PUSH4 0x70a08231\n79: EQ\n80: PUSH2 0x020d\n83: JUMPI"
      },
      {
        "offset": 84,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80639afd9d781461023b57",
        "parsedOpcodes": "84: DUP1\n85: PUSH4 0x9afd9d78\n90: EQ\n91: PUSH2 0x023b\n94: JUMPI"
      },
      {
        "offset": 95,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063bb3d45621461024d57",
        "parsedOpcodes": "95: DUP1\n96: PUSH4 0xbb3d4562\n101: EQ\n102: PUSH2 0x024d\n105: JUMPI"
      },
      {
        "offset": 106,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b610197",
        "parsedOpcodes": "106: JUMPDEST\n107: PUSH2 0x0197"
      },
      {
        "offset": 110,
        "length": 52,
        "type": "fallback",
        "stackBalance": 2,
        "bytecodeHex": "5b600160a060020a03331660009081526001602052604090208054349081019182905590670de0b6b3a76400008110156100a657",
        "parsedOpcodes": "110: JUMPDEST\n111: PUSH1 0x01\n113: PUSH1 0xa0\n115: PUSH1 0x02\n117: EXP\n118: SUB\n119: CALLER\n120: AND\n121: PUSH1 0x00\n123: SWAP1\n124: DUP2\n125: MSTORE\n126: PUSH1 0x01\n128: PUSH1 0x20\n130: MSTORE\n131: PUSH1 0x40\n133: SWAP1\n134: SHA3\n135: DUP1\n136: SLOAD\n137: CALLVALUE\n138: SWAP1\n139: DUP2\n140: ADD\n141: SWAP2\n142: DUP3\n143: SWAP1\n144: SSTORE\n145: SWAP1\n146: PUSH8 0x0de0b6b3a7640000\n155: DUP2\n156: LT\n157: ISZERO\n158: PUSH2 0x00a6\n161: JUMPI"
      },
      {
        "offset": 162,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "61019356",
        "parsedOpcodes": "162: PUSH2 0x0193\n165: JUMP"
      },
      {
        "offset": 166,
        "length": 115,
        "type": "dispatcher",
        "stackBalance": 6,
        "bytecodeHex": "5b6040604051908101604052806000368080601f01602080910402602001604051908101604052809392919081815260200183838082843750505092845250504260209283015250600160a060020a033316600090815260028252604090208251805191926101199284929091019061058856",
        "parsedOpcodes": "166: JUMPDEST\n167: PUSH1 0x40\n169: PUSH1 0x40\n171: MLOAD\n172: SWAP1\n173: DUP2\n174: ADD\n175: PUSH1 0x40\n177: MSTORE\n178: DUP1\n179: PUSH1 0x00\n181: CALLDATASIZE\n182: DUP1\n183: DUP1\n184: PUSH1 0x1f\n186: ADD\n187: PUSH1 0x20\n189: DUP1\n190: SWAP2\n191: DIV\n192: MUL\n193: PUSH1 0x20\n195: ADD\n196: PUSH1 0x40\n198: MLOAD\n199: SWAP1\n200: DUP2\n201: ADD\n202: PUSH1 0x40\n204: MSTORE\n205: DUP1\n206: SWAP4\n207: SWAP3\n208: SWAP2\n209: SWAP1\n210: DUP2\n211: DUP2\n212: MSTORE\n213: PUSH1 0x20\n215: ADD\n216: DUP4\n217: DUP4\n218: DUP1\n219: DUP3\n220: DUP5\n221: CALLDATACOPY\n222: POP\n223: POP\n224: POP\n225: SWAP3\n226: DUP5\n227: MSTORE\n228: POP\n229: POP\n230: TIMESTAMP\n231: PUSH1 0x20\n233: SWAP3\n234: DUP4\n235: ADD\n236: MSTORE\n237: POP\n238: PUSH1 0x01\n240: PUSH1 0xa0\n242: PUSH1 0x02\n244: EXP\n245: SUB\n246: CALLER\n247: AND\n248: PUSH1 0x00\n250: SWAP1\n251: DUP2\n252: MSTORE\n253: PUSH1 0x02\n255: DUP3\n256: MSTORE\n257: PUSH1 0x40\n259: SWAP1\n260: SHA3\n261: DUP3\n262: MLOAD\n263: DUP1\n264: MLOAD\n265: SWAP2\n266: SWAP3\n267: PUSH2 0x0119\n270: SWAP3\n271: DUP5\n272: SWAP3\n273: SWAP1\n274: SWAP2\n275: ADD\n276: SWAP1\n277: PUSH2 0x0588\n280: JUMP"
      },
      {
        "offset": 281,
        "length": 122,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a97336000366040518084600160a060020a0316600160a060020a031681526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a1",
        "parsedOpcodes": "281: JUMPDEST\n282: POP\n283: PUSH1 0x20\n285: DUP3\n286: ADD\n287: MLOAD\n288: DUP2\n289: PUSH1 0x01\n291: ADD\n292: SSTORE\n293: SWAP1\n294: POP\n295: POP\n296: PUSH32 0x5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a97\n329: CALLER\n330: PUSH1 0x00\n332: CALLDATASIZE\n333: PUSH1 0x40\n335: MLOAD\n336: DUP1\n337: DUP5\n338: PUSH1 0x01\n340: PUSH1 0xa0\n342: PUSH1 0x02\n344: EXP\n345: SUB\n346: AND\n347: PUSH1 0x01\n349: PUSH1 0xa0\n351: PUSH1 0x02\n353: EXP\n354: SUB\n355: AND\n356: DUP2\n357: MSTORE\n358: PUSH1 0x20\n360: ADD\n361: DUP1\n362: PUSH1 0x20\n364: ADD\n365: DUP3\n366: DUP2\n367: SUB\n368: DUP3\n369: MSTORE\n370: DUP5\n371: DUP5\n372: DUP3\n373: DUP2\n374: DUP2\n375: MSTORE\n376: PUSH1 0x20\n378: ADD\n379: SWAP3\n380: POP\n381: DUP1\n382: DUP3\n383: DUP5\n384: CALLDATACOPY\n385: PUSH1 0x40\n387: MLOAD\n388: SWAP3\n389: ADD\n390: DUP3\n391: SWAP1\n392: SUB\n393: SWAP7\n394: POP\n395: SWAP1\n396: SWAP5\n397: POP\n398: POP\n399: POP\n400: POP\n401: POP\n402: LOG1"
      },
      {
        "offset": 403,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "403: JUMPDEST\n404: POP\n405: POP\n406: JUMP"
      },
      {
        "offset": 407,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "407: JUMPDEST\n408: STOP"
      },
      {
        "offset": 409,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101a157",
        "parsedOpcodes": "409: JUMPDEST\n410: CALLVALUE\n411: ISZERO\n412: PUSH2 0x01a1\n415: JUMPI"
      },
      {
        "offset": 416,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "416: INVALID"
      },
      {
        "offset": 417,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101976102f956",
        "parsedOpcodes": "417: JUMPDEST\n418: PUSH2 0x0197\n421: PUSH2 0x02f9\n424: JUMP"
      },
      {
        "offset": 425,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "425: JUMPDEST\n426: STOP"
      },
      {
        "offset": 427,
        "length": 78,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6101f9600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496506103219550505050505056",
        "parsedOpcodes": "427: JUMPDEST\n428: PUSH2 0x01f9\n431: PUSH1 0x04\n433: DUP1\n434: DUP1\n435: CALLDATALOAD\n436: SWAP1\n437: PUSH1 0x20\n439: ADD\n440: SWAP1\n441: DUP3\n442: ADD\n443: DUP1\n444: CALLDATALOAD\n445: SWAP1\n446: PUSH1 0x20\n448: ADD\n449: SWAP1\n450: DUP1\n451: DUP1\n452: PUSH1 0x1f\n454: ADD\n455: PUSH1 0x20\n457: DUP1\n458: SWAP2\n459: DIV\n460: MUL\n461: PUSH1 0x20\n463: ADD\n464: PUSH1 0x40\n466: MLOAD\n467: SWAP1\n468: DUP2\n469: ADD\n470: PUSH1 0x40\n472: MSTORE\n473: DUP1\n474: SWAP4\n475: SWAP3\n476: SWAP2\n477: SWAP1\n478: DUP2\n479: DUP2\n480: MSTORE\n481: PUSH1 0x20\n483: ADD\n484: DUP4\n485: DUP4\n486: DUP1\n487: DUP3\n488: DUP5\n489: CALLDATACOPY\n490: POP\n491: SWAP5\n492: SWAP7\n493: POP\n494: PUSH2 0x0321\n497: SWAP6\n498: POP\n499: POP\n500: POP\n501: POP\n502: POP\n503: POP\n504: JUMP"
      },
      {
        "offset": 505,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "505: JUMPDEST\n506: PUSH1 0x40\n508: DUP1\n509: MLOAD\n510: SWAP2\n511: ISZERO\n512: ISZERO\n513: DUP3\n514: MSTORE\n515: MLOAD\n516: SWAP1\n517: DUP2\n518: SWAP1\n519: SUB\n520: PUSH1 0x20\n522: ADD\n523: SWAP1\n524: RETURN"
      },
      {
        "offset": 525,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561021557",
        "parsedOpcodes": "525: JUMPDEST\n526: CALLVALUE\n527: ISZERO\n528: PUSH2 0x0215\n531: JUMPI"
      },
      {
        "offset": 532,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "532: INVALID"
      },
      {
        "offset": 533,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b610229600160a060020a036004351661047956",
        "parsedOpcodes": "533: JUMPDEST\n534: PUSH2 0x0229\n537: PUSH1 0x01\n539: PUSH1 0xa0\n541: PUSH1 0x02\n543: EXP\n544: SUB\n545: PUSH1 0x04\n547: CALLDATALOAD\n548: AND\n549: PUSH2 0x0479\n552: JUMP"
      },
      {
        "offset": 553,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "553: JUMPDEST\n554: PUSH1 0x40\n556: DUP1\n557: MLOAD\n558: SWAP2\n559: DUP3\n560: MSTORE\n561: MLOAD\n562: SWAP1\n563: DUP2\n564: SWAP1\n565: SUB\n566: PUSH1 0x20\n568: ADD\n569: SWAP1\n570: RETURN"
      },
      {
        "offset": 571,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561024357",
        "parsedOpcodes": "571: JUMPDEST\n572: CALLVALUE\n573: ISZERO\n574: PUSH2 0x0243\n577: JUMPI"
      },
      {
        "offset": 578,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "578: INVALID"
      },
      {
        "offset": 579,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61019761048b56",
        "parsedOpcodes": "579: JUMPDEST\n580: PUSH2 0x0197\n583: PUSH2 0x048b\n586: JUMP"
      },
      {
        "offset": 587,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "587: JUMPDEST\n588: STOP"
      },
      {
        "offset": 589,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561025557",
        "parsedOpcodes": "589: JUMPDEST\n590: CALLVALUE\n591: ISZERO\n592: PUSH2 0x0255\n595: JUMPI"
      },
      {
        "offset": 596,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "596: INVALID"
      },
      {
        "offset": 597,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b610269600160a060020a036004351661057256",
        "parsedOpcodes": "597: JUMPDEST\n598: PUSH2 0x0269\n601: PUSH1 0x01\n603: PUSH1 0xa0\n605: PUSH1 0x02\n607: EXP\n608: SUB\n609: PUSH1 0x04\n611: CALLDATALOAD\n612: AND\n613: PUSH2 0x0572\n616: JUMP"
      },
      {
        "offset": 617,
        "length": 58,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b60408051602081018390528181528354600260001961010060018416150201909116049181018290529081906060820190859080156102e957",
        "parsedOpcodes": "617: JUMPDEST\n618: PUSH1 0x40\n620: DUP1\n621: MLOAD\n622: PUSH1 0x20\n624: DUP2\n625: ADD\n626: DUP4\n627: SWAP1\n628: MSTORE\n629: DUP2\n630: DUP2\n631: MSTORE\n632: DUP4\n633: SLOAD\n634: PUSH1 0x02\n636: PUSH1 0x00\n638: NOT\n639: PUSH2 0x0100\n642: PUSH1 0x01\n644: DUP5\n645: AND\n646: ISZERO\n647: MUL\n648: ADD\n649: SWAP1\n650: SWAP2\n651: AND\n652: DIV\n653: SWAP2\n654: DUP2\n655: ADD\n656: DUP3\n657: SWAP1\n658: MSTORE\n659: SWAP1\n660: DUP2\n661: SWAP1\n662: PUSH1 0x60\n664: DUP3\n665: ADD\n666: SWAP1\n667: DUP6\n668: SWAP1\n669: DUP1\n670: ISZERO\n671: PUSH2 0x02e9\n674: JUMPI"
      },
      {
        "offset": 675,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80601f106102be57",
        "parsedOpcodes": "675: DUP1\n676: PUSH1 0x1f\n678: LT\n679: PUSH2 0x02be\n682: JUMPI"
      },
      {
        "offset": 683,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6101008083540402835291602001916102e956",
        "parsedOpcodes": "683: PUSH2 0x0100\n686: DUP1\n687: DUP4\n688: SLOAD\n689: DIV\n690: MUL\n691: DUP4\n692: MSTORE\n693: SWAP2\n694: PUSH1 0x20\n696: ADD\n697: SWAP2\n698: PUSH2 0x02e9\n701: JUMP"
      },
      {
        "offset": 702,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b82019190600052602060002090",
        "parsedOpcodes": "702: JUMPDEST\n703: DUP3\n704: ADD\n705: SWAP2\n706: SWAP1\n707: PUSH1 0x00\n709: MSTORE\n710: PUSH1 0x20\n712: PUSH1 0x00\n714: SHA3\n715: SWAP1"
      },
      {
        "offset": 716,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8154815290600101906020018083116102cc57",
        "parsedOpcodes": "716: JUMPDEST\n717: DUP2\n718: SLOAD\n719: DUP2\n720: MSTORE\n721: SWAP1\n722: PUSH1 0x01\n724: ADD\n725: SWAP1\n726: PUSH1 0x20\n728: ADD\n729: DUP1\n730: DUP4\n731: GT\n732: PUSH2 0x02cc\n735: JUMPI"
      },
      {
        "offset": 736,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "829003601f16820191",
        "parsedOpcodes": "736: DUP3\n737: SWAP1\n738: SUB\n739: PUSH1 0x1f\n741: AND\n742: DUP3\n743: ADD\n744: SWAP2"
      },
      {
        "offset": 745,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -7,
        "bytecodeHex": "5b5050935050505060405180910390f3",
        "parsedOpcodes": "745: JUMPDEST\n746: POP\n747: POP\n748: SWAP4\n749: POP\n750: POP\n751: POP\n752: POP\n753: PUSH1 0x40\n755: MLOAD\n756: DUP1\n757: SWAP2\n758: SUB\n759: SWAP1\n760: RETURN"
      },
      {
        "offset": 761,
        "length": 24,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60005433600160a060020a039081169116141561031e57",
        "parsedOpcodes": "761: JUMPDEST\n762: PUSH1 0x00\n764: SLOAD\n765: CALLER\n766: PUSH1 0x01\n768: PUSH1 0xa0\n770: PUSH1 0x02\n772: EXP\n773: SUB\n774: SWAP1\n775: DUP2\n776: AND\n777: SWAP2\n778: AND\n779: EQ\n780: ISZERO\n781: PUSH2 0x031e\n784: JUMPI"
      },
      {
        "offset": 785,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600054600160a060020a0316ff",
        "parsedOpcodes": "785: PUSH1 0x00\n787: SLOAD\n788: PUSH1 0x01\n790: PUSH1 0xa0\n792: PUSH1 0x02\n794: EXP\n795: SUB\n796: AND\n797: SELFDESTRUCT"
      },
      {
        "offset": 798,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "798: JUMPDEST"
      },
      {
        "offset": 799,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "799: JUMPDEST\n800: JUMP"
      },
      {
        "offset": 801,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600160a060020a03331660009081526001602052604081208054349081019182905590670de0b6b3a764000081101561035d57",
        "parsedOpcodes": "801: JUMPDEST\n802: PUSH1 0x01\n804: PUSH1 0xa0\n806: PUSH1 0x02\n808: EXP\n809: SUB\n810: CALLER\n811: AND\n812: PUSH1 0x00\n814: SWAP1\n815: DUP2\n816: MSTORE\n817: PUSH1 0x01\n819: PUSH1 0x20\n821: MSTORE\n822: PUSH1 0x40\n824: DUP2\n825: SHA3\n826: DUP1\n827: SLOAD\n828: CALLVALUE\n829: SWAP1\n830: DUP2\n831: ADD\n832: SWAP2\n833: DUP3\n834: SWAP1\n835: SSTORE\n836: SWAP1\n837: PUSH8 0x0de0b6b3a7640000\n846: DUP2\n847: LT\n848: ISZERO\n849: PUSH2 0x035d\n852: JUMPI"
      },
      {
        "offset": 853,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6000925061047256",
        "parsedOpcodes": "853: PUSH1 0x00\n855: SWAP3\n856: POP\n857: PUSH2 0x0472\n860: JUMP"
      },
      {
        "offset": 861,
        "length": 66,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b60408051808201825285815242602080830191909152600160a060020a03331660009081526002825292909220815180519293919261039f928492019061058856",
        "parsedOpcodes": "861: JUMPDEST\n862: PUSH1 0x40\n864: DUP1\n865: MLOAD\n866: DUP1\n867: DUP3\n868: ADD\n869: DUP3\n870: MSTORE\n871: DUP6\n872: DUP2\n873: MSTORE\n874: TIMESTAMP\n875: PUSH1 0x20\n877: DUP1\n878: DUP4\n879: ADD\n880: SWAP2\n881: SWAP1\n882: SWAP2\n883: MSTORE\n884: PUSH1 0x01\n886: PUSH1 0xa0\n888: PUSH1 0x02\n890: EXP\n891: SUB\n892: CALLER\n893: AND\n894: PUSH1 0x00\n896: SWAP1\n897: DUP2\n898: MSTORE\n899: PUSH1 0x02\n901: DUP3\n902: MSTORE\n903: SWAP3\n904: SWAP1\n905: SWAP3\n906: SHA3\n907: DUP2\n908: MLOAD\n909: DUP1\n910: MLOAD\n911: SWAP3\n912: SWAP4\n913: SWAP2\n914: SWAP3\n915: PUSH2 0x039f\n918: SWAP3\n919: DUP5\n920: SWAP3\n921: ADD\n922: SWAP1\n923: PUSH2 0x0588\n926: JUMP"
      },
      {
        "offset": 927,
        "length": 116,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b50602082015181600101559050507f5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a9733856040518083600160a060020a0316600160a060020a031681526020018060200182810382528381815181526020019150805190602001908083836000831461043357",
        "parsedOpcodes": "927: JUMPDEST\n928: POP\n929: PUSH1 0x20\n931: DUP3\n932: ADD\n933: MLOAD\n934: DUP2\n935: PUSH1 0x01\n937: ADD\n938: SSTORE\n939: SWAP1\n940: POP\n941: POP\n942: PUSH32 0x5207dfaad3bf7f39b87b03d4a0d26edba11350e669205949c89a4e8ab7c04a97\n975: CALLER\n976: DUP6\n977: PUSH1 0x40\n979: MLOAD\n980: DUP1\n981: DUP4\n982: PUSH1 0x01\n984: PUSH1 0xa0\n986: PUSH1 0x02\n988: EXP\n989: SUB\n990: AND\n991: PUSH1 0x01\n993: PUSH1 0xa0\n995: PUSH1 0x02\n997: EXP\n998: SUB\n999: AND\n1000: DUP2\n1001: MSTORE\n1002: PUSH1 0x20\n1004: ADD\n1005: DUP1\n1006: PUSH1 0x20\n1008: ADD\n1009: DUP3\n1010: DUP2\n1011: SUB\n1012: DUP3\n1013: MSTORE\n1014: DUP4\n1015: DUP2\n1016: DUP2\n1017: MLOAD\n1018: DUP2\n1019: MSTORE\n1020: PUSH1 0x20\n1022: ADD\n1023: SWAP2\n1024: POP\n1025: DUP1\n1026: MLOAD\n1027: SWAP1\n1028: PUSH1 0x20\n1030: ADD\n1031: SWAP1\n1032: DUP1\n1033: DUP4\n1034: DUP4\n1035: PUSH1 0x00\n1037: DUP4\n1038: EQ\n1039: PUSH2 0x0433\n1042: JUMPI"
      },
      {
        "offset": 1043,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b80518252602083111561043357",
        "parsedOpcodes": "1043: JUMPDEST\n1044: DUP1\n1045: MLOAD\n1046: DUP3\n1047: MSTORE\n1048: PUSH1 0x20\n1050: DUP4\n1051: GT\n1052: ISZERO\n1053: PUSH2 0x0433\n1056: JUMPI"
      },
      {
        "offset": 1057,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "601f19909201916020918201910161041356",
        "parsedOpcodes": "1057: PUSH1 0x1f\n1059: NOT\n1060: SWAP1\n1061: SWAP3\n1062: ADD\n1063: SWAP2\n1064: PUSH1 0x20\n1066: SWAP2\n1067: DUP3\n1068: ADD\n1069: SWAP2\n1070: ADD\n1071: PUSH2 0x0413\n1074: JUMP"
      },
      {
        "offset": 1075,
        "length": 19,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b505050905090810190601f16801561045f57",
        "parsedOpcodes": "1075: JUMPDEST\n1076: POP\n1077: POP\n1078: POP\n1079: SWAP1\n1080: POP\n1081: SWAP1\n1082: DUP2\n1083: ADD\n1084: SWAP1\n1085: PUSH1 0x1f\n1087: AND\n1088: DUP1\n1089: ISZERO\n1090: PUSH2 0x045f\n1093: JUMPI"
      },
      {
        "offset": 1094,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "1094: DUP1\n1095: DUP3\n1096: SUB\n1097: DUP1\n1098: MLOAD\n1099: PUSH1 0x01\n1101: DUP4\n1102: PUSH1 0x20\n1104: SUB\n1105: PUSH2 0x0100\n1108: EXP\n1109: SUB\n1110: NOT\n1111: AND\n1112: DUP2\n1113: MSTORE\n1114: PUSH1 0x20\n1116: ADD\n1117: SWAP2\n1118: POP"
      },
      {
        "offset": 1119,
        "length": 19,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b50935050505060405180910390a160019250",
        "parsedOpcodes": "1119: JUMPDEST\n1120: POP\n1121: SWAP4\n1122: POP\n1123: POP\n1124: POP\n1125: POP\n1126: PUSH1 0x40\n1128: MLOAD\n1129: DUP1\n1130: SWAP2\n1131: SUB\n1132: SWAP1\n1133: LOG1\n1134: PUSH1 0x01\n1136: SWAP3\n1137: POP"
      },
      {
        "offset": 1138,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b505091905056",
        "parsedOpcodes": "1138: JUMPDEST\n1139: POP\n1140: POP\n1141: SWAP2\n1142: SWAP1\n1143: POP\n1144: JUMP"
      },
      {
        "offset": 1145,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001602052600090815260409020548156",
        "parsedOpcodes": "1145: JUMPDEST\n1146: PUSH1 0x01\n1148: PUSH1 0x20\n1150: MSTORE\n1151: PUSH1 0x00\n1153: SWAP1\n1154: DUP2\n1155: MSTORE\n1156: PUSH1 0x40\n1158: SWAP1\n1159: SHA3\n1160: SLOAD\n1161: DUP2\n1162: JUMP"
      },
      {
        "offset": 1163,
        "length": 43,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600160a060020a033316600090815260026020526040812060010154620151800142819011156104bb57",
        "parsedOpcodes": "1163: JUMPDEST\n1164: PUSH1 0x01\n1166: PUSH1 0xa0\n1168: PUSH1 0x02\n1170: EXP\n1171: SUB\n1172: CALLER\n1173: AND\n1174: PUSH1 0x00\n1176: SWAP1\n1177: DUP2\n1178: MSTORE\n1179: PUSH1 0x02\n1181: PUSH1 0x20\n1183: MSTORE\n1184: PUSH1 0x40\n1186: DUP2\n1187: SHA3\n1188: PUSH1 0x01\n1190: ADD\n1191: SLOAD\n1192: PUSH3 0x015180\n1196: ADD\n1197: TIMESTAMP\n1198: DUP2\n1199: SWAP1\n1200: GT\n1201: ISZERO\n1202: PUSH2 0x04bb\n1205: JUMPI"
      },
      {
        "offset": 1206,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1206: PUSH1 0x00\n1208: PUSH1 0x00\n1210: REVERT"
      },
      {
        "offset": 1211,
        "length": 49,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b600160a060020a03331660009081526001602090815260408083205460029092528220909350906104ec828261060756",
        "parsedOpcodes": "1211: JUMPDEST\n1212: PUSH1 0x01\n1214: PUSH1 0xa0\n1216: PUSH1 0x02\n1218: EXP\n1219: SUB\n1220: CALLER\n1221: AND\n1222: PUSH1 0x00\n1224: SWAP1\n1225: DUP2\n1226: MSTORE\n1227: PUSH1 0x01\n1229: PUSH1 0x20\n1231: SWAP1\n1232: DUP2\n1233: MSTORE\n1234: PUSH1 0x40\n1236: DUP1\n1237: DUP4\n1238: SHA3\n1239: SLOAD\n1240: PUSH1 0x02\n1242: SWAP1\n1243: SWAP3\n1244: MSTORE\n1245: DUP3\n1246: SHA3\n1247: SWAP1\n1248: SWAP4\n1249: POP\n1250: SWAP1\n1251: PUSH2 0x04ec\n1254: DUP3\n1255: DUP3\n1256: PUSH2 0x0607\n1259: JUMP"
      },
      {
        "offset": 1260,
        "length": 87,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b5060006001919091015560408051600160a060020a033316815290517fa7428bdcc97b96593334ec7f05608c93b48dfee6026c18c2e38db1b4155e479e9181900360200190a1600160a060020a0333166108fc606484",
        "parsedOpcodes": "1260: JUMPDEST\n1261: POP\n1262: PUSH1 0x00\n1264: PUSH1 0x01\n1266: SWAP2\n1267: SWAP1\n1268: SWAP2\n1269: ADD\n1270: SSTORE\n1271: PUSH1 0x40\n1273: DUP1\n1274: MLOAD\n1275: PUSH1 0x01\n1277: PUSH1 0xa0\n1279: PUSH1 0x02\n1281: EXP\n1282: SUB\n1283: CALLER\n1284: AND\n1285: DUP2\n1286: MSTORE\n1287: SWAP1\n1288: MLOAD\n1289: PUSH32 0xa7428bdcc97b96593334ec7f05608c93b48dfee6026c18c2e38db1b4155e479e\n1322: SWAP2\n1323: DUP2\n1324: SWAP1\n1325: SUB\n1326: PUSH1 0x20\n1328: ADD\n1329: SWAP1\n1330: LOG1\n1331: PUSH1 0x01\n1333: PUSH1 0xa0\n1335: PUSH1 0x02\n1337: EXP\n1338: SUB\n1339: CALLER\n1340: AND\n1341: PUSH2 0x08fc\n1344: PUSH1 0x64\n1346: DUP5"
      },
      {
        "offset": 1347,
        "length": 40,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b046009029081150290604051809050600060405180830381858888f19350505050151561019357",
        "parsedOpcodes": "1347: JUMPDEST\n1348: DIV\n1349: PUSH1 0x09\n1351: MUL\n1352: SWAP1\n1353: DUP2\n1354: ISZERO\n1355: MUL\n1356: SWAP1\n1357: PUSH1 0x40\n1359: MLOAD\n1360: DUP1\n1361: SWAP1\n1362: POP\n1363: PUSH1 0x00\n1365: PUSH1 0x40\n1367: MLOAD\n1368: DUP1\n1369: DUP4\n1370: SUB\n1371: DUP2\n1372: DUP6\n1373: DUP9\n1374: DUP9\n1375: CALL\n1376: SWAP4\n1377: POP\n1378: POP\n1379: POP\n1380: POP\n1381: ISZERO\n1382: ISZERO\n1383: PUSH2 0x0193\n1386: JUMPI"
      },
      {
        "offset": 1387,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1387: INVALID"
      },
      {
        "offset": 1388,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1388: JUMPDEST"
      },
      {
        "offset": 1389,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1389: JUMPDEST"
      },
      {
        "offset": 1390,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1390: JUMPDEST\n1391: POP\n1392: POP\n1393: JUMP"
      },
      {
        "offset": 1394,
        "length": 22,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600260205260009081526040902060018101548256",
        "parsedOpcodes": "1394: JUMPDEST\n1395: PUSH1 0x02\n1397: PUSH1 0x20\n1399: MSTORE\n1400: PUSH1 0x00\n1402: SWAP1\n1403: DUP2\n1404: MSTORE\n1405: PUSH1 0x40\n1407: SWAP1\n1408: SHA3\n1409: PUSH1 0x01\n1411: DUP2\n1412: ADD\n1413: SLOAD\n1414: DUP3\n1415: JUMP"
      },
      {
        "offset": 1416,
        "length": 49,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105c957",
        "parsedOpcodes": "1416: JUMPDEST\n1417: DUP3\n1418: DUP1\n1419: SLOAD\n1420: PUSH1 0x01\n1422: DUP2\n1423: PUSH1 0x01\n1425: AND\n1426: ISZERO\n1427: PUSH2 0x0100\n1430: MUL\n1431: SUB\n1432: AND\n1433: PUSH1 0x02\n1435: SWAP1\n1436: DIV\n1437: SWAP1\n1438: PUSH1 0x00\n1440: MSTORE\n1441: PUSH1 0x20\n1443: PUSH1 0x00\n1445: SHA3\n1446: SWAP1\n1447: PUSH1 0x1f\n1449: ADD\n1450: PUSH1 0x20\n1452: SWAP1\n1453: DIV\n1454: DUP2\n1455: ADD\n1456: SWAP3\n1457: DUP3\n1458: PUSH1 0x1f\n1460: LT\n1461: PUSH2 0x05c9\n1464: JUMPI"
      },
      {
        "offset": 1465,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805160ff19168380011785556105f656",
        "parsedOpcodes": "1465: DUP1\n1466: MLOAD\n1467: PUSH1 0xff\n1469: NOT\n1470: AND\n1471: DUP4\n1472: DUP1\n1473: ADD\n1474: OR\n1475: DUP6\n1476: SSTORE\n1477: PUSH2 0x05f6\n1480: JUMP"
      },
      {
        "offset": 1481,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b828001600101855582156105f657",
        "parsedOpcodes": "1481: JUMPDEST\n1482: DUP3\n1483: DUP1\n1484: ADD\n1485: PUSH1 0x01\n1487: ADD\n1488: DUP6\n1489: SSTORE\n1490: DUP3\n1491: ISZERO\n1492: PUSH2 0x05f6\n1495: JUMPI"
      },
      {
        "offset": 1496,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "918201",
        "parsedOpcodes": "1496: SWAP2\n1497: DUP3\n1498: ADD"
      },
      {
        "offset": 1499,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b828111156105f657",
        "parsedOpcodes": "1499: JUMPDEST\n1500: DUP3\n1501: DUP2\n1502: GT\n1503: ISZERO\n1504: PUSH2 0x05f6\n1507: JUMPI"
      },
      {
        "offset": 1508,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "82518255916020019190600101906105db56",
        "parsedOpcodes": "1508: DUP3\n1509: MLOAD\n1510: DUP3\n1511: SSTORE\n1512: SWAP2\n1513: PUSH1 0x20\n1515: ADD\n1516: SWAP2\n1517: SWAP1\n1518: PUSH1 0x01\n1520: ADD\n1521: SWAP1\n1522: PUSH2 0x05db\n1525: JUMP"
      },
      {
        "offset": 1526,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1526: JUMPDEST"
      },
      {
        "offset": 1527,
        "length": 12,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5061060392915061064f56",
        "parsedOpcodes": "1527: JUMPDEST\n1528: POP\n1529: PUSH2 0x0603\n1532: SWAP3\n1533: SWAP2\n1534: POP\n1535: PUSH2 0x064f\n1538: JUMP"
      },
      {
        "offset": 1539,
        "length": 4,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b509056",
        "parsedOpcodes": "1539: JUMPDEST\n1540: POP\n1541: SWAP1\n1542: JUMP"
      },
      {
        "offset": 1543,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50805460018160011615610100020316600290046000825580601f1061062d57",
        "parsedOpcodes": "1543: JUMPDEST\n1544: POP\n1545: DUP1\n1546: SLOAD\n1547: PUSH1 0x01\n1549: DUP2\n1550: PUSH1 0x01\n1552: AND\n1553: ISZERO\n1554: PUSH2 0x0100\n1557: MUL\n1558: SUB\n1559: AND\n1560: PUSH1 0x02\n1562: SWAP1\n1563: DIV\n1564: PUSH1 0x00\n1566: DUP3\n1567: SSTORE\n1568: DUP1\n1569: PUSH1 0x1f\n1571: LT\n1572: PUSH2 0x062d\n1575: JUMPI"
      },
      {
        "offset": 1576,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5061064b56",
        "parsedOpcodes": "1576: POP\n1577: PUSH2 0x064b\n1580: JUMP"
      },
      {
        "offset": 1581,
        "length": 30,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b601f01602090049060005260206000209081019061064b919061064f56",
        "parsedOpcodes": "1581: JUMPDEST\n1582: PUSH1 0x1f\n1584: ADD\n1585: PUSH1 0x20\n1587: SWAP1\n1588: DIV\n1589: SWAP1\n1590: PUSH1 0x00\n1592: MSTORE\n1593: PUSH1 0x20\n1595: PUSH1 0x00\n1597: SHA3\n1598: SWAP1\n1599: DUP2\n1600: ADD\n1601: SWAP1\n1602: PUSH2 0x064b\n1605: SWAP2\n1606: SWAP1\n1607: PUSH2 0x064f\n1610: JUMP"
      },
      {
        "offset": 1611,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1611: JUMPDEST"
      },
      {
        "offset": 1612,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1612: JUMPDEST\n1613: POP\n1614: JUMP"
      },
      {
        "offset": 1615,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61066d9190",
        "parsedOpcodes": "1615: JUMPDEST\n1616: PUSH2 0x066d\n1619: SWAP2\n1620: SWAP1"
      },
      {
        "offset": 1621,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8082111561060357",
        "parsedOpcodes": "1621: JUMPDEST\n1622: DUP1\n1623: DUP3\n1624: GT\n1625: ISZERO\n1626: PUSH2 0x0603\n1629: JUMPI"
      },
      {
        "offset": 1630,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6000815560010161065556",
        "parsedOpcodes": "1630: PUSH1 0x00\n1632: DUP2\n1633: SSTORE\n1634: PUSH1 0x01\n1636: ADD\n1637: PUSH2 0x0655\n1640: JUMP"
      },
      {
        "offset": 1641,
        "length": 4,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b509056",
        "parsedOpcodes": "1641: JUMPDEST\n1642: POP\n1643: SWAP1\n1644: JUMP"
      },
      {
        "offset": 1645,
        "length": 3,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b9056",
        "parsedOpcodes": "1645: JUMPDEST\n1646: SWAP1\n1647: JUMP"
      },
      {
        "offset": 1648,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1648: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          106
        ]
      },
      {
        "from": 11,
        "to": [
          62,
          409
        ]
      },
      {
        "from": 62,
        "to": [
          73,
          427
        ]
      },
      {
        "from": 73,
        "to": [
          84,
          525
        ]
      },
      {
        "from": 84,
        "to": [
          95,
          571
        ]
      },
      {
        "from": 95,
        "to": [
          106,
          589
        ]
      },
      {
        "from": 106,
        "to": [
          110
        ]
      },
      {
        "from": 110,
        "to": [
          162,
          166
        ]
      },
      {
        "from": 162,
        "to": [
          403,
          403,
          403
        ]
      },
      {
        "from": 166,
        "to": [
          1416,
          1416,
          1416
        ]
      },
      {
        "from": 281,
        "to": [
          403
        ]
      },
      {
        "from": 403,
        "to": [
          407,
          407,
          407,
          407,
          407
        ]
      },
      {
        "from": 407,
        "to": [
          1648
        ]
      },
      {
        "from": 409,
        "to": [
          416,
          417
        ]
      },
      {
        "from": 416,
        "to": [
          1648
        ]
      },
      {
        "from": 417,
        "to": [
          761,
          761
        ]
      },
      {
        "from": 425,
        "to": [
          1648
        ]
      },
      {
        "from": 427,
        "to": [
          801
        ]
      },
      {
        "from": 505,
        "to": [
          1648
        ]
      },
      {
        "from": 525,
        "to": [
          532,
          533
        ]
      },
      {
        "from": 532,
        "to": [
          1648
        ]
      },
      {
        "from": 533,
        "to": [
          1145,
          1145
        ]
      },
      {
        "from": 553,
        "to": [
          1648
        ]
      },
      {
        "from": 571,
        "to": [
          578,
          579
        ]
      },
      {
        "from": 578,
        "to": [
          1648
        ]
      },
      {
        "from": 579,
        "to": [
          1163,
          1163
        ]
      },
      {
        "from": 587,
        "to": [
          1648
        ]
      },
      {
        "from": 589,
        "to": [
          596,
          597
        ]
      },
      {
        "from": 596,
        "to": [
          1648
        ]
      },
      {
        "from": 597,
        "to": [
          1394,
          1394
        ]
      },
      {
        "from": 617,
        "to": [
          675,
          745
        ]
      },
      {
        "from": 675,
        "to": [
          683,
          702
        ]
      },
      {
        "from": 683,
        "to": [
          745,
          745
        ]
      },
      {
        "from": 702,
        "to": [
          716
        ]
      },
      {
        "from": 716,
        "to": [
          736,
          716
        ]
      },
      {
        "from": 736,
        "to": [
          745
        ]
      },
      {
        "from": 745,
        "to": [
          1648
        ]
      },
      {
        "from": 761,
        "to": [
          785,
          798
        ]
      },
      {
        "from": 785,
        "to": [
          1648
        ]
      },
      {
        "from": 798,
        "to": [
          799
        ]
      },
      {
        "from": 799,
        "to": [
          407
        ]
      },
      {
        "from": 801,
        "to": [
          853,
          861
        ]
      },
      {
        "from": 853,
        "to": [
          1138,
          1138
        ]
      },
      {
        "from": 861,
        "to": [
          1416,
          1416
        ]
      },
      {
        "from": 927,
        "to": [
          1043,
          1075
        ]
      },
      {
        "from": 1043,
        "to": [
          1057,
          1075
        ]
      },
      {
        "from": 1057,
        "to": [
          1043,
          1043
        ]
      },
      {
        "from": 1075,
        "to": [
          1094,
          1119
        ]
      },
      {
        "from": 1094,
        "to": [
          1119
        ]
      },
      {
        "from": 1119,
        "to": [
          1138
        ]
      },
      {
        "from": 1138,
        "to": [
          505,
          505
        ]
      },
      {
        "from": 1145,
        "to": [
          553
        ]
      },
      {
        "from": 1163,
        "to": [
          1206,
          1211
        ]
      },
      {
        "from": 1206,
        "to": [
          1648
        ]
      },
      {
        "from": 1211,
        "to": [
          1543,
          1543
        ]
      },
      {
        "from": 1260,
        "to": [
          1347
        ]
      },
      {
        "from": 1347,
        "to": [
          1387,
          403
        ]
      },
      {
        "from": 1387,
        "to": [
          1648
        ]
      },
      {
        "from": 1388,
        "to": [
          1389
        ]
      },
      {
        "from": 1389,
        "to": [
          1390
        ]
      },
      {
        "from": 1390,
        "to": [
          1648
        ]
      },
      {
        "from": 1394,
        "to": [
          617
        ]
      },
      {
        "from": 1416,
        "to": [
          1465,
          1481
        ]
      },
      {
        "from": 1465,
        "to": [
          1526,
          1526,
          1526,
          1526
        ]
      },
      {
        "from": 1481,
        "to": [
          1496,
          1526
        ]
      },
      {
        "from": 1496,
        "to": [
          1499
        ]
      },
      {
        "from": 1499,
        "to": [
          1508,
          1526
        ]
      },
      {
        "from": 1508,
        "to": [
          1499,
          1499,
          1499,
          1499
        ]
      },
      {
        "from": 1526,
        "to": [
          1527
        ]
      },
      {
        "from": 1527,
        "to": [
          1615,
          1615,
          1615,
          1615
        ]
      },
      {
        "from": 1539,
        "to": [
          1645,
          281,
          1645,
          927,
          1645,
          1645,
          281
        ]
      },
      {
        "from": 1543,
        "to": [
          1576,
          1581
        ]
      },
      {
        "from": 1576,
        "to": [
          1611,
          1611
        ]
      },
      {
        "from": 1581,
        "to": [
          1615,
          1615
        ]
      },
      {
        "from": 1611,
        "to": [
          1612
        ]
      },
      {
        "from": 1612,
        "to": [
          1260
        ]
      },
      {
        "from": 1615,
        "to": [
          1621
        ]
      },
      {
        "from": 1621,
        "to": [
          1630,
          1539
        ]
      },
      {
        "from": 1630,
        "to": [
          1621,
          1621,
          1621,
          1621,
          1621
        ]
      },
      {
        "from": 1641,
        "to": [
          1648
        ]
      },
      {
        "from": 1645,
        "to": [
          1539,
          1539,
          1611,
          1539
        ]
      },
      {
        "from": 1648,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 5 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 88
    }
  }
}