{
  "name": "Analysis_2022-04-04_23-09-12",
  "address": "",
  "binarySource": "60806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166322f86655811461004d578063a45f27b514610134575b005b34801561005957600080fd5b50604080516084356004818101356020818102858101820190965281855261004b95600160a060020a038435811696602480359760443590931696606435963696919560a49590930192909182919085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506101499650505050505050565b34801561014057600080fd5b5061004b610367565b600160a060020a038716156101a6576101618761050c565b151561016957fe5b60408051600160a060020a038916815290517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a15b60005460408051600160a060020a039092168252517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a16002546040517f22f86655000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301908152602483018a905288821660448401526064830188905260e060848401908152875160e4850152875192909416936322f86655938c938c938c938c938c938c938c939092909160a482019160c4810191610104909101906020808a01910280838360005b8381101561029b578181015183820152602001610283565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156102da5781810151838201526020016102c2565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610319578181015183820152602001610301565b505050509050019a5050505050505050505050600060405180830381600087803b15801561034657600080fd5b505af115801561035a573d6000803e3d6000fd5b5050505050505050505050565b600080546040518291600160a060020a031690303180156108fc029184818181858888f193505050501580156103a1573d6000803e3d6000fd5b50600091505b6001548210156105085760018054839081106103bf57fe5b60009182526020808320909101548254604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a039384169650869563a9059cbb95939094169386936370a08231936024808201949293918390030190829087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050506040513d602081101561046957600080fd5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b505050506040513d60208110156104fb57600080fd5b50506001909101906103a7565b5050565b600080805b6001548110156105605783600160a060020a031660018281548110151561053457fe5b600091825260209091200154600160a060020a031614156105585760019150610560565b600101610511565b50929150505600a165627a7a7230582096b7a44f222e5d5320fa28c6d1f2b53f6c80846596f70a7861762ed0742909610029",
  "binaryHash": "4c3e61ae",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a7230582096b7a44f222e5d5320fa28c6d1f2b53f6c80846596f70a7861762ed0742909610029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649081352660
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166322f86655811461004d578063a45f27b514610134575b005b34801561005957600080fd5b50604080516084356004818101356020818102858101820190965281855261004b95600160a060020a038435811696602480359760443590931696606435963696919560a49590930192909182919085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506101499650505050505050565b34801561014057600080fd5b5061004b610367565b600160a060020a038716156101a6576101618761050c565b151561016957fe5b60408051600160a060020a038916815290517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a15b60005460408051600160a060020a039092168252517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a16002546040517f22f86655000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301908152602483018a905288821660448401526064830188905260e060848401908152875160e4850152875192909416936322f86655938c938c938c938c938c938c938c939092909160a482019160c4810191610104909101906020808a01910280838360005b8381101561029b578181015183820152602001610283565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156102da5781810151838201526020016102c2565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610319578181015183820152602001610301565b505050509050019a5050505050505050505050600060405180830381600087803b15801561034657600080fd5b505af115801561035a573d6000803e3d6000fd5b5050505050505050505050565b600080546040518291600160a060020a031690303180156108fc029184818181858888f193505050501580156103a1573d6000803e3d6000fd5b50600091505b6001548210156105085760018054839081106103bf57fe5b60009182526020808320909101548254604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a039384169650869563a9059cbb95939094169386936370a08231936024808201949293918390030190829087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050506040513d602081101561046957600080fd5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156104d157600080fd5b505af11580156104e5573d6000803e3d6000fd5b505050506040513d60208110156104fb57600080fd5b50506001909101906103a7565b5050565b600080805b6001548110156105605783600160a060020a031660018281548110151561053457fe5b600091825260209091200154600160a060020a031614156105585760019150610560565b600101610511565b50929150505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004b57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004b\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166322f86655811461004d57",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x22f86655\n58: DUP2\n59: EQ\n60: PUSH2 0x004d\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a45f27b51461013457",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0xa45f27b5\n70: EQ\n71: PUSH2 0x0134\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "75: JUMPDEST\n76: STOP"
      },
      {
        "offset": 77,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005957",
        "parsedOpcodes": "77: JUMPDEST\n78: CALLVALUE\n79: DUP1\n80: ISZERO\n81: PUSH2 0x0059\n84: JUMPI"
      },
      {
        "offset": 85,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "85: PUSH1 0x00\n87: DUP1\n88: REVERT"
      },
      {
        "offset": 89,
        "length": 219,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b50604080516084356004818101356020818102858101820190965281855261004b95600160a060020a038435811696602480359760443590931696606435963696919560a49590930192909182919085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750506040805187358901803560208181028481018201909552818452989b9a998901989297509082019550935083925085019084908082843750949750610149965050505050505056",
        "parsedOpcodes": "89: JUMPDEST\n90: POP\n91: PUSH1 0x40\n93: DUP1\n94: MLOAD\n95: PUSH1 0x84\n97: CALLDATALOAD\n98: PUSH1 0x04\n100: DUP2\n101: DUP2\n102: ADD\n103: CALLDATALOAD\n104: PUSH1 0x20\n106: DUP2\n107: DUP2\n108: MUL\n109: DUP6\n110: DUP2\n111: ADD\n112: DUP3\n113: ADD\n114: SWAP1\n115: SWAP7\n116: MSTORE\n117: DUP2\n118: DUP6\n119: MSTORE\n120: PUSH2 0x004b\n123: SWAP6\n124: PUSH1 0x01\n126: PUSH1 0xa0\n128: PUSH1 0x02\n130: EXP\n131: SUB\n132: DUP5\n133: CALLDATALOAD\n134: DUP2\n135: AND\n136: SWAP7\n137: PUSH1 0x24\n139: DUP1\n140: CALLDATALOAD\n141: SWAP8\n142: PUSH1 0x44\n144: CALLDATALOAD\n145: SWAP1\n146: SWAP4\n147: AND\n148: SWAP7\n149: PUSH1 0x64\n151: CALLDATALOAD\n152: SWAP7\n153: CALLDATASIZE\n154: SWAP7\n155: SWAP2\n156: SWAP6\n157: PUSH1 0xa4\n159: SWAP6\n160: SWAP1\n161: SWAP4\n162: ADD\n163: SWAP3\n164: SWAP1\n165: SWAP2\n166: DUP3\n167: SWAP2\n168: SWAP1\n169: DUP6\n170: ADD\n171: SWAP1\n172: DUP5\n173: SWAP1\n174: DUP1\n175: DUP3\n176: DUP5\n177: CALLDATACOPY\n178: POP\n179: POP\n180: PUSH1 0x40\n182: DUP1\n183: MLOAD\n184: DUP8\n185: CALLDATALOAD\n186: DUP10\n187: ADD\n188: DUP1\n189: CALLDATALOAD\n190: PUSH1 0x20\n192: DUP2\n193: DUP2\n194: MUL\n195: DUP5\n196: DUP2\n197: ADD\n198: DUP3\n199: ADD\n200: SWAP1\n201: SWAP6\n202: MSTORE\n203: DUP2\n204: DUP5\n205: MSTORE\n206: SWAP9\n207: SWAP12\n208: SWAP11\n209: SWAP10\n210: DUP10\n211: ADD\n212: SWAP9\n213: SWAP3\n214: SWAP8\n215: POP\n216: SWAP1\n217: DUP3\n218: ADD\n219: SWAP6\n220: POP\n221: SWAP4\n222: POP\n223: DUP4\n224: SWAP3\n225: POP\n226: DUP6\n227: ADD\n228: SWAP1\n229: DUP5\n230: SWAP1\n231: DUP1\n232: DUP3\n233: DUP5\n234: CALLDATACOPY\n235: POP\n236: POP\n237: PUSH1 0x40\n239: DUP1\n240: MLOAD\n241: DUP8\n242: CALLDATALOAD\n243: DUP10\n244: ADD\n245: DUP1\n246: CALLDATALOAD\n247: PUSH1 0x20\n249: DUP2\n250: DUP2\n251: MUL\n252: DUP5\n253: DUP2\n254: ADD\n255: DUP3\n256: ADD\n257: SWAP1\n258: SWAP6\n259: MSTORE\n260: DUP2\n261: DUP5\n262: MSTORE\n263: SWAP9\n264: SWAP12\n265: SWAP11\n266: SWAP10\n267: DUP10\n268: ADD\n269: SWAP9\n270: SWAP3\n271: SWAP8\n272: POP\n273: SWAP1\n274: DUP3\n275: ADD\n276: SWAP6\n277: POP\n278: SWAP4\n279: POP\n280: DUP4\n281: SWAP3\n282: POP\n283: DUP6\n284: ADD\n285: SWAP1\n286: DUP5\n287: SWAP1\n288: DUP1\n289: DUP3\n290: DUP5\n291: CALLDATACOPY\n292: POP\n293: SWAP5\n294: SWAP8\n295: POP\n296: PUSH2 0x0149\n299: SWAP7\n300: POP\n301: POP\n302: POP\n303: POP\n304: POP\n305: POP\n306: POP\n307: JUMP"
      },
      {
        "offset": 308,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561014057",
        "parsedOpcodes": "308: JUMPDEST\n309: CALLVALUE\n310: DUP1\n311: ISZERO\n312: PUSH2 0x0140\n315: JUMPI"
      },
      {
        "offset": 316,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "316: PUSH1 0x00\n318: DUP1\n319: REVERT"
      },
      {
        "offset": 320,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5061004b61036756",
        "parsedOpcodes": "320: JUMPDEST\n321: POP\n322: PUSH2 0x004b\n325: PUSH2 0x0367\n328: JUMP"
      },
      {
        "offset": 329,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a038716156101a657",
        "parsedOpcodes": "329: JUMPDEST\n330: PUSH1 0x01\n332: PUSH1 0xa0\n334: PUSH1 0x02\n336: EXP\n337: SUB\n338: DUP8\n339: AND\n340: ISZERO\n341: PUSH2 0x01a6\n344: JUMPI"
      },
      {
        "offset": 345,
        "length": 8,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "6101618761050c56",
        "parsedOpcodes": "345: PUSH2 0x0161\n348: DUP8\n349: PUSH2 0x050c\n352: JUMP"
      },
      {
        "offset": 353,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b151561016957",
        "parsedOpcodes": "353: JUMPDEST\n354: ISZERO\n355: ISZERO\n356: PUSH2 0x0169\n359: JUMPI"
      },
      {
        "offset": 360,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "360: INVALID"
      },
      {
        "offset": 361,
        "length": 61,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051600160a060020a038916815290517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a1",
        "parsedOpcodes": "361: JUMPDEST\n362: PUSH1 0x40\n364: DUP1\n365: MLOAD\n366: PUSH1 0x01\n368: PUSH1 0xa0\n370: PUSH1 0x02\n372: EXP\n373: SUB\n374: DUP10\n375: AND\n376: DUP2\n377: MSTORE\n378: SWAP1\n379: MLOAD\n380: PUSH32 0x4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df46\n413: SWAP2\n414: DUP2\n415: SWAP1\n416: SUB\n417: PUSH1 0x20\n419: ADD\n420: SWAP1\n421: LOG1"
      },
      {
        "offset": 422,
        "length": 221,
        "type": "common",
        "stackBalance": 20,
        "bytecodeHex": "5b60005460408051600160a060020a039092168252517f4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df469181900360200190a16002546040517f22f86655000000000000000000000000000000000000000000000000000000008152600160a060020a0389811660048301908152602483018a905288821660448401526064830188905260e060848401908152875160e4850152875192909416936322f86655938c938c938c938c938c938c938c939092909160a482019160c4810191610104909101906020808a0191028083836000",
        "parsedOpcodes": "422: JUMPDEST\n423: PUSH1 0x00\n425: SLOAD\n426: PUSH1 0x40\n428: DUP1\n429: MLOAD\n430: PUSH1 0x01\n432: PUSH1 0xa0\n434: PUSH1 0x02\n436: EXP\n437: SUB\n438: SWAP1\n439: SWAP3\n440: AND\n441: DUP3\n442: MSTORE\n443: MLOAD\n444: PUSH32 0x4fa24eeabbb33428278439846bf665517eaaa99ebda8d54001b32aad49e9df46\n477: SWAP2\n478: DUP2\n479: SWAP1\n480: SUB\n481: PUSH1 0x20\n483: ADD\n484: SWAP1\n485: LOG1\n486: PUSH1 0x02\n488: SLOAD\n489: PUSH1 0x40\n491: MLOAD\n492: PUSH32 0x22f8665500000000000000000000000000000000000000000000000000000000\n525: DUP2\n526: MSTORE\n527: PUSH1 0x01\n529: PUSH1 0xa0\n531: PUSH1 0x02\n533: EXP\n534: SUB\n535: DUP10\n536: DUP2\n537: AND\n538: PUSH1 0x04\n540: DUP4\n541: ADD\n542: SWAP1\n543: DUP2\n544: MSTORE\n545: PUSH1 0x24\n547: DUP4\n548: ADD\n549: DUP11\n550: SWAP1\n551: MSTORE\n552: DUP9\n553: DUP3\n554: AND\n555: PUSH1 0x44\n557: DUP5\n558: ADD\n559: MSTORE\n560: PUSH1 0x64\n562: DUP4\n563: ADD\n564: DUP9\n565: SWAP1\n566: MSTORE\n567: PUSH1 0xe0\n569: PUSH1 0x84\n571: DUP5\n572: ADD\n573: SWAP1\n574: DUP2\n575: MSTORE\n576: DUP8\n577: MLOAD\n578: PUSH1 0xe4\n580: DUP6\n581: ADD\n582: MSTORE\n583: DUP8\n584: MLOAD\n585: SWAP3\n586: SWAP1\n587: SWAP5\n588: AND\n589: SWAP4\n590: PUSH4 0x22f86655\n595: SWAP4\n596: DUP13\n597: SWAP4\n598: DUP13\n599: SWAP4\n600: DUP13\n601: SWAP4\n602: DUP13\n603: SWAP4\n604: DUP13\n605: SWAP4\n606: DUP13\n607: SWAP4\n608: DUP13\n609: SWAP4\n610: SWAP1\n611: SWAP3\n612: SWAP1\n613: SWAP2\n614: PUSH1 0xa4\n616: DUP3\n617: ADD\n618: SWAP2\n619: PUSH1 0xc4\n621: DUP2\n622: ADD\n623: SWAP2\n624: PUSH2 0x0104\n627: SWAP1\n628: SWAP2\n629: ADD\n630: SWAP1\n631: PUSH1 0x20\n633: DUP1\n634: DUP11\n635: ADD\n636: SWAP2\n637: MUL\n638: DUP1\n639: DUP4\n640: DUP4\n641: PUSH1 0x00"
      },
      {
        "offset": 643,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561029b57",
        "parsedOpcodes": "643: JUMPDEST\n644: DUP4\n645: DUP2\n646: LT\n647: ISZERO\n648: PUSH2 0x029b\n651: JUMPI"
      },
      {
        "offset": 652,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161028356",
        "parsedOpcodes": "652: DUP2\n653: DUP2\n654: ADD\n655: MLOAD\n656: DUP4\n657: DUP3\n658: ADD\n659: MSTORE\n660: PUSH1 0x20\n662: ADD\n663: PUSH2 0x0283\n666: JUMP"
      },
      {
        "offset": 667,
        "length": 39,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5050505090500184810383528681815181526020019150805190602001906020028083836000",
        "parsedOpcodes": "667: JUMPDEST\n668: POP\n669: POP\n670: POP\n671: POP\n672: SWAP1\n673: POP\n674: ADD\n675: DUP5\n676: DUP2\n677: SUB\n678: DUP4\n679: MSTORE\n680: DUP7\n681: DUP2\n682: DUP2\n683: MLOAD\n684: DUP2\n685: MSTORE\n686: PUSH1 0x20\n688: ADD\n689: SWAP2\n690: POP\n691: DUP1\n692: MLOAD\n693: SWAP1\n694: PUSH1 0x20\n696: ADD\n697: SWAP1\n698: PUSH1 0x20\n700: MUL\n701: DUP1\n702: DUP4\n703: DUP4\n704: PUSH1 0x00"
      },
      {
        "offset": 706,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156102da57",
        "parsedOpcodes": "706: JUMPDEST\n707: DUP4\n708: DUP2\n709: LT\n710: ISZERO\n711: PUSH2 0x02da\n714: JUMPI"
      },
      {
        "offset": 715,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016102c256",
        "parsedOpcodes": "715: DUP2\n716: DUP2\n717: ADD\n718: MLOAD\n719: DUP4\n720: DUP3\n721: ADD\n722: MSTORE\n723: PUSH1 0x20\n725: ADD\n726: PUSH2 0x02c2\n729: JUMP"
      },
      {
        "offset": 730,
        "length": 39,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5050505090500184810382528581815181526020019150805190602001906020028083836000",
        "parsedOpcodes": "730: JUMPDEST\n731: POP\n732: POP\n733: POP\n734: POP\n735: SWAP1\n736: POP\n737: ADD\n738: DUP5\n739: DUP2\n740: SUB\n741: DUP3\n742: MSTORE\n743: DUP6\n744: DUP2\n745: DUP2\n746: MLOAD\n747: DUP2\n748: MSTORE\n749: PUSH1 0x20\n751: ADD\n752: SWAP2\n753: POP\n754: DUP1\n755: MLOAD\n756: SWAP1\n757: PUSH1 0x20\n759: ADD\n760: SWAP1\n761: PUSH1 0x20\n763: MUL\n764: DUP1\n765: DUP4\n766: DUP4\n767: PUSH1 0x00"
      },
      {
        "offset": 769,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561031957",
        "parsedOpcodes": "769: JUMPDEST\n770: DUP4\n771: DUP2\n772: LT\n773: ISZERO\n774: PUSH2 0x0319\n777: JUMPI"
      },
      {
        "offset": 778,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161030156",
        "parsedOpcodes": "778: DUP2\n779: DUP2\n780: ADD\n781: MLOAD\n782: DUP4\n783: DUP3\n784: ADD\n785: MSTORE\n786: PUSH1 0x20\n788: ADD\n789: PUSH2 0x0301\n792: JUMP"
      },
      {
        "offset": 793,
        "length": 41,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b505050509050019a5050505050505050505050600060405180830381600087803b15801561034657",
        "parsedOpcodes": "793: JUMPDEST\n794: POP\n795: POP\n796: POP\n797: POP\n798: SWAP1\n799: POP\n800: ADD\n801: SWAP11\n802: POP\n803: POP\n804: POP\n805: POP\n806: POP\n807: POP\n808: POP\n809: POP\n810: POP\n811: POP\n812: POP\n813: PUSH1 0x00\n815: PUSH1 0x40\n817: MLOAD\n818: DUP1\n819: DUP4\n820: SUB\n821: DUP2\n822: PUSH1 0x00\n824: DUP8\n825: DUP1\n826: EXTCODESIZE\n827: ISZERO\n828: DUP1\n829: ISZERO\n830: PUSH2 0x0346\n833: JUMPI"
      },
      {
        "offset": 834,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "834: PUSH1 0x00\n836: DUP1\n837: REVERT"
      },
      {
        "offset": 838,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561035a57",
        "parsedOpcodes": "838: JUMPDEST\n839: POP\n840: GAS\n841: CALL\n842: ISZERO\n843: DUP1\n844: ISZERO\n845: PUSH2 0x035a\n848: JUMPI"
      },
      {
        "offset": 849,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "849: RETURNDATASIZE\n850: PUSH1 0x00\n852: DUP1\n853: RETURNDATACOPY\n854: RETURNDATASIZE\n855: PUSH1 0x00\n857: REVERT"
      },
      {
        "offset": 858,
        "length": 13,
        "type": "common",
        "stackBalance": -12,
        "bytecodeHex": "5b505050505050505050505056",
        "parsedOpcodes": "858: JUMPDEST\n859: POP\n860: POP\n861: POP\n862: POP\n863: POP\n864: POP\n865: POP\n866: POP\n867: POP\n868: POP\n869: POP\n870: JUMP"
      },
      {
        "offset": 871,
        "length": 49,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600080546040518291600160a060020a031690303180156108fc029184818181858888f193505050501580156103a157",
        "parsedOpcodes": "871: JUMPDEST\n872: PUSH1 0x00\n874: DUP1\n875: SLOAD\n876: PUSH1 0x40\n878: MLOAD\n879: DUP3\n880: SWAP2\n881: PUSH1 0x01\n883: PUSH1 0xa0\n885: PUSH1 0x02\n887: EXP\n888: SUB\n889: AND\n890: SWAP1\n891: ADDRESS\n892: BALANCE\n893: DUP1\n894: ISZERO\n895: PUSH2 0x08fc\n898: MUL\n899: SWAP2\n900: DUP5\n901: DUP2\n902: DUP2\n903: DUP2\n904: DUP6\n905: DUP9\n906: DUP9\n907: CALL\n908: SWAP4\n909: POP\n910: POP\n911: POP\n912: POP\n913: ISZERO\n914: DUP1\n915: ISZERO\n916: PUSH2 0x03a1\n919: JUMPI"
      },
      {
        "offset": 920,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "920: RETURNDATASIZE\n921: PUSH1 0x00\n923: DUP1\n924: RETURNDATACOPY\n925: RETURNDATASIZE\n926: PUSH1 0x00\n928: REVERT"
      },
      {
        "offset": 929,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5060009150",
        "parsedOpcodes": "929: JUMPDEST\n930: POP\n931: PUSH1 0x00\n933: SWAP2\n934: POP"
      },
      {
        "offset": 935,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60015482101561050857",
        "parsedOpcodes": "935: JUMPDEST\n936: PUSH1 0x01\n938: SLOAD\n939: DUP3\n940: LT\n941: ISZERO\n942: PUSH2 0x0508\n945: JUMPI"
      },
      {
        "offset": 946,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "60018054839081106103bf57",
        "parsedOpcodes": "946: PUSH1 0x01\n948: DUP1\n949: SLOAD\n950: DUP4\n951: SWAP1\n952: DUP2\n953: LT\n954: PUSH2 0x03bf\n957: JUMPI"
      },
      {
        "offset": 958,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "958: INVALID"
      },
      {
        "offset": 959,
        "length": 124,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60009182526020808320909101548254604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a039384169650869563a9059cbb95939094169386936370a08231936024808201949293918390030190829087803b15801561043f57",
        "parsedOpcodes": "959: JUMPDEST\n960: PUSH1 0x00\n962: SWAP2\n963: DUP3\n964: MSTORE\n965: PUSH1 0x20\n967: DUP1\n968: DUP4\n969: SHA3\n970: SWAP1\n971: SWAP2\n972: ADD\n973: SLOAD\n974: DUP3\n975: SLOAD\n976: PUSH1 0x40\n978: DUP1\n979: MLOAD\n980: PUSH32 0x70a0823100000000000000000000000000000000000000000000000000000000\n1013: DUP2\n1014: MSTORE\n1015: ADDRESS\n1016: PUSH1 0x04\n1018: DUP3\n1019: ADD\n1020: MSTORE\n1021: SWAP1\n1022: MLOAD\n1023: PUSH1 0x01\n1025: PUSH1 0xa0\n1027: PUSH1 0x02\n1029: EXP\n1030: SUB\n1031: SWAP4\n1032: DUP5\n1033: AND\n1034: SWAP7\n1035: POP\n1036: DUP7\n1037: SWAP6\n1038: PUSH4 0xa9059cbb\n1043: SWAP6\n1044: SWAP4\n1045: SWAP1\n1046: SWAP5\n1047: AND\n1048: SWAP4\n1049: DUP7\n1050: SWAP4\n1051: PUSH4 0x70a08231\n1056: SWAP4\n1057: PUSH1 0x24\n1059: DUP1\n1060: DUP3\n1061: ADD\n1062: SWAP5\n1063: SWAP3\n1064: SWAP4\n1065: SWAP2\n1066: DUP4\n1067: SWAP1\n1068: SUB\n1069: ADD\n1070: SWAP1\n1071: DUP3\n1072: SWAP1\n1073: DUP8\n1074: DUP1\n1075: EXTCODESIZE\n1076: ISZERO\n1077: DUP1\n1078: ISZERO\n1079: PUSH2 0x043f\n1082: JUMPI"
      },
      {
        "offset": 1083,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1083: PUSH1 0x00\n1085: DUP1\n1086: REVERT"
      },
      {
        "offset": 1087,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561045357",
        "parsedOpcodes": "1087: JUMPDEST\n1088: POP\n1089: GAS\n1090: CALL\n1091: ISZERO\n1092: DUP1\n1093: ISZERO\n1094: PUSH2 0x0453\n1097: JUMPI"
      },
      {
        "offset": 1098,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1098: RETURNDATASIZE\n1099: PUSH1 0x00\n1101: DUP1\n1102: RETURNDATACOPY\n1103: RETURNDATASIZE\n1104: PUSH1 0x00\n1106: REVERT"
      },
      {
        "offset": 1107,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561046957",
        "parsedOpcodes": "1107: JUMPDEST\n1108: POP\n1109: POP\n1110: POP\n1111: POP\n1112: PUSH1 0x40\n1114: MLOAD\n1115: RETURNDATASIZE\n1116: PUSH1 0x20\n1118: DUP2\n1119: LT\n1120: ISZERO\n1121: PUSH2 0x0469\n1124: JUMPI"
      },
      {
        "offset": 1125,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1125: PUSH1 0x00\n1127: DUP1\n1128: REVERT"
      },
      {
        "offset": 1129,
        "length": 100,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156104d157",
        "parsedOpcodes": "1129: JUMPDEST\n1130: POP\n1131: MLOAD\n1132: PUSH1 0x40\n1134: DUP1\n1135: MLOAD\n1136: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n1166: PUSH4 0xffffffff\n1171: DUP7\n1172: AND\n1173: MUL\n1174: DUP2\n1175: MSTORE\n1176: PUSH1 0x01\n1178: PUSH1 0xa0\n1180: PUSH1 0x02\n1182: EXP\n1183: SUB\n1184: SWAP1\n1185: SWAP4\n1186: AND\n1187: PUSH1 0x04\n1189: DUP5\n1190: ADD\n1191: MSTORE\n1192: PUSH1 0x24\n1194: DUP4\n1195: ADD\n1196: SWAP2\n1197: SWAP1\n1198: SWAP2\n1199: MSTORE\n1200: MLOAD\n1201: PUSH1 0x44\n1203: DUP1\n1204: DUP4\n1205: ADD\n1206: SWAP3\n1207: PUSH1 0x20\n1209: SWAP3\n1210: SWAP2\n1211: SWAP1\n1212: DUP3\n1213: SWAP1\n1214: SUB\n1215: ADD\n1216: DUP2\n1217: PUSH1 0x00\n1219: DUP8\n1220: DUP1\n1221: EXTCODESIZE\n1222: ISZERO\n1223: DUP1\n1224: ISZERO\n1225: PUSH2 0x04d1\n1228: JUMPI"
      },
      {
        "offset": 1229,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1229: PUSH1 0x00\n1231: DUP1\n1232: REVERT"
      },
      {
        "offset": 1233,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156104e557",
        "parsedOpcodes": "1233: JUMPDEST\n1234: POP\n1235: GAS\n1236: CALL\n1237: ISZERO\n1238: DUP1\n1239: ISZERO\n1240: PUSH2 0x04e5\n1243: JUMPI"
      },
      {
        "offset": 1244,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1244: RETURNDATASIZE\n1245: PUSH1 0x00\n1247: DUP1\n1248: RETURNDATACOPY\n1249: RETURNDATASIZE\n1250: PUSH1 0x00\n1252: REVERT"
      },
      {
        "offset": 1253,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d60208110156104fb57",
        "parsedOpcodes": "1253: JUMPDEST\n1254: POP\n1255: POP\n1256: POP\n1257: POP\n1258: PUSH1 0x40\n1260: MLOAD\n1261: RETURNDATASIZE\n1262: PUSH1 0x20\n1264: DUP2\n1265: LT\n1266: ISZERO\n1267: PUSH2 0x04fb\n1270: JUMPI"
      },
      {
        "offset": 1271,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1271: PUSH1 0x00\n1273: DUP1\n1274: REVERT"
      },
      {
        "offset": 1275,
        "length": 13,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50506001909101906103a756",
        "parsedOpcodes": "1275: JUMPDEST\n1276: POP\n1277: POP\n1278: PUSH1 0x01\n1280: SWAP1\n1281: SWAP2\n1282: ADD\n1283: SWAP1\n1284: PUSH2 0x03a7\n1287: JUMP"
      },
      {
        "offset": 1288,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1288: JUMPDEST\n1289: POP\n1290: POP\n1291: JUMP"
      },
      {
        "offset": 1292,
        "length": 5,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60008080",
        "parsedOpcodes": "1292: JUMPDEST\n1293: PUSH1 0x00\n1295: DUP1\n1296: DUP1"
      },
      {
        "offset": 1297,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60015481101561056057",
        "parsedOpcodes": "1297: JUMPDEST\n1298: PUSH1 0x01\n1300: SLOAD\n1301: DUP2\n1302: LT\n1303: ISZERO\n1304: PUSH2 0x0560\n1307: JUMPI"
      },
      {
        "offset": 1308,
        "length": 23,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "83600160a060020a031660018281548110151561053457",
        "parsedOpcodes": "1308: DUP4\n1309: PUSH1 0x01\n1311: PUSH1 0xa0\n1313: PUSH1 0x02\n1315: EXP\n1316: SUB\n1317: AND\n1318: PUSH1 0x01\n1320: DUP3\n1321: DUP2\n1322: SLOAD\n1323: DUP2\n1324: LT\n1325: ISZERO\n1326: ISZERO\n1327: PUSH2 0x0534\n1330: JUMPI"
      },
      {
        "offset": 1331,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1331: INVALID"
      },
      {
        "offset": 1332,
        "length": 28,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b600091825260209091200154600160a060020a0316141561055857",
        "parsedOpcodes": "1332: JUMPDEST\n1333: PUSH1 0x00\n1335: SWAP2\n1336: DUP3\n1337: MSTORE\n1338: PUSH1 0x20\n1340: SWAP1\n1341: SWAP2\n1342: SHA3\n1343: ADD\n1344: SLOAD\n1345: PUSH1 0x01\n1347: PUSH1 0xa0\n1349: PUSH1 0x02\n1351: EXP\n1352: SUB\n1353: AND\n1354: EQ\n1355: ISZERO\n1356: PUSH2 0x0558\n1359: JUMPI"
      },
      {
        "offset": 1360,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6001915061056056",
        "parsedOpcodes": "1360: PUSH1 0x01\n1362: SWAP2\n1363: POP\n1364: PUSH2 0x0560\n1367: JUMP"
      },
      {
        "offset": 1368,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60010161051156",
        "parsedOpcodes": "1368: JUMPDEST\n1369: PUSH1 0x01\n1371: ADD\n1372: PUSH2 0x0511\n1375: JUMP"
      },
      {
        "offset": 1376,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b509291505056",
        "parsedOpcodes": "1376: JUMPDEST\n1377: POP\n1378: SWAP3\n1379: SWAP2\n1380: POP\n1381: POP\n1382: JUMP"
      },
      {
        "offset": 1383,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1383: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          75
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          77
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          308
        ]
      },
      {
        "from": 75,
        "to": [
          1383
        ]
      },
      {
        "from": 77,
        "to": [
          85,
          89
        ]
      },
      {
        "from": 85,
        "to": [
          1383
        ]
      },
      {
        "from": 89,
        "to": [
          329
        ]
      },
      {
        "from": 308,
        "to": [
          316,
          320
        ]
      },
      {
        "from": 316,
        "to": [
          1383
        ]
      },
      {
        "from": 320,
        "to": [
          871,
          871
        ]
      },
      {
        "from": 329,
        "to": [
          345,
          422
        ]
      },
      {
        "from": 345,
        "to": [
          1292,
          1292
        ]
      },
      {
        "from": 353,
        "to": [
          360,
          361
        ]
      },
      {
        "from": 360,
        "to": [
          1383
        ]
      },
      {
        "from": 361,
        "to": [
          422
        ]
      },
      {
        "from": 422,
        "to": [
          643
        ]
      },
      {
        "from": 643,
        "to": [
          652,
          667
        ]
      },
      {
        "from": 652,
        "to": [
          643,
          643,
          643
        ]
      },
      {
        "from": 667,
        "to": [
          706
        ]
      },
      {
        "from": 706,
        "to": [
          715,
          730
        ]
      },
      {
        "from": 715,
        "to": [
          706,
          706,
          706
        ]
      },
      {
        "from": 730,
        "to": [
          769
        ]
      },
      {
        "from": 769,
        "to": [
          778,
          793
        ]
      },
      {
        "from": 778,
        "to": [
          769,
          769,
          769
        ]
      },
      {
        "from": 793,
        "to": [
          834,
          838
        ]
      },
      {
        "from": 834,
        "to": [
          1383
        ]
      },
      {
        "from": 838,
        "to": [
          849,
          858
        ]
      },
      {
        "from": 849,
        "to": [
          1383
        ]
      },
      {
        "from": 858,
        "to": [
          75
        ]
      },
      {
        "from": 871,
        "to": [
          920,
          929
        ]
      },
      {
        "from": 920,
        "to": [
          1383
        ]
      },
      {
        "from": 929,
        "to": [
          935
        ]
      },
      {
        "from": 935,
        "to": [
          946,
          1288
        ]
      },
      {
        "from": 946,
        "to": [
          958,
          959
        ]
      },
      {
        "from": 958,
        "to": [
          1383
        ]
      },
      {
        "from": 959,
        "to": [
          1083,
          1087
        ]
      },
      {
        "from": 1083,
        "to": [
          1383
        ]
      },
      {
        "from": 1087,
        "to": [
          1098,
          1107
        ]
      },
      {
        "from": 1098,
        "to": [
          1383
        ]
      },
      {
        "from": 1107,
        "to": [
          1125,
          1129
        ]
      },
      {
        "from": 1125,
        "to": [
          1383
        ]
      },
      {
        "from": 1129,
        "to": [
          1229,
          1233
        ]
      },
      {
        "from": 1229,
        "to": [
          1383
        ]
      },
      {
        "from": 1233,
        "to": [
          1244,
          1253
        ]
      },
      {
        "from": 1244,
        "to": [
          1383
        ]
      },
      {
        "from": 1253,
        "to": [
          1271,
          1275
        ]
      },
      {
        "from": 1271,
        "to": [
          1383
        ]
      },
      {
        "from": 1275,
        "to": [
          935,
          935,
          935
        ]
      },
      {
        "from": 1288,
        "to": [
          75,
          75
        ]
      },
      {
        "from": 1292,
        "to": [
          1297
        ]
      },
      {
        "from": 1297,
        "to": [
          1308,
          1376
        ]
      },
      {
        "from": 1308,
        "to": [
          1331,
          1332
        ]
      },
      {
        "from": 1331,
        "to": [
          1383
        ]
      },
      {
        "from": 1332,
        "to": [
          1360,
          1368
        ]
      },
      {
        "from": 1360,
        "to": [
          1376,
          1376,
          1376
        ]
      },
      {
        "from": 1368,
        "to": [
          1297,
          1297,
          1297
        ]
      },
      {
        "from": 1376,
        "to": [
          353,
          353,
          353,
          353
        ]
      },
      {
        "from": 1383,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 53
    }
  }
}