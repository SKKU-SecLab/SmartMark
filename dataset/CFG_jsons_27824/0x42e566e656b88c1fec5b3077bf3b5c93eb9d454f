{
  "name": "Analysis_2022-04-05_02-05-47",
  "address": "",
  "binarySource": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e89d545811461005057806343d726d6146100e5575b600080fd5b604080516020600480358082013583810280860185019096528085526100d195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506100fc9650505050505050565b604080519115158252519081900360200190f35b3480156100f157600080fd5b506100fa6102d3565b005b600060606000808451865114151561011357600080fd5b855160405190808252806020026020018201604052801561014e57816020015b61013b6103c1565b8152602001906001900390816101335790505b509250349150600090505b85518110156102355761019a868281518110151561017357fe5b90602001906020020151868381518110151561018b57fe5b9060200190602002015161035a565b6101bb8286838151811015156101ac57fe5b906020019060200201516103aa565b915085818151811015156101cb57fe5b9060200190602002015183828151811015156101e357fe5b60209081029091010151600160a060020a039091169052845185908290811061020857fe5b90602001906020020151838281518110151561022057fe5b60209081029091018101510152600101610159565b7ff5cc15050b9c97af4960f6d32339c8e18c85a9bbd338386c6c5fed573f29a2ea3334856040518084600160a060020a0316600160a060020a03168152602001838152602001806020018281038252838181518152602001915080516000925b818410156102b55760208085028401810151825260019094019301610295565b9250505094505050505060405180910390a150600195945050505050565b600054600160a060020a0316331461034c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d73672073656e646572206973206e6f74206f776e6572210000000000000000604482015290519081900360640190fd5b600054600160a060020a0316ff5b600160a060020a038216151561036f57600080fd5b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501580156103a5573d6000803e3d6000fd5b505050565b600080838311156103ba57600080fd5b5050900390565b6040805180820190915260008082526020820152905600a165627a7a72305820b44cc059c4a356b790d84cf6a3f047fa31a419b425be4614f16f1d93266b32bc0029",
  "binaryHash": "f6cc4420",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820b44cc059c4a356b790d84cf6a3f047fa31a419b425be4614f16f1d93266b32bc0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649091947153
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e89d545811461005057806343d726d6146100e5575b600080fd5b604080516020600480358082013583810280860185019096528085526100d195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506100fc9650505050505050565b604080519115158252519081900360200190f35b3480156100f157600080fd5b506100fa6102d3565b005b600060606000808451865114151561011357600080fd5b855160405190808252806020026020018201604052801561014e57816020015b61013b6103c1565b8152602001906001900390816101335790505b509250349150600090505b85518110156102355761019a868281518110151561017357fe5b90602001906020020151868381518110151561018b57fe5b9060200190602002015161035a565b6101bb8286838151811015156101ac57fe5b906020019060200201516103aa565b915085818151811015156101cb57fe5b9060200190602002015183828151811015156101e357fe5b60209081029091010151600160a060020a039091169052845185908290811061020857fe5b90602001906020020151838281518110151561022057fe5b60209081029091018101510152600101610159565b7ff5cc15050b9c97af4960f6d32339c8e18c85a9bbd338386c6c5fed573f29a2ea3334856040518084600160a060020a0316600160a060020a03168152602001838152602001806020018281038252838181518152602001915080516000925b818410156102b55760208085028401810151825260019094019301610295565b9250505094505050505060405180910390a150600195945050505050565b600054600160a060020a0316331461034c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d73672073656e646572206973206e6f74206f776e6572210000000000000000604482015290519081900360640190fd5b600054600160a060020a0316ff5b600160a060020a038216151561036f57600080fd5b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501580156103a5573d6000803e3d6000fd5b505050565b600080838311156103ba57600080fd5b5050900390565b6040805180820190915260008082526020820152905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004b57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004b\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e89d545811461005057",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x1e89d545\n58: DUP2\n59: EQ\n60: PUSH2 0x0050\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806343d726d6146100e557",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0x43d726d6\n70: EQ\n71: PUSH2 0x00e5\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "75: JUMPDEST\n76: PUSH1 0x00\n78: DUP1\n79: REVERT"
      },
      {
        "offset": 80,
        "length": 129,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b604080516020600480358082013583810280860185019096528085526100d195369593946024949385019291829185019084908082843750506040805187358901803560208181028481018201909552818452989b9a9989019892975090820195509350839250850190849080828437509497506100fc965050505050505056",
        "parsedOpcodes": "80: JUMPDEST\n81: PUSH1 0x40\n83: DUP1\n84: MLOAD\n85: PUSH1 0x20\n87: PUSH1 0x04\n89: DUP1\n90: CALLDATALOAD\n91: DUP1\n92: DUP3\n93: ADD\n94: CALLDATALOAD\n95: DUP4\n96: DUP2\n97: MUL\n98: DUP1\n99: DUP7\n100: ADD\n101: DUP6\n102: ADD\n103: SWAP1\n104: SWAP7\n105: MSTORE\n106: DUP1\n107: DUP6\n108: MSTORE\n109: PUSH2 0x00d1\n112: SWAP6\n113: CALLDATASIZE\n114: SWAP6\n115: SWAP4\n116: SWAP5\n117: PUSH1 0x24\n119: SWAP5\n120: SWAP4\n121: DUP6\n122: ADD\n123: SWAP3\n124: SWAP2\n125: DUP3\n126: SWAP2\n127: DUP6\n128: ADD\n129: SWAP1\n130: DUP5\n131: SWAP1\n132: DUP1\n133: DUP3\n134: DUP5\n135: CALLDATACOPY\n136: POP\n137: POP\n138: PUSH1 0x40\n140: DUP1\n141: MLOAD\n142: DUP8\n143: CALLDATALOAD\n144: DUP10\n145: ADD\n146: DUP1\n147: CALLDATALOAD\n148: PUSH1 0x20\n150: DUP2\n151: DUP2\n152: MUL\n153: DUP5\n154: DUP2\n155: ADD\n156: DUP3\n157: ADD\n158: SWAP1\n159: SWAP6\n160: MSTORE\n161: DUP2\n162: DUP5\n163: MSTORE\n164: SWAP9\n165: SWAP12\n166: SWAP11\n167: SWAP10\n168: DUP10\n169: ADD\n170: SWAP9\n171: SWAP3\n172: SWAP8\n173: POP\n174: SWAP1\n175: DUP3\n176: ADD\n177: SWAP6\n178: POP\n179: SWAP4\n180: POP\n181: DUP4\n182: SWAP3\n183: POP\n184: DUP6\n185: ADD\n186: SWAP1\n187: DUP5\n188: SWAP1\n189: DUP1\n190: DUP3\n191: DUP5\n192: CALLDATACOPY\n193: POP\n194: SWAP5\n195: SWAP8\n196: POP\n197: PUSH2 0x00fc\n200: SWAP7\n201: POP\n202: POP\n203: POP\n204: POP\n205: POP\n206: POP\n207: POP\n208: JUMP"
      },
      {
        "offset": 209,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "209: JUMPDEST\n210: PUSH1 0x40\n212: DUP1\n213: MLOAD\n214: SWAP2\n215: ISZERO\n216: ISZERO\n217: DUP3\n218: MSTORE\n219: MLOAD\n220: SWAP1\n221: DUP2\n222: SWAP1\n223: SUB\n224: PUSH1 0x20\n226: ADD\n227: SWAP1\n228: RETURN"
      },
      {
        "offset": 229,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100f157",
        "parsedOpcodes": "229: JUMPDEST\n230: CALLVALUE\n231: DUP1\n232: ISZERO\n233: PUSH2 0x00f1\n236: JUMPI"
      },
      {
        "offset": 237,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "237: PUSH1 0x00\n239: DUP1\n240: REVERT"
      },
      {
        "offset": 241,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100fa6102d356",
        "parsedOpcodes": "241: JUMPDEST\n242: POP\n243: PUSH2 0x00fa\n246: PUSH2 0x02d3\n249: JUMP"
      },
      {
        "offset": 250,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "250: JUMPDEST\n251: STOP"
      },
      {
        "offset": 252,
        "length": 19,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b600060606000808451865114151561011357",
        "parsedOpcodes": "252: JUMPDEST\n253: PUSH1 0x00\n255: PUSH1 0x60\n257: PUSH1 0x00\n259: DUP1\n260: DUP5\n261: MLOAD\n262: DUP7\n263: MLOAD\n264: EQ\n265: ISZERO\n266: ISZERO\n267: PUSH2 0x0113\n270: JUMPI"
      },
      {
        "offset": 271,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "271: PUSH1 0x00\n273: DUP1\n274: REVERT"
      },
      {
        "offset": 275,
        "length": 28,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b855160405190808252806020026020018201604052801561014e57",
        "parsedOpcodes": "275: JUMPDEST\n276: DUP6\n277: MLOAD\n278: PUSH1 0x40\n280: MLOAD\n281: SWAP1\n282: DUP1\n283: DUP3\n284: MSTORE\n285: DUP1\n286: PUSH1 0x20\n288: MUL\n289: PUSH1 0x20\n291: ADD\n292: DUP3\n293: ADD\n294: PUSH1 0x40\n296: MSTORE\n297: DUP1\n298: ISZERO\n299: PUSH2 0x014e\n302: JUMPI"
      },
      {
        "offset": 303,
        "length": 4,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "81602001",
        "parsedOpcodes": "303: DUP2\n304: PUSH1 0x20\n306: ADD"
      },
      {
        "offset": 307,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61013b6103c156",
        "parsedOpcodes": "307: JUMPDEST\n308: PUSH2 0x013b\n311: PUSH2 0x03c1\n314: JUMP"
      },
      {
        "offset": 315,
        "length": 17,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b81526020019060019003908161013357",
        "parsedOpcodes": "315: JUMPDEST\n316: DUP2\n317: MSTORE\n318: PUSH1 0x20\n320: ADD\n321: SWAP1\n322: PUSH1 0x01\n324: SWAP1\n325: SUB\n326: SWAP1\n327: DUP2\n328: PUSH2 0x0133\n331: JUMPI"
      },
      {
        "offset": 332,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "9050",
        "parsedOpcodes": "332: SWAP1\n333: POP"
      },
      {
        "offset": 334,
        "length": 11,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50925034915060009050",
        "parsedOpcodes": "334: JUMPDEST\n335: POP\n336: SWAP3\n337: POP\n338: CALLVALUE\n339: SWAP2\n340: POP\n341: PUSH1 0x00\n343: SWAP1\n344: POP"
      },
      {
        "offset": 345,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b855181101561023557",
        "parsedOpcodes": "345: JUMPDEST\n346: DUP6\n347: MLOAD\n348: DUP2\n349: LT\n350: ISZERO\n351: PUSH2 0x0235\n354: JUMPI"
      },
      {
        "offset": 355,
        "length": 15,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "61019a868281518110151561017357",
        "parsedOpcodes": "355: PUSH2 0x019a\n358: DUP7\n359: DUP3\n360: DUP2\n361: MLOAD\n362: DUP2\n363: LT\n364: ISZERO\n365: ISZERO\n366: PUSH2 0x0173\n369: JUMPI"
      },
      {
        "offset": 370,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "370: INVALID"
      },
      {
        "offset": 371,
        "length": 23,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b90602001906020020151868381518110151561018b57",
        "parsedOpcodes": "371: JUMPDEST\n372: SWAP1\n373: PUSH1 0x20\n375: ADD\n376: SWAP1\n377: PUSH1 0x20\n379: MUL\n380: ADD\n381: MLOAD\n382: DUP7\n383: DUP4\n384: DUP2\n385: MLOAD\n386: DUP2\n387: LT\n388: ISZERO\n389: ISZERO\n390: PUSH2 0x018b\n393: JUMPI"
      },
      {
        "offset": 394,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "394: INVALID"
      },
      {
        "offset": 395,
        "length": 15,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b9060200190602002015161035a56",
        "parsedOpcodes": "395: JUMPDEST\n396: SWAP1\n397: PUSH1 0x20\n399: ADD\n400: SWAP1\n401: PUSH1 0x20\n403: MUL\n404: ADD\n405: MLOAD\n406: PUSH2 0x035a\n409: JUMP"
      },
      {
        "offset": 410,
        "length": 17,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b6101bb8286838151811015156101ac57",
        "parsedOpcodes": "410: JUMPDEST\n411: PUSH2 0x01bb\n414: DUP3\n415: DUP7\n416: DUP4\n417: DUP2\n418: MLOAD\n419: DUP2\n420: LT\n421: ISZERO\n422: ISZERO\n423: PUSH2 0x01ac\n426: JUMPI"
      },
      {
        "offset": 427,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "427: INVALID"
      },
      {
        "offset": 428,
        "length": 15,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b906020019060200201516103aa56",
        "parsedOpcodes": "428: JUMPDEST\n429: SWAP1\n430: PUSH1 0x20\n432: ADD\n433: SWAP1\n434: PUSH1 0x20\n436: MUL\n437: ADD\n438: MLOAD\n439: PUSH2 0x03aa\n442: JUMP"
      },
      {
        "offset": 443,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b915085818151811015156101cb57",
        "parsedOpcodes": "443: JUMPDEST\n444: SWAP2\n445: POP\n446: DUP6\n447: DUP2\n448: DUP2\n449: MLOAD\n450: DUP2\n451: LT\n452: ISZERO\n453: ISZERO\n454: PUSH2 0x01cb\n457: JUMPI"
      },
      {
        "offset": 458,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "458: INVALID"
      },
      {
        "offset": 459,
        "length": 23,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b9060200190602002015183828151811015156101e357",
        "parsedOpcodes": "459: JUMPDEST\n460: SWAP1\n461: PUSH1 0x20\n463: ADD\n464: SWAP1\n465: PUSH1 0x20\n467: MUL\n468: ADD\n469: MLOAD\n470: DUP4\n471: DUP3\n472: DUP2\n473: MLOAD\n474: DUP2\n475: LT\n476: ISZERO\n477: ISZERO\n478: PUSH2 0x01e3\n481: JUMPI"
      },
      {
        "offset": 482,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "482: INVALID"
      },
      {
        "offset": 483,
        "length": 36,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b60209081029091010151600160a060020a039091169052845185908290811061020857",
        "parsedOpcodes": "483: JUMPDEST\n484: PUSH1 0x20\n486: SWAP1\n487: DUP2\n488: MUL\n489: SWAP1\n490: SWAP2\n491: ADD\n492: ADD\n493: MLOAD\n494: PUSH1 0x01\n496: PUSH1 0xa0\n498: PUSH1 0x02\n500: EXP\n501: SUB\n502: SWAP1\n503: SWAP2\n504: AND\n505: SWAP1\n506: MSTORE\n507: DUP5\n508: MLOAD\n509: DUP6\n510: SWAP1\n511: DUP3\n512: SWAP1\n513: DUP2\n514: LT\n515: PUSH2 0x0208\n518: JUMPI"
      },
      {
        "offset": 519,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "519: INVALID"
      },
      {
        "offset": 520,
        "length": 23,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b90602001906020020151838281518110151561022057",
        "parsedOpcodes": "520: JUMPDEST\n521: SWAP1\n522: PUSH1 0x20\n524: ADD\n525: SWAP1\n526: PUSH1 0x20\n528: MUL\n529: ADD\n530: MLOAD\n531: DUP4\n532: DUP3\n533: DUP2\n534: MLOAD\n535: DUP2\n536: LT\n537: ISZERO\n538: ISZERO\n539: PUSH2 0x0220\n542: JUMPI"
      },
      {
        "offset": 543,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "543: INVALID"
      },
      {
        "offset": 544,
        "length": 21,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6020908102909101810151015260010161015956",
        "parsedOpcodes": "544: JUMPDEST\n545: PUSH1 0x20\n547: SWAP1\n548: DUP2\n549: MUL\n550: SWAP1\n551: SWAP2\n552: ADD\n553: DUP2\n554: ADD\n555: MLOAD\n556: ADD\n557: MSTORE\n558: PUSH1 0x01\n560: ADD\n561: PUSH2 0x0159\n564: JUMP"
      },
      {
        "offset": 565,
        "length": 96,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b7ff5cc15050b9c97af4960f6d32339c8e18c85a9bbd338386c6c5fed573f29a2ea3334856040518084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051600092",
        "parsedOpcodes": "565: JUMPDEST\n566: PUSH32 0xf5cc15050b9c97af4960f6d32339c8e18c85a9bbd338386c6c5fed573f29a2ea\n599: CALLER\n600: CALLVALUE\n601: DUP6\n602: PUSH1 0x40\n604: MLOAD\n605: DUP1\n606: DUP5\n607: PUSH1 0x01\n609: PUSH1 0xa0\n611: PUSH1 0x02\n613: EXP\n614: SUB\n615: AND\n616: PUSH1 0x01\n618: PUSH1 0xa0\n620: PUSH1 0x02\n622: EXP\n623: SUB\n624: AND\n625: DUP2\n626: MSTORE\n627: PUSH1 0x20\n629: ADD\n630: DUP4\n631: DUP2\n632: MSTORE\n633: PUSH1 0x20\n635: ADD\n636: DUP1\n637: PUSH1 0x20\n639: ADD\n640: DUP3\n641: DUP2\n642: SUB\n643: DUP3\n644: MSTORE\n645: DUP4\n646: DUP2\n647: DUP2\n648: MLOAD\n649: DUP2\n650: MSTORE\n651: PUSH1 0x20\n653: ADD\n654: SWAP2\n655: POP\n656: DUP1\n657: MLOAD\n658: PUSH1 0x00\n660: SWAP3"
      },
      {
        "offset": 661,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b818410156102b557",
        "parsedOpcodes": "661: JUMPDEST\n662: DUP2\n663: DUP5\n664: LT\n665: ISZERO\n666: PUSH2 0x02b5\n669: JUMPI"
      },
      {
        "offset": 670,
        "length": 23,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6020808502840181015182526001909401930161029556",
        "parsedOpcodes": "670: PUSH1 0x20\n672: DUP1\n673: DUP6\n674: MUL\n675: DUP5\n676: ADD\n677: DUP2\n678: ADD\n679: MLOAD\n680: DUP3\n681: MSTORE\n682: PUSH1 0x01\n684: SWAP1\n685: SWAP5\n686: ADD\n687: SWAP4\n688: ADD\n689: PUSH2 0x0295\n692: JUMP"
      },
      {
        "offset": 693,
        "length": 30,
        "type": "common",
        "stackBalance": -16,
        "bytecodeHex": "5b9250505094505050505060405180910390a15060019594505050505056",
        "parsedOpcodes": "693: JUMPDEST\n694: SWAP3\n695: POP\n696: POP\n697: POP\n698: SWAP5\n699: POP\n700: POP\n701: POP\n702: POP\n703: POP\n704: PUSH1 0x40\n706: MLOAD\n707: DUP1\n708: SWAP2\n709: SUB\n710: SWAP1\n711: LOG1\n712: POP\n713: PUSH1 0x01\n715: SWAP6\n716: SWAP5\n717: POP\n718: POP\n719: POP\n720: POP\n721: POP\n722: JUMP"
      },
      {
        "offset": 723,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600054600160a060020a0316331461034c57",
        "parsedOpcodes": "723: JUMPDEST\n724: PUSH1 0x00\n726: SLOAD\n727: PUSH1 0x01\n729: PUSH1 0xa0\n731: PUSH1 0x02\n733: EXP\n734: SUB\n735: AND\n736: CALLER\n737: EQ\n738: PUSH2 0x034c\n741: JUMPI"
      },
      {
        "offset": 742,
        "length": 102,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d73672073656e646572206973206e6f74206f776e6572210000000000000000604482015290519081900360640190fd",
        "parsedOpcodes": "742: PUSH1 0x40\n744: DUP1\n745: MLOAD\n746: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n779: DUP2\n780: MSTORE\n781: PUSH1 0x20\n783: PUSH1 0x04\n785: DUP3\n786: ADD\n787: MSTORE\n788: PUSH1 0x18\n790: PUSH1 0x24\n792: DUP3\n793: ADD\n794: MSTORE\n795: PUSH32 0x6d73672073656e646572206973206e6f74206f776e6572210000000000000000\n828: PUSH1 0x44\n830: DUP3\n831: ADD\n832: MSTORE\n833: SWAP1\n834: MLOAD\n835: SWAP1\n836: DUP2\n837: SWAP1\n838: SUB\n839: PUSH1 0x64\n841: ADD\n842: SWAP1\n843: REVERT"
      },
      {
        "offset": 844,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600054600160a060020a0316ff",
        "parsedOpcodes": "844: JUMPDEST\n845: PUSH1 0x00\n847: SLOAD\n848: PUSH1 0x01\n850: PUSH1 0xa0\n852: PUSH1 0x02\n854: EXP\n855: SUB\n856: AND\n857: SELFDESTRUCT"
      },
      {
        "offset": 858,
        "length": 17,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a038216151561036f57",
        "parsedOpcodes": "858: JUMPDEST\n859: PUSH1 0x01\n861: PUSH1 0xa0\n863: PUSH1 0x02\n865: EXP\n866: SUB\n867: DUP3\n868: AND\n869: ISZERO\n870: ISZERO\n871: PUSH2 0x036f\n874: JUMPI"
      },
      {
        "offset": 875,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "875: PUSH1 0x00\n877: DUP1\n878: REVERT"
      },
      {
        "offset": 879,
        "length": 45,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501580156103a557",
        "parsedOpcodes": "879: JUMPDEST\n880: PUSH1 0x40\n882: MLOAD\n883: PUSH1 0x01\n885: PUSH1 0xa0\n887: PUSH1 0x02\n889: EXP\n890: SUB\n891: DUP4\n892: AND\n893: SWAP1\n894: DUP3\n895: ISZERO\n896: PUSH2 0x08fc\n899: MUL\n900: SWAP1\n901: DUP4\n902: SWAP1\n903: PUSH1 0x00\n905: DUP2\n906: DUP2\n907: DUP2\n908: DUP6\n909: DUP9\n910: DUP9\n911: CALL\n912: SWAP4\n913: POP\n914: POP\n915: POP\n916: POP\n917: ISZERO\n918: DUP1\n919: ISZERO\n920: PUSH2 0x03a5\n923: JUMPI"
      },
      {
        "offset": 924,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "924: RETURNDATASIZE\n925: PUSH1 0x00\n927: DUP1\n928: RETURNDATACOPY\n929: RETURNDATASIZE\n930: PUSH1 0x00\n932: REVERT"
      },
      {
        "offset": 933,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "933: JUMPDEST\n934: POP\n935: POP\n936: POP\n937: JUMP"
      },
      {
        "offset": 938,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600080838311156103ba57",
        "parsedOpcodes": "938: JUMPDEST\n939: PUSH1 0x00\n941: DUP1\n942: DUP4\n943: DUP4\n944: GT\n945: ISZERO\n946: PUSH2 0x03ba\n949: JUMPI"
      },
      {
        "offset": 950,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "950: PUSH1 0x00\n952: DUP1\n953: REVERT"
      },
      {
        "offset": 954,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b505090039056",
        "parsedOpcodes": "954: JUMPDEST\n955: POP\n956: POP\n957: SWAP1\n958: SUB\n959: SWAP1\n960: JUMP"
      },
      {
        "offset": 961,
        "length": 23,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051808201909152600080825260208201529056",
        "parsedOpcodes": "961: JUMPDEST\n962: PUSH1 0x40\n964: DUP1\n965: MLOAD\n966: DUP1\n967: DUP3\n968: ADD\n969: SWAP1\n970: SWAP2\n971: MSTORE\n972: PUSH1 0x00\n974: DUP1\n975: DUP3\n976: MSTORE\n977: PUSH1 0x20\n979: DUP3\n980: ADD\n981: MSTORE\n982: SWAP1\n983: JUMP"
      },
      {
        "offset": 984,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "984: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          75
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          80
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          229
        ]
      },
      {
        "from": 75,
        "to": [
          984
        ]
      },
      {
        "from": 80,
        "to": [
          252
        ]
      },
      {
        "from": 209,
        "to": [
          984
        ]
      },
      {
        "from": 229,
        "to": [
          237,
          241
        ]
      },
      {
        "from": 237,
        "to": [
          984
        ]
      },
      {
        "from": 241,
        "to": [
          723,
          723
        ]
      },
      {
        "from": 250,
        "to": [
          984
        ]
      },
      {
        "from": 252,
        "to": [
          271,
          275
        ]
      },
      {
        "from": 271,
        "to": [
          984
        ]
      },
      {
        "from": 275,
        "to": [
          303,
          334
        ]
      },
      {
        "from": 303,
        "to": [
          307
        ]
      },
      {
        "from": 307,
        "to": [
          961,
          961,
          961
        ]
      },
      {
        "from": 315,
        "to": [
          332,
          307
        ]
      },
      {
        "from": 332,
        "to": [
          334
        ]
      },
      {
        "from": 334,
        "to": [
          345
        ]
      },
      {
        "from": 345,
        "to": [
          355,
          565
        ]
      },
      {
        "from": 355,
        "to": [
          370,
          371
        ]
      },
      {
        "from": 370,
        "to": [
          984
        ]
      },
      {
        "from": 371,
        "to": [
          394,
          395
        ]
      },
      {
        "from": 394,
        "to": [
          984
        ]
      },
      {
        "from": 395,
        "to": [
          858,
          858,
          858
        ]
      },
      {
        "from": 410,
        "to": [
          427,
          428
        ]
      },
      {
        "from": 427,
        "to": [
          984
        ]
      },
      {
        "from": 428,
        "to": [
          938,
          938,
          938
        ]
      },
      {
        "from": 443,
        "to": [
          458,
          459
        ]
      },
      {
        "from": 458,
        "to": [
          984
        ]
      },
      {
        "from": 459,
        "to": [
          482,
          483
        ]
      },
      {
        "from": 482,
        "to": [
          984
        ]
      },
      {
        "from": 483,
        "to": [
          519,
          520
        ]
      },
      {
        "from": 519,
        "to": [
          984
        ]
      },
      {
        "from": 520,
        "to": [
          543,
          544
        ]
      },
      {
        "from": 543,
        "to": [
          984
        ]
      },
      {
        "from": 544,
        "to": [
          345,
          345,
          345
        ]
      },
      {
        "from": 565,
        "to": [
          661
        ]
      },
      {
        "from": 661,
        "to": [
          670,
          693
        ]
      },
      {
        "from": 670,
        "to": [
          661,
          661,
          661,
          661,
          661
        ]
      },
      {
        "from": 693,
        "to": [
          209,
          209,
          209,
          209
        ]
      },
      {
        "from": 723,
        "to": [
          742,
          844
        ]
      },
      {
        "from": 742,
        "to": [
          984
        ]
      },
      {
        "from": 844,
        "to": [
          984
        ]
      },
      {
        "from": 858,
        "to": [
          875,
          879
        ]
      },
      {
        "from": 875,
        "to": [
          984
        ]
      },
      {
        "from": 879,
        "to": [
          924,
          933
        ]
      },
      {
        "from": 924,
        "to": [
          984
        ]
      },
      {
        "from": 933,
        "to": [
          410,
          410
        ]
      },
      {
        "from": 938,
        "to": [
          950,
          954
        ]
      },
      {
        "from": 950,
        "to": [
          984
        ]
      },
      {
        "from": 954,
        "to": [
          443,
          443
        ]
      },
      {
        "from": 961,
        "to": [
          315
        ]
      },
      {
        "from": 984,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 49
    }
  }
}