{
  "name": "Analysis_2022-04-05_04-24-33",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80635c19a95c14610051578063609ff1bd146100795780639e7b8d6114610097578063b3f98adc146100bd575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100dd565b005b610081610230565b6040805160ff9092168252519081900360200190f35b610077600480360360208110156100ad57600080fd5b50356001600160a01b0316610298565b610077600480360360208110156100d357600080fd5b503560ff166102f5565b3360009081526001602081905260409091209081015460ff1615610101575061022d565b5b6001600160a01b0382811660009081526001602081905260409091200154620100009004161580159061015957506001600160a01b0382811660009081526001602081905260409091200154620100009004163314155b1561018b576001600160a01b039182166000908152600160208190526040909120015462010000900490911690610102565b6001600160a01b0382163314156101a2575061022d565b6001818101805460ff1916821762010000600160b01b031916620100006001600160a01b0386169081029190911790915560009081526020829052604090209081015460ff16156102225781546001820154600280549091610100900460ff1690811061020b57fe5b60009182526020909120018054909101905561022a565b815481540181555b50505b50565b600080805b60025460ff82161015610293578160028260ff168154811061025357fe5b9060005260206000200160000154111561028b5760028160ff168154811061027757fe5b906000526020600020016000015491508092505b600101610235565b505090565b6000546001600160a01b0316331415806102ce57506001600160a01b0381166000908152600160208190526040909120015460ff165b156102d85761022d565b6001600160a01b0316600090815260016020819052604090912055565b3360009081526001602081905260409091209081015460ff168061031e575060025460ff831610155b15610329575061022d565b6001818101805460ff191690911761ff00191661010060ff85169081029190911790915581546002805491929091811061035f57fe5b600091825260209091200180549091019055505056fea265627a7a72315820574356835bf4af21604728acde5eb938a5017241db878d85ca64348d3ad8952464736f6c634300050c0032",
  "binaryHash": "162d9ac3",
  "isOnlyRuntime": true,
  "metadata": "a265627a7a72315820574356835bf4af21604728acde5eb938a5017241db878d85ca64348d3ad8952464736f6c634300050c0032",
  "solidityVersion": "0.5.12",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649100273307
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80635c19a95c14610051578063609ff1bd146100795780639e7b8d6114610097578063b3f98adc146100bd575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b03166100dd565b005b610081610230565b6040805160ff9092168252519081900360200190f35b610077600480360360208110156100ad57600080fd5b50356001600160a01b0316610298565b610077600480360360208110156100d357600080fd5b503560ff166102f5565b3360009081526001602081905260409091209081015460ff1615610101575061022d565b5b6001600160a01b0382811660009081526001602081905260409091200154620100009004161580159061015957506001600160a01b0382811660009081526001602081905260409091200154620100009004163314155b1561018b576001600160a01b039182166000908152600160208190526040909120015462010000900490911690610102565b6001600160a01b0382163314156101a2575061022d565b6001818101805460ff1916821762010000600160b01b031916620100006001600160a01b0386169081029190911790915560009081526020829052604090209081015460ff16156102225781546001820154600280549091610100900460ff1690811061020b57fe5b60009182526020909120018054909101905561022a565b815481540181555b50505b50565b600080805b60025460ff82161015610293578160028260ff168154811061025357fe5b9060005260206000200160000154111561028b5760028160ff168154811061027757fe5b906000526020600020016000015491508092505b600101610235565b505090565b6000546001600160a01b0316331415806102ce57506001600160a01b0381166000908152600160208190526040909120015460ff165b156102d85761022d565b6001600160a01b0316600090815260016020819052604090912055565b3360009081526001602081905260409091209081015460ff168061031e575060025460ff831610155b15610329575061022d565b6001818101805460ff191690911761ff00191661010060ff85169081029190911790915581546002805491929091811061035f57fe5b600091825260209091200180549091019055505056fe",
    "remainingData": "fe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061004c57",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x004c\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c80635c19a95c1461005157",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0x5c19a95c\n38: EQ\n39: PUSH2 0x0051\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063609ff1bd1461007957",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0x609ff1bd\n49: EQ\n50: PUSH2 0x0079\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80639e7b8d611461009757",
        "parsedOpcodes": "54: DUP1\n55: PUSH4 0x9e7b8d61\n60: EQ\n61: PUSH2 0x0097\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063b3f98adc146100bd57",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0xb3f98adc\n71: EQ\n72: PUSH2 0x00bd\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "76: JUMPDEST\n77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100776004803603602081101561006757",
        "parsedOpcodes": "81: JUMPDEST\n82: PUSH2 0x0077\n85: PUSH1 0x04\n87: DUP1\n88: CALLDATASIZE\n89: SUB\n90: PUSH1 0x20\n92: DUP2\n93: LT\n94: ISZERO\n95: PUSH2 0x0067\n98: JUMPI"
      },
      {
        "offset": 99,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "99: PUSH1 0x00\n101: DUP1\n102: REVERT"
      },
      {
        "offset": 103,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b03166100dd56",
        "parsedOpcodes": "103: JUMPDEST\n104: POP\n105: CALLDATALOAD\n106: PUSH1 0x01\n108: PUSH1 0x01\n110: PUSH1 0xa0\n112: SHL\n113: SUB\n114: AND\n115: PUSH2 0x00dd\n118: JUMP"
      },
      {
        "offset": 119,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "119: JUMPDEST\n120: STOP"
      },
      {
        "offset": 121,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61008161023056",
        "parsedOpcodes": "121: JUMPDEST\n122: PUSH2 0x0081\n125: PUSH2 0x0230\n128: JUMP"
      },
      {
        "offset": 129,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040805160ff9092168252519081900360200190f3",
        "parsedOpcodes": "129: JUMPDEST\n130: PUSH1 0x40\n132: DUP1\n133: MLOAD\n134: PUSH1 0xff\n136: SWAP1\n137: SWAP3\n138: AND\n139: DUP3\n140: MSTORE\n141: MLOAD\n142: SWAP1\n143: DUP2\n144: SWAP1\n145: SUB\n146: PUSH1 0x20\n148: ADD\n149: SWAP1\n150: RETURN"
      },
      {
        "offset": 151,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b610077600480360360208110156100ad57",
        "parsedOpcodes": "151: JUMPDEST\n152: PUSH2 0x0077\n155: PUSH1 0x04\n157: DUP1\n158: CALLDATASIZE\n159: SUB\n160: PUSH1 0x20\n162: DUP2\n163: LT\n164: ISZERO\n165: PUSH2 0x00ad\n168: JUMPI"
      },
      {
        "offset": 169,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "169: PUSH1 0x00\n171: DUP1\n172: REVERT"
      },
      {
        "offset": 173,
        "length": 16,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b031661029856",
        "parsedOpcodes": "173: JUMPDEST\n174: POP\n175: CALLDATALOAD\n176: PUSH1 0x01\n178: PUSH1 0x01\n180: PUSH1 0xa0\n182: SHL\n183: SUB\n184: AND\n185: PUSH2 0x0298\n188: JUMP"
      },
      {
        "offset": 189,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b610077600480360360208110156100d357",
        "parsedOpcodes": "189: JUMPDEST\n190: PUSH2 0x0077\n193: PUSH1 0x04\n195: DUP1\n196: CALLDATASIZE\n197: SUB\n198: PUSH1 0x20\n200: DUP2\n201: LT\n202: ISZERO\n203: PUSH2 0x00d3\n206: JUMPI"
      },
      {
        "offset": 207,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "207: PUSH1 0x00\n209: DUP1\n210: REVERT"
      },
      {
        "offset": 211,
        "length": 10,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b503560ff166102f556",
        "parsedOpcodes": "211: JUMPDEST\n212: POP\n213: CALLDATALOAD\n214: PUSH1 0xff\n216: AND\n217: PUSH2 0x02f5\n220: JUMP"
      },
      {
        "offset": 221,
        "length": 31,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b3360009081526001602081905260409091209081015460ff161561010157",
        "parsedOpcodes": "221: JUMPDEST\n222: CALLER\n223: PUSH1 0x00\n225: SWAP1\n226: DUP2\n227: MSTORE\n228: PUSH1 0x01\n230: PUSH1 0x20\n232: DUP2\n233: SWAP1\n234: MSTORE\n235: PUSH1 0x40\n237: SWAP1\n238: SWAP2\n239: SHA3\n240: SWAP1\n241: DUP2\n242: ADD\n243: SLOAD\n244: PUSH1 0xff\n246: AND\n247: ISZERO\n248: PUSH2 0x0101\n251: JUMPI"
      },
      {
        "offset": 252,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5061022d56",
        "parsedOpcodes": "252: POP\n253: PUSH2 0x022d\n256: JUMP"
      },
      {
        "offset": 257,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "257: JUMPDEST"
      },
      {
        "offset": 258,
        "length": 46,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001600160a01b0382811660009081526001602081905260409091200154620100009004161580159061015957",
        "parsedOpcodes": "258: JUMPDEST\n259: PUSH1 0x01\n261: PUSH1 0x01\n263: PUSH1 0xa0\n265: SHL\n266: SUB\n267: DUP3\n268: DUP2\n269: AND\n270: PUSH1 0x00\n272: SWAP1\n273: DUP2\n274: MSTORE\n275: PUSH1 0x01\n277: PUSH1 0x20\n279: DUP2\n280: SWAP1\n281: MSTORE\n282: PUSH1 0x40\n284: SWAP1\n285: SWAP2\n286: SHA3\n287: ADD\n288: SLOAD\n289: PUSH3 0x010000\n293: SWAP1\n294: DIV\n295: AND\n296: ISZERO\n297: DUP1\n298: ISZERO\n299: SWAP1\n300: PUSH2 0x0159\n303: JUMPI"
      },
      {
        "offset": 304,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506001600160a01b038281166000908152600160208190526040909120015462010000900416331415",
        "parsedOpcodes": "304: POP\n305: PUSH1 0x01\n307: PUSH1 0x01\n309: PUSH1 0xa0\n311: SHL\n312: SUB\n313: DUP3\n314: DUP2\n315: AND\n316: PUSH1 0x00\n318: SWAP1\n319: DUP2\n320: MSTORE\n321: PUSH1 0x01\n323: PUSH1 0x20\n325: DUP2\n326: SWAP1\n327: MSTORE\n328: PUSH1 0x40\n330: SWAP1\n331: SWAP2\n332: SHA3\n333: ADD\n334: SLOAD\n335: PUSH3 0x010000\n339: SWAP1\n340: DIV\n341: AND\n342: CALLER\n343: EQ\n344: ISZERO"
      },
      {
        "offset": 345,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561018b57",
        "parsedOpcodes": "345: JUMPDEST\n346: ISZERO\n347: PUSH2 0x018b\n350: JUMPI"
      },
      {
        "offset": 351,
        "length": 44,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6001600160a01b03918216600090815260016020819052604090912001546201000090049091169061010256",
        "parsedOpcodes": "351: PUSH1 0x01\n353: PUSH1 0x01\n355: PUSH1 0xa0\n357: SHL\n358: SUB\n359: SWAP2\n360: DUP3\n361: AND\n362: PUSH1 0x00\n364: SWAP1\n365: DUP2\n366: MSTORE\n367: PUSH1 0x01\n369: PUSH1 0x20\n371: DUP2\n372: SWAP1\n373: MSTORE\n374: PUSH1 0x40\n376: SWAP1\n377: SWAP2\n378: SHA3\n379: ADD\n380: SLOAD\n381: PUSH3 0x010000\n385: SWAP1\n386: DIV\n387: SWAP1\n388: SWAP2\n389: AND\n390: SWAP1\n391: PUSH2 0x0102\n394: JUMP"
      },
      {
        "offset": 395,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b0382163314156101a257",
        "parsedOpcodes": "395: JUMPDEST\n396: PUSH1 0x01\n398: PUSH1 0x01\n400: PUSH1 0xa0\n402: SHL\n403: SUB\n404: DUP3\n405: AND\n406: CALLER\n407: EQ\n408: ISZERO\n409: PUSH2 0x01a2\n412: JUMPI"
      },
      {
        "offset": 413,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5061022d56",
        "parsedOpcodes": "413: POP\n414: PUSH2 0x022d\n417: JUMP"
      },
      {
        "offset": 418,
        "length": 76,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001818101805460ff1916821762010000600160b01b031916620100006001600160a01b0386169081029190911790915560009081526020829052604090209081015460ff161561022257",
        "parsedOpcodes": "418: JUMPDEST\n419: PUSH1 0x01\n421: DUP2\n422: DUP2\n423: ADD\n424: DUP1\n425: SLOAD\n426: PUSH1 0xff\n428: NOT\n429: AND\n430: DUP3\n431: OR\n432: PUSH3 0x010000\n436: PUSH1 0x01\n438: PUSH1 0xb0\n440: SHL\n441: SUB\n442: NOT\n443: AND\n444: PUSH3 0x010000\n448: PUSH1 0x01\n450: PUSH1 0x01\n452: PUSH1 0xa0\n454: SHL\n455: SUB\n456: DUP7\n457: AND\n458: SWAP1\n459: DUP2\n460: MUL\n461: SWAP2\n462: SWAP1\n463: SWAP2\n464: OR\n465: SWAP1\n466: SWAP2\n467: SSTORE\n468: PUSH1 0x00\n470: SWAP1\n471: DUP2\n472: MSTORE\n473: PUSH1 0x20\n475: DUP3\n476: SWAP1\n477: MSTORE\n478: PUSH1 0x40\n480: SWAP1\n481: SHA3\n482: SWAP1\n483: DUP2\n484: ADD\n485: SLOAD\n486: PUSH1 0xff\n488: AND\n489: ISZERO\n490: PUSH2 0x0222\n493: JUMPI"
      },
      {
        "offset": 494,
        "length": 28,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "81546001820154600280549091610100900460ff1690811061020b57",
        "parsedOpcodes": "494: DUP2\n495: SLOAD\n496: PUSH1 0x01\n498: DUP3\n499: ADD\n500: SLOAD\n501: PUSH1 0x02\n503: DUP1\n504: SLOAD\n505: SWAP1\n506: SWAP2\n507: PUSH2 0x0100\n510: SWAP1\n511: DIV\n512: PUSH1 0xff\n514: AND\n515: SWAP1\n516: DUP2\n517: LT\n518: PUSH2 0x020b\n521: JUMPI"
      },
      {
        "offset": 522,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "522: INVALID"
      },
      {
        "offset": 523,
        "length": 23,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b60009182526020909120018054909101905561022a56",
        "parsedOpcodes": "523: JUMPDEST\n524: PUSH1 0x00\n526: SWAP2\n527: DUP3\n528: MSTORE\n529: PUSH1 0x20\n531: SWAP1\n532: SWAP2\n533: SHA3\n534: ADD\n535: DUP1\n536: SLOAD\n537: SWAP1\n538: SWAP2\n539: ADD\n540: SWAP1\n541: SSTORE\n542: PUSH2 0x022a\n545: JUMP"
      },
      {
        "offset": 546,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b81548154018155",
        "parsedOpcodes": "546: JUMPDEST\n547: DUP2\n548: SLOAD\n549: DUP2\n550: SLOAD\n551: ADD\n552: DUP2\n553: SSTORE"
      },
      {
        "offset": 554,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5050",
        "parsedOpcodes": "554: JUMPDEST\n555: POP\n556: POP"
      },
      {
        "offset": 557,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "557: JUMPDEST\n558: POP\n559: JUMP"
      },
      {
        "offset": 560,
        "length": 5,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60008080",
        "parsedOpcodes": "560: JUMPDEST\n561: PUSH1 0x00\n563: DUP1\n564: DUP1"
      },
      {
        "offset": 565,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60025460ff8216101561029357",
        "parsedOpcodes": "565: JUMPDEST\n566: PUSH1 0x02\n568: SLOAD\n569: PUSH1 0xff\n571: DUP3\n572: AND\n573: LT\n574: ISZERO\n575: PUSH2 0x0293\n578: JUMPI"
      },
      {
        "offset": 579,
        "length": 15,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "8160028260ff168154811061025357",
        "parsedOpcodes": "579: DUP2\n580: PUSH1 0x02\n582: DUP3\n583: PUSH1 0xff\n585: AND\n586: DUP2\n587: SLOAD\n588: DUP2\n589: LT\n590: PUSH2 0x0253\n593: JUMPI"
      },
      {
        "offset": 594,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "594: INVALID"
      },
      {
        "offset": 595,
        "length": 21,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b9060005260206000200160000154111561028b57",
        "parsedOpcodes": "595: JUMPDEST\n596: SWAP1\n597: PUSH1 0x00\n599: MSTORE\n600: PUSH1 0x20\n602: PUSH1 0x00\n604: SHA3\n605: ADD\n606: PUSH1 0x00\n608: ADD\n609: SLOAD\n610: GT\n611: ISZERO\n612: PUSH2 0x028b\n615: JUMPI"
      },
      {
        "offset": 616,
        "length": 14,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "60028160ff168154811061027757",
        "parsedOpcodes": "616: PUSH1 0x02\n618: DUP2\n619: PUSH1 0xff\n621: AND\n622: DUP2\n623: SLOAD\n624: DUP2\n625: LT\n626: PUSH2 0x0277\n629: JUMPI"
      },
      {
        "offset": 630,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "630: INVALID"
      },
      {
        "offset": 631,
        "length": 20,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b90600052602060002001600001549150809250",
        "parsedOpcodes": "631: JUMPDEST\n632: SWAP1\n633: PUSH1 0x00\n635: MSTORE\n636: PUSH1 0x20\n638: PUSH1 0x00\n640: SHA3\n641: ADD\n642: PUSH1 0x00\n644: ADD\n645: SLOAD\n646: SWAP2\n647: POP\n648: DUP1\n649: SWAP3\n650: POP"
      },
      {
        "offset": 651,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60010161023556",
        "parsedOpcodes": "651: JUMPDEST\n652: PUSH1 0x01\n654: ADD\n655: PUSH2 0x0235\n658: JUMP"
      },
      {
        "offset": 659,
        "length": 5,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b50509056",
        "parsedOpcodes": "659: JUMPDEST\n660: POP\n661: POP\n662: SWAP1\n663: JUMP"
      },
      {
        "offset": 664,
        "length": 21,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000546001600160a01b0316331415806102ce57",
        "parsedOpcodes": "664: JUMPDEST\n665: PUSH1 0x00\n667: SLOAD\n668: PUSH1 0x01\n670: PUSH1 0x01\n672: PUSH1 0xa0\n674: SHL\n675: SUB\n676: AND\n677: CALLER\n678: EQ\n679: ISZERO\n680: DUP1\n681: PUSH2 0x02ce\n684: JUMPI"
      },
      {
        "offset": 685,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506001600160a01b0381166000908152600160208190526040909120015460ff16",
        "parsedOpcodes": "685: POP\n686: PUSH1 0x01\n688: PUSH1 0x01\n690: PUSH1 0xa0\n692: SHL\n693: SUB\n694: DUP2\n695: AND\n696: PUSH1 0x00\n698: SWAP1\n699: DUP2\n700: MSTORE\n701: PUSH1 0x01\n703: PUSH1 0x20\n705: DUP2\n706: SWAP1\n707: MSTORE\n708: PUSH1 0x40\n710: SWAP1\n711: SWAP2\n712: SHA3\n713: ADD\n714: SLOAD\n715: PUSH1 0xff\n717: AND"
      },
      {
        "offset": 718,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156102d857",
        "parsedOpcodes": "718: JUMPDEST\n719: ISZERO\n720: PUSH2 0x02d8\n723: JUMPI"
      },
      {
        "offset": 724,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61022d56",
        "parsedOpcodes": "724: PUSH2 0x022d\n727: JUMP"
      },
      {
        "offset": 728,
        "length": 29,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b6001600160a01b031660009081526001602081905260409091205556",
        "parsedOpcodes": "728: JUMPDEST\n729: PUSH1 0x01\n731: PUSH1 0x01\n733: PUSH1 0xa0\n735: SHL\n736: SUB\n737: AND\n738: PUSH1 0x00\n740: SWAP1\n741: DUP2\n742: MSTORE\n743: PUSH1 0x01\n745: PUSH1 0x20\n747: DUP2\n748: SWAP1\n749: MSTORE\n750: PUSH1 0x40\n752: SWAP1\n753: SWAP2\n754: SHA3\n755: SSTORE\n756: JUMP"
      },
      {
        "offset": 757,
        "length": 31,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b3360009081526001602081905260409091209081015460ff168061031e57",
        "parsedOpcodes": "757: JUMPDEST\n758: CALLER\n759: PUSH1 0x00\n761: SWAP1\n762: DUP2\n763: MSTORE\n764: PUSH1 0x01\n766: PUSH1 0x20\n768: DUP2\n769: SWAP1\n770: MSTORE\n771: PUSH1 0x40\n773: SWAP1\n774: SWAP2\n775: SHA3\n776: SWAP1\n777: DUP2\n778: ADD\n779: SLOAD\n780: PUSH1 0xff\n782: AND\n783: DUP1\n784: PUSH2 0x031e\n787: JUMPI"
      },
      {
        "offset": 788,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060025460ff83161015",
        "parsedOpcodes": "788: POP\n789: PUSH1 0x02\n791: SLOAD\n792: PUSH1 0xff\n794: DUP4\n795: AND\n796: LT\n797: ISZERO"
      },
      {
        "offset": 798,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561032957",
        "parsedOpcodes": "798: JUMPDEST\n799: ISZERO\n800: PUSH2 0x0329\n803: JUMPI"
      },
      {
        "offset": 804,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5061022d56",
        "parsedOpcodes": "804: POP\n805: PUSH2 0x022d\n808: JUMP"
      },
      {
        "offset": 809,
        "length": 53,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001818101805460ff191690911761ff00191661010060ff85169081029190911790915581546002805491929091811061035f57",
        "parsedOpcodes": "809: JUMPDEST\n810: PUSH1 0x01\n812: DUP2\n813: DUP2\n814: ADD\n815: DUP1\n816: SLOAD\n817: PUSH1 0xff\n819: NOT\n820: AND\n821: SWAP1\n822: SWAP2\n823: OR\n824: PUSH2 0xff00\n827: NOT\n828: AND\n829: PUSH2 0x0100\n832: PUSH1 0xff\n834: DUP6\n835: AND\n836: SWAP1\n837: DUP2\n838: MUL\n839: SWAP2\n840: SWAP1\n841: SWAP2\n842: OR\n843: SWAP1\n844: SWAP2\n845: SSTORE\n846: DUP2\n847: SLOAD\n848: PUSH1 0x02\n850: DUP1\n851: SLOAD\n852: SWAP2\n853: SWAP3\n854: SWAP1\n855: SWAP2\n856: DUP2\n857: LT\n858: PUSH2 0x035f\n861: JUMPI"
      },
      {
        "offset": 862,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "862: INVALID"
      },
      {
        "offset": 863,
        "length": 22,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b600091825260209091200180549091019055505056",
        "parsedOpcodes": "863: JUMPDEST\n864: PUSH1 0x00\n866: SWAP2\n867: DUP3\n868: MSTORE\n869: PUSH1 0x20\n871: SWAP1\n872: SWAP2\n873: SHA3\n874: ADD\n875: DUP1\n876: SLOAD\n877: SWAP1\n878: SWAP2\n879: ADD\n880: SWAP1\n881: SSTORE\n882: POP\n883: POP\n884: JUMP"
      },
      {
        "offset": 885,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "885: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          885
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          76
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          81
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          121
        ]
      },
      {
        "from": 54,
        "to": [
          65,
          151
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          189
        ]
      },
      {
        "from": 76,
        "to": [
          885
        ]
      },
      {
        "from": 81,
        "to": [
          99,
          103
        ]
      },
      {
        "from": 99,
        "to": [
          885
        ]
      },
      {
        "from": 103,
        "to": [
          221,
          221
        ]
      },
      {
        "from": 119,
        "to": [
          885
        ]
      },
      {
        "from": 121,
        "to": [
          560,
          560
        ]
      },
      {
        "from": 129,
        "to": [
          885
        ]
      },
      {
        "from": 151,
        "to": [
          169,
          173
        ]
      },
      {
        "from": 169,
        "to": [
          885
        ]
      },
      {
        "from": 173,
        "to": [
          664,
          664
        ]
      },
      {
        "from": 189,
        "to": [
          207,
          211
        ]
      },
      {
        "from": 207,
        "to": [
          885
        ]
      },
      {
        "from": 211,
        "to": [
          757,
          757
        ]
      },
      {
        "from": 221,
        "to": [
          252,
          257
        ]
      },
      {
        "from": 252,
        "to": [
          557,
          557
        ]
      },
      {
        "from": 257,
        "to": [
          258
        ]
      },
      {
        "from": 258,
        "to": [
          304,
          345
        ]
      },
      {
        "from": 304,
        "to": [
          345
        ]
      },
      {
        "from": 345,
        "to": [
          351,
          395
        ]
      },
      {
        "from": 351,
        "to": [
          258,
          258
        ]
      },
      {
        "from": 395,
        "to": [
          413,
          418
        ]
      },
      {
        "from": 413,
        "to": [
          557,
          557
        ]
      },
      {
        "from": 418,
        "to": [
          494,
          546
        ]
      },
      {
        "from": 494,
        "to": [
          522,
          523
        ]
      },
      {
        "from": 522,
        "to": [
          885
        ]
      },
      {
        "from": 523,
        "to": [
          554,
          554
        ]
      },
      {
        "from": 546,
        "to": [
          554
        ]
      },
      {
        "from": 554,
        "to": [
          557
        ]
      },
      {
        "from": 557,
        "to": [
          119,
          119,
          119,
          119,
          119
        ]
      },
      {
        "from": 560,
        "to": [
          565
        ]
      },
      {
        "from": 565,
        "to": [
          579,
          659
        ]
      },
      {
        "from": 579,
        "to": [
          594,
          595
        ]
      },
      {
        "from": 594,
        "to": [
          885
        ]
      },
      {
        "from": 595,
        "to": [
          616,
          651
        ]
      },
      {
        "from": 616,
        "to": [
          630,
          631
        ]
      },
      {
        "from": 630,
        "to": [
          885
        ]
      },
      {
        "from": 631,
        "to": [
          651
        ]
      },
      {
        "from": 651,
        "to": [
          565,
          565,
          565,
          565,
          565,
          565,
          565
        ]
      },
      {
        "from": 659,
        "to": [
          129,
          129,
          129,
          129
        ]
      },
      {
        "from": 664,
        "to": [
          685,
          718
        ]
      },
      {
        "from": 685,
        "to": [
          718
        ]
      },
      {
        "from": 718,
        "to": [
          724,
          728
        ]
      },
      {
        "from": 724,
        "to": [
          557,
          557
        ]
      },
      {
        "from": 728,
        "to": [
          119
        ]
      },
      {
        "from": 757,
        "to": [
          788,
          798
        ]
      },
      {
        "from": 788,
        "to": [
          798
        ]
      },
      {
        "from": 798,
        "to": [
          804,
          809
        ]
      },
      {
        "from": 804,
        "to": [
          557,
          557
        ]
      },
      {
        "from": 809,
        "to": [
          862,
          863
        ]
      },
      {
        "from": 862,
        "to": [
          885
        ]
      },
      {
        "from": 863,
        "to": [
          119
        ]
      },
      {
        "from": 885,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 59
    }
  }
}