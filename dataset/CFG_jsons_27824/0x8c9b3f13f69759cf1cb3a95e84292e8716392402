{
  "name": "Analysis_2022-07-07_00-53-21",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50600436106100365760003560e01c806361ff715f1461003b578063aaf10f4214610050575b600080fd5b61004e61004936600461037b565b61009f565b005b3360009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051808201909152601d81527f5860208158601c335a63aaf10f428752fa158151803b80938091923cf30000006020820152949550925061011a9150879050836102a3565b9050600083602001845180826000f073ffffffffffffffffffffffffffffffffffffffff858116600090815260208181526040822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001693851693909317909255875192955093508601915089818385f5925050508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4661696c656420746f206465706c6f7920746865206e6577206d6574616d6f7260448201527f7068696320636f6e74726163742e000000000000000000000000000000000000606482015260840160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9060200160405180910390a15050505050505050565b60003083836040516020016102b891906103f2565b6040516020818303038152906040528051906020012060405160200161033e939291907fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60008060006040848603121561038f578283fd5b83359250602084013567ffffffffffffffff808211156103ad578384fd5b818601915086601f8301126103c0578384fd5b8135818111156103ce578485fd5b8760208285010111156103df578485fd5b6020830194508093505050509250925092565b60008251815b8181101561041257602081860181015185830152016103f8565b818111156104205782828501525b50919091019291505056fea26469706673582212202ba0ac79d57f6cc9487537cfa81bc3eb8103db7085168f8c7afe436667f6ad5564736f6c63430008040033",
  "binaryHash": "c8d569bd",
  "isOnlyRuntime": true,
  "metadata": "a26469706673582212202ba0ac79d57f6cc9487537cfa81bc3eb8103db7085168f8c7afe436667f6ad5564736f6c63430008040033",
  "solidityVersion": "0.8.4",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657122801370
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806361ff715f1461003b578063aaf10f4214610050575b600080fd5b61004e61004936600461037b565b61009f565b005b3360009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051808201909152601d81527f5860208158601c335a63aaf10f428752fa158151803b80938091923cf30000006020820152949550925061011a9150879050836102a3565b9050600083602001845180826000f073ffffffffffffffffffffffffffffffffffffffff858116600090815260208181526040822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001693851693909317909255875192955093508601915089818385f5925050508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4661696c656420746f206465706c6f7920746865206e6577206d6574616d6f7260448201527f7068696320636f6e74726163742e000000000000000000000000000000000000606482015260840160405180910390fd5b60405173ffffffffffffffffffffffffffffffffffffffff821681527ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9060200160405180910390a15050505050505050565b60003083836040516020016102b891906103f2565b6040516020818303038152906040528051906020012060405160200161033e939291907fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830191909152603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209392505050565b60008060006040848603121561038f578283fd5b83359250602084013567ffffffffffffffff808211156103ad578384fd5b818601915086601f8301126103c0578384fd5b8135818111156103ce578485fd5b8760208285010111156103df578485fd5b6020830194508093505050509250925092565b60008251815b8181101561041257602081860181015185830152016103f8565b818111156104205782828501525b50919091019291505056fe",
    "remainingData": "fe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061003657",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c806361ff715f1461003b57",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0x61ff715f\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063aaf10f421461005057",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0xaaf10f42\n49: EQ\n50: PUSH2 0x0050\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT"
      },
      {
        "offset": 59,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b61004e61004936600461037b56",
        "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x004e\n63: PUSH2 0x0049\n66: CALLDATASIZE\n67: PUSH1 0x04\n69: PUSH2 0x037b\n72: JUMP"
      },
      {
        "offset": 73,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b61009f56",
        "parsedOpcodes": "73: JUMPDEST\n74: PUSH2 0x009f\n77: JUMP"
      },
      {
        "offset": 78,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "78: JUMPDEST\n79: STOP"
      },
      {
        "offset": 80,
        "length": 79,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b3360009081526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1660405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f3",
        "parsedOpcodes": "80: JUMPDEST\n81: CALLER\n82: PUSH1 0x00\n84: SWAP1\n85: DUP2\n86: MSTORE\n87: PUSH1 0x20\n89: DUP2\n90: SWAP1\n91: MSTORE\n92: PUSH1 0x40\n94: SWAP1\n95: SHA3\n96: SLOAD\n97: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n118: AND\n119: PUSH1 0x40\n121: MLOAD\n122: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n143: SWAP1\n144: SWAP2\n145: AND\n146: DUP2\n147: MSTORE\n148: PUSH1 0x20\n150: ADD\n151: PUSH1 0x40\n153: MLOAD\n154: DUP1\n155: SWAP2\n156: SUB\n157: SWAP1\n158: RETURN"
      },
      {
        "offset": 159,
        "length": 123,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b600082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051808201909152601d81527f5860208158601c335a63aaf10f428752fa158151803b80938091923cf30000006020820152949550925061011a9150879050836102a356",
        "parsedOpcodes": "159: JUMPDEST\n160: PUSH1 0x00\n162: DUP3\n163: DUP3\n164: DUP1\n165: DUP1\n166: PUSH1 0x1f\n168: ADD\n169: PUSH1 0x20\n171: DUP1\n172: SWAP2\n173: DIV\n174: MUL\n175: PUSH1 0x20\n177: ADD\n178: PUSH1 0x40\n180: MLOAD\n181: SWAP1\n182: DUP2\n183: ADD\n184: PUSH1 0x40\n186: MSTORE\n187: DUP1\n188: SWAP4\n189: SWAP3\n190: SWAP2\n191: SWAP1\n192: DUP2\n193: DUP2\n194: MSTORE\n195: PUSH1 0x20\n197: ADD\n198: DUP4\n199: DUP4\n200: DUP1\n201: DUP3\n202: DUP5\n203: CALLDATACOPY\n204: PUSH1 0x00\n206: SWAP3\n207: ADD\n208: DUP3\n209: SWAP1\n210: MSTORE\n211: POP\n212: PUSH1 0x40\n214: DUP1\n215: MLOAD\n216: DUP1\n217: DUP3\n218: ADD\n219: SWAP1\n220: SWAP2\n221: MSTORE\n222: PUSH1 0x1d\n224: DUP2\n225: MSTORE\n226: PUSH32 0x5860208158601c335a63aaf10f428752fa158151803b80938091923cf3000000\n259: PUSH1 0x20\n261: DUP3\n262: ADD\n263: MSTORE\n264: SWAP5\n265: SWAP6\n266: POP\n267: SWAP3\n268: POP\n269: PUSH2 0x011a\n272: SWAP2\n273: POP\n274: DUP8\n275: SWAP1\n276: POP\n277: DUP4\n278: PUSH2 0x02a3\n281: JUMP"
      },
      {
        "offset": 282,
        "length": 116,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b9050600083602001845180826000f073ffffffffffffffffffffffffffffffffffffffff858116600090815260208181526040822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001693851693909317909255875192955093508601915089818385f5",
        "parsedOpcodes": "282: JUMPDEST\n283: SWAP1\n284: POP\n285: PUSH1 0x00\n287: DUP4\n288: PUSH1 0x20\n290: ADD\n291: DUP5\n292: MLOAD\n293: DUP1\n294: DUP3\n295: PUSH1 0x00\n297: CREATE\n298: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n319: DUP6\n320: DUP2\n321: AND\n322: PUSH1 0x00\n324: SWAP1\n325: DUP2\n326: MSTORE\n327: PUSH1 0x20\n329: DUP2\n330: DUP2\n331: MSTORE\n332: PUSH1 0x40\n334: DUP3\n335: SHA3\n336: DUP1\n337: SLOAD\n338: PUSH32 0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n371: AND\n372: SWAP4\n373: DUP6\n374: AND\n375: SWAP4\n376: SWAP1\n377: SWAP4\n378: OR\n379: SWAP1\n380: SWAP3\n381: SSTORE\n382: DUP8\n383: MLOAD\n384: SWAP3\n385: SWAP6\n386: POP\n387: SWAP4\n388: POP\n389: DUP7\n390: ADD\n391: SWAP2\n392: POP\n393: DUP10\n394: DUP2\n395: DUP4\n396: DUP6\n397: INVALID"
      },
      {
        "offset": 398,
        "length": 55,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "925050508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461025057",
        "parsedOpcodes": "398: SWAP3\n399: POP\n400: POP\n401: POP\n402: DUP3\n403: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n424: AND\n425: DUP2\n426: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n447: AND\n448: EQ\n449: PUSH2 0x0250\n452: JUMPI"
      },
      {
        "offset": 453,
        "length": 139,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4661696c656420746f206465706c6f7920746865206e6577206d6574616d6f7260448201527f7068696320636f6e74726163742e000000000000000000000000000000000000606482015260840160405180910390fd",
        "parsedOpcodes": "453: PUSH1 0x40\n455: MLOAD\n456: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n489: DUP2\n490: MSTORE\n491: PUSH1 0x20\n493: PUSH1 0x04\n495: DUP3\n496: ADD\n497: MSTORE\n498: PUSH1 0x2e\n500: PUSH1 0x24\n502: DUP3\n503: ADD\n504: MSTORE\n505: PUSH32 0x4661696c656420746f206465706c6f7920746865206e6577206d6574616d6f72\n538: PUSH1 0x44\n540: DUP3\n541: ADD\n542: MSTORE\n543: PUSH32 0x7068696320636f6e74726163742e000000000000000000000000000000000000\n576: PUSH1 0x64\n578: DUP3\n579: ADD\n580: MSTORE\n581: PUSH1 0x84\n583: ADD\n584: PUSH1 0x40\n586: MLOAD\n587: DUP1\n588: SWAP2\n589: SUB\n590: SWAP1\n591: REVERT"
      },
      {
        "offset": 592,
        "length": 83,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b60405173ffffffffffffffffffffffffffffffffffffffff821681527ff40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e9060200160405180910390a1505050505050505056",
        "parsedOpcodes": "592: JUMPDEST\n593: PUSH1 0x40\n595: MLOAD\n596: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n617: DUP3\n618: AND\n619: DUP2\n620: MSTORE\n621: PUSH32 0xf40fcec21964ffb566044d083b4073f29f7f7929110ea19e1b3ebe375d89055e\n654: SWAP1\n655: PUSH1 0x20\n657: ADD\n658: PUSH1 0x40\n660: MLOAD\n661: DUP1\n662: SWAP2\n663: SUB\n664: SWAP1\n665: LOG1\n666: POP\n667: POP\n668: POP\n669: POP\n670: POP\n671: POP\n672: POP\n673: POP\n674: JUMP"
      },
      {
        "offset": 675,
        "length": 21,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b60003083836040516020016102b891906103f256",
        "parsedOpcodes": "675: JUMPDEST\n676: PUSH1 0x00\n678: ADDRESS\n679: DUP4\n680: DUP4\n681: PUSH1 0x40\n683: MLOAD\n684: PUSH1 0x20\n686: ADD\n687: PUSH2 0x02b8\n690: SWAP2\n691: SWAP1\n692: PUSH2 0x03f2\n695: JUMP"
      },
      {
        "offset": 696,
        "length": 134,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b6040516020818303038152906040528051906020012060405160200161033e939291907fff00000000000000000000000000000000000000000000000000000000000000815260609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166001840152601583019190915260358201526055019056",
        "parsedOpcodes": "696: JUMPDEST\n697: PUSH1 0x40\n699: MLOAD\n700: PUSH1 0x20\n702: DUP2\n703: DUP4\n704: SUB\n705: SUB\n706: DUP2\n707: MSTORE\n708: SWAP1\n709: PUSH1 0x40\n711: MSTORE\n712: DUP1\n713: MLOAD\n714: SWAP1\n715: PUSH1 0x20\n717: ADD\n718: SHA3\n719: PUSH1 0x40\n721: MLOAD\n722: PUSH1 0x20\n724: ADD\n725: PUSH2 0x033e\n728: SWAP4\n729: SWAP3\n730: SWAP2\n731: SWAP1\n732: PUSH32 0xff00000000000000000000000000000000000000000000000000000000000000\n765: DUP2\n766: MSTORE\n767: PUSH1 0x60\n769: SWAP4\n770: SWAP1\n771: SWAP4\n772: SHL\n773: PUSH32 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n806: AND\n807: PUSH1 0x01\n809: DUP5\n810: ADD\n811: MSTORE\n812: PUSH1 0x15\n814: DUP4\n815: ADD\n816: SWAP2\n817: SWAP1\n818: SWAP2\n819: MSTORE\n820: PUSH1 0x35\n822: DUP3\n823: ADD\n824: MSTORE\n825: PUSH1 0x55\n827: ADD\n828: SWAP1\n829: JUMP"
      },
      {
        "offset": 830,
        "length": 61,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190528051602090910120939250505056",
        "parsedOpcodes": "830: JUMPDEST\n831: PUSH1 0x40\n833: DUP1\n834: MLOAD\n835: PUSH32 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n868: DUP2\n869: DUP5\n870: SUB\n871: ADD\n872: DUP2\n873: MSTORE\n874: SWAP2\n875: SWAP1\n876: MSTORE\n877: DUP1\n878: MLOAD\n879: PUSH1 0x20\n881: SWAP1\n882: SWAP2\n883: ADD\n884: SHA3\n885: SWAP4\n886: SWAP3\n887: POP\n888: POP\n889: POP\n890: JUMP"
      },
      {
        "offset": 891,
        "length": 17,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60008060006040848603121561038f57",
        "parsedOpcodes": "891: JUMPDEST\n892: PUSH1 0x00\n894: DUP1\n895: PUSH1 0x00\n897: PUSH1 0x40\n899: DUP5\n900: DUP7\n901: SUB\n902: SLT\n903: ISZERO\n904: PUSH2 0x038f\n907: JUMPI"
      },
      {
        "offset": 908,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8283fd",
        "parsedOpcodes": "908: DUP3\n909: DUP4\n910: REVERT"
      },
      {
        "offset": 911,
        "length": 27,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b83359250602084013567ffffffffffffffff808211156103ad57",
        "parsedOpcodes": "911: JUMPDEST\n912: DUP4\n913: CALLDATALOAD\n914: SWAP3\n915: POP\n916: PUSH1 0x20\n918: DUP5\n919: ADD\n920: CALLDATALOAD\n921: PUSH8 0xffffffffffffffff\n930: DUP1\n931: DUP3\n932: GT\n933: ISZERO\n934: PUSH2 0x03ad\n937: JUMPI"
      },
      {
        "offset": 938,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8384fd",
        "parsedOpcodes": "938: DUP4\n939: DUP5\n940: REVERT"
      },
      {
        "offset": 941,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b818601915086601f8301126103c057",
        "parsedOpcodes": "941: JUMPDEST\n942: DUP2\n943: DUP7\n944: ADD\n945: SWAP2\n946: POP\n947: DUP7\n948: PUSH1 0x1f\n950: DUP4\n951: ADD\n952: SLT\n953: PUSH2 0x03c0\n956: JUMPI"
      },
      {
        "offset": 957,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8384fd",
        "parsedOpcodes": "957: DUP4\n958: DUP5\n959: REVERT"
      },
      {
        "offset": 960,
        "length": 11,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b8135818111156103ce57",
        "parsedOpcodes": "960: JUMPDEST\n961: DUP2\n962: CALLDATALOAD\n963: DUP2\n964: DUP2\n965: GT\n966: ISZERO\n967: PUSH2 0x03ce\n970: JUMPI"
      },
      {
        "offset": 971,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8485fd",
        "parsedOpcodes": "971: DUP5\n972: DUP6\n973: REVERT"
      },
      {
        "offset": 974,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8760208285010111156103df57",
        "parsedOpcodes": "974: JUMPDEST\n975: DUP8\n976: PUSH1 0x20\n978: DUP3\n979: DUP6\n980: ADD\n981: ADD\n982: GT\n983: ISZERO\n984: PUSH2 0x03df\n987: JUMPI"
      },
      {
        "offset": 988,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8485fd",
        "parsedOpcodes": "988: DUP5\n989: DUP6\n990: REVERT"
      },
      {
        "offset": 991,
        "length": 19,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b602083019450809350505050925092509256",
        "parsedOpcodes": "991: JUMPDEST\n992: PUSH1 0x20\n994: DUP4\n995: ADD\n996: SWAP5\n997: POP\n998: DUP1\n999: SWAP4\n1000: POP\n1001: POP\n1002: POP\n1003: POP\n1004: SWAP3\n1005: POP\n1006: SWAP3\n1007: POP\n1008: SWAP3\n1009: JUMP"
      },
      {
        "offset": 1010,
        "length": 6,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6000825181",
        "parsedOpcodes": "1010: JUMPDEST\n1011: PUSH1 0x00\n1013: DUP3\n1014: MLOAD\n1015: DUP2"
      },
      {
        "offset": 1016,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8181101561041257",
        "parsedOpcodes": "1016: JUMPDEST\n1017: DUP2\n1018: DUP2\n1019: LT\n1020: ISZERO\n1021: PUSH2 0x0412\n1024: JUMPI"
      },
      {
        "offset": 1025,
        "length": 17,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "602081860181015185830152016103f856",
        "parsedOpcodes": "1025: PUSH1 0x20\n1027: DUP2\n1028: DUP7\n1029: ADD\n1030: DUP2\n1031: ADD\n1032: MLOAD\n1033: DUP6\n1034: DUP4\n1035: ADD\n1036: MSTORE\n1037: ADD\n1038: PUSH2 0x03f8\n1041: JUMP"
      },
      {
        "offset": 1042,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8181111561042057",
        "parsedOpcodes": "1042: JUMPDEST\n1043: DUP2\n1044: DUP2\n1045: GT\n1046: ISZERO\n1047: PUSH2 0x0420\n1050: JUMPI"
      },
      {
        "offset": 1051,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8282850152",
        "parsedOpcodes": "1051: DUP3\n1052: DUP3\n1053: DUP6\n1054: ADD\n1055: MSTORE"
      },
      {
        "offset": 1056,
        "length": 11,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50919091019291505056",
        "parsedOpcodes": "1056: JUMPDEST\n1057: POP\n1058: SWAP2\n1059: SWAP1\n1060: SWAP2\n1061: ADD\n1062: SWAP3\n1063: SWAP2\n1064: POP\n1065: POP\n1066: JUMP"
      },
      {
        "offset": 1067,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1067: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          1067
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          54
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          59
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          80
        ]
      },
      {
        "from": 54,
        "to": [
          1067
        ]
      },
      {
        "from": 59,
        "to": [
          891,
          891
        ]
      },
      {
        "from": 73,
        "to": [
          159,
          159
        ]
      },
      {
        "from": 78,
        "to": [
          1067
        ]
      },
      {
        "from": 80,
        "to": [
          1067
        ]
      },
      {
        "from": 159,
        "to": [
          675,
          675
        ]
      },
      {
        "from": 282,
        "to": [
          1067
        ]
      },
      {
        "from": 398,
        "to": [
          453,
          592
        ]
      },
      {
        "from": 453,
        "to": [
          1067
        ]
      },
      {
        "from": 592,
        "to": [
          1067
        ]
      },
      {
        "from": 675,
        "to": [
          1010,
          1010
        ]
      },
      {
        "from": 696,
        "to": [
          830
        ]
      },
      {
        "from": 830,
        "to": [
          282
        ]
      },
      {
        "from": 891,
        "to": [
          908,
          911
        ]
      },
      {
        "from": 908,
        "to": [
          1067
        ]
      },
      {
        "from": 911,
        "to": [
          938,
          941
        ]
      },
      {
        "from": 938,
        "to": [
          1067
        ]
      },
      {
        "from": 941,
        "to": [
          957,
          960
        ]
      },
      {
        "from": 957,
        "to": [
          1067
        ]
      },
      {
        "from": 960,
        "to": [
          971,
          974
        ]
      },
      {
        "from": 971,
        "to": [
          1067
        ]
      },
      {
        "from": 974,
        "to": [
          988,
          991
        ]
      },
      {
        "from": 988,
        "to": [
          1067
        ]
      },
      {
        "from": 991,
        "to": [
          73
        ]
      },
      {
        "from": 1010,
        "to": [
          1016
        ]
      },
      {
        "from": 1016,
        "to": [
          1025,
          1042
        ]
      },
      {
        "from": 1025,
        "to": [
          1016,
          1016,
          1016
        ]
      },
      {
        "from": 1042,
        "to": [
          1051,
          1056
        ]
      },
      {
        "from": 1051,
        "to": [
          1056
        ]
      },
      {
        "from": 1056,
        "to": [
          696,
          696,
          696,
          696
        ]
      },
      {
        "from": 1067,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 3 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 79
    }
  }
}