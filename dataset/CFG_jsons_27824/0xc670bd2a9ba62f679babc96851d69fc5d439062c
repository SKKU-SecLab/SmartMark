{
  "name": "Analysis_2022-07-06_20-06-14",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063d37e77151461003b578063fe33b302146100e0575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100a457818101518382015260200161008c565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610106600480360360208110156100f657600080fd5b50356001600160a01b031661038b565b60405180876001600160a01b03168152602001866001600160a01b031681526020018581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b83811015610171578181015183820152602001610159565b50505050905090810190601f16801561019e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101d15781810151838201526020016101b9565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6000606073bad10c02f26c9e8edbf5f591d8ee6899fc49d5bc6001600160a01b031663c2bc2efc846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b15801561027757600080fd5b505afa92505050801561036457506040513d6000823e601f3d908101601f1916820160409081528110156102aa57600080fd5b8151602083018051604051929492938301929190846401000000008211156102d157600080fd5b9083019060208201858111156102e657600080fd5b825164010000000081118282018810171561030057600080fd5b82525081516020918201929091019080838360005b8381101561032d578181015183820152602001610315565b50505050905090810190601f16801561035a5780820380516001836020036101000a031916815260200191505b5060405250505060015b6103805750506040805160208101909152600080825290610386565b90925090505b915091565b6000806000606060006060866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cf57600080fd5b505afa1580156103e3573d6000803e3d6000fd5b505050506040513d60208110156103f957600080fd5b50516040805163d21220a760e01b815290519197506001600160a01b0389169163d21220a791600480820192602092909190829003018186803b15801561043f57600080fd5b505afa158015610453573d6000803e3d6000fd5b505050506040513d602081101561046957600080fd5b5051945061047686610212565b909450925061048485610212565b90925090509193955091939556fea2646970667358221220b1824fb81b4ece787d9cc5cc30e8453f52cb754a33e93d54b96772480dab47d364736f6c634300060c0033",
  "binaryHash": "74b220bd",
  "isOnlyRuntime": true,
  "metadata": "a2646970667358221220b1824fb81b4ece787d9cc5cc30e8453f52cb754a33e93d54b96772480dab47d364736f6c634300060c0033",
  "solidityVersion": "0.6.12",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657105574332
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063d37e77151461003b578063fe33b302146100e0575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b0316610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100a457818101518382015260200161008c565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610106600480360360208110156100f657600080fd5b50356001600160a01b031661038b565b60405180876001600160a01b03168152602001866001600160a01b031681526020018581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b83811015610171578181015183820152602001610159565b50505050905090810190601f16801561019e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101d15781810151838201526020016101b9565b50505050905090810190601f1680156101fe5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6000606073bad10c02f26c9e8edbf5f591d8ee6899fc49d5bc6001600160a01b031663c2bc2efc846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b15801561027757600080fd5b505afa92505050801561036457506040513d6000823e601f3d908101601f1916820160409081528110156102aa57600080fd5b8151602083018051604051929492938301929190846401000000008211156102d157600080fd5b9083019060208201858111156102e657600080fd5b825164010000000081118282018810171561030057600080fd5b82525081516020918201929091019080838360005b8381101561032d578181015183820152602001610315565b50505050905090810190601f16801561035a5780820380516001836020036101000a031916815260200191505b5060405250505060015b6103805750506040805160208101909152600080825290610386565b90925090505b915091565b6000806000606060006060866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cf57600080fd5b505afa1580156103e3573d6000803e3d6000fd5b505050506040513d60208110156103f957600080fd5b50516040805163d21220a760e01b815290519197506001600160a01b0389169163d21220a791600480820192602092909190829003018186803b15801561043f57600080fd5b505afa158015610453573d6000803e3d6000fd5b505050506040513d602081101561046957600080fd5b5051945061047686610212565b909450925061048485610212565b90925090509193955091939556fe",
    "remainingData": "5b909450925061048485610212565b90925090509193955091939556fe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061003657",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063d37e77151461003b57",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0xd37e7715\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063fe33b302146100e057",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0xfe33b302\n49: EQ\n50: PUSH2 0x00e0\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT"
      },
      {
        "offset": 59,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100616004803603602081101561005157",
        "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x0061\n63: PUSH1 0x04\n65: DUP1\n66: CALLDATASIZE\n67: SUB\n68: PUSH1 0x20\n70: DUP2\n71: LT\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b031661021256",
        "parsedOpcodes": "81: JUMPDEST\n82: POP\n83: CALLDATALOAD\n84: PUSH1 0x01\n86: PUSH1 0x01\n88: PUSH1 0xa0\n90: SHL\n91: SUB\n92: AND\n93: PUSH2 0x0212\n96: JUMP"
      },
      {
        "offset": 97,
        "length": 43,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b604051808381526020018060200182810382528381815181526020019150805190602001908083836000",
        "parsedOpcodes": "97: JUMPDEST\n98: PUSH1 0x40\n100: MLOAD\n101: DUP1\n102: DUP4\n103: DUP2\n104: MSTORE\n105: PUSH1 0x20\n107: ADD\n108: DUP1\n109: PUSH1 0x20\n111: ADD\n112: DUP3\n113: DUP2\n114: SUB\n115: DUP3\n116: MSTORE\n117: DUP4\n118: DUP2\n119: DUP2\n120: MLOAD\n121: DUP2\n122: MSTORE\n123: PUSH1 0x20\n125: ADD\n126: SWAP2\n127: POP\n128: DUP1\n129: MLOAD\n130: SWAP1\n131: PUSH1 0x20\n133: ADD\n134: SWAP1\n135: DUP1\n136: DUP4\n137: DUP4\n138: PUSH1 0x00"
      },
      {
        "offset": 140,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156100a457",
        "parsedOpcodes": "140: JUMPDEST\n141: DUP4\n142: DUP2\n143: LT\n144: ISZERO\n145: PUSH2 0x00a4\n148: JUMPI"
      },
      {
        "offset": 149,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161008c56",
        "parsedOpcodes": "149: DUP2\n150: DUP2\n151: ADD\n152: MLOAD\n153: DUP4\n154: DUP3\n155: ADD\n156: MSTORE\n157: PUSH1 0x20\n159: ADD\n160: PUSH2 0x008c\n163: JUMP"
      },
      {
        "offset": 164,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f1680156100d157",
        "parsedOpcodes": "164: JUMPDEST\n165: POP\n166: POP\n167: POP\n168: POP\n169: SWAP1\n170: POP\n171: SWAP1\n172: DUP2\n173: ADD\n174: SWAP1\n175: PUSH1 0x1f\n177: AND\n178: DUP1\n179: ISZERO\n180: PUSH2 0x00d1\n183: JUMPI"
      },
      {
        "offset": 184,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "184: DUP1\n185: DUP3\n186: SUB\n187: DUP1\n188: MLOAD\n189: PUSH1 0x01\n191: DUP4\n192: PUSH1 0x20\n194: SUB\n195: PUSH2 0x0100\n198: EXP\n199: SUB\n200: NOT\n201: AND\n202: DUP2\n203: MSTORE\n204: PUSH1 0x20\n206: ADD\n207: SWAP2\n208: POP"
      },
      {
        "offset": 209,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": -6,
        "bytecodeHex": "5b50935050505060405180910390f3",
        "parsedOpcodes": "209: JUMPDEST\n210: POP\n211: SWAP4\n212: POP\n213: POP\n214: POP\n215: POP\n216: PUSH1 0x40\n218: MLOAD\n219: DUP1\n220: SWAP2\n221: SUB\n222: SWAP1\n223: RETURN"
      },
      {
        "offset": 224,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b610106600480360360208110156100f657",
        "parsedOpcodes": "224: JUMPDEST\n225: PUSH2 0x0106\n228: PUSH1 0x04\n230: DUP1\n231: CALLDATASIZE\n232: SUB\n233: PUSH1 0x20\n235: DUP2\n236: LT\n237: ISZERO\n238: PUSH2 0x00f6\n241: JUMPI"
      },
      {
        "offset": 242,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "242: PUSH1 0x00\n244: DUP1\n245: REVERT"
      },
      {
        "offset": 246,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b031661038b56",
        "parsedOpcodes": "246: JUMPDEST\n247: POP\n248: CALLDATALOAD\n249: PUSH1 0x01\n251: PUSH1 0x01\n253: PUSH1 0xa0\n255: SHL\n256: SUB\n257: AND\n258: PUSH2 0x038b\n261: JUMP"
      },
      {
        "offset": 262,
        "length": 83,
        "type": "dispatcher",
        "stackBalance": 10,
        "bytecodeHex": "5b60405180876001600160a01b03168152602001866001600160a01b03168152602001858152602001806020018481526020018060200183810383528681815181526020019150805190602001908083836000",
        "parsedOpcodes": "262: JUMPDEST\n263: PUSH1 0x40\n265: MLOAD\n266: DUP1\n267: DUP8\n268: PUSH1 0x01\n270: PUSH1 0x01\n272: PUSH1 0xa0\n274: SHL\n275: SUB\n276: AND\n277: DUP2\n278: MSTORE\n279: PUSH1 0x20\n281: ADD\n282: DUP7\n283: PUSH1 0x01\n285: PUSH1 0x01\n287: PUSH1 0xa0\n289: SHL\n290: SUB\n291: AND\n292: DUP2\n293: MSTORE\n294: PUSH1 0x20\n296: ADD\n297: DUP6\n298: DUP2\n299: MSTORE\n300: PUSH1 0x20\n302: ADD\n303: DUP1\n304: PUSH1 0x20\n306: ADD\n307: DUP5\n308: DUP2\n309: MSTORE\n310: PUSH1 0x20\n312: ADD\n313: DUP1\n314: PUSH1 0x20\n316: ADD\n317: DUP4\n318: DUP2\n319: SUB\n320: DUP4\n321: MSTORE\n322: DUP7\n323: DUP2\n324: DUP2\n325: MLOAD\n326: DUP2\n327: MSTORE\n328: PUSH1 0x20\n330: ADD\n331: SWAP2\n332: POP\n333: DUP1\n334: MLOAD\n335: SWAP1\n336: PUSH1 0x20\n338: ADD\n339: SWAP1\n340: DUP1\n341: DUP4\n342: DUP4\n343: PUSH1 0x00"
      },
      {
        "offset": 345,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561017157",
        "parsedOpcodes": "345: JUMPDEST\n346: DUP4\n347: DUP2\n348: LT\n349: ISZERO\n350: PUSH2 0x0171\n353: JUMPI"
      },
      {
        "offset": 354,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161015956",
        "parsedOpcodes": "354: DUP2\n355: DUP2\n356: ADD\n357: MLOAD\n358: DUP4\n359: DUP3\n360: ADD\n361: MSTORE\n362: PUSH1 0x20\n364: ADD\n365: PUSH2 0x0159\n368: JUMP"
      },
      {
        "offset": 369,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561019e57",
        "parsedOpcodes": "369: JUMPDEST\n370: POP\n371: POP\n372: POP\n373: POP\n374: SWAP1\n375: POP\n376: SWAP1\n377: DUP2\n378: ADD\n379: SWAP1\n380: PUSH1 0x1f\n382: AND\n383: DUP1\n384: ISZERO\n385: PUSH2 0x019e\n388: JUMPI"
      },
      {
        "offset": 389,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "389: DUP1\n390: DUP3\n391: SUB\n392: DUP1\n393: MLOAD\n394: PUSH1 0x01\n396: DUP4\n397: PUSH1 0x20\n399: SUB\n400: PUSH2 0x0100\n403: EXP\n404: SUB\n405: NOT\n406: AND\n407: DUP2\n408: MSTORE\n409: PUSH1 0x20\n411: ADD\n412: SWAP2\n413: POP"
      },
      {
        "offset": 414,
        "length": 27,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b5083810382528451815284516020918201918601908083836000",
        "parsedOpcodes": "414: JUMPDEST\n415: POP\n416: DUP4\n417: DUP2\n418: SUB\n419: DUP3\n420: MSTORE\n421: DUP5\n422: MLOAD\n423: DUP2\n424: MSTORE\n425: DUP5\n426: MLOAD\n427: PUSH1 0x20\n429: SWAP2\n430: DUP3\n431: ADD\n432: SWAP2\n433: DUP7\n434: ADD\n435: SWAP1\n436: DUP1\n437: DUP4\n438: DUP4\n439: PUSH1 0x00"
      },
      {
        "offset": 441,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156101d157",
        "parsedOpcodes": "441: JUMPDEST\n442: DUP4\n443: DUP2\n444: LT\n445: ISZERO\n446: PUSH2 0x01d1\n449: JUMPI"
      },
      {
        "offset": 450,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016101b956",
        "parsedOpcodes": "450: DUP2\n451: DUP2\n452: ADD\n453: MLOAD\n454: DUP4\n455: DUP3\n456: ADD\n457: MSTORE\n458: PUSH1 0x20\n460: ADD\n461: PUSH2 0x01b9\n464: JUMP"
      },
      {
        "offset": 465,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f1680156101fe57",
        "parsedOpcodes": "465: JUMPDEST\n466: POP\n467: POP\n468: POP\n469: POP\n470: SWAP1\n471: POP\n472: SWAP1\n473: DUP2\n474: ADD\n475: SWAP1\n476: PUSH1 0x1f\n478: AND\n479: DUP1\n480: ISZERO\n481: PUSH2 0x01fe\n484: JUMPI"
      },
      {
        "offset": 485,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "485: DUP1\n486: DUP3\n487: SUB\n488: DUP1\n489: MLOAD\n490: PUSH1 0x01\n492: DUP4\n493: PUSH1 0x20\n495: SUB\n496: PUSH2 0x0100\n499: EXP\n500: SUB\n501: NOT\n502: AND\n503: DUP2\n504: MSTORE\n505: PUSH1 0x20\n507: ADD\n508: SWAP2\n509: POP"
      },
      {
        "offset": 510,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -11,
        "bytecodeHex": "5b509850505050505050505060405180910390f3",
        "parsedOpcodes": "510: JUMPDEST\n511: POP\n512: SWAP9\n513: POP\n514: POP\n515: POP\n516: POP\n517: POP\n518: POP\n519: POP\n520: POP\n521: POP\n522: PUSH1 0x40\n524: MLOAD\n525: DUP1\n526: SWAP2\n527: SUB\n528: SWAP1\n529: RETURN"
      },
      {
        "offset": 530,
        "length": 97,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b6000606073bad10c02f26c9e8edbf5f591d8ee6899fc49d5bc6001600160a01b031663c2bc2efc846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b15801561027757",
        "parsedOpcodes": "530: JUMPDEST\n531: PUSH1 0x00\n533: PUSH1 0x60\n535: PUSH20 0xbad10c02f26c9e8edbf5f591d8ee6899fc49d5bc\n556: PUSH1 0x01\n558: PUSH1 0x01\n560: PUSH1 0xa0\n562: SHL\n563: SUB\n564: AND\n565: PUSH4 0xc2bc2efc\n570: DUP5\n571: PUSH1 0x40\n573: MLOAD\n574: DUP3\n575: PUSH4 0xffffffff\n580: AND\n581: PUSH1 0xe0\n583: SHL\n584: DUP2\n585: MSTORE\n586: PUSH1 0x04\n588: ADD\n589: DUP1\n590: DUP3\n591: PUSH1 0x01\n593: PUSH1 0x01\n595: PUSH1 0xa0\n597: SHL\n598: SUB\n599: AND\n600: DUP2\n601: MSTORE\n602: PUSH1 0x20\n604: ADD\n605: SWAP2\n606: POP\n607: POP\n608: PUSH1 0x00\n610: PUSH1 0x40\n612: MLOAD\n613: DUP1\n614: DUP4\n615: SUB\n616: DUP2\n617: DUP7\n618: DUP1\n619: EXTCODESIZE\n620: ISZERO\n621: DUP1\n622: ISZERO\n623: PUSH2 0x0277\n626: JUMPI"
      },
      {
        "offset": 627,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "627: PUSH1 0x00\n629: DUP1\n630: REVERT"
      },
      {
        "offset": 631,
        "length": 14,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b505afa92505050801561036457",
        "parsedOpcodes": "631: JUMPDEST\n632: POP\n633: GAS\n634: STATICCALL\n635: SWAP3\n636: POP\n637: POP\n638: POP\n639: DUP1\n640: ISZERO\n641: PUSH2 0x0364\n644: JUMPI"
      },
      {
        "offset": 645,
        "length": 33,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "506040513d6000823e601f3d908101601f1916820160409081528110156102aa57",
        "parsedOpcodes": "645: POP\n646: PUSH1 0x40\n648: MLOAD\n649: RETURNDATASIZE\n650: PUSH1 0x00\n652: DUP3\n653: RETURNDATACOPY\n654: PUSH1 0x1f\n656: RETURNDATASIZE\n657: SWAP1\n658: DUP2\n659: ADD\n660: PUSH1 0x1f\n662: NOT\n663: AND\n664: DUP3\n665: ADD\n666: PUSH1 0x40\n668: SWAP1\n669: DUP2\n670: MSTORE\n671: DUP2\n672: LT\n673: ISZERO\n674: PUSH2 0x02aa\n677: JUMPI"
      },
      {
        "offset": 678,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "678: PUSH1 0x00\n680: DUP1\n681: REVERT"
      },
      {
        "offset": 682,
        "length": 35,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b8151602083018051604051929492938301929190846401000000008211156102d157",
        "parsedOpcodes": "682: JUMPDEST\n683: DUP2\n684: MLOAD\n685: PUSH1 0x20\n687: DUP4\n688: ADD\n689: DUP1\n690: MLOAD\n691: PUSH1 0x40\n693: MLOAD\n694: SWAP3\n695: SWAP5\n696: SWAP3\n697: SWAP4\n698: DUP4\n699: ADD\n700: SWAP3\n701: SWAP2\n702: SWAP1\n703: DUP5\n704: PUSH5 0x0100000000\n710: DUP3\n711: GT\n712: ISZERO\n713: PUSH2 0x02d1\n716: JUMPI"
      },
      {
        "offset": 717,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "717: PUSH1 0x00\n719: DUP1\n720: REVERT"
      },
      {
        "offset": 721,
        "length": 17,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b9083019060208201858111156102e657",
        "parsedOpcodes": "721: JUMPDEST\n722: SWAP1\n723: DUP4\n724: ADD\n725: SWAP1\n726: PUSH1 0x20\n728: DUP3\n729: ADD\n730: DUP6\n731: DUP2\n732: GT\n733: ISZERO\n734: PUSH2 0x02e6\n737: JUMPI"
      },
      {
        "offset": 738,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "738: PUSH1 0x00\n740: DUP1\n741: REVERT"
      },
      {
        "offset": 742,
        "length": 22,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b825164010000000081118282018810171561030057",
        "parsedOpcodes": "742: JUMPDEST\n743: DUP3\n744: MLOAD\n745: PUSH5 0x0100000000\n751: DUP2\n752: GT\n753: DUP3\n754: DUP3\n755: ADD\n756: DUP9\n757: LT\n758: OR\n759: ISZERO\n760: PUSH2 0x0300\n763: JUMPI"
      },
      {
        "offset": 764,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "764: PUSH1 0x00\n766: DUP1\n767: REVERT"
      },
      {
        "offset": 768,
        "length": 21,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b8252508151602091820192909101908083836000",
        "parsedOpcodes": "768: JUMPDEST\n769: DUP3\n770: MSTORE\n771: POP\n772: DUP2\n773: MLOAD\n774: PUSH1 0x20\n776: SWAP2\n777: DUP3\n778: ADD\n779: SWAP3\n780: SWAP1\n781: SWAP2\n782: ADD\n783: SWAP1\n784: DUP1\n785: DUP4\n786: DUP4\n787: PUSH1 0x00"
      },
      {
        "offset": 789,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561032d57",
        "parsedOpcodes": "789: JUMPDEST\n790: DUP4\n791: DUP2\n792: LT\n793: ISZERO\n794: PUSH2 0x032d\n797: JUMPI"
      },
      {
        "offset": 798,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161031556",
        "parsedOpcodes": "798: DUP2\n799: DUP2\n800: ADD\n801: MLOAD\n802: DUP4\n803: DUP3\n804: ADD\n805: MSTORE\n806: PUSH1 0x20\n808: ADD\n809: PUSH2 0x0315\n812: JUMP"
      },
      {
        "offset": 813,
        "length": 20,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561035a57",
        "parsedOpcodes": "813: JUMPDEST\n814: POP\n815: POP\n816: POP\n817: POP\n818: SWAP1\n819: POP\n820: SWAP1\n821: DUP2\n822: ADD\n823: SWAP1\n824: PUSH1 0x1f\n826: AND\n827: DUP1\n828: ISZERO\n829: PUSH2 0x035a\n832: JUMPI"
      },
      {
        "offset": 833,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "833: DUP1\n834: DUP3\n835: SUB\n836: DUP1\n837: MLOAD\n838: PUSH1 0x01\n840: DUP4\n841: PUSH1 0x20\n843: SUB\n844: PUSH2 0x0100\n847: EXP\n848: SUB\n849: NOT\n850: AND\n851: DUP2\n852: MSTORE\n853: PUSH1 0x20\n855: ADD\n856: SWAP2\n857: POP"
      },
      {
        "offset": 858,
        "length": 10,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b506040525050506001",
        "parsedOpcodes": "858: JUMPDEST\n859: POP\n860: PUSH1 0x40\n862: MSTORE\n863: POP\n864: POP\n865: POP\n866: PUSH1 0x01"
      },
      {
        "offset": 868,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b61038057",
        "parsedOpcodes": "868: JUMPDEST\n869: PUSH2 0x0380\n872: JUMPI"
      },
      {
        "offset": 873,
        "length": 23,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5050604080516020810190915260008082529061038656",
        "parsedOpcodes": "873: POP\n874: POP\n875: PUSH1 0x40\n877: DUP1\n878: MLOAD\n879: PUSH1 0x20\n881: DUP2\n882: ADD\n883: SWAP1\n884: SWAP2\n885: MSTORE\n886: PUSH1 0x00\n888: DUP1\n889: DUP3\n890: MSTORE\n891: SWAP1\n892: PUSH2 0x0386\n895: JUMP"
      },
      {
        "offset": 896,
        "length": 6,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b9092509050",
        "parsedOpcodes": "896: JUMPDEST\n897: SWAP1\n898: SWAP3\n899: POP\n900: SWAP1\n901: POP"
      },
      {
        "offset": 902,
        "length": 5,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b91509156",
        "parsedOpcodes": "902: JUMPDEST\n903: SWAP2\n904: POP\n905: SWAP2\n906: JUMP"
      },
      {
        "offset": 907,
        "length": 64,
        "type": "common",
        "stackBalance": 15,
        "bytecodeHex": "5b6000806000606060006060866001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cf57",
        "parsedOpcodes": "907: JUMPDEST\n908: PUSH1 0x00\n910: DUP1\n911: PUSH1 0x00\n913: PUSH1 0x60\n915: PUSH1 0x00\n917: PUSH1 0x60\n919: DUP7\n920: PUSH1 0x01\n922: PUSH1 0x01\n924: PUSH1 0xa0\n926: SHL\n927: SUB\n928: AND\n929: PUSH4 0x0dfe1681\n934: PUSH1 0x40\n936: MLOAD\n937: DUP2\n938: PUSH4 0xffffffff\n943: AND\n944: PUSH1 0xe0\n946: SHL\n947: DUP2\n948: MSTORE\n949: PUSH1 0x04\n951: ADD\n952: PUSH1 0x20\n954: PUSH1 0x40\n956: MLOAD\n957: DUP1\n958: DUP4\n959: SUB\n960: DUP2\n961: DUP7\n962: DUP1\n963: EXTCODESIZE\n964: ISZERO\n965: DUP1\n966: ISZERO\n967: PUSH2 0x03cf\n970: JUMPI"
      },
      {
        "offset": 971,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "971: PUSH1 0x00\n973: DUP1\n974: REVERT"
      },
      {
        "offset": 975,
        "length": 11,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b505afa1580156103e357",
        "parsedOpcodes": "975: JUMPDEST\n976: POP\n977: GAS\n978: STATICCALL\n979: ISZERO\n980: DUP1\n981: ISZERO\n982: PUSH2 0x03e3\n985: JUMPI"
      },
      {
        "offset": 986,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "986: RETURNDATASIZE\n987: PUSH1 0x00\n989: DUP1\n990: RETURNDATACOPY\n991: RETURNDATASIZE\n992: PUSH1 0x00\n994: REVERT"
      },
      {
        "offset": 995,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d60208110156103f957",
        "parsedOpcodes": "995: JUMPDEST\n996: POP\n997: POP\n998: POP\n999: POP\n1000: PUSH1 0x40\n1002: MLOAD\n1003: RETURNDATASIZE\n1004: PUSH1 0x20\n1006: DUP2\n1007: LT\n1008: ISZERO\n1009: PUSH2 0x03f9\n1012: JUMPI"
      },
      {
        "offset": 1013,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1013: PUSH1 0x00\n1015: DUP1\n1016: REVERT"
      },
      {
        "offset": 1017,
        "length": 66,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b50516040805163d21220a760e01b815290519197506001600160a01b0389169163d21220a791600480820192602092909190829003018186803b15801561043f57",
        "parsedOpcodes": "1017: JUMPDEST\n1018: POP\n1019: MLOAD\n1020: PUSH1 0x40\n1022: DUP1\n1023: MLOAD\n1024: PUSH4 0xd21220a7\n1029: PUSH1 0xe0\n1031: SHL\n1032: DUP2\n1033: MSTORE\n1034: SWAP1\n1035: MLOAD\n1036: SWAP2\n1037: SWAP8\n1038: POP\n1039: PUSH1 0x01\n1041: PUSH1 0x01\n1043: PUSH1 0xa0\n1045: SHL\n1046: SUB\n1047: DUP10\n1048: AND\n1049: SWAP2\n1050: PUSH4 0xd21220a7\n1055: SWAP2\n1056: PUSH1 0x04\n1058: DUP1\n1059: DUP3\n1060: ADD\n1061: SWAP3\n1062: PUSH1 0x20\n1064: SWAP3\n1065: SWAP1\n1066: SWAP2\n1067: SWAP1\n1068: DUP3\n1069: SWAP1\n1070: SUB\n1071: ADD\n1072: DUP2\n1073: DUP7\n1074: DUP1\n1075: EXTCODESIZE\n1076: ISZERO\n1077: DUP1\n1078: ISZERO\n1079: PUSH2 0x043f\n1082: JUMPI"
      },
      {
        "offset": 1083,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1083: PUSH1 0x00\n1085: DUP1\n1086: REVERT"
      },
      {
        "offset": 1087,
        "length": 11,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b505afa15801561045357",
        "parsedOpcodes": "1087: JUMPDEST\n1088: POP\n1089: GAS\n1090: STATICCALL\n1091: ISZERO\n1092: DUP1\n1093: ISZERO\n1094: PUSH2 0x0453\n1097: JUMPI"
      },
      {
        "offset": 1098,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1098: RETURNDATASIZE\n1099: PUSH1 0x00\n1101: DUP1\n1102: RETURNDATACOPY\n1103: RETURNDATASIZE\n1104: PUSH1 0x00\n1106: REVERT"
      },
      {
        "offset": 1107,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561046957",
        "parsedOpcodes": "1107: JUMPDEST\n1108: POP\n1109: POP\n1110: POP\n1111: POP\n1112: PUSH1 0x40\n1114: MLOAD\n1115: RETURNDATASIZE\n1116: PUSH1 0x20\n1118: DUP2\n1119: LT\n1120: ISZERO\n1121: PUSH2 0x0469\n1124: JUMPI"
      },
      {
        "offset": 1125,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1125: PUSH1 0x00\n1127: DUP1\n1128: REVERT"
      },
      {
        "offset": 1129,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b505194506104768661021256",
        "parsedOpcodes": "1129: JUMPDEST\n1130: POP\n1131: MLOAD\n1132: SWAP5\n1133: POP\n1134: PUSH2 0x0476\n1137: DUP7\n1138: PUSH2 0x0212\n1141: JUMP"
      },
      {
        "offset": 1142,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1142: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          1142
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          54
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          59
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          224
        ]
      },
      {
        "from": 54,
        "to": [
          1142
        ]
      },
      {
        "from": 59,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          1142
        ]
      },
      {
        "from": 81,
        "to": [
          530,
          530
        ]
      },
      {
        "from": 97,
        "to": [
          140
        ]
      },
      {
        "from": 140,
        "to": [
          149,
          164
        ]
      },
      {
        "from": 149,
        "to": [
          140
        ]
      },
      {
        "from": 164,
        "to": [
          184,
          209
        ]
      },
      {
        "from": 184,
        "to": [
          209
        ]
      },
      {
        "from": 209,
        "to": [
          1142
        ]
      },
      {
        "from": 224,
        "to": [
          242,
          246
        ]
      },
      {
        "from": 242,
        "to": [
          1142
        ]
      },
      {
        "from": 246,
        "to": [
          907
        ]
      },
      {
        "from": 262,
        "to": [
          345
        ]
      },
      {
        "from": 345,
        "to": [
          354,
          369
        ]
      },
      {
        "from": 354,
        "to": [
          345
        ]
      },
      {
        "from": 369,
        "to": [
          389,
          414
        ]
      },
      {
        "from": 389,
        "to": [
          414
        ]
      },
      {
        "from": 414,
        "to": [
          441
        ]
      },
      {
        "from": 441,
        "to": [
          450,
          465
        ]
      },
      {
        "from": 450,
        "to": [
          441
        ]
      },
      {
        "from": 465,
        "to": [
          485,
          510
        ]
      },
      {
        "from": 485,
        "to": [
          510
        ]
      },
      {
        "from": 510,
        "to": [
          1142
        ]
      },
      {
        "from": 530,
        "to": [
          627,
          631
        ]
      },
      {
        "from": 627,
        "to": [
          1142
        ]
      },
      {
        "from": 631,
        "to": [
          645,
          868
        ]
      },
      {
        "from": 645,
        "to": [
          678,
          682
        ]
      },
      {
        "from": 678,
        "to": [
          1142
        ]
      },
      {
        "from": 682,
        "to": [
          717,
          721
        ]
      },
      {
        "from": 717,
        "to": [
          1142
        ]
      },
      {
        "from": 721,
        "to": [
          738,
          742
        ]
      },
      {
        "from": 738,
        "to": [
          1142
        ]
      },
      {
        "from": 742,
        "to": [
          764,
          768
        ]
      },
      {
        "from": 764,
        "to": [
          1142
        ]
      },
      {
        "from": 768,
        "to": [
          789
        ]
      },
      {
        "from": 789,
        "to": [
          798,
          813
        ]
      },
      {
        "from": 798,
        "to": [
          789
        ]
      },
      {
        "from": 813,
        "to": [
          833,
          858
        ]
      },
      {
        "from": 833,
        "to": [
          858
        ]
      },
      {
        "from": 858,
        "to": [
          868
        ]
      },
      {
        "from": 868,
        "to": [
          873,
          896
        ]
      },
      {
        "from": 873,
        "to": [
          902
        ]
      },
      {
        "from": 896,
        "to": [
          902
        ]
      },
      {
        "from": 902,
        "to": [
          1142
        ]
      },
      {
        "from": 907,
        "to": [
          971,
          975
        ]
      },
      {
        "from": 971,
        "to": [
          1142
        ]
      },
      {
        "from": 975,
        "to": [
          986,
          995
        ]
      },
      {
        "from": 986,
        "to": [
          1142
        ]
      },
      {
        "from": 995,
        "to": [
          1013,
          1017
        ]
      },
      {
        "from": 1013,
        "to": [
          1142
        ]
      },
      {
        "from": 1017,
        "to": [
          1083,
          1087
        ]
      },
      {
        "from": 1083,
        "to": [
          1142
        ]
      },
      {
        "from": 1087,
        "to": [
          1098,
          1107
        ]
      },
      {
        "from": 1098,
        "to": [
          1142
        ]
      },
      {
        "from": 1107,
        "to": [
          1125,
          1129
        ]
      },
      {
        "from": 1125,
        "to": [
          1142
        ]
      },
      {
        "from": 1129,
        "to": [
          530
        ]
      },
      {
        "from": 1142,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 1,
      "errorLog": "Critical error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:459)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeSwap(SymbolicExecutionStack.java:70)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeOpcode(SymbolicExecutionStack.java:45)\n\tat parseTree.cfg.CfgBuilder.resolveOrphanJumps(CfgBuilder.java:211)\n\tat parseTree.cfg.CfgBuilder.buildCfg(CfgBuilder.java:90)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:54)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:62)\n\tat cli.MainCLI.call(MainCLI.java:70)\n\tat cli.MainCLI.call(MainCLI.java:24)\n\tat picocli.CommandLine.executeUserObject(CommandLine.java:1933)\n\tat picocli.CommandLine.access$1100(CommandLine.java:145)\n\tat picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2326)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2291)\n\tat picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2159)\n\tat picocli.CommandLine.execute(CommandLine.java:2058)\n\tat cli.MainCLI.main(MainCLI.java:102)\nWarning: the CFG has 3 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 91
    }
  }
}