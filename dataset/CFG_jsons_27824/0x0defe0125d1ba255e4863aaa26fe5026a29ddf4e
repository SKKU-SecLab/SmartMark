{
  "name": "Analysis_2022-07-06_22-24-13",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b69a98501461003b578063d1c070281461010c575b600080fd5b6100bc6004803603606081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b91935091506001600160a01b0381358116916020013516610185565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100f85781810151838201526020016100e0565b505050509050019250505060405180910390f35b6100bc6004803603604081101561012257600080fd5b81019060208101813564010000000081111561013d57600080fd5b82018360208201111561014f57600080fd5b8035906020019184602083028401116401000000008311171561017157600080fd5b9193509150356001600160a01b031661037d565b60606000808567ffffffffffffffff811180156101a157600080fd5b506040519080825280602002602001820160405280156101cb578160200160208202803683370190505b50905060005b868110156102ef578787828181106101e557fe5b905060200201356001600160a01b03166001600160a01b031663dd62ed3e87876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561025257600080fd5b505afa92505050801561027757506040513d602081101561027257600080fd5b505160015b610280576102e7565b8061028b57506102e7565b600160f81b8111156102bf5760f882901b600160f71b178385815181106102ae57fe5b6020026020010181815250506102df565b8060f883901b178385815181106102d257fe5b6020026020010181815250505b506001909201915b6001016101d1565b508167ffffffffffffffff8111801561030757600080fd5b50604051908082528060200260200182016040528015610331578160200160208202803683370190505b50925060005b828110156103725781818151811061034b57fe5b602002602001015184828151811061035f57fe5b6020908102919091010152600101610337565b505050949350505050565b60606000808467ffffffffffffffff8111801561039957600080fd5b506040519080825280602002602001820160405280156103c3578160200160208202803683370190505b50905060005b858110156104a0578686828181106103dd57fe5b905060200201356001600160a01b03166001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561043957600080fd5b505afa92505050801561045e57506040513d602081101561045957600080fd5b505160015b61046757610498565b806104725750610498565b8060f883901b1783858151811061048557fe5b6020908102919091010152506001909201915b6001016103c9565b508167ffffffffffffffff811180156104b857600080fd5b506040519080825280602002602001820160405280156104e2578160200160208202803683370190505b50925060005b82811015610523578181815181106104fc57fe5b602002602001015184828151811061051057fe5b60209081029190910101526001016104e8565b505050939250505056fea26469706673582212207ee0cdd87a3b1f0965d3126027e826e7c3bbc335c53b2cea20538d379203056c64736f6c63430007060033",
  "binaryHash": "25bf5487",
  "isOnlyRuntime": true,
  "metadata": "a26469706673582212207ee0cdd87a3b1f0965d3126027e826e7c3bbc335c53b2cea20538d379203056c64736f6c63430007060033",
  "solidityVersion": "0.7.6",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657113853553
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063b69a98501461003b578063d1c070281461010c575b600080fd5b6100bc6004803603606081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b91935091506001600160a01b0381358116916020013516610185565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100f85781810151838201526020016100e0565b505050509050019250505060405180910390f35b6100bc6004803603604081101561012257600080fd5b81019060208101813564010000000081111561013d57600080fd5b82018360208201111561014f57600080fd5b8035906020019184602083028401116401000000008311171561017157600080fd5b9193509150356001600160a01b031661037d565b60606000808567ffffffffffffffff811180156101a157600080fd5b506040519080825280602002602001820160405280156101cb578160200160208202803683370190505b50905060005b868110156102ef578787828181106101e557fe5b905060200201356001600160a01b03166001600160a01b031663dd62ed3e87876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561025257600080fd5b505afa92505050801561027757506040513d602081101561027257600080fd5b505160015b610280576102e7565b8061028b57506102e7565b600160f81b8111156102bf5760f882901b600160f71b178385815181106102ae57fe5b6020026020010181815250506102df565b8060f883901b178385815181106102d257fe5b6020026020010181815250505b506001909201915b6001016101d1565b508167ffffffffffffffff8111801561030757600080fd5b50604051908082528060200260200182016040528015610331578160200160208202803683370190505b50925060005b828110156103725781818151811061034b57fe5b602002602001015184828151811061035f57fe5b6020908102919091010152600101610337565b505050949350505050565b60606000808467ffffffffffffffff8111801561039957600080fd5b506040519080825280602002602001820160405280156103c3578160200160208202803683370190505b50905060005b858110156104a0578686828181106103dd57fe5b905060200201356001600160a01b03166001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561043957600080fd5b505afa92505050801561045e57506040513d602081101561045957600080fd5b505160015b61046757610498565b806104725750610498565b8060f883901b1783858151811061048557fe5b6020908102919091010152506001909201915b6001016103c9565b508167ffffffffffffffff811180156104b857600080fd5b506040519080825280602002602001820160405280156104e2578160200160208202803683370190505b50925060005b82811015610523578181815181106104fc57fe5b602002602001015184828151811061051057fe5b60209081029190910101526001016104e8565b505050939250505056fe",
    "remainingData": "fe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061003657",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063b69a98501461003b57",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0xb69a9850\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d1c070281461010c57",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0xd1c07028\n49: EQ\n50: PUSH2 0x010c\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT"
      },
      {
        "offset": 59,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100bc6004803603606081101561005157",
        "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x00bc\n63: PUSH1 0x04\n65: DUP1\n66: CALLDATASIZE\n67: SUB\n68: PUSH1 0x60\n70: DUP2\n71: LT\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b81019060208101813564010000000081111561006c57",
        "parsedOpcodes": "81: JUMPDEST\n82: DUP2\n83: ADD\n84: SWAP1\n85: PUSH1 0x20\n87: DUP2\n88: ADD\n89: DUP2\n90: CALLDATALOAD\n91: PUSH5 0x0100000000\n97: DUP2\n98: GT\n99: ISZERO\n100: PUSH2 0x006c\n103: JUMPI"
      },
      {
        "offset": 104,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "104: PUSH1 0x00\n106: DUP1\n107: REVERT"
      },
      {
        "offset": 108,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b82018360208201111561007e57",
        "parsedOpcodes": "108: JUMPDEST\n109: DUP3\n110: ADD\n111: DUP4\n112: PUSH1 0x20\n114: DUP3\n115: ADD\n116: GT\n117: ISZERO\n118: PUSH2 0x007e\n121: JUMPI"
      },
      {
        "offset": 122,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "122: PUSH1 0x00\n124: DUP1\n125: REVERT"
      },
      {
        "offset": 126,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b803590602001918460208302840111640100000000831117156100a057",
        "parsedOpcodes": "126: JUMPDEST\n127: DUP1\n128: CALLDATALOAD\n129: SWAP1\n130: PUSH1 0x20\n132: ADD\n133: SWAP2\n134: DUP5\n135: PUSH1 0x20\n137: DUP4\n138: MUL\n139: DUP5\n140: ADD\n141: GT\n142: PUSH5 0x0100000000\n148: DUP4\n149: GT\n150: OR\n151: ISZERO\n152: PUSH2 0x00a0\n155: JUMPI"
      },
      {
        "offset": 156,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "156: PUSH1 0x00\n158: DUP1\n159: REVERT"
      },
      {
        "offset": 160,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b91935091506001600160a01b038135811691602001351661018556",
        "parsedOpcodes": "160: JUMPDEST\n161: SWAP2\n162: SWAP4\n163: POP\n164: SWAP2\n165: POP\n166: PUSH1 0x01\n168: PUSH1 0x01\n170: PUSH1 0xa0\n172: SHL\n173: SUB\n174: DUP2\n175: CALLDATALOAD\n176: DUP2\n177: AND\n178: SWAP2\n179: PUSH1 0x20\n181: ADD\n182: CALLDATALOAD\n183: AND\n184: PUSH2 0x0185\n187: JUMP"
      },
      {
        "offset": 188,
        "length": 36,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b6040805160208082528351818301528351919283929083019185810191028083836000",
        "parsedOpcodes": "188: JUMPDEST\n189: PUSH1 0x40\n191: DUP1\n192: MLOAD\n193: PUSH1 0x20\n195: DUP1\n196: DUP3\n197: MSTORE\n198: DUP4\n199: MLOAD\n200: DUP2\n201: DUP4\n202: ADD\n203: MSTORE\n204: DUP4\n205: MLOAD\n206: SWAP2\n207: SWAP3\n208: DUP4\n209: SWAP3\n210: SWAP1\n211: DUP4\n212: ADD\n213: SWAP2\n214: DUP6\n215: DUP2\n216: ADD\n217: SWAP2\n218: MUL\n219: DUP1\n220: DUP4\n221: DUP4\n222: PUSH1 0x00"
      },
      {
        "offset": 224,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156100f857",
        "parsedOpcodes": "224: JUMPDEST\n225: DUP4\n226: DUP2\n227: LT\n228: ISZERO\n229: PUSH2 0x00f8\n232: JUMPI"
      },
      {
        "offset": 233,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016100e056",
        "parsedOpcodes": "233: DUP2\n234: DUP2\n235: ADD\n236: MLOAD\n237: DUP4\n238: DUP3\n239: ADD\n240: MSTORE\n241: PUSH1 0x20\n243: ADD\n244: PUSH2 0x00e0\n247: JUMP"
      },
      {
        "offset": 248,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -10,
        "bytecodeHex": "5b505050509050019250505060405180910390f3",
        "parsedOpcodes": "248: JUMPDEST\n249: POP\n250: POP\n251: POP\n252: POP\n253: SWAP1\n254: POP\n255: ADD\n256: SWAP3\n257: POP\n258: POP\n259: POP\n260: PUSH1 0x40\n262: MLOAD\n263: DUP1\n264: SWAP2\n265: SUB\n266: SWAP1\n267: RETURN"
      },
      {
        "offset": 268,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6100bc6004803603604081101561012257",
        "parsedOpcodes": "268: JUMPDEST\n269: PUSH2 0x00bc\n272: PUSH1 0x04\n274: DUP1\n275: CALLDATASIZE\n276: SUB\n277: PUSH1 0x40\n279: DUP2\n280: LT\n281: ISZERO\n282: PUSH2 0x0122\n285: JUMPI"
      },
      {
        "offset": 286,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "286: PUSH1 0x00\n288: DUP1\n289: REVERT"
      },
      {
        "offset": 290,
        "length": 23,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b81019060208101813564010000000081111561013d57",
        "parsedOpcodes": "290: JUMPDEST\n291: DUP2\n292: ADD\n293: SWAP1\n294: PUSH1 0x20\n296: DUP2\n297: ADD\n298: DUP2\n299: CALLDATALOAD\n300: PUSH5 0x0100000000\n306: DUP2\n307: GT\n308: ISZERO\n309: PUSH2 0x013d\n312: JUMPI"
      },
      {
        "offset": 313,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "313: PUSH1 0x00\n315: DUP1\n316: REVERT"
      },
      {
        "offset": 317,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b82018360208201111561014f57",
        "parsedOpcodes": "317: JUMPDEST\n318: DUP3\n319: ADD\n320: DUP4\n321: PUSH1 0x20\n323: DUP3\n324: ADD\n325: GT\n326: ISZERO\n327: PUSH2 0x014f\n330: JUMPI"
      },
      {
        "offset": 331,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "331: PUSH1 0x00\n333: DUP1\n334: REVERT"
      },
      {
        "offset": 335,
        "length": 30,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b8035906020019184602083028401116401000000008311171561017157",
        "parsedOpcodes": "335: JUMPDEST\n336: DUP1\n337: CALLDATALOAD\n338: SWAP1\n339: PUSH1 0x20\n341: ADD\n342: SWAP2\n343: DUP5\n344: PUSH1 0x20\n346: DUP4\n347: MUL\n348: DUP5\n349: ADD\n350: GT\n351: PUSH5 0x0100000000\n357: DUP4\n358: GT\n359: OR\n360: ISZERO\n361: PUSH2 0x0171\n364: JUMPI"
      },
      {
        "offset": 365,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "365: PUSH1 0x00\n367: DUP1\n368: REVERT"
      },
      {
        "offset": 369,
        "length": 20,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b9193509150356001600160a01b031661037d56",
        "parsedOpcodes": "369: JUMPDEST\n370: SWAP2\n371: SWAP4\n372: POP\n373: SWAP2\n374: POP\n375: CALLDATALOAD\n376: PUSH1 0x01\n378: PUSH1 0x01\n380: PUSH1 0xa0\n382: SHL\n383: SUB\n384: AND\n385: PUSH2 0x037d\n388: JUMP"
      },
      {
        "offset": 389,
        "length": 24,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b60606000808567ffffffffffffffff811180156101a157",
        "parsedOpcodes": "389: JUMPDEST\n390: PUSH1 0x60\n392: PUSH1 0x00\n394: DUP1\n395: DUP6\n396: PUSH8 0xffffffffffffffff\n405: DUP2\n406: GT\n407: DUP1\n408: ISZERO\n409: PUSH2 0x01a1\n412: JUMPI"
      },
      {
        "offset": 413,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "413: PUSH1 0x00\n415: DUP1\n416: REVERT"
      },
      {
        "offset": 417,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506040519080825280602002602001820160405280156101cb57",
        "parsedOpcodes": "417: JUMPDEST\n418: POP\n419: PUSH1 0x40\n421: MLOAD\n422: SWAP1\n423: DUP1\n424: DUP3\n425: MSTORE\n426: DUP1\n427: PUSH1 0x20\n429: MUL\n430: PUSH1 0x20\n432: ADD\n433: DUP3\n434: ADD\n435: PUSH1 0x40\n437: MSTORE\n438: DUP1\n439: ISZERO\n440: PUSH2 0x01cb\n443: JUMPI"
      },
      {
        "offset": 444,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280368337019050",
        "parsedOpcodes": "444: DUP2\n445: PUSH1 0x20\n447: ADD\n448: PUSH1 0x20\n450: DUP3\n451: MUL\n452: DUP1\n453: CALLDATASIZE\n454: DUP4\n455: CALLDATACOPY\n456: ADD\n457: SWAP1\n458: POP"
      },
      {
        "offset": 459,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5090506000",
        "parsedOpcodes": "459: JUMPDEST\n460: POP\n461: SWAP1\n462: POP\n463: PUSH1 0x00"
      },
      {
        "offset": 465,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b868110156102ef57",
        "parsedOpcodes": "465: JUMPDEST\n466: DUP7\n467: DUP2\n468: LT\n469: ISZERO\n470: PUSH2 0x02ef\n473: JUMPI"
      },
      {
        "offset": 474,
        "length": 10,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "8787828181106101e557",
        "parsedOpcodes": "474: DUP8\n475: DUP8\n476: DUP3\n477: DUP2\n478: DUP2\n479: LT\n480: PUSH2 0x01e5\n483: JUMPI"
      },
      {
        "offset": 484,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "484: INVALID"
      },
      {
        "offset": 485,
        "length": 105,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b905060200201356001600160a01b03166001600160a01b031663dd62ed3e87876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561025257",
        "parsedOpcodes": "485: JUMPDEST\n486: SWAP1\n487: POP\n488: PUSH1 0x20\n490: MUL\n491: ADD\n492: CALLDATALOAD\n493: PUSH1 0x01\n495: PUSH1 0x01\n497: PUSH1 0xa0\n499: SHL\n500: SUB\n501: AND\n502: PUSH1 0x01\n504: PUSH1 0x01\n506: PUSH1 0xa0\n508: SHL\n509: SUB\n510: AND\n511: PUSH4 0xdd62ed3e\n516: DUP8\n517: DUP8\n518: PUSH1 0x40\n520: MLOAD\n521: DUP4\n522: PUSH4 0xffffffff\n527: AND\n528: PUSH1 0xe0\n530: SHL\n531: DUP2\n532: MSTORE\n533: PUSH1 0x04\n535: ADD\n536: DUP1\n537: DUP4\n538: PUSH1 0x01\n540: PUSH1 0x01\n542: PUSH1 0xa0\n544: SHL\n545: SUB\n546: AND\n547: DUP2\n548: MSTORE\n549: PUSH1 0x20\n551: ADD\n552: DUP3\n553: PUSH1 0x01\n555: PUSH1 0x01\n557: PUSH1 0xa0\n559: SHL\n560: SUB\n561: AND\n562: DUP2\n563: MSTORE\n564: PUSH1 0x20\n566: ADD\n567: SWAP3\n568: POP\n569: POP\n570: POP\n571: PUSH1 0x20\n573: PUSH1 0x40\n575: MLOAD\n576: DUP1\n577: DUP4\n578: SUB\n579: DUP2\n580: DUP7\n581: DUP1\n582: EXTCODESIZE\n583: ISZERO\n584: DUP1\n585: ISZERO\n586: PUSH2 0x0252\n589: JUMPI"
      },
      {
        "offset": 590,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "590: PUSH1 0x00\n592: DUP1\n593: REVERT"
      },
      {
        "offset": 594,
        "length": 14,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b505afa92505050801561027757",
        "parsedOpcodes": "594: JUMPDEST\n595: POP\n596: GAS\n597: STATICCALL\n598: SWAP3\n599: POP\n600: POP\n601: POP\n602: DUP1\n603: ISZERO\n604: PUSH2 0x0277\n607: JUMPI"
      },
      {
        "offset": 608,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "506040513d602081101561027257",
        "parsedOpcodes": "608: POP\n609: PUSH1 0x40\n611: MLOAD\n612: RETURNDATASIZE\n613: PUSH1 0x20\n615: DUP2\n616: LT\n617: ISZERO\n618: PUSH2 0x0272\n621: JUMPI"
      },
      {
        "offset": 622,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "622: PUSH1 0x00\n624: DUP1\n625: REVERT"
      },
      {
        "offset": 626,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50516001",
        "parsedOpcodes": "626: JUMPDEST\n627: POP\n628: MLOAD\n629: PUSH1 0x01"
      },
      {
        "offset": 631,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b61028057",
        "parsedOpcodes": "631: JUMPDEST\n632: PUSH2 0x0280\n635: JUMPI"
      },
      {
        "offset": 636,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6102e756",
        "parsedOpcodes": "636: PUSH2 0x02e7\n639: JUMP"
      },
      {
        "offset": 640,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8061028b57",
        "parsedOpcodes": "640: JUMPDEST\n641: DUP1\n642: PUSH2 0x028b\n645: JUMPI"
      },
      {
        "offset": 646,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "506102e756",
        "parsedOpcodes": "646: POP\n647: PUSH2 0x02e7\n650: JUMP"
      },
      {
        "offset": 651,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160f81b8111156102bf57",
        "parsedOpcodes": "651: JUMPDEST\n652: PUSH1 0x01\n654: PUSH1 0xf8\n656: SHL\n657: DUP2\n658: GT\n659: ISZERO\n660: PUSH2 0x02bf\n663: JUMPI"
      },
      {
        "offset": 664,
        "length": 21,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "60f882901b600160f71b178385815181106102ae57",
        "parsedOpcodes": "664: PUSH1 0xf8\n666: DUP3\n667: SWAP1\n668: SHL\n669: PUSH1 0x01\n671: PUSH1 0xf7\n673: SHL\n674: OR\n675: DUP4\n676: DUP6\n677: DUP2\n678: MLOAD\n679: DUP2\n680: LT\n681: PUSH2 0x02ae\n684: JUMPI"
      },
      {
        "offset": 685,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "685: INVALID"
      },
      {
        "offset": 686,
        "length": 17,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6020026020010181815250506102df56",
        "parsedOpcodes": "686: JUMPDEST\n687: PUSH1 0x20\n689: MUL\n690: PUSH1 0x20\n692: ADD\n693: ADD\n694: DUP2\n695: DUP2\n696: MSTORE\n697: POP\n698: POP\n699: PUSH2 0x02df\n702: JUMP"
      },
      {
        "offset": 703,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b8060f883901b178385815181106102d257",
        "parsedOpcodes": "703: JUMPDEST\n704: DUP1\n705: PUSH1 0xf8\n707: DUP4\n708: SWAP1\n709: SHL\n710: OR\n711: DUP4\n712: DUP6\n713: DUP2\n714: MLOAD\n715: DUP2\n716: LT\n717: PUSH2 0x02d2\n720: JUMPI"
      },
      {
        "offset": 721,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "721: INVALID"
      },
      {
        "offset": 722,
        "length": 13,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b602002602001018181525050",
        "parsedOpcodes": "722: JUMPDEST\n723: PUSH1 0x20\n725: MUL\n726: PUSH1 0x20\n728: ADD\n729: ADD\n730: DUP2\n731: DUP2\n732: MSTORE\n733: POP\n734: POP"
      },
      {
        "offset": 735,
        "length": 8,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50600190920191",
        "parsedOpcodes": "735: JUMPDEST\n736: POP\n737: PUSH1 0x01\n739: SWAP1\n740: SWAP3\n741: ADD\n742: SWAP2"
      },
      {
        "offset": 743,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001016101d156",
        "parsedOpcodes": "743: JUMPDEST\n744: PUSH1 0x01\n746: ADD\n747: PUSH2 0x01d1\n750: JUMP"
      },
      {
        "offset": 751,
        "length": 20,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b508167ffffffffffffffff8111801561030757",
        "parsedOpcodes": "751: JUMPDEST\n752: POP\n753: DUP2\n754: PUSH8 0xffffffffffffffff\n763: DUP2\n764: GT\n765: DUP1\n766: ISZERO\n767: PUSH2 0x0307\n770: JUMPI"
      },
      {
        "offset": 771,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "771: PUSH1 0x00\n773: DUP1\n774: REVERT"
      },
      {
        "offset": 775,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5060405190808252806020026020018201604052801561033157",
        "parsedOpcodes": "775: JUMPDEST\n776: POP\n777: PUSH1 0x40\n779: MLOAD\n780: SWAP1\n781: DUP1\n782: DUP3\n783: MSTORE\n784: DUP1\n785: PUSH1 0x20\n787: MUL\n788: PUSH1 0x20\n790: ADD\n791: DUP3\n792: ADD\n793: PUSH1 0x40\n795: MSTORE\n796: DUP1\n797: ISZERO\n798: PUSH2 0x0331\n801: JUMPI"
      },
      {
        "offset": 802,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280368337019050",
        "parsedOpcodes": "802: DUP2\n803: PUSH1 0x20\n805: ADD\n806: PUSH1 0x20\n808: DUP3\n809: MUL\n810: DUP1\n811: CALLDATASIZE\n812: DUP4\n813: CALLDATACOPY\n814: ADD\n815: SWAP1\n816: POP"
      },
      {
        "offset": 817,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5092506000",
        "parsedOpcodes": "817: JUMPDEST\n818: POP\n819: SWAP3\n820: POP\n821: PUSH1 0x00"
      },
      {
        "offset": 823,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8281101561037257",
        "parsedOpcodes": "823: JUMPDEST\n824: DUP3\n825: DUP2\n826: LT\n827: ISZERO\n828: PUSH2 0x0372\n831: JUMPI"
      },
      {
        "offset": 832,
        "length": 10,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "81818151811061034b57",
        "parsedOpcodes": "832: DUP2\n833: DUP2\n834: DUP2\n835: MLOAD\n836: DUP2\n837: LT\n838: PUSH2 0x034b\n841: JUMPI"
      },
      {
        "offset": 842,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "842: INVALID"
      },
      {
        "offset": 843,
        "length": 19,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b602002602001015184828151811061035f57",
        "parsedOpcodes": "843: JUMPDEST\n844: PUSH1 0x20\n846: MUL\n847: PUSH1 0x20\n849: ADD\n850: ADD\n851: MLOAD\n852: DUP5\n853: DUP3\n854: DUP2\n855: MLOAD\n856: DUP2\n857: LT\n858: PUSH2 0x035f\n861: JUMPI"
      },
      {
        "offset": 862,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "862: INVALID"
      },
      {
        "offset": 863,
        "length": 19,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b602090810291909101015260010161033756",
        "parsedOpcodes": "863: JUMPDEST\n864: PUSH1 0x20\n866: SWAP1\n867: DUP2\n868: MUL\n869: SWAP2\n870: SWAP1\n871: SWAP2\n872: ADD\n873: ADD\n874: MSTORE\n875: PUSH1 0x01\n877: ADD\n878: PUSH2 0x0337\n881: JUMP"
      },
      {
        "offset": 882,
        "length": 11,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b50505094935050505056",
        "parsedOpcodes": "882: JUMPDEST\n883: POP\n884: POP\n885: POP\n886: SWAP5\n887: SWAP4\n888: POP\n889: POP\n890: POP\n891: POP\n892: JUMP"
      },
      {
        "offset": 893,
        "length": 24,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b60606000808467ffffffffffffffff8111801561039957",
        "parsedOpcodes": "893: JUMPDEST\n894: PUSH1 0x60\n896: PUSH1 0x00\n898: DUP1\n899: DUP5\n900: PUSH8 0xffffffffffffffff\n909: DUP2\n910: GT\n911: DUP1\n912: ISZERO\n913: PUSH2 0x0399\n916: JUMPI"
      },
      {
        "offset": 917,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "917: PUSH1 0x00\n919: DUP1\n920: REVERT"
      },
      {
        "offset": 921,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506040519080825280602002602001820160405280156103c357",
        "parsedOpcodes": "921: JUMPDEST\n922: POP\n923: PUSH1 0x40\n925: MLOAD\n926: SWAP1\n927: DUP1\n928: DUP3\n929: MSTORE\n930: DUP1\n931: PUSH1 0x20\n933: MUL\n934: PUSH1 0x20\n936: ADD\n937: DUP3\n938: ADD\n939: PUSH1 0x40\n941: MSTORE\n942: DUP1\n943: ISZERO\n944: PUSH2 0x03c3\n947: JUMPI"
      },
      {
        "offset": 948,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280368337019050",
        "parsedOpcodes": "948: DUP2\n949: PUSH1 0x20\n951: ADD\n952: PUSH1 0x20\n954: DUP3\n955: MUL\n956: DUP1\n957: CALLDATASIZE\n958: DUP4\n959: CALLDATACOPY\n960: ADD\n961: SWAP1\n962: POP"
      },
      {
        "offset": 963,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5090506000",
        "parsedOpcodes": "963: JUMPDEST\n964: POP\n965: SWAP1\n966: POP\n967: PUSH1 0x00"
      },
      {
        "offset": 969,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b858110156104a057",
        "parsedOpcodes": "969: JUMPDEST\n970: DUP6\n971: DUP2\n972: LT\n973: ISZERO\n974: PUSH2 0x04a0\n977: JUMPI"
      },
      {
        "offset": 978,
        "length": 10,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "8686828181106103dd57",
        "parsedOpcodes": "978: DUP7\n979: DUP7\n980: DUP3\n981: DUP2\n982: DUP2\n983: LT\n984: PUSH2 0x03dd\n987: JUMPI"
      },
      {
        "offset": 988,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "988: INVALID"
      },
      {
        "offset": 989,
        "length": 88,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b905060200201356001600160a01b03166001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561043957",
        "parsedOpcodes": "989: JUMPDEST\n990: SWAP1\n991: POP\n992: PUSH1 0x20\n994: MUL\n995: ADD\n996: CALLDATALOAD\n997: PUSH1 0x01\n999: PUSH1 0x01\n1001: PUSH1 0xa0\n1003: SHL\n1004: SUB\n1005: AND\n1006: PUSH1 0x01\n1008: PUSH1 0x01\n1010: PUSH1 0xa0\n1012: SHL\n1013: SUB\n1014: AND\n1015: PUSH4 0x70a08231\n1020: DUP7\n1021: PUSH1 0x40\n1023: MLOAD\n1024: DUP3\n1025: PUSH4 0xffffffff\n1030: AND\n1031: PUSH1 0xe0\n1033: SHL\n1034: DUP2\n1035: MSTORE\n1036: PUSH1 0x04\n1038: ADD\n1039: DUP1\n1040: DUP3\n1041: PUSH1 0x01\n1043: PUSH1 0x01\n1045: PUSH1 0xa0\n1047: SHL\n1048: SUB\n1049: AND\n1050: DUP2\n1051: MSTORE\n1052: PUSH1 0x20\n1054: ADD\n1055: SWAP2\n1056: POP\n1057: POP\n1058: PUSH1 0x20\n1060: PUSH1 0x40\n1062: MLOAD\n1063: DUP1\n1064: DUP4\n1065: SUB\n1066: DUP2\n1067: DUP7\n1068: DUP1\n1069: EXTCODESIZE\n1070: ISZERO\n1071: DUP1\n1072: ISZERO\n1073: PUSH2 0x0439\n1076: JUMPI"
      },
      {
        "offset": 1077,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1077: PUSH1 0x00\n1079: DUP1\n1080: REVERT"
      },
      {
        "offset": 1081,
        "length": 14,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b505afa92505050801561045e57",
        "parsedOpcodes": "1081: JUMPDEST\n1082: POP\n1083: GAS\n1084: STATICCALL\n1085: SWAP3\n1086: POP\n1087: POP\n1088: POP\n1089: DUP1\n1090: ISZERO\n1091: PUSH2 0x045e\n1094: JUMPI"
      },
      {
        "offset": 1095,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "506040513d602081101561045957",
        "parsedOpcodes": "1095: POP\n1096: PUSH1 0x40\n1098: MLOAD\n1099: RETURNDATASIZE\n1100: PUSH1 0x20\n1102: DUP2\n1103: LT\n1104: ISZERO\n1105: PUSH2 0x0459\n1108: JUMPI"
      },
      {
        "offset": 1109,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1109: PUSH1 0x00\n1111: DUP1\n1112: REVERT"
      },
      {
        "offset": 1113,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50516001",
        "parsedOpcodes": "1113: JUMPDEST\n1114: POP\n1115: MLOAD\n1116: PUSH1 0x01"
      },
      {
        "offset": 1118,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b61046757",
        "parsedOpcodes": "1118: JUMPDEST\n1119: PUSH2 0x0467\n1122: JUMPI"
      },
      {
        "offset": 1123,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61049856",
        "parsedOpcodes": "1123: PUSH2 0x0498\n1126: JUMP"
      },
      {
        "offset": 1127,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8061047257",
        "parsedOpcodes": "1127: JUMPDEST\n1128: DUP1\n1129: PUSH2 0x0472\n1132: JUMPI"
      },
      {
        "offset": 1133,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5061049856",
        "parsedOpcodes": "1133: POP\n1134: PUSH2 0x0498\n1137: JUMP"
      },
      {
        "offset": 1138,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b8060f883901b1783858151811061048557",
        "parsedOpcodes": "1138: JUMPDEST\n1139: DUP1\n1140: PUSH1 0xf8\n1142: DUP4\n1143: SWAP1\n1144: SHL\n1145: OR\n1146: DUP4\n1147: DUP6\n1148: DUP2\n1149: MLOAD\n1150: DUP2\n1151: LT\n1152: PUSH2 0x0485\n1155: JUMPI"
      },
      {
        "offset": 1156,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1156: INVALID"
      },
      {
        "offset": 1157,
        "length": 19,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b602090810291909101015250600190920191",
        "parsedOpcodes": "1157: JUMPDEST\n1158: PUSH1 0x20\n1160: SWAP1\n1161: DUP2\n1162: MUL\n1163: SWAP2\n1164: SWAP1\n1165: SWAP2\n1166: ADD\n1167: ADD\n1168: MSTORE\n1169: POP\n1170: PUSH1 0x01\n1172: SWAP1\n1173: SWAP3\n1174: ADD\n1175: SWAP2"
      },
      {
        "offset": 1176,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001016103c956",
        "parsedOpcodes": "1176: JUMPDEST\n1177: PUSH1 0x01\n1179: ADD\n1180: PUSH2 0x03c9\n1183: JUMP"
      },
      {
        "offset": 1184,
        "length": 20,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b508167ffffffffffffffff811180156104b857",
        "parsedOpcodes": "1184: JUMPDEST\n1185: POP\n1186: DUP2\n1187: PUSH8 0xffffffffffffffff\n1196: DUP2\n1197: GT\n1198: DUP1\n1199: ISZERO\n1200: PUSH2 0x04b8\n1203: JUMPI"
      },
      {
        "offset": 1204,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1204: PUSH1 0x00\n1206: DUP1\n1207: REVERT"
      },
      {
        "offset": 1208,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506040519080825280602002602001820160405280156104e257",
        "parsedOpcodes": "1208: JUMPDEST\n1209: POP\n1210: PUSH1 0x40\n1212: MLOAD\n1213: SWAP1\n1214: DUP1\n1215: DUP3\n1216: MSTORE\n1217: DUP1\n1218: PUSH1 0x20\n1220: MUL\n1221: PUSH1 0x20\n1223: ADD\n1224: DUP3\n1225: ADD\n1226: PUSH1 0x40\n1228: MSTORE\n1229: DUP1\n1230: ISZERO\n1231: PUSH2 0x04e2\n1234: JUMPI"
      },
      {
        "offset": 1235,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280368337019050",
        "parsedOpcodes": "1235: DUP2\n1236: PUSH1 0x20\n1238: ADD\n1239: PUSH1 0x20\n1241: DUP3\n1242: MUL\n1243: DUP1\n1244: CALLDATASIZE\n1245: DUP4\n1246: CALLDATACOPY\n1247: ADD\n1248: SWAP1\n1249: POP"
      },
      {
        "offset": 1250,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5092506000",
        "parsedOpcodes": "1250: JUMPDEST\n1251: POP\n1252: SWAP3\n1253: POP\n1254: PUSH1 0x00"
      },
      {
        "offset": 1256,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8281101561052357",
        "parsedOpcodes": "1256: JUMPDEST\n1257: DUP3\n1258: DUP2\n1259: LT\n1260: ISZERO\n1261: PUSH2 0x0523\n1264: JUMPI"
      },
      {
        "offset": 1265,
        "length": 10,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "8181815181106104fc57",
        "parsedOpcodes": "1265: DUP2\n1266: DUP2\n1267: DUP2\n1268: MLOAD\n1269: DUP2\n1270: LT\n1271: PUSH2 0x04fc\n1274: JUMPI"
      },
      {
        "offset": 1275,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1275: INVALID"
      },
      {
        "offset": 1276,
        "length": 19,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b602002602001015184828151811061051057",
        "parsedOpcodes": "1276: JUMPDEST\n1277: PUSH1 0x20\n1279: MUL\n1280: PUSH1 0x20\n1282: ADD\n1283: ADD\n1284: MLOAD\n1285: DUP5\n1286: DUP3\n1287: DUP2\n1288: MLOAD\n1289: DUP2\n1290: LT\n1291: PUSH2 0x0510\n1294: JUMPI"
      },
      {
        "offset": 1295,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1295: INVALID"
      },
      {
        "offset": 1296,
        "length": 19,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b60209081029190910101526001016104e856",
        "parsedOpcodes": "1296: JUMPDEST\n1297: PUSH1 0x20\n1299: SWAP1\n1300: DUP2\n1301: MUL\n1302: SWAP2\n1303: SWAP1\n1304: SWAP2\n1305: ADD\n1306: ADD\n1307: MSTORE\n1308: PUSH1 0x01\n1310: ADD\n1311: PUSH2 0x04e8\n1314: JUMP"
      },
      {
        "offset": 1315,
        "length": 10,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b505050939250505056",
        "parsedOpcodes": "1315: JUMPDEST\n1316: POP\n1317: POP\n1318: POP\n1319: SWAP4\n1320: SWAP3\n1321: POP\n1322: POP\n1323: POP\n1324: JUMP"
      },
      {
        "offset": 1325,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1325: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          1325
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          54
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          59
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          268
        ]
      },
      {
        "from": 54,
        "to": [
          1325
        ]
      },
      {
        "from": 59,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          1325
        ]
      },
      {
        "from": 81,
        "to": [
          104,
          108
        ]
      },
      {
        "from": 104,
        "to": [
          1325
        ]
      },
      {
        "from": 108,
        "to": [
          122,
          126
        ]
      },
      {
        "from": 122,
        "to": [
          1325
        ]
      },
      {
        "from": 126,
        "to": [
          156,
          160
        ]
      },
      {
        "from": 156,
        "to": [
          1325
        ]
      },
      {
        "from": 160,
        "to": [
          389,
          389
        ]
      },
      {
        "from": 188,
        "to": [
          224
        ]
      },
      {
        "from": 224,
        "to": [
          233,
          248
        ]
      },
      {
        "from": 233,
        "to": [
          224,
          224,
          224
        ]
      },
      {
        "from": 248,
        "to": [
          1325
        ]
      },
      {
        "from": 268,
        "to": [
          286,
          290
        ]
      },
      {
        "from": 286,
        "to": [
          1325
        ]
      },
      {
        "from": 290,
        "to": [
          313,
          317
        ]
      },
      {
        "from": 313,
        "to": [
          1325
        ]
      },
      {
        "from": 317,
        "to": [
          331,
          335
        ]
      },
      {
        "from": 331,
        "to": [
          1325
        ]
      },
      {
        "from": 335,
        "to": [
          365,
          369
        ]
      },
      {
        "from": 365,
        "to": [
          1325
        ]
      },
      {
        "from": 369,
        "to": [
          893
        ]
      },
      {
        "from": 389,
        "to": [
          413,
          417
        ]
      },
      {
        "from": 413,
        "to": [
          1325
        ]
      },
      {
        "from": 417,
        "to": [
          444,
          459
        ]
      },
      {
        "from": 444,
        "to": [
          459
        ]
      },
      {
        "from": 459,
        "to": [
          465
        ]
      },
      {
        "from": 465,
        "to": [
          474,
          751
        ]
      },
      {
        "from": 474,
        "to": [
          484,
          485
        ]
      },
      {
        "from": 484,
        "to": [
          1325
        ]
      },
      {
        "from": 485,
        "to": [
          590,
          594
        ]
      },
      {
        "from": 590,
        "to": [
          1325
        ]
      },
      {
        "from": 594,
        "to": [
          608,
          631
        ]
      },
      {
        "from": 608,
        "to": [
          622,
          626
        ]
      },
      {
        "from": 622,
        "to": [
          1325
        ]
      },
      {
        "from": 626,
        "to": [
          631
        ]
      },
      {
        "from": 631,
        "to": [
          636,
          640
        ]
      },
      {
        "from": 636,
        "to": [
          743
        ]
      },
      {
        "from": 640,
        "to": [
          646,
          651
        ]
      },
      {
        "from": 646,
        "to": [
          743
        ]
      },
      {
        "from": 651,
        "to": [
          664,
          703
        ]
      },
      {
        "from": 664,
        "to": [
          685,
          686
        ]
      },
      {
        "from": 685,
        "to": [
          1325
        ]
      },
      {
        "from": 686,
        "to": [
          735
        ]
      },
      {
        "from": 703,
        "to": [
          721,
          722
        ]
      },
      {
        "from": 721,
        "to": [
          1325
        ]
      },
      {
        "from": 722,
        "to": [
          735
        ]
      },
      {
        "from": 735,
        "to": [
          743
        ]
      },
      {
        "from": 743,
        "to": [
          465,
          465,
          465
        ]
      },
      {
        "from": 751,
        "to": [
          771,
          775
        ]
      },
      {
        "from": 771,
        "to": [
          1325
        ]
      },
      {
        "from": 775,
        "to": [
          802,
          817
        ]
      },
      {
        "from": 802,
        "to": [
          817
        ]
      },
      {
        "from": 817,
        "to": [
          823
        ]
      },
      {
        "from": 823,
        "to": [
          832,
          882
        ]
      },
      {
        "from": 832,
        "to": [
          842,
          843
        ]
      },
      {
        "from": 842,
        "to": [
          1325
        ]
      },
      {
        "from": 843,
        "to": [
          862,
          863
        ]
      },
      {
        "from": 862,
        "to": [
          1325
        ]
      },
      {
        "from": 863,
        "to": [
          823,
          823,
          823,
          823,
          823
        ]
      },
      {
        "from": 882,
        "to": [
          188,
          188
        ]
      },
      {
        "from": 893,
        "to": [
          917,
          921
        ]
      },
      {
        "from": 917,
        "to": [
          1325
        ]
      },
      {
        "from": 921,
        "to": [
          948,
          963
        ]
      },
      {
        "from": 948,
        "to": [
          963
        ]
      },
      {
        "from": 963,
        "to": [
          969
        ]
      },
      {
        "from": 969,
        "to": [
          978,
          1184
        ]
      },
      {
        "from": 978,
        "to": [
          988,
          989
        ]
      },
      {
        "from": 988,
        "to": [
          1325
        ]
      },
      {
        "from": 989,
        "to": [
          1077,
          1081
        ]
      },
      {
        "from": 1077,
        "to": [
          1325
        ]
      },
      {
        "from": 1081,
        "to": [
          1095,
          1118
        ]
      },
      {
        "from": 1095,
        "to": [
          1109,
          1113
        ]
      },
      {
        "from": 1109,
        "to": [
          1325
        ]
      },
      {
        "from": 1113,
        "to": [
          1118
        ]
      },
      {
        "from": 1118,
        "to": [
          1123,
          1127
        ]
      },
      {
        "from": 1123,
        "to": [
          1176
        ]
      },
      {
        "from": 1127,
        "to": [
          1133,
          1138
        ]
      },
      {
        "from": 1133,
        "to": [
          1176
        ]
      },
      {
        "from": 1138,
        "to": [
          1156,
          1157
        ]
      },
      {
        "from": 1156,
        "to": [
          1325
        ]
      },
      {
        "from": 1157,
        "to": [
          1176
        ]
      },
      {
        "from": 1176,
        "to": [
          969
        ]
      },
      {
        "from": 1184,
        "to": [
          1204,
          1208
        ]
      },
      {
        "from": 1204,
        "to": [
          1325
        ]
      },
      {
        "from": 1208,
        "to": [
          1235,
          1250
        ]
      },
      {
        "from": 1235,
        "to": [
          1250
        ]
      },
      {
        "from": 1250,
        "to": [
          1256
        ]
      },
      {
        "from": 1256,
        "to": [
          1265,
          1315
        ]
      },
      {
        "from": 1265,
        "to": [
          1275,
          1276
        ]
      },
      {
        "from": 1275,
        "to": [
          1325
        ]
      },
      {
        "from": 1276,
        "to": [
          1295,
          1296
        ]
      },
      {
        "from": 1295,
        "to": [
          1325
        ]
      },
      {
        "from": 1296,
        "to": [
          1256
        ]
      },
      {
        "from": 1315,
        "to": [
          1325
        ]
      },
      {
        "from": 1325,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 2,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 1,
      "errorLog": "Orphan jump unresolvable at 892, symbolic execution found an unknown value\nStack: [null, null]\nOrphan jump unresolvable at 892, symbolic execution found an unknown value\nStack: [null, null]\nCritical error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 5\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:459)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeSwap(SymbolicExecutionStack.java:70)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeOpcode(SymbolicExecutionStack.java:45)\n\tat parseTree.cfg.CfgBuilder.resolveOrphanJumps(CfgBuilder.java:211)\n\tat parseTree.cfg.CfgBuilder.buildCfg(CfgBuilder.java:90)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:54)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:62)\n\tat cli.MainCLI.call(MainCLI.java:70)\n\tat cli.MainCLI.call(MainCLI.java:24)\n\tat picocli.CommandLine.executeUserObject(CommandLine.java:1933)\n\tat picocli.CommandLine.access$1100(CommandLine.java:145)\n\tat picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2326)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2291)\n\tat picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2159)\n\tat picocli.CommandLine.execute(CommandLine.java:2058)\n\tat cli.MainCLI.main(MainCLI.java:102)\n",
      "buildTimeMillis": 93
    }
  }
}