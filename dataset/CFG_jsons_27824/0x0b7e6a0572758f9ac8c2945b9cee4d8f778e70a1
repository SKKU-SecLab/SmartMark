{
  "name": "Analysis_2022-07-06_19-43-56",
  "address": "",
  "binarySource": "6080604052600436106100385760003560e01c8063380c47461461003e57806383c0211b146100d1578063dd2e0ac01461014057610039565b5b600080fd5b34801561004a57600080fd5b506100976004803603604081101561006157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061017b565b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156100dd57600080fd5b5061013e600480360360808110156100f457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506101d2565b005b34801561014c57600080fd5b506101796004803603602081101561016357600080fd5b8101908080359060200190929190505050610631565b005b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101541461029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f736c6f74496e646578416c726561647954616b656e000000000000000000000081525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b505050506040513d602081101561033057600080fd5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506040513d60208110156103fc57600080fd5b810190808051906020019092919050505061047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f746f6b656e586665724661696c0000000000000000000000000000000000000081525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b505050506040513d602081101561051457600080fd5b81019080805190602001909291905050509050600061053c8383610a5a90919063ffffffff16565b90506000805486024201905060405180606001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050505050505050505050565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002015411156106fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f74696d654e6f74456c617073656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060010181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b505050506040513d60208110156108b457600080fd5b810190808051906020019092919050505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d6020811015610a4557600080fd5b81019080805190602001909291905050505050565b600082821115610a6657fe5b81830390509291505056fea264697066735822122058942d28a739c3cf6b8a88cffb175884c008b3736becaf53e0fd2eef0756d8f664736f6c634300060c0033",
  "binaryHash": "bc742b5a",
  "isOnlyRuntime": true,
  "metadata": "a264697066735822122058942d28a739c3cf6b8a88cffb175884c008b3736becaf53e0fd2eef0756d8f664736f6c634300060c0033",
  "solidityVersion": "0.6.12",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657104236054
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100385760003560e01c8063380c47461461003e57806383c0211b146100d1578063dd2e0ac01461014057610039565b5b600080fd5b34801561004a57600080fd5b506100976004803603604081101561006157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061017b565b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156100dd57600080fd5b5061013e600480360360808110156100f457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506101d2565b005b34801561014c57600080fd5b506101796004803603602081101561016357600080fd5b8101908080359060200190929190505050610631565b005b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101541461029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f736c6f74496e646578416c726561647954616b656e000000000000000000000081525060200191505060405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b505050506040513d602081101561033057600080fd5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506040513d60208110156103fc57600080fd5b810190808051906020019092919050505061047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f746f6b656e586665724661696c0000000000000000000000000000000000000081525060200191505060405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104ea57600080fd5b505af11580156104fe573d6000803e3d6000fd5b505050506040513d602081101561051457600080fd5b81019080805190602001909291905050509050600061053c8383610a5a90919063ffffffff16565b90506000805486024201905060405180606001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050505050505050505050565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002015411156106fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f74696d654e6f74456c617073656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060010181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088a57600080fd5b505af115801561089e573d6000803e3d6000fd5b505050506040513d60208110156108b457600080fd5b810190808051906020019092919050505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d6020811015610a4557600080fd5b81019080805190602001909291905050505050565b600082821115610a6657fe5b81830390509291505056fe",
    "remainingData": "fe",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061003857",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0038\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063380c47461461003e57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH1 0xe0\n18: SHR\n19: DUP1\n20: PUSH4 0x380c4746\n25: EQ\n26: PUSH2 0x003e\n29: JUMPI"
      },
      {
        "offset": 30,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806383c0211b146100d157",
        "parsedOpcodes": "30: DUP1\n31: PUSH4 0x83c0211b\n36: EQ\n37: PUSH2 0x00d1\n40: JUMPI"
      },
      {
        "offset": 41,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063dd2e0ac01461014057",
        "parsedOpcodes": "41: DUP1\n42: PUSH4 0xdd2e0ac0\n47: EQ\n48: PUSH2 0x0140\n51: JUMPI"
      },
      {
        "offset": 52,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "61003956",
        "parsedOpcodes": "52: PUSH2 0x0039\n55: JUMP"
      },
      {
        "offset": 56,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "56: JUMPDEST"
      },
      {
        "offset": 57,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "57: JUMPDEST\n58: PUSH1 0x00\n60: DUP1\n61: REVERT"
      },
      {
        "offset": 62,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561004a57",
        "parsedOpcodes": "62: JUMPDEST\n63: CALLVALUE\n64: DUP1\n65: ISZERO\n66: PUSH2 0x004a\n69: JUMPI"
      },
      {
        "offset": 70,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "70: PUSH1 0x00\n72: DUP1\n73: REVERT"
      },
      {
        "offset": 74,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506100976004803603604081101561006157",
        "parsedOpcodes": "74: JUMPDEST\n75: POP\n76: PUSH2 0x0097\n79: PUSH1 0x04\n81: DUP1\n82: CALLDATASIZE\n83: SUB\n84: PUSH1 0x40\n86: DUP2\n87: LT\n88: ISZERO\n89: PUSH2 0x0061\n92: JUMPI"
      },
      {
        "offset": 93,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "93: PUSH1 0x00\n95: DUP1\n96: REVERT"
      },
      {
        "offset": 97,
        "length": 54,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061017b56",
        "parsedOpcodes": "97: JUMPDEST\n98: DUP2\n99: ADD\n100: SWAP1\n101: DUP1\n102: DUP1\n103: CALLDATALOAD\n104: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n125: AND\n126: SWAP1\n127: PUSH1 0x20\n129: ADD\n130: SWAP1\n131: SWAP3\n132: SWAP2\n133: SWAP1\n134: DUP1\n135: CALLDATALOAD\n136: SWAP1\n137: PUSH1 0x20\n139: ADD\n140: SWAP1\n141: SWAP3\n142: SWAP2\n143: SWAP1\n144: POP\n145: POP\n146: POP\n147: PUSH2 0x017b\n150: JUMP"
      },
      {
        "offset": 151,
        "length": 58,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f3",
        "parsedOpcodes": "151: JUMPDEST\n152: PUSH1 0x40\n154: MLOAD\n155: DUP1\n156: DUP5\n157: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n178: AND\n179: DUP2\n180: MSTORE\n181: PUSH1 0x20\n183: ADD\n184: DUP4\n185: DUP2\n186: MSTORE\n187: PUSH1 0x20\n189: ADD\n190: DUP3\n191: DUP2\n192: MSTORE\n193: PUSH1 0x20\n195: ADD\n196: SWAP4\n197: POP\n198: POP\n199: POP\n200: POP\n201: PUSH1 0x40\n203: MLOAD\n204: DUP1\n205: SWAP2\n206: SUB\n207: SWAP1\n208: RETURN"
      },
      {
        "offset": 209,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100dd57",
        "parsedOpcodes": "209: JUMPDEST\n210: CALLVALUE\n211: DUP1\n212: ISZERO\n213: PUSH2 0x00dd\n216: JUMPI"
      },
      {
        "offset": 217,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "217: PUSH1 0x00\n219: DUP1\n220: REVERT"
      },
      {
        "offset": 221,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b5061013e600480360360808110156100f457",
        "parsedOpcodes": "221: JUMPDEST\n222: POP\n223: PUSH2 0x013e\n226: PUSH1 0x04\n228: DUP1\n229: CALLDATASIZE\n230: SUB\n231: PUSH1 0x80\n233: DUP2\n234: LT\n235: ISZERO\n236: PUSH2 0x00f4\n239: JUMPI"
      },
      {
        "offset": 240,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "240: PUSH1 0x00\n242: DUP1\n243: REVERT"
      },
      {
        "offset": 244,
        "length": 74,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506101d256",
        "parsedOpcodes": "244: JUMPDEST\n245: DUP2\n246: ADD\n247: SWAP1\n248: DUP1\n249: DUP1\n250: CALLDATALOAD\n251: SWAP1\n252: PUSH1 0x20\n254: ADD\n255: SWAP1\n256: SWAP3\n257: SWAP2\n258: SWAP1\n259: DUP1\n260: CALLDATALOAD\n261: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n282: AND\n283: SWAP1\n284: PUSH1 0x20\n286: ADD\n287: SWAP1\n288: SWAP3\n289: SWAP2\n290: SWAP1\n291: DUP1\n292: CALLDATALOAD\n293: SWAP1\n294: PUSH1 0x20\n296: ADD\n297: SWAP1\n298: SWAP3\n299: SWAP2\n300: SWAP1\n301: DUP1\n302: CALLDATALOAD\n303: SWAP1\n304: PUSH1 0x20\n306: ADD\n307: SWAP1\n308: SWAP3\n309: SWAP2\n310: SWAP1\n311: POP\n312: POP\n313: POP\n314: PUSH2 0x01d2\n317: JUMP"
      },
      {
        "offset": 318,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "318: JUMPDEST\n319: STOP"
      },
      {
        "offset": 320,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561014c57",
        "parsedOpcodes": "320: JUMPDEST\n321: CALLVALUE\n322: DUP1\n323: ISZERO\n324: PUSH2 0x014c\n327: JUMPI"
      },
      {
        "offset": 328,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "328: PUSH1 0x00\n330: DUP1\n331: REVERT"
      },
      {
        "offset": 332,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506101796004803603602081101561016357",
        "parsedOpcodes": "332: JUMPDEST\n333: POP\n334: PUSH2 0x0179\n337: PUSH1 0x04\n339: DUP1\n340: CALLDATASIZE\n341: SUB\n342: PUSH1 0x20\n344: DUP2\n345: LT\n346: ISZERO\n347: PUSH2 0x0163\n350: JUMPI"
      },
      {
        "offset": 351,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "351: PUSH1 0x00\n353: DUP1\n354: REVERT"
      },
      {
        "offset": 355,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b810190808035906020019092919050505061063156",
        "parsedOpcodes": "355: JUMPDEST\n356: DUP2\n357: ADD\n358: SWAP1\n359: DUP1\n360: DUP1\n361: CALLDATALOAD\n362: SWAP1\n363: PUSH1 0x20\n365: ADD\n366: SWAP1\n367: SWAP3\n368: SWAP2\n369: SWAP1\n370: POP\n371: POP\n372: POP\n373: PUSH2 0x0631\n376: JUMP"
      },
      {
        "offset": 377,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "377: JUMPDEST\n378: STOP"
      },
      {
        "offset": 379,
        "length": 87,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490508356",
        "parsedOpcodes": "379: JUMPDEST\n380: PUSH1 0x01\n382: PUSH1 0x20\n384: MSTORE\n385: DUP2\n386: PUSH1 0x00\n388: MSTORE\n389: PUSH1 0x40\n391: PUSH1 0x00\n393: SHA3\n394: PUSH1 0x20\n396: MSTORE\n397: DUP1\n398: PUSH1 0x00\n400: MSTORE\n401: PUSH1 0x40\n403: PUSH1 0x00\n405: SHA3\n406: PUSH1 0x00\n408: SWAP2\n409: POP\n410: SWAP2\n411: POP\n412: POP\n413: DUP1\n414: PUSH1 0x00\n416: ADD\n417: PUSH1 0x00\n419: SWAP1\n420: SLOAD\n421: SWAP1\n422: PUSH2 0x0100\n425: EXP\n426: SWAP1\n427: DIV\n428: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n449: AND\n450: SWAP1\n451: DUP1\n452: PUSH1 0x01\n454: ADD\n455: SLOAD\n456: SWAP1\n457: DUP1\n458: PUSH1 0x02\n460: ADD\n461: SLOAD\n462: SWAP1\n463: POP\n464: DUP4\n465: JUMP"
      },
      {
        "offset": 466,
        "length": 92,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101541461029b57",
        "parsedOpcodes": "466: JUMPDEST\n467: PUSH1 0x00\n469: PUSH1 0x01\n471: PUSH1 0x00\n473: CALLER\n474: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n495: AND\n496: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n517: AND\n518: DUP2\n519: MSTORE\n520: PUSH1 0x20\n522: ADD\n523: SWAP1\n524: DUP2\n525: MSTORE\n526: PUSH1 0x20\n528: ADD\n529: PUSH1 0x00\n531: SHA3\n532: PUSH1 0x00\n534: DUP7\n535: DUP2\n536: MSTORE\n537: PUSH1 0x20\n539: ADD\n540: SWAP1\n541: DUP2\n542: MSTORE\n543: PUSH1 0x20\n545: ADD\n546: PUSH1 0x00\n548: SHA3\n549: PUSH1 0x01\n551: ADD\n552: SLOAD\n553: EQ\n554: PUSH2 0x029b\n557: JUMPI"
      },
      {
        "offset": 558,
        "length": 109,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f736c6f74496e646578416c726561647954616b656e000000000000000000000081525060200191505060405180910390fd",
        "parsedOpcodes": "558: PUSH1 0x40\n560: MLOAD\n561: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n594: DUP2\n595: MSTORE\n596: PUSH1 0x04\n598: ADD\n599: DUP1\n600: DUP1\n601: PUSH1 0x20\n603: ADD\n604: DUP3\n605: DUP2\n606: SUB\n607: DUP3\n608: MSTORE\n609: PUSH1 0x15\n611: DUP2\n612: MSTORE\n613: PUSH1 0x20\n615: ADD\n616: DUP1\n617: PUSH32 0x736c6f74496e646578416c726561647954616b656e0000000000000000000000\n650: DUP2\n651: MSTORE\n652: POP\n653: PUSH1 0x20\n655: ADD\n656: SWAP2\n657: POP\n658: POP\n659: PUSH1 0x40\n661: MLOAD\n662: DUP1\n663: SWAP2\n664: SUB\n665: SWAP1\n666: REVERT"
      },
      {
        "offset": 667,
        "length": 103,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60008373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561030657",
        "parsedOpcodes": "667: JUMPDEST\n668: PUSH1 0x00\n670: DUP4\n671: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n692: AND\n693: PUSH4 0x70a08231\n698: ADDRESS\n699: PUSH1 0x40\n701: MLOAD\n702: DUP3\n703: PUSH4 0xffffffff\n708: AND\n709: PUSH1 0xe0\n711: SHL\n712: DUP2\n713: MSTORE\n714: PUSH1 0x04\n716: ADD\n717: DUP1\n718: DUP3\n719: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n740: AND\n741: DUP2\n742: MSTORE\n743: PUSH1 0x20\n745: ADD\n746: SWAP2\n747: POP\n748: POP\n749: PUSH1 0x20\n751: PUSH1 0x40\n753: MLOAD\n754: DUP1\n755: DUP4\n756: SUB\n757: DUP2\n758: PUSH1 0x00\n760: DUP8\n761: DUP1\n762: EXTCODESIZE\n763: ISZERO\n764: DUP1\n765: ISZERO\n766: PUSH2 0x0306\n769: JUMPI"
      },
      {
        "offset": 770,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "770: PUSH1 0x00\n772: DUP1\n773: REVERT"
      },
      {
        "offset": 774,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561031a57",
        "parsedOpcodes": "774: JUMPDEST\n775: POP\n776: GAS\n777: CALL\n778: ISZERO\n779: DUP1\n780: ISZERO\n781: PUSH2 0x031a\n784: JUMPI"
      },
      {
        "offset": 785,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "785: RETURNDATASIZE\n786: PUSH1 0x00\n788: DUP1\n789: RETURNDATACOPY\n790: RETURNDATASIZE\n791: PUSH1 0x00\n793: REVERT"
      },
      {
        "offset": 794,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561033057",
        "parsedOpcodes": "794: JUMPDEST\n795: POP\n796: POP\n797: POP\n798: POP\n799: PUSH1 0x40\n801: MLOAD\n802: RETURNDATASIZE\n803: PUSH1 0x20\n805: DUP2\n806: LT\n807: ISZERO\n808: PUSH2 0x0330\n811: JUMPI"
      },
      {
        "offset": 812,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "812: PUSH1 0x00\n814: DUP1\n815: REVERT"
      },
      {
        "offset": 816,
        "length": 158,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b810190808051906020019092919050505090508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103d257",
        "parsedOpcodes": "816: JUMPDEST\n817: DUP2\n818: ADD\n819: SWAP1\n820: DUP1\n821: DUP1\n822: MLOAD\n823: SWAP1\n824: PUSH1 0x20\n826: ADD\n827: SWAP1\n828: SWAP3\n829: SWAP2\n830: SWAP1\n831: POP\n832: POP\n833: POP\n834: SWAP1\n835: POP\n836: DUP4\n837: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n858: AND\n859: PUSH4 0x23b872dd\n864: CALLER\n865: ADDRESS\n866: DUP6\n867: PUSH1 0x40\n869: MLOAD\n870: DUP5\n871: PUSH4 0xffffffff\n876: AND\n877: PUSH1 0xe0\n879: SHL\n880: DUP2\n881: MSTORE\n882: PUSH1 0x04\n884: ADD\n885: DUP1\n886: DUP5\n887: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n908: AND\n909: DUP2\n910: MSTORE\n911: PUSH1 0x20\n913: ADD\n914: DUP4\n915: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n936: AND\n937: DUP2\n938: MSTORE\n939: PUSH1 0x20\n941: ADD\n942: DUP3\n943: DUP2\n944: MSTORE\n945: PUSH1 0x20\n947: ADD\n948: SWAP4\n949: POP\n950: POP\n951: POP\n952: POP\n953: PUSH1 0x20\n955: PUSH1 0x40\n957: MLOAD\n958: DUP1\n959: DUP4\n960: SUB\n961: DUP2\n962: PUSH1 0x00\n964: DUP8\n965: DUP1\n966: EXTCODESIZE\n967: ISZERO\n968: DUP1\n969: ISZERO\n970: PUSH2 0x03d2\n973: JUMPI"
      },
      {
        "offset": 974,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "974: PUSH1 0x00\n976: DUP1\n977: REVERT"
      },
      {
        "offset": 978,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156103e657",
        "parsedOpcodes": "978: JUMPDEST\n979: POP\n980: GAS\n981: CALL\n982: ISZERO\n983: DUP1\n984: ISZERO\n985: PUSH2 0x03e6\n988: JUMPI"
      },
      {
        "offset": 989,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "989: RETURNDATASIZE\n990: PUSH1 0x00\n992: DUP1\n993: RETURNDATACOPY\n994: RETURNDATASIZE\n995: PUSH1 0x00\n997: REVERT"
      },
      {
        "offset": 998,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d60208110156103fc57",
        "parsedOpcodes": "998: JUMPDEST\n999: POP\n1000: POP\n1001: POP\n1002: POP\n1003: PUSH1 0x40\n1005: MLOAD\n1006: RETURNDATASIZE\n1007: PUSH1 0x20\n1009: DUP2\n1010: LT\n1011: ISZERO\n1012: PUSH2 0x03fc\n1015: JUMPI"
      },
      {
        "offset": 1016,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1016: PUSH1 0x00\n1018: DUP1\n1019: REVERT"
      },
      {
        "offset": 1020,
        "length": 22,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b810190808051906020019092919050505061047f57",
        "parsedOpcodes": "1020: JUMPDEST\n1021: DUP2\n1022: ADD\n1023: SWAP1\n1024: DUP1\n1025: DUP1\n1026: MLOAD\n1027: SWAP1\n1028: PUSH1 0x20\n1030: ADD\n1031: SWAP1\n1032: SWAP3\n1033: SWAP2\n1034: SWAP1\n1035: POP\n1036: POP\n1037: POP\n1038: PUSH2 0x047f\n1041: JUMPI"
      },
      {
        "offset": 1042,
        "length": 109,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f746f6b656e586665724661696c0000000000000000000000000000000000000081525060200191505060405180910390fd",
        "parsedOpcodes": "1042: PUSH1 0x40\n1044: MLOAD\n1045: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n1078: DUP2\n1079: MSTORE\n1080: PUSH1 0x04\n1082: ADD\n1083: DUP1\n1084: DUP1\n1085: PUSH1 0x20\n1087: ADD\n1088: DUP3\n1089: DUP2\n1090: SUB\n1091: DUP3\n1092: MSTORE\n1093: PUSH1 0x0d\n1095: DUP2\n1096: MSTORE\n1097: PUSH1 0x20\n1099: ADD\n1100: DUP1\n1101: PUSH32 0x746f6b656e586665724661696c00000000000000000000000000000000000000\n1134: DUP2\n1135: MSTORE\n1136: POP\n1137: PUSH1 0x20\n1139: ADD\n1140: SWAP2\n1141: POP\n1142: POP\n1143: PUSH1 0x40\n1145: MLOAD\n1146: DUP1\n1147: SWAP2\n1148: SUB\n1149: SWAP1\n1150: REVERT"
      },
      {
        "offset": 1151,
        "length": 103,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104ea57",
        "parsedOpcodes": "1151: JUMPDEST\n1152: PUSH1 0x00\n1154: DUP5\n1155: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1176: AND\n1177: PUSH4 0x70a08231\n1182: ADDRESS\n1183: PUSH1 0x40\n1185: MLOAD\n1186: DUP3\n1187: PUSH4 0xffffffff\n1192: AND\n1193: PUSH1 0xe0\n1195: SHL\n1196: DUP2\n1197: MSTORE\n1198: PUSH1 0x04\n1200: ADD\n1201: DUP1\n1202: DUP3\n1203: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1224: AND\n1225: DUP2\n1226: MSTORE\n1227: PUSH1 0x20\n1229: ADD\n1230: SWAP2\n1231: POP\n1232: POP\n1233: PUSH1 0x20\n1235: PUSH1 0x40\n1237: MLOAD\n1238: DUP1\n1239: DUP4\n1240: SUB\n1241: DUP2\n1242: PUSH1 0x00\n1244: DUP8\n1245: DUP1\n1246: EXTCODESIZE\n1247: ISZERO\n1248: DUP1\n1249: ISZERO\n1250: PUSH2 0x04ea\n1253: JUMPI"
      },
      {
        "offset": 1254,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1254: PUSH1 0x00\n1256: DUP1\n1257: REVERT"
      },
      {
        "offset": 1258,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156104fe57",
        "parsedOpcodes": "1258: JUMPDEST\n1259: POP\n1260: GAS\n1261: CALL\n1262: ISZERO\n1263: DUP1\n1264: ISZERO\n1265: PUSH2 0x04fe\n1268: JUMPI"
      },
      {
        "offset": 1269,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1269: RETURNDATASIZE\n1270: PUSH1 0x00\n1272: DUP1\n1273: RETURNDATACOPY\n1274: RETURNDATASIZE\n1275: PUSH1 0x00\n1277: REVERT"
      },
      {
        "offset": 1278,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561051457",
        "parsedOpcodes": "1278: JUMPDEST\n1279: POP\n1280: POP\n1281: POP\n1282: POP\n1283: PUSH1 0x40\n1285: MLOAD\n1286: RETURNDATASIZE\n1287: PUSH1 0x20\n1289: DUP2\n1290: LT\n1291: ISZERO\n1292: PUSH2 0x0514\n1295: JUMPI"
      },
      {
        "offset": 1296,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1296: PUSH1 0x00\n1298: DUP1\n1299: REVERT"
      },
      {
        "offset": 1300,
        "length": 40,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b81019080805190602001909291905050509050600061053c8383610a5a90919063ffffffff1656",
        "parsedOpcodes": "1300: JUMPDEST\n1301: DUP2\n1302: ADD\n1303: SWAP1\n1304: DUP1\n1305: DUP1\n1306: MLOAD\n1307: SWAP1\n1308: PUSH1 0x20\n1310: ADD\n1311: SWAP1\n1312: SWAP3\n1313: SWAP2\n1314: SWAP1\n1315: POP\n1316: POP\n1317: POP\n1318: SWAP1\n1319: POP\n1320: PUSH1 0x00\n1322: PUSH2 0x053c\n1325: DUP4\n1326: DUP4\n1327: PUSH2 0x0a5a\n1330: SWAP1\n1331: SWAP2\n1332: SWAP1\n1333: PUSH4 0xffffffff\n1338: AND\n1339: JUMP"
      },
      {
        "offset": 1340,
        "length": 245,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b90506000805486024201905060405180606001604052808873ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155905050505050505050505056",
        "parsedOpcodes": "1340: JUMPDEST\n1341: SWAP1\n1342: POP\n1343: PUSH1 0x00\n1345: DUP1\n1346: SLOAD\n1347: DUP7\n1348: MUL\n1349: TIMESTAMP\n1350: ADD\n1351: SWAP1\n1352: POP\n1353: PUSH1 0x40\n1355: MLOAD\n1356: DUP1\n1357: PUSH1 0x60\n1359: ADD\n1360: PUSH1 0x40\n1362: MSTORE\n1363: DUP1\n1364: DUP9\n1365: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1386: AND\n1387: DUP2\n1388: MSTORE\n1389: PUSH1 0x20\n1391: ADD\n1392: DUP4\n1393: DUP2\n1394: MSTORE\n1395: PUSH1 0x20\n1397: ADD\n1398: DUP3\n1399: DUP2\n1400: MSTORE\n1401: POP\n1402: PUSH1 0x01\n1404: PUSH1 0x00\n1406: CALLER\n1407: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1428: AND\n1429: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1450: AND\n1451: DUP2\n1452: MSTORE\n1453: PUSH1 0x20\n1455: ADD\n1456: SWAP1\n1457: DUP2\n1458: MSTORE\n1459: PUSH1 0x20\n1461: ADD\n1462: PUSH1 0x00\n1464: SHA3\n1465: PUSH1 0x00\n1467: DUP11\n1468: DUP2\n1469: MSTORE\n1470: PUSH1 0x20\n1472: ADD\n1473: SWAP1\n1474: DUP2\n1475: MSTORE\n1476: PUSH1 0x20\n1478: ADD\n1479: PUSH1 0x00\n1481: SHA3\n1482: PUSH1 0x00\n1484: DUP3\n1485: ADD\n1486: MLOAD\n1487: DUP2\n1488: PUSH1 0x00\n1490: ADD\n1491: PUSH1 0x00\n1493: PUSH2 0x0100\n1496: EXP\n1497: DUP2\n1498: SLOAD\n1499: DUP2\n1500: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1521: MUL\n1522: NOT\n1523: AND\n1524: SWAP1\n1525: DUP4\n1526: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1547: AND\n1548: MUL\n1549: OR\n1550: SWAP1\n1551: SSTORE\n1552: POP\n1553: PUSH1 0x20\n1555: DUP3\n1556: ADD\n1557: MLOAD\n1558: DUP2\n1559: PUSH1 0x01\n1561: ADD\n1562: SSTORE\n1563: PUSH1 0x40\n1565: DUP3\n1566: ADD\n1567: MLOAD\n1568: DUP2\n1569: PUSH1 0x02\n1571: ADD\n1572: SSTORE\n1573: SWAP1\n1574: POP\n1575: POP\n1576: POP\n1577: POP\n1578: POP\n1579: POP\n1580: POP\n1581: POP\n1582: POP\n1583: POP\n1584: JUMP"
      },
      {
        "offset": 1585,
        "length": 92,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206002015411156106fa57",
        "parsedOpcodes": "1585: JUMPDEST\n1586: TIMESTAMP\n1587: PUSH1 0x01\n1589: PUSH1 0x00\n1591: CALLER\n1592: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1613: AND\n1614: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1635: AND\n1636: DUP2\n1637: MSTORE\n1638: PUSH1 0x20\n1640: ADD\n1641: SWAP1\n1642: DUP2\n1643: MSTORE\n1644: PUSH1 0x20\n1646: ADD\n1647: PUSH1 0x00\n1649: SHA3\n1650: PUSH1 0x00\n1652: DUP4\n1653: DUP2\n1654: MSTORE\n1655: PUSH1 0x20\n1657: ADD\n1658: SWAP1\n1659: DUP2\n1660: MSTORE\n1661: PUSH1 0x20\n1663: ADD\n1664: PUSH1 0x00\n1666: SHA3\n1667: PUSH1 0x02\n1669: ADD\n1670: SLOAD\n1671: GT\n1672: ISZERO\n1673: PUSH2 0x06fa\n1676: JUMPI"
      },
      {
        "offset": 1677,
        "length": 109,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f74696d654e6f74456c617073656400000000000000000000000000000000000081525060200191505060405180910390fd",
        "parsedOpcodes": "1677: PUSH1 0x40\n1679: MLOAD\n1680: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n1713: DUP2\n1714: MSTORE\n1715: PUSH1 0x04\n1717: ADD\n1718: DUP1\n1719: DUP1\n1720: PUSH1 0x20\n1722: ADD\n1723: DUP3\n1724: DUP2\n1725: SUB\n1726: DUP3\n1727: MSTORE\n1728: PUSH1 0x0e\n1730: DUP2\n1731: MSTORE\n1732: PUSH1 0x20\n1734: ADD\n1735: DUP1\n1736: PUSH32 0x74696d654e6f74456c6170736564000000000000000000000000000000000000\n1769: DUP2\n1770: MSTORE\n1771: POP\n1772: PUSH1 0x20\n1774: ADD\n1775: SWAP2\n1776: POP\n1777: POP\n1778: PUSH1 0x40\n1780: MLOAD\n1781: DUP1\n1782: SWAP2\n1783: SUB\n1784: SWAP1\n1785: REVERT"
      },
      {
        "offset": 1786,
        "length": 396,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060010181905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600101546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561088a57",
        "parsedOpcodes": "1786: JUMPDEST\n1787: PUSH1 0x00\n1789: PUSH1 0x01\n1791: PUSH1 0x00\n1793: CALLER\n1794: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1815: AND\n1816: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1837: AND\n1838: DUP2\n1839: MSTORE\n1840: PUSH1 0x20\n1842: ADD\n1843: SWAP1\n1844: DUP2\n1845: MSTORE\n1846: PUSH1 0x20\n1848: ADD\n1849: PUSH1 0x00\n1851: SHA3\n1852: PUSH1 0x00\n1854: DUP4\n1855: DUP2\n1856: MSTORE\n1857: PUSH1 0x20\n1859: ADD\n1860: SWAP1\n1861: DUP2\n1862: MSTORE\n1863: PUSH1 0x20\n1865: ADD\n1866: PUSH1 0x00\n1868: SHA3\n1869: PUSH1 0x01\n1871: ADD\n1872: DUP2\n1873: SWAP1\n1874: SSTORE\n1875: POP\n1876: PUSH1 0x01\n1878: PUSH1 0x00\n1880: CALLER\n1881: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1902: AND\n1903: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1924: AND\n1925: DUP2\n1926: MSTORE\n1927: PUSH1 0x20\n1929: ADD\n1930: SWAP1\n1931: DUP2\n1932: MSTORE\n1933: PUSH1 0x20\n1935: ADD\n1936: PUSH1 0x00\n1938: SHA3\n1939: PUSH1 0x00\n1941: DUP3\n1942: DUP2\n1943: MSTORE\n1944: PUSH1 0x20\n1946: ADD\n1947: SWAP1\n1948: DUP2\n1949: MSTORE\n1950: PUSH1 0x20\n1952: ADD\n1953: PUSH1 0x00\n1955: SHA3\n1956: PUSH1 0x00\n1958: ADD\n1959: PUSH1 0x00\n1961: SWAP1\n1962: SLOAD\n1963: SWAP1\n1964: PUSH2 0x0100\n1967: EXP\n1968: SWAP1\n1969: DIV\n1970: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1991: AND\n1992: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2013: AND\n2014: PUSH4 0x095ea7b3\n2019: ADDRESS\n2020: PUSH1 0x01\n2022: PUSH1 0x00\n2024: CALLER\n2025: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2046: AND\n2047: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2068: AND\n2069: DUP2\n2070: MSTORE\n2071: PUSH1 0x20\n2073: ADD\n2074: SWAP1\n2075: DUP2\n2076: MSTORE\n2077: PUSH1 0x20\n2079: ADD\n2080: PUSH1 0x00\n2082: SHA3\n2083: PUSH1 0x00\n2085: DUP6\n2086: DUP2\n2087: MSTORE\n2088: PUSH1 0x20\n2090: ADD\n2091: SWAP1\n2092: DUP2\n2093: MSTORE\n2094: PUSH1 0x20\n2096: ADD\n2097: PUSH1 0x00\n2099: SHA3\n2100: PUSH1 0x01\n2102: ADD\n2103: SLOAD\n2104: PUSH1 0x40\n2106: MLOAD\n2107: DUP4\n2108: PUSH4 0xffffffff\n2113: AND\n2114: PUSH1 0xe0\n2116: SHL\n2117: DUP2\n2118: MSTORE\n2119: PUSH1 0x04\n2121: ADD\n2122: DUP1\n2123: DUP4\n2124: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2145: AND\n2146: DUP2\n2147: MSTORE\n2148: PUSH1 0x20\n2150: ADD\n2151: DUP3\n2152: DUP2\n2153: MSTORE\n2154: PUSH1 0x20\n2156: ADD\n2157: SWAP3\n2158: POP\n2159: POP\n2160: POP\n2161: PUSH1 0x20\n2163: PUSH1 0x40\n2165: MLOAD\n2166: DUP1\n2167: DUP4\n2168: SUB\n2169: DUP2\n2170: PUSH1 0x00\n2172: DUP8\n2173: DUP1\n2174: EXTCODESIZE\n2175: ISZERO\n2176: DUP1\n2177: ISZERO\n2178: PUSH2 0x088a\n2181: JUMPI"
      },
      {
        "offset": 2182,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "2182: PUSH1 0x00\n2184: DUP1\n2185: REVERT"
      },
      {
        "offset": 2186,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561089e57",
        "parsedOpcodes": "2186: JUMPDEST\n2187: POP\n2188: GAS\n2189: CALL\n2190: ISZERO\n2191: DUP1\n2192: ISZERO\n2193: PUSH2 0x089e\n2196: JUMPI"
      },
      {
        "offset": 2197,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "2197: RETURNDATASIZE\n2198: PUSH1 0x00\n2200: DUP1\n2201: RETURNDATACOPY\n2202: RETURNDATASIZE\n2203: PUSH1 0x00\n2205: REVERT"
      },
      {
        "offset": 2206,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d60208110156108b457",
        "parsedOpcodes": "2206: JUMPDEST\n2207: POP\n2208: POP\n2209: POP\n2210: POP\n2211: PUSH1 0x40\n2213: MLOAD\n2214: RETURNDATASIZE\n2215: PUSH1 0x20\n2217: DUP2\n2218: LT\n2219: ISZERO\n2220: PUSH2 0x08b4\n2223: JUMPI"
      },
      {
        "offset": 2224,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "2224: PUSH1 0x00\n2226: DUP1\n2227: REVERT"
      },
      {
        "offset": 2228,
        "length": 355,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b810190808051906020019092919050505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610a1b57",
        "parsedOpcodes": "2228: JUMPDEST\n2229: DUP2\n2230: ADD\n2231: SWAP1\n2232: DUP1\n2233: DUP1\n2234: MLOAD\n2235: SWAP1\n2236: PUSH1 0x20\n2238: ADD\n2239: SWAP1\n2240: SWAP3\n2241: SWAP2\n2242: SWAP1\n2243: POP\n2244: POP\n2245: POP\n2246: POP\n2247: PUSH1 0x01\n2249: PUSH1 0x00\n2251: CALLER\n2252: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2273: AND\n2274: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2295: AND\n2296: DUP2\n2297: MSTORE\n2298: PUSH1 0x20\n2300: ADD\n2301: SWAP1\n2302: DUP2\n2303: MSTORE\n2304: PUSH1 0x20\n2306: ADD\n2307: PUSH1 0x00\n2309: SHA3\n2310: PUSH1 0x00\n2312: DUP3\n2313: DUP2\n2314: MSTORE\n2315: PUSH1 0x20\n2317: ADD\n2318: SWAP1\n2319: DUP2\n2320: MSTORE\n2321: PUSH1 0x20\n2323: ADD\n2324: PUSH1 0x00\n2326: SHA3\n2327: PUSH1 0x00\n2329: ADD\n2330: PUSH1 0x00\n2332: SWAP1\n2333: SLOAD\n2334: SWAP1\n2335: PUSH2 0x0100\n2338: EXP\n2339: SWAP1\n2340: DIV\n2341: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2362: AND\n2363: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2384: AND\n2385: PUSH4 0x23b872dd\n2390: ADDRESS\n2391: CALLER\n2392: PUSH1 0x01\n2394: PUSH1 0x00\n2396: CALLER\n2397: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2418: AND\n2419: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2440: AND\n2441: DUP2\n2442: MSTORE\n2443: PUSH1 0x20\n2445: ADD\n2446: SWAP1\n2447: DUP2\n2448: MSTORE\n2449: PUSH1 0x20\n2451: ADD\n2452: PUSH1 0x00\n2454: SHA3\n2455: PUSH1 0x00\n2457: DUP7\n2458: DUP2\n2459: MSTORE\n2460: PUSH1 0x20\n2462: ADD\n2463: SWAP1\n2464: DUP2\n2465: MSTORE\n2466: PUSH1 0x20\n2468: ADD\n2469: PUSH1 0x00\n2471: SHA3\n2472: PUSH1 0x01\n2474: ADD\n2475: SLOAD\n2476: PUSH1 0x40\n2478: MLOAD\n2479: DUP5\n2480: PUSH4 0xffffffff\n2485: AND\n2486: PUSH1 0xe0\n2488: SHL\n2489: DUP2\n2490: MSTORE\n2491: PUSH1 0x04\n2493: ADD\n2494: DUP1\n2495: DUP5\n2496: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2517: AND\n2518: DUP2\n2519: MSTORE\n2520: PUSH1 0x20\n2522: ADD\n2523: DUP4\n2524: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2545: AND\n2546: DUP2\n2547: MSTORE\n2548: PUSH1 0x20\n2550: ADD\n2551: DUP3\n2552: DUP2\n2553: MSTORE\n2554: PUSH1 0x20\n2556: ADD\n2557: SWAP4\n2558: POP\n2559: POP\n2560: POP\n2561: POP\n2562: PUSH1 0x20\n2564: PUSH1 0x40\n2566: MLOAD\n2567: DUP1\n2568: DUP4\n2569: SUB\n2570: DUP2\n2571: PUSH1 0x00\n2573: DUP8\n2574: DUP1\n2575: EXTCODESIZE\n2576: ISZERO\n2577: DUP1\n2578: ISZERO\n2579: PUSH2 0x0a1b\n2582: JUMPI"
      },
      {
        "offset": 2583,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "2583: PUSH1 0x00\n2585: DUP1\n2586: REVERT"
      },
      {
        "offset": 2587,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af1158015610a2f57",
        "parsedOpcodes": "2587: JUMPDEST\n2588: POP\n2589: GAS\n2590: CALL\n2591: ISZERO\n2592: DUP1\n2593: ISZERO\n2594: PUSH2 0x0a2f\n2597: JUMPI"
      },
      {
        "offset": 2598,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "2598: RETURNDATASIZE\n2599: PUSH1 0x00\n2601: DUP1\n2602: RETURNDATACOPY\n2603: RETURNDATASIZE\n2604: PUSH1 0x00\n2606: REVERT"
      },
      {
        "offset": 2607,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d6020811015610a4557",
        "parsedOpcodes": "2607: JUMPDEST\n2608: POP\n2609: POP\n2610: POP\n2611: POP\n2612: PUSH1 0x40\n2614: MLOAD\n2615: RETURNDATASIZE\n2616: PUSH1 0x20\n2618: DUP2\n2619: LT\n2620: ISZERO\n2621: PUSH2 0x0a45\n2624: JUMPI"
      },
      {
        "offset": 2625,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "2625: PUSH1 0x00\n2627: DUP1\n2628: REVERT"
      },
      {
        "offset": 2629,
        "length": 21,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b8101908080519060200190929190505050505056",
        "parsedOpcodes": "2629: JUMPDEST\n2630: DUP2\n2631: ADD\n2632: SWAP1\n2633: DUP1\n2634: DUP1\n2635: MLOAD\n2636: SWAP1\n2637: PUSH1 0x20\n2639: ADD\n2640: SWAP1\n2641: SWAP3\n2642: SWAP2\n2643: SWAP1\n2644: POP\n2645: POP\n2646: POP\n2647: POP\n2648: POP\n2649: JUMP"
      },
      {
        "offset": 2650,
        "length": 11,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600082821115610a6657",
        "parsedOpcodes": "2650: JUMPDEST\n2651: PUSH1 0x00\n2653: DUP3\n2654: DUP3\n2655: GT\n2656: ISZERO\n2657: PUSH2 0x0a66\n2660: JUMPI"
      },
      {
        "offset": 2661,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2661: INVALID"
      },
      {
        "offset": 2662,
        "length": 11,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b81830390509291505056",
        "parsedOpcodes": "2662: JUMPDEST\n2663: DUP2\n2664: DUP4\n2665: SUB\n2666: SWAP1\n2667: POP\n2668: SWAP3\n2669: SWAP2\n2670: POP\n2671: POP\n2672: JUMP"
      },
      {
        "offset": 2673,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "2673: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          56
        ]
      },
      {
        "from": 13,
        "to": [
          30,
          62
        ]
      },
      {
        "from": 30,
        "to": [
          41,
          209
        ]
      },
      {
        "from": 41,
        "to": [
          52,
          320
        ]
      },
      {
        "from": 52,
        "to": [
          57,
          57
        ]
      },
      {
        "from": 56,
        "to": [
          57
        ]
      },
      {
        "from": 57,
        "to": [
          2673
        ]
      },
      {
        "from": 62,
        "to": [
          70,
          74
        ]
      },
      {
        "from": 70,
        "to": [
          2673
        ]
      },
      {
        "from": 74,
        "to": [
          93,
          97
        ]
      },
      {
        "from": 93,
        "to": [
          2673
        ]
      },
      {
        "from": 97,
        "to": [
          379,
          379
        ]
      },
      {
        "from": 151,
        "to": [
          2673
        ]
      },
      {
        "from": 209,
        "to": [
          217,
          221
        ]
      },
      {
        "from": 217,
        "to": [
          2673
        ]
      },
      {
        "from": 221,
        "to": [
          240,
          244
        ]
      },
      {
        "from": 240,
        "to": [
          2673
        ]
      },
      {
        "from": 244,
        "to": [
          466,
          466
        ]
      },
      {
        "from": 318,
        "to": [
          2673
        ]
      },
      {
        "from": 320,
        "to": [
          328,
          332
        ]
      },
      {
        "from": 328,
        "to": [
          2673
        ]
      },
      {
        "from": 332,
        "to": [
          351,
          355
        ]
      },
      {
        "from": 351,
        "to": [
          2673
        ]
      },
      {
        "from": 355,
        "to": [
          1585,
          1585
        ]
      },
      {
        "from": 377,
        "to": [
          2673
        ]
      },
      {
        "from": 379,
        "to": [
          151
        ]
      },
      {
        "from": 466,
        "to": [
          558,
          667
        ]
      },
      {
        "from": 558,
        "to": [
          2673
        ]
      },
      {
        "from": 667,
        "to": [
          770,
          774
        ]
      },
      {
        "from": 770,
        "to": [
          2673
        ]
      },
      {
        "from": 774,
        "to": [
          785,
          794
        ]
      },
      {
        "from": 785,
        "to": [
          2673
        ]
      },
      {
        "from": 794,
        "to": [
          812,
          816
        ]
      },
      {
        "from": 812,
        "to": [
          2673
        ]
      },
      {
        "from": 816,
        "to": [
          974,
          978
        ]
      },
      {
        "from": 974,
        "to": [
          2673
        ]
      },
      {
        "from": 978,
        "to": [
          989,
          998
        ]
      },
      {
        "from": 989,
        "to": [
          2673
        ]
      },
      {
        "from": 998,
        "to": [
          1016,
          1020
        ]
      },
      {
        "from": 1016,
        "to": [
          2673
        ]
      },
      {
        "from": 1020,
        "to": [
          1042,
          1151
        ]
      },
      {
        "from": 1042,
        "to": [
          2673
        ]
      },
      {
        "from": 1151,
        "to": [
          1254,
          1258
        ]
      },
      {
        "from": 1254,
        "to": [
          2673
        ]
      },
      {
        "from": 1258,
        "to": [
          1269,
          1278
        ]
      },
      {
        "from": 1269,
        "to": [
          2673
        ]
      },
      {
        "from": 1278,
        "to": [
          1296,
          1300
        ]
      },
      {
        "from": 1296,
        "to": [
          2673
        ]
      },
      {
        "from": 1300,
        "to": [
          2650
        ]
      },
      {
        "from": 1340,
        "to": [
          318
        ]
      },
      {
        "from": 1585,
        "to": [
          1677,
          1786
        ]
      },
      {
        "from": 1677,
        "to": [
          2673
        ]
      },
      {
        "from": 1786,
        "to": [
          2182,
          2186
        ]
      },
      {
        "from": 2182,
        "to": [
          2673
        ]
      },
      {
        "from": 2186,
        "to": [
          2197,
          2206
        ]
      },
      {
        "from": 2197,
        "to": [
          2673
        ]
      },
      {
        "from": 2206,
        "to": [
          2224,
          2228
        ]
      },
      {
        "from": 2224,
        "to": [
          2673
        ]
      },
      {
        "from": 2228,
        "to": [
          2583,
          2587
        ]
      },
      {
        "from": 2583,
        "to": [
          2673
        ]
      },
      {
        "from": 2587,
        "to": [
          2598,
          2607
        ]
      },
      {
        "from": 2598,
        "to": [
          2673
        ]
      },
      {
        "from": 2607,
        "to": [
          2625,
          2629
        ]
      },
      {
        "from": 2625,
        "to": [
          2673
        ]
      },
      {
        "from": 2629,
        "to": [
          377
        ]
      },
      {
        "from": 2650,
        "to": [
          2661,
          2662
        ]
      },
      {
        "from": 2661,
        "to": [
          2673
        ]
      },
      {
        "from": 2662,
        "to": [
          1340
        ]
      },
      {
        "from": 2673,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 126
    }
  }
}