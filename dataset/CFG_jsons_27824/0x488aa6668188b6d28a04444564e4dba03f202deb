{
  "name": "Analysis_2022-04-04_23-58-32",
  "address": "",
  "binarySource": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631fd9d8308114610050578063c96b1f32146100ad575b600080fd5b34801561005c57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100ab94369492936024939284019190819084018382808284375094975050933594506101069350505050565b005b3480156100b957600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100ab9436949293602493928401919081908401838280828437509497506102639650505050505050565b6000806003846040518082805190602001908083835b6020831061013b5780518252601f19909201916020918201910161011c565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154159150610175905057fe5b602060405190810160405280848152506003856040518082805190602001908083835b602083106101b75780518252601f199092019160209182019101610198565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925160018401555090925060009150505b60015481101561025d57600082600001600060018481548110151561021457fe5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040019020805460ff19169115159190911790556001016101f3565b50505050565b60008060006003846040518082805190602001908083835b6020831061029a5780518252601f19909201916020918201910161027b565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094203360009081529182905293902054929550505060ff1615156102e857600080fd5b60018301546000106102f657fe5b3360009081526020849052604090205460ff161561031357600080fd5b5050336000908152602082905260408120805460ff19166001908117909155905b6001548110156103995781801561038f57506001805484916000918490811061035957fe5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400190205460ff165b9150600101610334565b811561025d57600454600184015460405173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f193505050501580156103ea573d6000803e3d6000fd5b50505050505600a165627a7a7230582096a5e1983cf9a4f83bc3a931791704605eb7107d7fb37fc2e264fe9af80ee79d0029",
  "binaryHash": "6c999891",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a7230582096a5e1983cf9a4f83bc3a931791704605eb7107d7fb37fc2e264fe9af80ee79d0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649084312735
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631fd9d8308114610050578063c96b1f32146100ad575b600080fd5b34801561005c57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100ab94369492936024939284019190819084018382808284375094975050933594506101069350505050565b005b3480156100b957600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100ab9436949293602493928401919081908401838280828437509497506102639650505050505050565b6000806003846040518082805190602001908083835b6020831061013b5780518252601f19909201916020918201910161011c565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154159150610175905057fe5b602060405190810160405280848152506003856040518082805190602001908083835b602083106101b75780518252601f199092019160209182019101610198565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925160018401555090925060009150505b60015481101561025d57600082600001600060018481548110151561021457fe5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040019020805460ff19169115159190911790556001016101f3565b50505050565b60008060006003846040518082805190602001908083835b6020831061029a5780518252601f19909201916020918201910161027b565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094203360009081529182905293902054929550505060ff1615156102e857600080fd5b60018301546000106102f657fe5b3360009081526020849052604090205460ff161561031357600080fd5b5050336000908152602082905260408120805460ff19166001908117909155905b6001548110156103995781801561038f57506001805484916000918490811061035957fe5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400190205460ff165b9150600101610334565b811561025d57600454600184015460405173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f193505050501580156103ea573d6000803e3d6000fd5b50505050505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004b57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004b\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631fd9d830811461005057",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x1fd9d830\n58: DUP2\n59: EQ\n60: PUSH2 0x0050\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063c96b1f32146100ad57",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0xc96b1f32\n70: EQ\n71: PUSH2 0x00ad\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "75: JUMPDEST\n76: PUSH1 0x00\n78: DUP1\n79: REVERT"
      },
      {
        "offset": 80,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005c57",
        "parsedOpcodes": "80: JUMPDEST\n81: CALLVALUE\n82: DUP1\n83: ISZERO\n84: PUSH2 0x005c\n87: JUMPI"
      },
      {
        "offset": 88,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 79,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526100ab9436949293602493928401919081908401838280828437509497505093359450610106935050505056",
        "parsedOpcodes": "92: JUMPDEST\n93: POP\n94: PUSH1 0x40\n96: DUP1\n97: MLOAD\n98: PUSH1 0x20\n100: PUSH1 0x04\n102: DUP1\n103: CALLDATALOAD\n104: DUP1\n105: DUP3\n106: ADD\n107: CALLDATALOAD\n108: PUSH1 0x1f\n110: DUP2\n111: ADD\n112: DUP5\n113: SWAP1\n114: DIV\n115: DUP5\n116: MUL\n117: DUP6\n118: ADD\n119: DUP5\n120: ADD\n121: SWAP1\n122: SWAP6\n123: MSTORE\n124: DUP5\n125: DUP5\n126: MSTORE\n127: PUSH2 0x00ab\n130: SWAP5\n131: CALLDATASIZE\n132: SWAP5\n133: SWAP3\n134: SWAP4\n135: PUSH1 0x24\n137: SWAP4\n138: SWAP3\n139: DUP5\n140: ADD\n141: SWAP2\n142: SWAP1\n143: DUP2\n144: SWAP1\n145: DUP5\n146: ADD\n147: DUP4\n148: DUP3\n149: DUP1\n150: DUP3\n151: DUP5\n152: CALLDATACOPY\n153: POP\n154: SWAP5\n155: SWAP8\n156: POP\n157: POP\n158: SWAP4\n159: CALLDATALOAD\n160: SWAP5\n161: POP\n162: PUSH2 0x0106\n165: SWAP4\n166: POP\n167: POP\n168: POP\n169: POP\n170: JUMP"
      },
      {
        "offset": 171,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "171: JUMPDEST\n172: STOP"
      },
      {
        "offset": 173,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100b957",
        "parsedOpcodes": "173: JUMPDEST\n174: CALLVALUE\n175: DUP1\n176: ISZERO\n177: PUSH2 0x00b9\n180: JUMPI"
      },
      {
        "offset": 181,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "181: PUSH1 0x00\n183: DUP1\n184: REVERT"
      },
      {
        "offset": 185,
        "length": 77,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526100ab943694929360249392840191908190840183828082843750949750610263965050505050505056",
        "parsedOpcodes": "185: JUMPDEST\n186: POP\n187: PUSH1 0x40\n189: DUP1\n190: MLOAD\n191: PUSH1 0x20\n193: PUSH1 0x04\n195: DUP1\n196: CALLDATALOAD\n197: DUP1\n198: DUP3\n199: ADD\n200: CALLDATALOAD\n201: PUSH1 0x1f\n203: DUP2\n204: ADD\n205: DUP5\n206: SWAP1\n207: DIV\n208: DUP5\n209: MUL\n210: DUP6\n211: ADD\n212: DUP5\n213: ADD\n214: SWAP1\n215: SWAP6\n216: MSTORE\n217: DUP5\n218: DUP5\n219: MSTORE\n220: PUSH2 0x00ab\n223: SWAP5\n224: CALLDATASIZE\n225: SWAP5\n226: SWAP3\n227: SWAP4\n228: PUSH1 0x24\n230: SWAP4\n231: SWAP3\n232: DUP5\n233: ADD\n234: SWAP2\n235: SWAP1\n236: DUP2\n237: SWAP1\n238: DUP5\n239: ADD\n240: DUP4\n241: DUP3\n242: DUP1\n243: DUP3\n244: DUP5\n245: CALLDATACOPY\n246: POP\n247: SWAP5\n248: SWAP8\n249: POP\n250: PUSH2 0x0263\n253: SWAP7\n254: POP\n255: POP\n256: POP\n257: POP\n258: POP\n259: POP\n260: POP\n261: JUMP"
      },
      {
        "offset": 262,
        "length": 22,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b600080600384604051808280519060200190808383",
        "parsedOpcodes": "262: JUMPDEST\n263: PUSH1 0x00\n265: DUP1\n266: PUSH1 0x03\n268: DUP5\n269: PUSH1 0x40\n271: MLOAD\n272: DUP1\n273: DUP3\n274: DUP1\n275: MLOAD\n276: SWAP1\n277: PUSH1 0x20\n279: ADD\n280: SWAP1\n281: DUP1\n282: DUP4\n283: DUP4"
      },
      {
        "offset": 284,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061013b57",
        "parsedOpcodes": "284: JUMPDEST\n285: PUSH1 0x20\n287: DUP4\n288: LT\n289: PUSH2 0x013b\n292: JUMPI"
      },
      {
        "offset": 293,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161011c56",
        "parsedOpcodes": "293: DUP1\n294: MLOAD\n295: DUP3\n296: MSTORE\n297: PUSH1 0x1f\n299: NOT\n300: SWAP1\n301: SWAP3\n302: ADD\n303: SWAP2\n304: PUSH1 0x20\n306: SWAP2\n307: DUP3\n308: ADD\n309: SWAP2\n310: ADD\n311: PUSH2 0x011c\n314: JUMP"
      },
      {
        "offset": 315,
        "length": 57,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154159150610175905057",
        "parsedOpcodes": "315: JUMPDEST\n316: MLOAD\n317: DUP2\n318: MLOAD\n319: PUSH1 0x20\n321: SWAP4\n322: DUP5\n323: SUB\n324: PUSH2 0x0100\n327: EXP\n328: PUSH1 0x00\n330: NOT\n331: ADD\n332: DUP1\n333: NOT\n334: SWAP1\n335: SWAP3\n336: AND\n337: SWAP2\n338: AND\n339: OR\n340: SWAP1\n341: MSTORE\n342: SWAP3\n343: ADD\n344: SWAP5\n345: DUP6\n346: MSTORE\n347: POP\n348: PUSH1 0x40\n350: MLOAD\n351: SWAP4\n352: DUP5\n353: SWAP1\n354: SUB\n355: ADD\n356: SWAP1\n357: SWAP3\n358: SHA3\n359: PUSH1 0x01\n361: ADD\n362: SLOAD\n363: ISZERO\n364: SWAP2\n365: POP\n366: PUSH2 0x0175\n369: SWAP1\n370: POP\n371: JUMPI"
      },
      {
        "offset": 372,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "372: INVALID"
      },
      {
        "offset": 373,
        "length": 35,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b60206040519081016040528084815250600385604051808280519060200190808383",
        "parsedOpcodes": "373: JUMPDEST\n374: PUSH1 0x20\n376: PUSH1 0x40\n378: MLOAD\n379: SWAP1\n380: DUP2\n381: ADD\n382: PUSH1 0x40\n384: MSTORE\n385: DUP1\n386: DUP5\n387: DUP2\n388: MSTORE\n389: POP\n390: PUSH1 0x03\n392: DUP6\n393: PUSH1 0x40\n395: MLOAD\n396: DUP1\n397: DUP3\n398: DUP1\n399: MLOAD\n400: SWAP1\n401: PUSH1 0x20\n403: ADD\n404: SWAP1\n405: DUP1\n406: DUP4\n407: DUP4"
      },
      {
        "offset": 408,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106101b757",
        "parsedOpcodes": "408: JUMPDEST\n409: PUSH1 0x20\n411: DUP4\n412: LT\n413: PUSH2 0x01b7\n416: JUMPI"
      },
      {
        "offset": 417,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161019856",
        "parsedOpcodes": "417: DUP1\n418: MLOAD\n419: DUP3\n420: MSTORE\n421: PUSH1 0x1f\n423: NOT\n424: SWAP1\n425: SWAP3\n426: ADD\n427: SWAP2\n428: PUSH1 0x20\n430: SWAP2\n431: DUP3\n432: ADD\n433: SWAP2\n434: ADD\n435: PUSH2 0x0198\n438: JUMP"
      },
      {
        "offset": 439,
        "length": 60,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922092516001840155509092506000915050",
        "parsedOpcodes": "439: JUMPDEST\n440: MLOAD\n441: DUP2\n442: MLOAD\n443: PUSH1 0x20\n445: SWAP4\n446: DUP5\n447: SUB\n448: PUSH2 0x0100\n451: EXP\n452: PUSH1 0x00\n454: NOT\n455: ADD\n456: DUP1\n457: NOT\n458: SWAP1\n459: SWAP3\n460: AND\n461: SWAP2\n462: AND\n463: OR\n464: SWAP1\n465: MSTORE\n466: SWAP3\n467: ADD\n468: SWAP5\n469: DUP6\n470: MSTORE\n471: POP\n472: PUSH1 0x40\n474: MLOAD\n475: SWAP4\n476: DUP5\n477: SWAP1\n478: SUB\n479: ADD\n480: SWAP1\n481: SWAP3\n482: SHA3\n483: SWAP3\n484: MLOAD\n485: PUSH1 0x01\n487: DUP5\n488: ADD\n489: SSTORE\n490: POP\n491: SWAP1\n492: SWAP3\n493: POP\n494: PUSH1 0x00\n496: SWAP2\n497: POP\n498: POP"
      },
      {
        "offset": 499,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60015481101561025d57",
        "parsedOpcodes": "499: JUMPDEST\n500: PUSH1 0x01\n502: SLOAD\n503: DUP2\n504: LT\n505: ISZERO\n506: PUSH2 0x025d\n509: JUMPI"
      },
      {
        "offset": 510,
        "length": 21,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "600082600001600060018481548110151561021457",
        "parsedOpcodes": "510: PUSH1 0x00\n512: DUP3\n513: PUSH1 0x00\n515: ADD\n516: PUSH1 0x00\n518: PUSH1 0x01\n520: DUP5\n521: DUP2\n522: SLOAD\n523: DUP2\n524: LT\n525: ISZERO\n526: ISZERO\n527: PUSH2 0x0214\n530: JUMPI"
      },
      {
        "offset": 531,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "531: INVALID"
      },
      {
        "offset": 532,
        "length": 73,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff1683528201929092526040019020805460ff19169115159190911790556001016101f356",
        "parsedOpcodes": "532: JUMPDEST\n533: PUSH1 0x00\n535: SWAP2\n536: DUP3\n537: MSTORE\n538: PUSH1 0x20\n540: DUP1\n541: DUP4\n542: SHA3\n543: SWAP2\n544: SWAP1\n545: SWAP2\n546: ADD\n547: SLOAD\n548: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n569: AND\n570: DUP4\n571: MSTORE\n572: DUP3\n573: ADD\n574: SWAP3\n575: SWAP1\n576: SWAP3\n577: MSTORE\n578: PUSH1 0x40\n580: ADD\n581: SWAP1\n582: SHA3\n583: DUP1\n584: SLOAD\n585: PUSH1 0xff\n587: NOT\n588: AND\n589: SWAP2\n590: ISZERO\n591: ISZERO\n592: SWAP2\n593: SWAP1\n594: SWAP2\n595: OR\n596: SWAP1\n597: SSTORE\n598: PUSH1 0x01\n600: ADD\n601: PUSH2 0x01f3\n604: JUMP"
      },
      {
        "offset": 605,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "605: JUMPDEST\n606: POP\n607: POP\n608: POP\n609: POP\n610: JUMP"
      },
      {
        "offset": 611,
        "length": 24,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b6000806000600384604051808280519060200190808383",
        "parsedOpcodes": "611: JUMPDEST\n612: PUSH1 0x00\n614: DUP1\n615: PUSH1 0x00\n617: PUSH1 0x03\n619: DUP5\n620: PUSH1 0x40\n622: MLOAD\n623: DUP1\n624: DUP3\n625: DUP1\n626: MLOAD\n627: SWAP1\n628: PUSH1 0x20\n630: ADD\n631: SWAP1\n632: DUP1\n633: DUP4\n634: DUP4"
      },
      {
        "offset": 635,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061029a57",
        "parsedOpcodes": "635: JUMPDEST\n636: PUSH1 0x20\n638: DUP4\n639: LT\n640: PUSH2 0x029a\n643: JUMPI"
      },
      {
        "offset": 644,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161027b56",
        "parsedOpcodes": "644: DUP1\n645: MLOAD\n646: DUP3\n647: MSTORE\n648: PUSH1 0x1f\n650: NOT\n651: SWAP1\n652: SWAP3\n653: ADD\n654: SWAP2\n655: PUSH1 0x20\n657: SWAP2\n658: DUP3\n659: ADD\n660: SWAP2\n661: ADD\n662: PUSH2 0x027b\n665: JUMP"
      },
      {
        "offset": 666,
        "length": 74,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094203360009081529182905293902054929550505060ff1615156102e857",
        "parsedOpcodes": "666: JUMPDEST\n667: MLOAD\n668: DUP2\n669: MLOAD\n670: PUSH1 0x20\n672: SWAP4\n673: DUP5\n674: SUB\n675: PUSH2 0x0100\n678: EXP\n679: PUSH1 0x00\n681: NOT\n682: ADD\n683: DUP1\n684: NOT\n685: SWAP1\n686: SWAP3\n687: AND\n688: SWAP2\n689: AND\n690: OR\n691: SWAP1\n692: MSTORE\n693: SWAP3\n694: ADD\n695: SWAP5\n696: DUP6\n697: MSTORE\n698: POP\n699: PUSH1 0x40\n701: DUP1\n702: MLOAD\n703: SWAP5\n704: DUP6\n705: SWAP1\n706: SUB\n707: DUP3\n708: ADD\n709: SWAP1\n710: SWAP5\n711: SHA3\n712: CALLER\n713: PUSH1 0x00\n715: SWAP1\n716: DUP2\n717: MSTORE\n718: SWAP2\n719: DUP3\n720: SWAP1\n721: MSTORE\n722: SWAP4\n723: SWAP1\n724: SHA3\n725: SLOAD\n726: SWAP3\n727: SWAP6\n728: POP\n729: POP\n730: POP\n731: PUSH1 0xff\n733: AND\n734: ISZERO\n735: ISZERO\n736: PUSH2 0x02e8\n739: JUMPI"
      },
      {
        "offset": 740,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "740: PUSH1 0x00\n742: DUP1\n743: REVERT"
      },
      {
        "offset": 744,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60018301546000106102f657",
        "parsedOpcodes": "744: JUMPDEST\n745: PUSH1 0x01\n747: DUP4\n748: ADD\n749: SLOAD\n750: PUSH1 0x00\n752: LT\n753: PUSH2 0x02f6\n756: JUMPI"
      },
      {
        "offset": 757,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "757: INVALID"
      },
      {
        "offset": 758,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b3360009081526020849052604090205460ff161561031357",
        "parsedOpcodes": "758: JUMPDEST\n759: CALLER\n760: PUSH1 0x00\n762: SWAP1\n763: DUP2\n764: MSTORE\n765: PUSH1 0x20\n767: DUP5\n768: SWAP1\n769: MSTORE\n770: PUSH1 0x40\n772: SWAP1\n773: SHA3\n774: SLOAD\n775: PUSH1 0xff\n777: AND\n778: ISZERO\n779: PUSH2 0x0313\n782: JUMPI"
      },
      {
        "offset": 783,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "783: PUSH1 0x00\n785: DUP1\n786: REVERT"
      },
      {
        "offset": 787,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5050336000908152602082905260408120805460ff1916600190811790915590",
        "parsedOpcodes": "787: JUMPDEST\n788: POP\n789: POP\n790: CALLER\n791: PUSH1 0x00\n793: SWAP1\n794: DUP2\n795: MSTORE\n796: PUSH1 0x20\n798: DUP3\n799: SWAP1\n800: MSTORE\n801: PUSH1 0x40\n803: DUP2\n804: SHA3\n805: DUP1\n806: SLOAD\n807: PUSH1 0xff\n809: NOT\n810: AND\n811: PUSH1 0x01\n813: SWAP1\n814: DUP2\n815: OR\n816: SWAP1\n817: SWAP2\n818: SSTORE\n819: SWAP1"
      },
      {
        "offset": 820,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60015481101561039957",
        "parsedOpcodes": "820: JUMPDEST\n821: PUSH1 0x01\n823: SLOAD\n824: DUP2\n825: LT\n826: ISZERO\n827: PUSH2 0x0399\n830: JUMPI"
      },
      {
        "offset": 831,
        "length": 7,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "81801561038f57",
        "parsedOpcodes": "831: DUP2\n832: DUP1\n833: ISZERO\n834: PUSH2 0x038f\n837: JUMPI"
      },
      {
        "offset": 838,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "506001805484916000918490811061035957",
        "parsedOpcodes": "838: POP\n839: PUSH1 0x01\n841: DUP1\n842: SLOAD\n843: DUP5\n844: SWAP2\n845: PUSH1 0x00\n847: SWAP2\n848: DUP5\n849: SWAP1\n850: DUP2\n851: LT\n852: PUSH2 0x0359\n855: JUMPI"
      },
      {
        "offset": 856,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "856: INVALID"
      },
      {
        "offset": 857,
        "length": 54,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff16835282019290925260400190205460ff16",
        "parsedOpcodes": "857: JUMPDEST\n858: PUSH1 0x00\n860: SWAP2\n861: DUP3\n862: MSTORE\n863: PUSH1 0x20\n865: DUP1\n866: DUP4\n867: SHA3\n868: SWAP1\n869: SWAP2\n870: ADD\n871: SLOAD\n872: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n893: AND\n894: DUP4\n895: MSTORE\n896: DUP3\n897: ADD\n898: SWAP3\n899: SWAP1\n900: SWAP3\n901: MSTORE\n902: PUSH1 0x40\n904: ADD\n905: SWAP1\n906: SHA3\n907: SLOAD\n908: PUSH1 0xff\n910: AND"
      },
      {
        "offset": 911,
        "length": 10,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b915060010161033456",
        "parsedOpcodes": "911: JUMPDEST\n912: SWAP2\n913: POP\n914: PUSH1 0x01\n916: ADD\n917: PUSH2 0x0334\n920: JUMP"
      },
      {
        "offset": 921,
        "length": 7,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b811561025d57",
        "parsedOpcodes": "921: JUMPDEST\n922: DUP2\n923: ISZERO\n924: PUSH2 0x025d\n927: JUMPI"
      },
      {
        "offset": 928,
        "length": 65,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "600454600184015460405173ffffffffffffffffffffffffffffffffffffffff9092169181156108fc0291906000818181858888f193505050501580156103ea57",
        "parsedOpcodes": "928: PUSH1 0x04\n930: SLOAD\n931: PUSH1 0x01\n933: DUP5\n934: ADD\n935: SLOAD\n936: PUSH1 0x40\n938: MLOAD\n939: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n960: SWAP1\n961: SWAP3\n962: AND\n963: SWAP2\n964: DUP2\n965: ISZERO\n966: PUSH2 0x08fc\n969: MUL\n970: SWAP2\n971: SWAP1\n972: PUSH1 0x00\n974: DUP2\n975: DUP2\n976: DUP2\n977: DUP6\n978: DUP9\n979: DUP9\n980: CALL\n981: SWAP4\n982: POP\n983: POP\n984: POP\n985: POP\n986: ISZERO\n987: DUP1\n988: ISZERO\n989: PUSH2 0x03ea\n992: JUMPI"
      },
      {
        "offset": 993,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "993: RETURNDATASIZE\n994: PUSH1 0x00\n996: DUP1\n997: RETURNDATACOPY\n998: RETURNDATASIZE\n999: PUSH1 0x00\n1001: REVERT"
      },
      {
        "offset": 1002,
        "length": 7,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505050505056",
        "parsedOpcodes": "1002: JUMPDEST\n1003: POP\n1004: POP\n1005: POP\n1006: POP\n1007: POP\n1008: JUMP"
      },
      {
        "offset": 1009,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1009: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          75
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          80
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          173
        ]
      },
      {
        "from": 75,
        "to": [
          1009
        ]
      },
      {
        "from": 80,
        "to": [
          88,
          92
        ]
      },
      {
        "from": 88,
        "to": [
          1009
        ]
      },
      {
        "from": 92,
        "to": [
          262
        ]
      },
      {
        "from": 171,
        "to": [
          1009
        ]
      },
      {
        "from": 173,
        "to": [
          181,
          185
        ]
      },
      {
        "from": 181,
        "to": [
          1009
        ]
      },
      {
        "from": 185,
        "to": [
          611
        ]
      },
      {
        "from": 262,
        "to": [
          284
        ]
      },
      {
        "from": 284,
        "to": [
          293,
          315
        ]
      },
      {
        "from": 293,
        "to": [
          284,
          284
        ]
      },
      {
        "from": 315,
        "to": [
          372
        ]
      },
      {
        "from": 372,
        "to": [
          1009
        ]
      },
      {
        "from": 373,
        "to": [
          408
        ]
      },
      {
        "from": 408,
        "to": [
          417,
          439
        ]
      },
      {
        "from": 417,
        "to": [
          408
        ]
      },
      {
        "from": 439,
        "to": [
          499
        ]
      },
      {
        "from": 499,
        "to": [
          510,
          605
        ]
      },
      {
        "from": 510,
        "to": [
          531,
          532
        ]
      },
      {
        "from": 531,
        "to": [
          1009
        ]
      },
      {
        "from": 532,
        "to": [
          499
        ]
      },
      {
        "from": 605,
        "to": [
          171,
          171,
          171
        ]
      },
      {
        "from": 611,
        "to": [
          635
        ]
      },
      {
        "from": 635,
        "to": [
          644,
          666
        ]
      },
      {
        "from": 644,
        "to": [
          635,
          635
        ]
      },
      {
        "from": 666,
        "to": [
          740,
          744
        ]
      },
      {
        "from": 740,
        "to": [
          1009
        ]
      },
      {
        "from": 744,
        "to": [
          757,
          758
        ]
      },
      {
        "from": 757,
        "to": [
          1009
        ]
      },
      {
        "from": 758,
        "to": [
          783,
          787
        ]
      },
      {
        "from": 783,
        "to": [
          1009
        ]
      },
      {
        "from": 787,
        "to": [
          820
        ]
      },
      {
        "from": 820,
        "to": [
          831,
          921
        ]
      },
      {
        "from": 831,
        "to": [
          838,
          911
        ]
      },
      {
        "from": 838,
        "to": [
          856,
          857
        ]
      },
      {
        "from": 856,
        "to": [
          1009
        ]
      },
      {
        "from": 857,
        "to": [
          911
        ]
      },
      {
        "from": 911,
        "to": [
          820,
          820,
          820,
          820,
          820,
          820,
          820
        ]
      },
      {
        "from": 921,
        "to": [
          928,
          605
        ]
      },
      {
        "from": 928,
        "to": [
          993,
          1002
        ]
      },
      {
        "from": 993,
        "to": [
          1009
        ]
      },
      {
        "from": 1002,
        "to": [
          171,
          171,
          171
        ]
      },
      {
        "from": 1009,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 54
    }
  }
}