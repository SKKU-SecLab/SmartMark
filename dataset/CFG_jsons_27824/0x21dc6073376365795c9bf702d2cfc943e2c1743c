{
  "name": "Analysis_2022-07-06_21-21-34",
  "address": "",
  "binarySource": "",
  "binaryHash": "d28b96c0",
  "isOnlyRuntime": true,
  "metadata": "a2646970667358221220217ecd867e4448ee9e3315007488bc70881c404e75b6a87fb10c6d265396f6b764736f6c634300060c0033",
  "solidityVersion": "0.6.12",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657110094858
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100c25760003560e01c8063817b924b1161007f578063a49062d411610059578063a49062d4146101d4578063a87430ba146101ff578063ce606ee01461025a578063ecabdf791461026f576100c2565b8063817b924b146101955780638abf6077146101aa5780638da5cb5b146101bf576100c2565b80632a2d0c47146100c75780634185f8eb1461010d5780634783c35b146101175780634a35f0a11461012c57806356f510551461016b5780636127cdfa14610180575b600080fd5b3480156100d357600080fd5b506100f1600480360360208110156100ea57600080fd5b50356102ae565b604080516001600160a01b039092168252519081900360200190f35b6101156102c9565b005b34801561012357600080fd5b506100f16102cb565b6101156004803603608081101561014257600080fd5b506001600160a01b03813581169160208101359091169060ff60408201351690606001356102da565b34801561017757600080fd5b506100f1611d0e565b34801561018c57600080fd5b506100f1611d1d565b3480156101a157600080fd5b506100f1611d2c565b3480156101b657600080fd5b506100f1611d3b565b3480156101cb57600080fd5b506100f1611d4a565b3480156101e057600080fd5b506101e9611d59565b6040805160ff9092168252519081900360200190f35b34801561020b57600080fd5b506102326004803603602081101561022257600080fd5b50356001600160a01b0316611d69565b604080519384526001600160a01b039092166020840152151582820152519081900360600190f35b34801561026657600080fd5b506100f1611d97565b34801561027b57600080fd5b5061029c6004803603602081101561029257600080fd5b503560ff16611da6565b60408051918252519081900360200190f35b6006602052600090815260409020546001600160a01b031681565b565b600a546001600160a01b031681565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020600f015416610600576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281208591600f9091010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152600e6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff88168452600301909152812091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260066020820152815184841693891692600080516020611feb833981519152928290030190a3610446858285600a600387025b04611db8565b6001600160a01b038116600090815260056020908152604080832060ff871684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff89168452600390810190925282209293508892010180546001600160a01b0319166001600160a01b039283161790556040805160ff87168152600260208201528151848416938a1692600080516020611feb833981519152928290030190a36104ff868286600587610440565b6001600160a01b038116600090815260056020908152604080832060ff881684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff8a168452600301909152812091925088916001010180546001600160a01b0319166001600160a01b039283161790556040805160ff88168152600060208201528151848416938b1692600080516020611feb833981519152928290030190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f01805460ff60801b1916905550611d089050565b6001600160a01b03838116600090815260056020908152604080832060ff87168452600301909152902060170154166106e2576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160080180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260166020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906103b6565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206011015416610930576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160020180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260106020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160020180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260086020820152815184841693891692600080516020611feb833981519152928290030190a361084e858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff871684526003019091528120600101815b01546001600160a01b03908116600081815260056020818152604080842060ff8b16808652600390910183529381902090920180546001600160a01b031916958c16958617905581519283526004908301528051929450849392600080516020611feb8339815191529281900390910190a36108fc868286600587610440565b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060019081019061052d565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206019015416610a12576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600a0180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260186020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906107be565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206013015416610bb2576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160040180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260126020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160040180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600a6020820152815184841693891692600080516020611feb833981519152928290030190a3610b7e858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff871684526003019091528120600190810190610474565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601b015416610c94576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600c0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601a6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610aee565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206015015416610e34576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160060180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260146020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160060180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600c6020820152815184841693891692600080516020611feb833981519152928290030190a3610e00858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060019081019061087c565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601d015416610f16576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600e0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601c6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610d70565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601001541661123c576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152600f6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260076020820152815184841693891692600080516020611feb833981519152928290030190a3611082858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff871684526003019091528120600101815b01546001600160a01b03908116600081815260056020908152604080832060ff8a16808552600391820184529382902060040180546001600160a01b031916968d1696871790558151938452918301919091528051929450849392600080516020611feb8339815191529281900390910190a3611131868286600587610440565b6001600160a01b038116600090815260056020908152604080832060ff881684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff8a1684526003019091529020909150879060019081010180546001600160a01b0319166001600160a01b039283161790556040805160ff88168152600160208201528151848416938b1692600080516020611feb833981519152928290030190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f018054600160801b60ff60801b1990911617905550611d089050565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601801541661131e576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160090180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260176020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610ff2565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206012015416611563576001600160a01b03838116600081815260056020908152604080832060ff8816808552600390910183529281902060120180546001600160a01b031916958a16958617905580519283526011918301919091528051929392600080516020611feb8339815191529281900390910190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020908152604080832060ff88168452600390810190925290912091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260096020820152815184841693891692600080516020611feb833981519152928290030190a3611480858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff871684526003019091528120600101815b01546001600160a01b03908116600081815260056020818152604080842060ff8b16808652600390910183529381902060060180546001600160a01b031916968d1696871790558051938452908301919091528051929450849392600080516020611feb8339815191529281900390910190a361152f868286600587610440565b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060019081019061115f565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601a015416611645576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600b0180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260196020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906113ef565b6001600160a01b03838116600090815260056020908152604080832060ff87168452600301909152902060140154166117d9576001600160a01b03838116600081815260056020908152604080832060ff8816808552600390910183529281902060140180546001600160a01b031916958a16958617905580519283526013918301919091528051929392600080516020611feb8339815191529281900390910190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600101815b01546001600160a01b0316600081815260056020818152604080842060ff8916855260030190915290912091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600b6020820152815184841693891692600080516020611feb833981519152928290030190a36117a5858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff8716845260030190915281206001908101906110b0565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601c0154166118bb576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600d0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601b6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190611716565b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206016015416611a3c576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160070180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260156020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b03838116600090815260056020818152604080842060ff881680865260039182018452828620600101548716808752948452828620818752909101835293819020600e0180546001600160a01b031916958a1695861790558051938452600d918401919091528051919384939092600080516020611feb833981519152929181900390910190a3611a08858285600a60038702610440565b6001600160a01b038116600090815260056020908152604080832060ff8716845260030190915281206001908101906114ae565b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601e015416611d08576001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f9081010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601d6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b03838116600090815260056020818152604080842060ff881680865260039182018452828620600201548716808752948452828620818752909101835293819020600e0180546001600160a01b031916958a1695861790558051938452600d918401919091528051919384939092600080516020611feb833981519152929181900390910190a3611b89858285600a60038702610440565b6001600160a01b03818116600090815260056020818152604080842060ff89168086526003918201845282862060020154871680875285855283872082885290920184529482902060060180546001600160a01b031916968c1696871790558151948552918401929092528151909384939092600080516020611feb83398151915292918290030190a3611c21868286600587610440565b6001600160a01b03818116600090815260056020818152604080842060ff8a168086526003918201845282862060029081015488168088529585528387208288529092018452948290200180546001600160a01b031916958c16958617905580519384526001918401919091528051919384939092600080516020611feb833981519152929181900390910190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f018054600160801b60ff60801b1990911617905550505b50505050565b6004546001600160a01b031681565b6002546001600160a01b031681565b6003546001600160a01b031681565b6000546001600160a01b031681565b6008546001600160a01b031681565b600254600160a01b900460ff1681565b600560205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff1683565b6001546001600160a01b031681565b60076020526000908152604090205481565b6000611dc5848685611ee7565b6008549091506001600160a01b0380831691161415611e3957600a546040516001600160a01b03909116904790600081818185875af1925050503d8060008114611e2b576040519150601f19603f3d011682016040523d82523d6000602084013e611e30565b606091505b50505050611d08565b6040516001600160a01b0382169083156108fc029084906000818181858888f19350505050611ee0576040516001600160a01b038216904780156108fc02916000818181858888f19350505050611ee057600a546040516001600160a01b03909116904790600081818185875af1925050503d8060008114611ed7576040519150601f19603f3d011682016040523d82523d6000602084013e611edc565b606091505b5050505b5050505050565b600083815b6001600160a01b038216600090815260056020908152604080832060ff80891685526003909101909252909120601f0154600160881b90041615611fd657846001600160a01b0316826001600160a01b03167fe4c390745de94e576db58e5b18db9b14f1185dd2fe6204671461ca8bd05c520186604051808260ff16815260200191505060405180910390a36001600160a01b03918216600090815260056020908152604080832060ff80891685526003909101909252909120549092169160019190910190601990821610611fd15750506008546001600160a01b03169050611fe3565b611fde565b509050611fe3565b611eec565b939250505056fec33ed40cea88a5a8a40cc428a4c5a1",
    "remainingData": "fec33ed40cea88a5a8a40cc428a4c5a17a2b6174dc640a90269fe3dcc60d7735dd",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6080604052600436106100c257",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x00c2\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063817b924b1161007f57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH1 0xe0\n18: SHR\n19: DUP1\n20: PUSH4 0x817b924b\n25: GT\n26: PUSH2 0x007f\n29: JUMPI"
      },
      {
        "offset": 30,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a49062d41161005957",
        "parsedOpcodes": "30: DUP1\n31: PUSH4 0xa49062d4\n36: GT\n37: PUSH2 0x0059\n40: JUMPI"
      },
      {
        "offset": 41,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a49062d4146101d457",
        "parsedOpcodes": "41: DUP1\n42: PUSH4 0xa49062d4\n47: EQ\n48: PUSH2 0x01d4\n51: JUMPI"
      },
      {
        "offset": 52,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a87430ba146101ff57",
        "parsedOpcodes": "52: DUP1\n53: PUSH4 0xa87430ba\n58: EQ\n59: PUSH2 0x01ff\n62: JUMPI"
      },
      {
        "offset": 63,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ce606ee01461025a57",
        "parsedOpcodes": "63: DUP1\n64: PUSH4 0xce606ee0\n69: EQ\n70: PUSH2 0x025a\n73: JUMPI"
      },
      {
        "offset": 74,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ecabdf791461026f57",
        "parsedOpcodes": "74: DUP1\n75: PUSH4 0xecabdf79\n80: EQ\n81: PUSH2 0x026f\n84: JUMPI"
      },
      {
        "offset": 85,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6100c256",
        "parsedOpcodes": "85: PUSH2 0x00c2\n88: JUMP"
      },
      {
        "offset": 89,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8063817b924b1461019557",
        "parsedOpcodes": "89: JUMPDEST\n90: DUP1\n91: PUSH4 0x817b924b\n96: EQ\n97: PUSH2 0x0195\n100: JUMPI"
      },
      {
        "offset": 101,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638abf6077146101aa57",
        "parsedOpcodes": "101: DUP1\n102: PUSH4 0x8abf6077\n107: EQ\n108: PUSH2 0x01aa\n111: JUMPI"
      },
      {
        "offset": 112,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638da5cb5b146101bf57",
        "parsedOpcodes": "112: DUP1\n113: PUSH4 0x8da5cb5b\n118: EQ\n119: PUSH2 0x01bf\n122: JUMPI"
      },
      {
        "offset": 123,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6100c256",
        "parsedOpcodes": "123: PUSH2 0x00c2\n126: JUMP"
      },
      {
        "offset": 127,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b80632a2d0c47146100c757",
        "parsedOpcodes": "127: JUMPDEST\n128: DUP1\n129: PUSH4 0x2a2d0c47\n134: EQ\n135: PUSH2 0x00c7\n138: JUMPI"
      },
      {
        "offset": 139,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80634185f8eb1461010d57",
        "parsedOpcodes": "139: DUP1\n140: PUSH4 0x4185f8eb\n145: EQ\n146: PUSH2 0x010d\n149: JUMPI"
      },
      {
        "offset": 150,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80634783c35b1461011757",
        "parsedOpcodes": "150: DUP1\n151: PUSH4 0x4783c35b\n156: EQ\n157: PUSH2 0x0117\n160: JUMPI"
      },
      {
        "offset": 161,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80634a35f0a11461012c57",
        "parsedOpcodes": "161: DUP1\n162: PUSH4 0x4a35f0a1\n167: EQ\n168: PUSH2 0x012c\n171: JUMPI"
      },
      {
        "offset": 172,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806356f510551461016b57",
        "parsedOpcodes": "172: DUP1\n173: PUSH4 0x56f51055\n178: EQ\n179: PUSH2 0x016b\n182: JUMPI"
      },
      {
        "offset": 183,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80636127cdfa1461018057",
        "parsedOpcodes": "183: DUP1\n184: PUSH4 0x6127cdfa\n189: EQ\n190: PUSH2 0x0180\n193: JUMPI"
      },
      {
        "offset": 194,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "194: JUMPDEST\n195: PUSH1 0x00\n197: DUP1\n198: REVERT"
      },
      {
        "offset": 199,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100d357",
        "parsedOpcodes": "199: JUMPDEST\n200: CALLVALUE\n201: DUP1\n202: ISZERO\n203: PUSH2 0x00d3\n206: JUMPI"
      },
      {
        "offset": 207,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "207: PUSH1 0x00\n209: DUP1\n210: REVERT"
      },
      {
        "offset": 211,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506100f1600480360360208110156100ea57",
        "parsedOpcodes": "211: JUMPDEST\n212: POP\n213: PUSH2 0x00f1\n216: PUSH1 0x04\n218: DUP1\n219: CALLDATASIZE\n220: SUB\n221: PUSH1 0x20\n223: DUP2\n224: LT\n225: ISZERO\n226: PUSH2 0x00ea\n229: JUMPI"
      },
      {
        "offset": 230,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "230: PUSH1 0x00\n232: DUP1\n233: REVERT"
      },
      {
        "offset": 234,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356102ae56",
        "parsedOpcodes": "234: JUMPDEST\n235: POP\n236: CALLDATALOAD\n237: PUSH2 0x02ae\n240: JUMP"
      },
      {
        "offset": 241,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080516001600160a01b039092168252519081900360200190f3",
        "parsedOpcodes": "241: JUMPDEST\n242: PUSH1 0x40\n244: DUP1\n245: MLOAD\n246: PUSH1 0x01\n248: PUSH1 0x01\n250: PUSH1 0xa0\n252: SHL\n253: SUB\n254: SWAP1\n255: SWAP3\n256: AND\n257: DUP3\n258: MSTORE\n259: MLOAD\n260: SWAP1\n261: DUP2\n262: SWAP1\n263: SUB\n264: PUSH1 0x20\n266: ADD\n267: SWAP1\n268: RETURN"
      },
      {
        "offset": 269,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101156102c956",
        "parsedOpcodes": "269: JUMPDEST\n270: PUSH2 0x0115\n273: PUSH2 0x02c9\n276: JUMP"
      },
      {
        "offset": 277,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "277: JUMPDEST\n278: STOP"
      },
      {
        "offset": 279,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561012357",
        "parsedOpcodes": "279: JUMPDEST\n280: CALLVALUE\n281: DUP1\n282: ISZERO\n283: PUSH2 0x0123\n286: JUMPI"
      },
      {
        "offset": 287,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "287: PUSH1 0x00\n289: DUP1\n290: REVERT"
      },
      {
        "offset": 291,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f16102cb56",
        "parsedOpcodes": "291: JUMPDEST\n292: POP\n293: PUSH2 0x00f1\n296: PUSH2 0x02cb\n299: JUMP"
      },
      {
        "offset": 300,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6101156004803603608081101561014257",
        "parsedOpcodes": "300: JUMPDEST\n301: PUSH2 0x0115\n304: PUSH1 0x04\n306: DUP1\n307: CALLDATASIZE\n308: SUB\n309: PUSH1 0x80\n311: DUP2\n312: LT\n313: ISZERO\n314: PUSH2 0x0142\n317: JUMPI"
      },
      {
        "offset": 318,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "318: PUSH1 0x00\n320: DUP1\n321: REVERT"
      },
      {
        "offset": 322,
        "length": 41,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506001600160a01b03813581169160208101359091169060ff60408201351690606001356102da56",
        "parsedOpcodes": "322: JUMPDEST\n323: POP\n324: PUSH1 0x01\n326: PUSH1 0x01\n328: PUSH1 0xa0\n330: SHL\n331: SUB\n332: DUP2\n333: CALLDATALOAD\n334: DUP2\n335: AND\n336: SWAP2\n337: PUSH1 0x20\n339: DUP2\n340: ADD\n341: CALLDATALOAD\n342: SWAP1\n343: SWAP2\n344: AND\n345: SWAP1\n346: PUSH1 0xff\n348: PUSH1 0x40\n350: DUP3\n351: ADD\n352: CALLDATALOAD\n353: AND\n354: SWAP1\n355: PUSH1 0x60\n357: ADD\n358: CALLDATALOAD\n359: PUSH2 0x02da\n362: JUMP"
      },
      {
        "offset": 363,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561017757",
        "parsedOpcodes": "363: JUMPDEST\n364: CALLVALUE\n365: DUP1\n366: ISZERO\n367: PUSH2 0x0177\n370: JUMPI"
      },
      {
        "offset": 371,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "371: PUSH1 0x00\n373: DUP1\n374: REVERT"
      },
      {
        "offset": 375,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d0e56",
        "parsedOpcodes": "375: JUMPDEST\n376: POP\n377: PUSH2 0x00f1\n380: PUSH2 0x1d0e\n383: JUMP"
      },
      {
        "offset": 384,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561018c57",
        "parsedOpcodes": "384: JUMPDEST\n385: CALLVALUE\n386: DUP1\n387: ISZERO\n388: PUSH2 0x018c\n391: JUMPI"
      },
      {
        "offset": 392,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "392: PUSH1 0x00\n394: DUP1\n395: REVERT"
      },
      {
        "offset": 396,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d1d56",
        "parsedOpcodes": "396: JUMPDEST\n397: POP\n398: PUSH2 0x00f1\n401: PUSH2 0x1d1d\n404: JUMP"
      },
      {
        "offset": 405,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101a157",
        "parsedOpcodes": "405: JUMPDEST\n406: CALLVALUE\n407: DUP1\n408: ISZERO\n409: PUSH2 0x01a1\n412: JUMPI"
      },
      {
        "offset": 413,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "413: PUSH1 0x00\n415: DUP1\n416: REVERT"
      },
      {
        "offset": 417,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d2c56",
        "parsedOpcodes": "417: JUMPDEST\n418: POP\n419: PUSH2 0x00f1\n422: PUSH2 0x1d2c\n425: JUMP"
      },
      {
        "offset": 426,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101b657",
        "parsedOpcodes": "426: JUMPDEST\n427: CALLVALUE\n428: DUP1\n429: ISZERO\n430: PUSH2 0x01b6\n433: JUMPI"
      },
      {
        "offset": 434,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "434: PUSH1 0x00\n436: DUP1\n437: REVERT"
      },
      {
        "offset": 438,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d3b56",
        "parsedOpcodes": "438: JUMPDEST\n439: POP\n440: PUSH2 0x00f1\n443: PUSH2 0x1d3b\n446: JUMP"
      },
      {
        "offset": 447,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101cb57",
        "parsedOpcodes": "447: JUMPDEST\n448: CALLVALUE\n449: DUP1\n450: ISZERO\n451: PUSH2 0x01cb\n454: JUMPI"
      },
      {
        "offset": 455,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "455: PUSH1 0x00\n457: DUP1\n458: REVERT"
      },
      {
        "offset": 459,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d4a56",
        "parsedOpcodes": "459: JUMPDEST\n460: POP\n461: PUSH2 0x00f1\n464: PUSH2 0x1d4a\n467: JUMP"
      },
      {
        "offset": 468,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101e057",
        "parsedOpcodes": "468: JUMPDEST\n469: CALLVALUE\n470: DUP1\n471: ISZERO\n472: PUSH2 0x01e0\n475: JUMPI"
      },
      {
        "offset": 476,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "476: PUSH1 0x00\n478: DUP1\n479: REVERT"
      },
      {
        "offset": 480,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506101e9611d5956",
        "parsedOpcodes": "480: JUMPDEST\n481: POP\n482: PUSH2 0x01e9\n485: PUSH2 0x1d59\n488: JUMP"
      },
      {
        "offset": 489,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040805160ff9092168252519081900360200190f3",
        "parsedOpcodes": "489: JUMPDEST\n490: PUSH1 0x40\n492: DUP1\n493: MLOAD\n494: PUSH1 0xff\n496: SWAP1\n497: SWAP3\n498: AND\n499: DUP3\n500: MSTORE\n501: MLOAD\n502: SWAP1\n503: DUP2\n504: SWAP1\n505: SUB\n506: PUSH1 0x20\n508: ADD\n509: SWAP1\n510: RETURN"
      },
      {
        "offset": 511,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561020b57",
        "parsedOpcodes": "511: JUMPDEST\n512: CALLVALUE\n513: DUP1\n514: ISZERO\n515: PUSH2 0x020b\n518: JUMPI"
      },
      {
        "offset": 519,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "519: PUSH1 0x00\n521: DUP1\n522: REVERT"
      },
      {
        "offset": 523,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506102326004803603602081101561022257",
        "parsedOpcodes": "523: JUMPDEST\n524: POP\n525: PUSH2 0x0232\n528: PUSH1 0x04\n530: DUP1\n531: CALLDATASIZE\n532: SUB\n533: PUSH1 0x20\n535: DUP2\n536: LT\n537: ISZERO\n538: PUSH2 0x0222\n541: JUMPI"
      },
      {
        "offset": 542,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "542: PUSH1 0x00\n544: DUP1\n545: REVERT"
      },
      {
        "offset": 546,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b0316611d6956",
        "parsedOpcodes": "546: JUMPDEST\n547: POP\n548: CALLDATALOAD\n549: PUSH1 0x01\n551: PUSH1 0x01\n553: PUSH1 0xa0\n555: SHL\n556: SUB\n557: AND\n558: PUSH2 0x1d69\n561: JUMP"
      },
      {
        "offset": 562,
        "length": 40,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b604080519384526001600160a01b039092166020840152151582820152519081900360600190f3",
        "parsedOpcodes": "562: JUMPDEST\n563: PUSH1 0x40\n565: DUP1\n566: MLOAD\n567: SWAP4\n568: DUP5\n569: MSTORE\n570: PUSH1 0x01\n572: PUSH1 0x01\n574: PUSH1 0xa0\n576: SHL\n577: SUB\n578: SWAP1\n579: SWAP3\n580: AND\n581: PUSH1 0x20\n583: DUP5\n584: ADD\n585: MSTORE\n586: ISZERO\n587: ISZERO\n588: DUP3\n589: DUP3\n590: ADD\n591: MSTORE\n592: MLOAD\n593: SWAP1\n594: DUP2\n595: SWAP1\n596: SUB\n597: PUSH1 0x60\n599: ADD\n600: SWAP1\n601: RETURN"
      },
      {
        "offset": 602,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561026657",
        "parsedOpcodes": "602: JUMPDEST\n603: CALLVALUE\n604: DUP1\n605: ISZERO\n606: PUSH2 0x0266\n609: JUMPI"
      },
      {
        "offset": 610,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "610: PUSH1 0x00\n612: DUP1\n613: REVERT"
      },
      {
        "offset": 614,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100f1611d9756",
        "parsedOpcodes": "614: JUMPDEST\n615: POP\n616: PUSH2 0x00f1\n619: PUSH2 0x1d97\n622: JUMP"
      },
      {
        "offset": 623,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561027b57",
        "parsedOpcodes": "623: JUMPDEST\n624: CALLVALUE\n625: DUP1\n626: ISZERO\n627: PUSH2 0x027b\n630: JUMPI"
      },
      {
        "offset": 631,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "631: PUSH1 0x00\n633: DUP1\n634: REVERT"
      },
      {
        "offset": 635,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b5061029c6004803603602081101561029257",
        "parsedOpcodes": "635: JUMPDEST\n636: POP\n637: PUSH2 0x029c\n640: PUSH1 0x04\n642: DUP1\n643: CALLDATASIZE\n644: SUB\n645: PUSH1 0x20\n647: DUP2\n648: LT\n649: ISZERO\n650: PUSH2 0x0292\n653: JUMPI"
      },
      {
        "offset": 654,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "654: PUSH1 0x00\n656: DUP1\n657: REVERT"
      },
      {
        "offset": 658,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b503560ff16611da656",
        "parsedOpcodes": "658: JUMPDEST\n659: POP\n660: CALLDATALOAD\n661: PUSH1 0xff\n663: AND\n664: PUSH2 0x1da6\n667: JUMP"
      },
      {
        "offset": 668,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "668: JUMPDEST\n669: PUSH1 0x40\n671: DUP1\n672: MLOAD\n673: SWAP2\n674: DUP3\n675: MSTORE\n676: MLOAD\n677: SWAP1\n678: DUP2\n679: SWAP1\n680: SUB\n681: PUSH1 0x20\n683: ADD\n684: SWAP1\n685: RETURN"
      },
      {
        "offset": 686,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6006602052600090815260409020546001600160a01b03168156",
        "parsedOpcodes": "686: JUMPDEST\n687: PUSH1 0x06\n689: PUSH1 0x20\n691: MSTORE\n692: PUSH1 0x00\n694: SWAP1\n695: DUP2\n696: MSTORE\n697: PUSH1 0x40\n699: SWAP1\n700: SHA3\n701: SLOAD\n702: PUSH1 0x01\n704: PUSH1 0x01\n706: PUSH1 0xa0\n708: SHL\n709: SUB\n710: AND\n711: DUP2\n712: JUMP"
      },
      {
        "offset": 713,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "713: JUMPDEST\n714: JUMP"
      },
      {
        "offset": 715,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600a546001600160a01b03168156",
        "parsedOpcodes": "715: JUMPDEST\n716: PUSH1 0x0a\n718: SLOAD\n719: PUSH1 0x01\n721: PUSH1 0x01\n723: PUSH1 0xa0\n725: SHL\n726: SUB\n727: AND\n728: DUP2\n729: JUMP"
      },
      {
        "offset": 730,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020600f01541661060057",
        "parsedOpcodes": "730: JUMPDEST\n731: PUSH1 0x01\n733: PUSH1 0x01\n735: PUSH1 0xa0\n737: SHL\n738: SUB\n739: DUP4\n740: DUP2\n741: AND\n742: PUSH1 0x00\n744: SWAP1\n745: DUP2\n746: MSTORE\n747: PUSH1 0x05\n749: PUSH1 0x20\n751: SWAP1\n752: DUP2\n753: MSTORE\n754: PUSH1 0x40\n756: DUP1\n757: DUP4\n758: SHA3\n759: PUSH1 0xff\n761: DUP8\n762: AND\n763: DUP5\n764: MSTORE\n765: PUSH1 0x03\n767: ADD\n768: SWAP1\n769: SWAP2\n770: MSTORE\n771: SWAP1\n772: SHA3\n773: PUSH1 0x0f\n775: ADD\n776: SLOAD\n777: AND\n778: PUSH2 0x0600\n781: JUMPI"
      },
      {
        "offset": 782,
        "length": 168,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281208591600f9091010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152600e6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "782: PUSH1 0x01\n784: PUSH1 0x01\n786: PUSH1 0xa0\n788: SHL\n789: SUB\n790: DUP4\n791: AND\n792: PUSH1 0x00\n794: SWAP1\n795: DUP2\n796: MSTORE\n797: PUSH1 0x05\n799: PUSH1 0x20\n801: SWAP1\n802: DUP2\n803: MSTORE\n804: PUSH1 0x40\n806: DUP1\n807: DUP4\n808: SHA3\n809: PUSH1 0xff\n811: DUP7\n812: AND\n813: DUP5\n814: MSTORE\n815: PUSH1 0x03\n817: ADD\n818: SWAP1\n819: SWAP2\n820: MSTORE\n821: DUP2\n822: SHA3\n823: DUP6\n824: SWAP2\n825: PUSH1 0x0f\n827: SWAP1\n828: SWAP2\n829: ADD\n830: ADD\n831: DUP1\n832: SLOAD\n833: PUSH1 0x01\n835: PUSH1 0x01\n837: PUSH1 0xa0\n839: SHL\n840: SUB\n841: NOT\n842: AND\n843: PUSH1 0x01\n845: PUSH1 0x01\n847: PUSH1 0xa0\n849: SHL\n850: SUB\n851: SWAP3\n852: DUP4\n853: AND\n854: OR\n855: SWAP1\n856: SSTORE\n857: PUSH1 0x40\n859: DUP1\n860: MLOAD\n861: PUSH1 0xff\n863: DUP6\n864: AND\n865: DUP2\n866: MSTORE\n867: PUSH1 0x0e\n869: PUSH1 0x20\n871: DUP3\n872: ADD\n873: MSTORE\n874: DUP2\n875: MLOAD\n876: DUP7\n877: DUP5\n878: AND\n879: SWAP4\n880: DUP9\n881: AND\n882: SWAP3\n883: PUSH1 0x00\n885: DUP1\n886: MLOAD\n887: PUSH1 0x20\n889: PUSH2 0x1feb\n892: DUP4\n893: CODECOPY\n894: DUP2\n895: MLOAD\n896: SWAP2\n897: MSTORE\n898: SWAP3\n899: DUP3\n900: SWAP1\n901: SUB\n902: ADD\n903: SWAP1\n904: LOG3\n905: PUSH1 0x01\n907: PUSH1 0x01\n909: PUSH1 0xa0\n911: SHL\n912: SUB\n913: DUP4\n914: AND\n915: PUSH1 0x00\n917: SWAP1\n918: DUP2\n919: MSTORE\n920: PUSH1 0x05\n922: PUSH1 0x20\n924: SWAP1\n925: DUP2\n926: MSTORE\n927: PUSH1 0x40\n929: DUP1\n930: DUP4\n931: SHA3\n932: PUSH1 0xff\n934: DUP7\n935: AND\n936: DUP5\n937: MSTORE\n938: PUSH1 0x03\n940: ADD\n941: SWAP1\n942: SWAP2\n943: MSTORE\n944: DUP2\n945: SHA3\n946: PUSH1 0x01\n948: ADD\n949: DUP2"
      },
      {
        "offset": 950,
        "length": 138,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff88168452600301909152812091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260066020820152815184841693891692600080516020611feb833981519152928290030190a3610446858285600a60038702",
        "parsedOpcodes": "950: JUMPDEST\n951: ADD\n952: SLOAD\n953: PUSH1 0x01\n955: PUSH1 0x01\n957: PUSH1 0xa0\n959: SHL\n960: SUB\n961: AND\n962: PUSH1 0x00\n964: DUP2\n965: DUP2\n966: MSTORE\n967: PUSH1 0x05\n969: PUSH1 0x20\n971: SWAP1\n972: DUP2\n973: MSTORE\n974: PUSH1 0x40\n976: DUP1\n977: DUP4\n978: SHA3\n979: PUSH1 0xff\n981: DUP9\n982: AND\n983: DUP5\n984: MSTORE\n985: PUSH1 0x03\n987: ADD\n988: SWAP1\n989: SWAP2\n990: MSTORE\n991: DUP2\n992: SHA3\n993: SWAP2\n994: SWAP3\n995: POP\n996: DUP7\n997: SWAP2\n998: PUSH1 0x07\n1000: ADD\n1001: ADD\n1002: DUP1\n1003: SLOAD\n1004: PUSH1 0x01\n1006: PUSH1 0x01\n1008: PUSH1 0xa0\n1010: SHL\n1011: SUB\n1012: NOT\n1013: AND\n1014: PUSH1 0x01\n1016: PUSH1 0x01\n1018: PUSH1 0xa0\n1020: SHL\n1021: SUB\n1022: SWAP3\n1023: DUP4\n1024: AND\n1025: OR\n1026: SWAP1\n1027: SSTORE\n1028: PUSH1 0x40\n1030: DUP1\n1031: MLOAD\n1032: PUSH1 0xff\n1034: DUP7\n1035: AND\n1036: DUP2\n1037: MSTORE\n1038: PUSH1 0x06\n1040: PUSH1 0x20\n1042: DUP3\n1043: ADD\n1044: MSTORE\n1045: DUP2\n1046: MLOAD\n1047: DUP5\n1048: DUP5\n1049: AND\n1050: SWAP4\n1051: DUP10\n1052: AND\n1053: SWAP3\n1054: PUSH1 0x00\n1056: DUP1\n1057: MLOAD\n1058: PUSH1 0x20\n1060: PUSH2 0x1feb\n1063: DUP4\n1064: CODECOPY\n1065: DUP2\n1066: MLOAD\n1067: SWAP2\n1068: MSTORE\n1069: SWAP3\n1070: DUP3\n1071: SWAP1\n1072: SUB\n1073: ADD\n1074: SWAP1\n1075: LOG3\n1076: PUSH2 0x0446\n1079: DUP6\n1080: DUP3\n1081: DUP6\n1082: PUSH1 0x0a\n1084: PUSH1 0x03\n1086: DUP8\n1087: MUL"
      },
      {
        "offset": 1088,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b04611db856",
        "parsedOpcodes": "1088: JUMPDEST\n1089: DIV\n1090: PUSH2 0x1db8\n1093: JUMP"
      },
      {
        "offset": 1094,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060010181",
        "parsedOpcodes": "1094: JUMPDEST\n1095: PUSH1 0x01\n1097: PUSH1 0x01\n1099: PUSH1 0xa0\n1101: SHL\n1102: SUB\n1103: DUP2\n1104: AND\n1105: PUSH1 0x00\n1107: SWAP1\n1108: DUP2\n1109: MSTORE\n1110: PUSH1 0x05\n1112: PUSH1 0x20\n1114: SWAP1\n1115: DUP2\n1116: MSTORE\n1117: PUSH1 0x40\n1119: DUP1\n1120: DUP4\n1121: SHA3\n1122: PUSH1 0xff\n1124: DUP8\n1125: AND\n1126: DUP5\n1127: MSTORE\n1128: PUSH1 0x03\n1130: ADD\n1131: SWAP1\n1132: SWAP2\n1133: MSTORE\n1134: DUP2\n1135: SHA3\n1136: PUSH1 0x01\n1138: ADD\n1139: DUP2"
      },
      {
        "offset": 1140,
        "length": 139,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff89168452600390810190925282209293508892010180546001600160a01b0319166001600160a01b039283161790556040805160ff87168152600260208201528151848416938a1692600080516020611feb833981519152928290030190a36104ff86828660058761044056",
        "parsedOpcodes": "1140: JUMPDEST\n1141: ADD\n1142: SLOAD\n1143: PUSH1 0x01\n1145: PUSH1 0x01\n1147: PUSH1 0xa0\n1149: SHL\n1150: SUB\n1151: AND\n1152: PUSH1 0x00\n1154: DUP2\n1155: DUP2\n1156: MSTORE\n1157: PUSH1 0x05\n1159: PUSH1 0x20\n1161: SWAP1\n1162: DUP2\n1163: MSTORE\n1164: PUSH1 0x40\n1166: DUP1\n1167: DUP4\n1168: SHA3\n1169: PUSH1 0xff\n1171: DUP10\n1172: AND\n1173: DUP5\n1174: MSTORE\n1175: PUSH1 0x03\n1177: SWAP1\n1178: DUP2\n1179: ADD\n1180: SWAP1\n1181: SWAP3\n1182: MSTORE\n1183: DUP3\n1184: SHA3\n1185: SWAP3\n1186: SWAP4\n1187: POP\n1188: DUP9\n1189: SWAP3\n1190: ADD\n1191: ADD\n1192: DUP1\n1193: SLOAD\n1194: PUSH1 0x01\n1196: PUSH1 0x01\n1198: PUSH1 0xa0\n1200: SHL\n1201: SUB\n1202: NOT\n1203: AND\n1204: PUSH1 0x01\n1206: PUSH1 0x01\n1208: PUSH1 0xa0\n1210: SHL\n1211: SUB\n1212: SWAP3\n1213: DUP4\n1214: AND\n1215: OR\n1216: SWAP1\n1217: SSTORE\n1218: PUSH1 0x40\n1220: DUP1\n1221: MLOAD\n1222: PUSH1 0xff\n1224: DUP8\n1225: AND\n1226: DUP2\n1227: MSTORE\n1228: PUSH1 0x02\n1230: PUSH1 0x20\n1232: DUP3\n1233: ADD\n1234: MSTORE\n1235: DUP2\n1236: MLOAD\n1237: DUP5\n1238: DUP5\n1239: AND\n1240: SWAP4\n1241: DUP11\n1242: AND\n1243: SWAP3\n1244: PUSH1 0x00\n1246: DUP1\n1247: MLOAD\n1248: PUSH1 0x20\n1250: PUSH2 0x1feb\n1253: DUP4\n1254: CODECOPY\n1255: DUP2\n1256: MLOAD\n1257: SWAP2\n1258: MSTORE\n1259: SWAP3\n1260: DUP3\n1261: SWAP1\n1262: SUB\n1263: ADD\n1264: SWAP1\n1265: LOG3\n1266: PUSH2 0x04ff\n1269: DUP7\n1270: DUP3\n1271: DUP7\n1272: PUSH1 0x05\n1274: DUP8\n1275: PUSH2 0x0440\n1278: JUMP"
      },
      {
        "offset": 1279,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060010181",
        "parsedOpcodes": "1279: JUMPDEST\n1280: PUSH1 0x01\n1282: PUSH1 0x01\n1284: PUSH1 0xa0\n1286: SHL\n1287: SUB\n1288: DUP2\n1289: AND\n1290: PUSH1 0x00\n1292: SWAP1\n1293: DUP2\n1294: MSTORE\n1295: PUSH1 0x05\n1297: PUSH1 0x20\n1299: SWAP1\n1300: DUP2\n1301: MSTORE\n1302: PUSH1 0x40\n1304: DUP1\n1305: DUP4\n1306: SHA3\n1307: PUSH1 0xff\n1309: DUP9\n1310: AND\n1311: DUP5\n1312: MSTORE\n1313: PUSH1 0x03\n1315: ADD\n1316: SWAP1\n1317: SWAP2\n1318: MSTORE\n1319: DUP2\n1320: SHA3\n1321: PUSH1 0x01\n1323: ADD\n1324: DUP2"
      },
      {
        "offset": 1325,
        "length": 211,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff8a168452600301909152812091925088916001010180546001600160a01b0319166001600160a01b039283161790556040805160ff88168152600060208201528151848416938b1692600080516020611feb833981519152928290030190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f01805460ff60801b1916905550611d08905056",
        "parsedOpcodes": "1325: JUMPDEST\n1326: ADD\n1327: SLOAD\n1328: PUSH1 0x01\n1330: PUSH1 0x01\n1332: PUSH1 0xa0\n1334: SHL\n1335: SUB\n1336: AND\n1337: PUSH1 0x00\n1339: DUP2\n1340: DUP2\n1341: MSTORE\n1342: PUSH1 0x05\n1344: PUSH1 0x20\n1346: SWAP1\n1347: DUP2\n1348: MSTORE\n1349: PUSH1 0x40\n1351: DUP1\n1352: DUP4\n1353: SHA3\n1354: PUSH1 0xff\n1356: DUP11\n1357: AND\n1358: DUP5\n1359: MSTORE\n1360: PUSH1 0x03\n1362: ADD\n1363: SWAP1\n1364: SWAP2\n1365: MSTORE\n1366: DUP2\n1367: SHA3\n1368: SWAP2\n1369: SWAP3\n1370: POP\n1371: DUP9\n1372: SWAP2\n1373: PUSH1 0x01\n1375: ADD\n1376: ADD\n1377: DUP1\n1378: SLOAD\n1379: PUSH1 0x01\n1381: PUSH1 0x01\n1383: PUSH1 0xa0\n1385: SHL\n1386: SUB\n1387: NOT\n1388: AND\n1389: PUSH1 0x01\n1391: PUSH1 0x01\n1393: PUSH1 0xa0\n1395: SHL\n1396: SUB\n1397: SWAP3\n1398: DUP4\n1399: AND\n1400: OR\n1401: SWAP1\n1402: SSTORE\n1403: PUSH1 0x40\n1405: DUP1\n1406: MLOAD\n1407: PUSH1 0xff\n1409: DUP9\n1410: AND\n1411: DUP2\n1412: MSTORE\n1413: PUSH1 0x00\n1415: PUSH1 0x20\n1417: DUP3\n1418: ADD\n1419: MSTORE\n1420: DUP2\n1421: MLOAD\n1422: DUP5\n1423: DUP5\n1424: AND\n1425: SWAP4\n1426: DUP12\n1427: AND\n1428: SWAP3\n1429: PUSH1 0x00\n1431: DUP1\n1432: MLOAD\n1433: PUSH1 0x20\n1435: PUSH2 0x1feb\n1438: DUP4\n1439: CODECOPY\n1440: DUP2\n1441: MLOAD\n1442: SWAP2\n1443: MSTORE\n1444: SWAP3\n1445: DUP3\n1446: SWAP1\n1447: SUB\n1448: ADD\n1449: SWAP1\n1450: LOG3\n1451: PUSH1 0x01\n1453: PUSH1 0x01\n1455: PUSH1 0xa0\n1457: SHL\n1458: SUB\n1459: DUP8\n1460: DUP2\n1461: AND\n1462: PUSH1 0x00\n1464: SWAP1\n1465: DUP2\n1466: MSTORE\n1467: PUSH1 0x05\n1469: PUSH1 0x20\n1471: SWAP1\n1472: DUP2\n1473: MSTORE\n1474: PUSH1 0x40\n1476: DUP1\n1477: DUP4\n1478: SHA3\n1479: PUSH1 0xff\n1481: DUP11\n1482: AND\n1483: DUP5\n1484: MSTORE\n1485: PUSH1 0x03\n1487: ADD\n1488: SWAP1\n1489: SWAP2\n1490: MSTORE\n1491: SWAP1\n1492: SHA3\n1493: DUP1\n1494: SLOAD\n1495: PUSH1 0x01\n1497: PUSH1 0x01\n1499: PUSH1 0xa0\n1501: SHL\n1502: SUB\n1503: NOT\n1504: AND\n1505: SWAP3\n1506: SWAP1\n1507: SWAP2\n1508: AND\n1509: SWAP2\n1510: SWAP1\n1511: SWAP2\n1512: OR\n1513: DUP2\n1514: SSTORE\n1515: PUSH1 0x1f\n1517: ADD\n1518: DUP1\n1519: SLOAD\n1520: PUSH1 0xff\n1522: PUSH1 0x80\n1524: SHL\n1525: NOT\n1526: AND\n1527: SWAP1\n1528: SSTORE\n1529: POP\n1530: PUSH2 0x1d08\n1533: SWAP1\n1534: POP\n1535: JUMP"
      },
      {
        "offset": 1536,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff87168452600301909152902060170154166106e257",
        "parsedOpcodes": "1536: JUMPDEST\n1537: PUSH1 0x01\n1539: PUSH1 0x01\n1541: PUSH1 0xa0\n1543: SHL\n1544: SUB\n1545: DUP4\n1546: DUP2\n1547: AND\n1548: PUSH1 0x00\n1550: SWAP1\n1551: DUP2\n1552: MSTORE\n1553: PUSH1 0x05\n1555: PUSH1 0x20\n1557: SWAP1\n1558: DUP2\n1559: MSTORE\n1560: PUSH1 0x40\n1562: DUP1\n1563: DUP4\n1564: SHA3\n1565: PUSH1 0xff\n1567: DUP8\n1568: AND\n1569: DUP5\n1570: MSTORE\n1571: PUSH1 0x03\n1573: ADD\n1574: SWAP1\n1575: SWAP2\n1576: MSTORE\n1577: SWAP1\n1578: SHA3\n1579: PUSH1 0x17\n1581: ADD\n1582: SLOAD\n1583: AND\n1584: PUSH2 0x06e2\n1587: JUMPI"
      },
      {
        "offset": 1588,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160080180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260166020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906103b656",
        "parsedOpcodes": "1588: PUSH1 0x01\n1590: PUSH1 0x01\n1592: PUSH1 0xa0\n1594: SHL\n1595: SUB\n1596: DUP4\n1597: AND\n1598: PUSH1 0x00\n1600: SWAP1\n1601: DUP2\n1602: MSTORE\n1603: PUSH1 0x05\n1605: PUSH1 0x20\n1607: SWAP1\n1608: DUP2\n1609: MSTORE\n1610: PUSH1 0x40\n1612: DUP1\n1613: DUP4\n1614: SHA3\n1615: PUSH1 0xff\n1617: DUP7\n1618: AND\n1619: DUP5\n1620: MSTORE\n1621: PUSH1 0x03\n1623: ADD\n1624: SWAP1\n1625: SWAP2\n1626: MSTORE\n1627: SWAP1\n1628: SHA3\n1629: DUP5\n1630: SWAP1\n1631: PUSH1 0x0f\n1633: ADD\n1634: PUSH1 0x08\n1636: ADD\n1637: DUP1\n1638: SLOAD\n1639: PUSH1 0x01\n1641: PUSH1 0x01\n1643: PUSH1 0xa0\n1645: SHL\n1646: SUB\n1647: NOT\n1648: AND\n1649: PUSH1 0x01\n1651: PUSH1 0x01\n1653: PUSH1 0xa0\n1655: SHL\n1656: SUB\n1657: SWAP3\n1658: DUP4\n1659: AND\n1660: OR\n1661: SWAP1\n1662: SSTORE\n1663: PUSH1 0x40\n1665: DUP1\n1666: MLOAD\n1667: PUSH1 0xff\n1669: DUP6\n1670: AND\n1671: DUP2\n1672: MSTORE\n1673: PUSH1 0x16\n1675: PUSH1 0x20\n1677: DUP3\n1678: ADD\n1679: MSTORE\n1680: DUP2\n1681: MLOAD\n1682: DUP7\n1683: DUP5\n1684: AND\n1685: SWAP4\n1686: DUP9\n1687: AND\n1688: SWAP3\n1689: PUSH1 0x00\n1691: DUP1\n1692: MLOAD\n1693: PUSH1 0x20\n1695: PUSH2 0x1feb\n1698: DUP4\n1699: CODECOPY\n1700: DUP2\n1701: MLOAD\n1702: SWAP2\n1703: MSTORE\n1704: SWAP3\n1705: DUP3\n1706: SWAP1\n1707: SUB\n1708: ADD\n1709: SWAP1\n1710: LOG3\n1711: PUSH1 0x01\n1713: PUSH1 0x01\n1715: PUSH1 0xa0\n1717: SHL\n1718: SUB\n1719: DUP4\n1720: AND\n1721: PUSH1 0x00\n1723: SWAP1\n1724: DUP2\n1725: MSTORE\n1726: PUSH1 0x05\n1728: PUSH1 0x20\n1730: SWAP1\n1731: DUP2\n1732: MSTORE\n1733: PUSH1 0x40\n1735: DUP1\n1736: DUP4\n1737: SHA3\n1738: PUSH1 0xff\n1740: DUP7\n1741: AND\n1742: DUP5\n1743: MSTORE\n1744: PUSH1 0x03\n1746: ADD\n1747: SWAP1\n1748: SWAP2\n1749: MSTORE\n1750: DUP2\n1751: SHA3\n1752: PUSH1 0x01\n1754: SWAP1\n1755: DUP2\n1756: ADD\n1757: SWAP1\n1758: PUSH2 0x03b6\n1761: JUMP"
      },
      {
        "offset": 1762,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601101541661093057",
        "parsedOpcodes": "1762: JUMPDEST\n1763: PUSH1 0x01\n1765: PUSH1 0x01\n1767: PUSH1 0xa0\n1769: SHL\n1770: SUB\n1771: DUP4\n1772: DUP2\n1773: AND\n1774: PUSH1 0x00\n1776: SWAP1\n1777: DUP2\n1778: MSTORE\n1779: PUSH1 0x05\n1781: PUSH1 0x20\n1783: SWAP1\n1784: DUP2\n1785: MSTORE\n1786: PUSH1 0x40\n1788: DUP1\n1789: DUP4\n1790: SHA3\n1791: PUSH1 0xff\n1793: DUP8\n1794: AND\n1795: DUP5\n1796: MSTORE\n1797: PUSH1 0x03\n1799: ADD\n1800: SWAP1\n1801: SWAP2\n1802: MSTORE\n1803: SWAP1\n1804: SHA3\n1805: PUSH1 0x11\n1807: ADD\n1808: SLOAD\n1809: AND\n1810: PUSH2 0x0930\n1813: JUMPI"
      },
      {
        "offset": 1814,
        "length": 168,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160020180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260106020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "1814: PUSH1 0x01\n1816: PUSH1 0x01\n1818: PUSH1 0xa0\n1820: SHL\n1821: SUB\n1822: DUP4\n1823: AND\n1824: PUSH1 0x00\n1826: SWAP1\n1827: DUP2\n1828: MSTORE\n1829: PUSH1 0x05\n1831: PUSH1 0x20\n1833: SWAP1\n1834: DUP2\n1835: MSTORE\n1836: PUSH1 0x40\n1838: DUP1\n1839: DUP4\n1840: SHA3\n1841: PUSH1 0xff\n1843: DUP7\n1844: AND\n1845: DUP5\n1846: MSTORE\n1847: PUSH1 0x03\n1849: ADD\n1850: SWAP1\n1851: SWAP2\n1852: MSTORE\n1853: SWAP1\n1854: SHA3\n1855: DUP5\n1856: SWAP1\n1857: PUSH1 0x0f\n1859: ADD\n1860: PUSH1 0x02\n1862: ADD\n1863: DUP1\n1864: SLOAD\n1865: PUSH1 0x01\n1867: PUSH1 0x01\n1869: PUSH1 0xa0\n1871: SHL\n1872: SUB\n1873: NOT\n1874: AND\n1875: PUSH1 0x01\n1877: PUSH1 0x01\n1879: PUSH1 0xa0\n1881: SHL\n1882: SUB\n1883: SWAP3\n1884: DUP4\n1885: AND\n1886: OR\n1887: SWAP1\n1888: SSTORE\n1889: PUSH1 0x40\n1891: DUP1\n1892: MLOAD\n1893: PUSH1 0xff\n1895: DUP6\n1896: AND\n1897: DUP2\n1898: MSTORE\n1899: PUSH1 0x10\n1901: PUSH1 0x20\n1903: DUP3\n1904: ADD\n1905: MSTORE\n1906: DUP2\n1907: MLOAD\n1908: DUP7\n1909: DUP5\n1910: AND\n1911: SWAP4\n1912: DUP9\n1913: AND\n1914: SWAP3\n1915: PUSH1 0x00\n1917: DUP1\n1918: MLOAD\n1919: PUSH1 0x20\n1921: PUSH2 0x1feb\n1924: DUP4\n1925: CODECOPY\n1926: DUP2\n1927: MLOAD\n1928: SWAP2\n1929: MSTORE\n1930: SWAP3\n1931: DUP3\n1932: SWAP1\n1933: SUB\n1934: ADD\n1935: SWAP1\n1936: LOG3\n1937: PUSH1 0x01\n1939: PUSH1 0x01\n1941: PUSH1 0xa0\n1943: SHL\n1944: SUB\n1945: DUP4\n1946: AND\n1947: PUSH1 0x00\n1949: SWAP1\n1950: DUP2\n1951: MSTORE\n1952: PUSH1 0x05\n1954: PUSH1 0x20\n1956: SWAP1\n1957: DUP2\n1958: MSTORE\n1959: PUSH1 0x40\n1961: DUP1\n1962: DUP4\n1963: SHA3\n1964: PUSH1 0xff\n1966: DUP7\n1967: AND\n1968: DUP5\n1969: MSTORE\n1970: PUSH1 0x03\n1972: ADD\n1973: SWAP1\n1974: SWAP2\n1975: MSTORE\n1976: DUP2\n1977: SHA3\n1978: PUSH1 0x01\n1980: ADD\n1981: DUP2"
      },
      {
        "offset": 1982,
        "length": 144,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160020180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260086020820152815184841693891692600080516020611feb833981519152928290030190a361084e858285600a6003870261044056",
        "parsedOpcodes": "1982: JUMPDEST\n1983: ADD\n1984: SLOAD\n1985: PUSH1 0x01\n1987: PUSH1 0x01\n1989: PUSH1 0xa0\n1991: SHL\n1992: SUB\n1993: AND\n1994: PUSH1 0x00\n1996: DUP2\n1997: DUP2\n1998: MSTORE\n1999: PUSH1 0x05\n2001: PUSH1 0x20\n2003: SWAP1\n2004: DUP2\n2005: MSTORE\n2006: PUSH1 0x40\n2008: DUP1\n2009: DUP4\n2010: SHA3\n2011: PUSH1 0xff\n2013: DUP9\n2014: AND\n2015: DUP5\n2016: MSTORE\n2017: PUSH1 0x03\n2019: ADD\n2020: SWAP1\n2021: SWAP2\n2022: MSTORE\n2023: SWAP1\n2024: SHA3\n2025: SWAP1\n2026: SWAP2\n2027: POP\n2028: DUP6\n2029: SWAP1\n2030: PUSH1 0x07\n2032: ADD\n2033: PUSH1 0x02\n2035: ADD\n2036: DUP1\n2037: SLOAD\n2038: PUSH1 0x01\n2040: PUSH1 0x01\n2042: PUSH1 0xa0\n2044: SHL\n2045: SUB\n2046: NOT\n2047: AND\n2048: PUSH1 0x01\n2050: PUSH1 0x01\n2052: PUSH1 0xa0\n2054: SHL\n2055: SUB\n2056: SWAP3\n2057: DUP4\n2058: AND\n2059: OR\n2060: SWAP1\n2061: SSTORE\n2062: PUSH1 0x40\n2064: DUP1\n2065: MLOAD\n2066: PUSH1 0xff\n2068: DUP7\n2069: AND\n2070: DUP2\n2071: MSTORE\n2072: PUSH1 0x08\n2074: PUSH1 0x20\n2076: DUP3\n2077: ADD\n2078: MSTORE\n2079: DUP2\n2080: MLOAD\n2081: DUP5\n2082: DUP5\n2083: AND\n2084: SWAP4\n2085: DUP10\n2086: AND\n2087: SWAP3\n2088: PUSH1 0x00\n2090: DUP1\n2091: MLOAD\n2092: PUSH1 0x20\n2094: PUSH2 0x1feb\n2097: DUP4\n2098: CODECOPY\n2099: DUP2\n2100: MLOAD\n2101: SWAP2\n2102: MSTORE\n2103: SWAP3\n2104: DUP3\n2105: SWAP1\n2106: SUB\n2107: ADD\n2108: SWAP1\n2109: LOG3\n2110: PUSH2 0x084e\n2113: DUP6\n2114: DUP3\n2115: DUP6\n2116: PUSH1 0x0a\n2118: PUSH1 0x03\n2120: DUP8\n2121: MUL\n2122: PUSH2 0x0440\n2125: JUMP"
      },
      {
        "offset": 2126,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060010181",
        "parsedOpcodes": "2126: JUMPDEST\n2127: PUSH1 0x01\n2129: PUSH1 0x01\n2131: PUSH1 0xa0\n2133: SHL\n2134: SUB\n2135: DUP2\n2136: AND\n2137: PUSH1 0x00\n2139: SWAP1\n2140: DUP2\n2141: MSTORE\n2142: PUSH1 0x05\n2144: PUSH1 0x20\n2146: SWAP1\n2147: DUP2\n2148: MSTORE\n2149: PUSH1 0x40\n2151: DUP1\n2152: DUP4\n2153: SHA3\n2154: PUSH1 0xff\n2156: DUP8\n2157: AND\n2158: DUP5\n2159: MSTORE\n2160: PUSH1 0x03\n2162: ADD\n2163: SWAP1\n2164: SWAP2\n2165: MSTORE\n2166: DUP2\n2167: SHA3\n2168: PUSH1 0x01\n2170: ADD\n2171: DUP2"
      },
      {
        "offset": 2172,
        "length": 128,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b03908116600081815260056020818152604080842060ff8b16808652600390910183529381902090920180546001600160a01b031916958c16958617905581519283526004908301528051929450849392600080516020611feb8339815191529281900390910190a36108fc86828660058761044056",
        "parsedOpcodes": "2172: JUMPDEST\n2173: ADD\n2174: SLOAD\n2175: PUSH1 0x01\n2177: PUSH1 0x01\n2179: PUSH1 0xa0\n2181: SHL\n2182: SUB\n2183: SWAP1\n2184: DUP2\n2185: AND\n2186: PUSH1 0x00\n2188: DUP2\n2189: DUP2\n2190: MSTORE\n2191: PUSH1 0x05\n2193: PUSH1 0x20\n2195: DUP2\n2196: DUP2\n2197: MSTORE\n2198: PUSH1 0x40\n2200: DUP1\n2201: DUP5\n2202: SHA3\n2203: PUSH1 0xff\n2205: DUP12\n2206: AND\n2207: DUP1\n2208: DUP7\n2209: MSTORE\n2210: PUSH1 0x03\n2212: SWAP1\n2213: SWAP2\n2214: ADD\n2215: DUP4\n2216: MSTORE\n2217: SWAP4\n2218: DUP2\n2219: SWAP1\n2220: SHA3\n2221: SWAP1\n2222: SWAP3\n2223: ADD\n2224: DUP1\n2225: SLOAD\n2226: PUSH1 0x01\n2228: PUSH1 0x01\n2230: PUSH1 0xa0\n2232: SHL\n2233: SUB\n2234: NOT\n2235: AND\n2236: SWAP6\n2237: DUP13\n2238: AND\n2239: SWAP6\n2240: DUP7\n2241: OR\n2242: SWAP1\n2243: SSTORE\n2244: DUP2\n2245: MLOAD\n2246: SWAP3\n2247: DUP4\n2248: MSTORE\n2249: PUSH1 0x04\n2251: SWAP1\n2252: DUP4\n2253: ADD\n2254: MSTORE\n2255: DUP1\n2256: MLOAD\n2257: SWAP3\n2258: SWAP5\n2259: POP\n2260: DUP5\n2261: SWAP4\n2262: SWAP3\n2263: PUSH1 0x00\n2265: DUP1\n2266: MLOAD\n2267: PUSH1 0x20\n2269: PUSH2 0x1feb\n2272: DUP4\n2273: CODECOPY\n2274: DUP2\n2275: MLOAD\n2276: SWAP2\n2277: MSTORE\n2278: SWAP3\n2279: DUP2\n2280: SWAP1\n2281: SUB\n2282: SWAP1\n2283: SWAP2\n2284: ADD\n2285: SWAP1\n2286: LOG3\n2287: PUSH2 0x08fc\n2290: DUP7\n2291: DUP3\n2292: DUP7\n2293: PUSH1 0x05\n2295: DUP8\n2296: PUSH2 0x0440\n2299: JUMP"
      },
      {
        "offset": 2300,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060019081019061052d56",
        "parsedOpcodes": "2300: JUMPDEST\n2301: PUSH1 0x01\n2303: PUSH1 0x01\n2305: PUSH1 0xa0\n2307: SHL\n2308: SUB\n2309: DUP2\n2310: AND\n2311: PUSH1 0x00\n2313: SWAP1\n2314: DUP2\n2315: MSTORE\n2316: PUSH1 0x05\n2318: PUSH1 0x20\n2320: SWAP1\n2321: DUP2\n2322: MSTORE\n2323: PUSH1 0x40\n2325: DUP1\n2326: DUP4\n2327: SHA3\n2328: PUSH1 0xff\n2330: DUP9\n2331: AND\n2332: DUP5\n2333: MSTORE\n2334: PUSH1 0x03\n2336: ADD\n2337: SWAP1\n2338: SWAP2\n2339: MSTORE\n2340: DUP2\n2341: SHA3\n2342: PUSH1 0x01\n2344: SWAP1\n2345: DUP2\n2346: ADD\n2347: SWAP1\n2348: PUSH2 0x052d\n2351: JUMP"
      },
      {
        "offset": 2352,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206019015416610a1257",
        "parsedOpcodes": "2352: JUMPDEST\n2353: PUSH1 0x01\n2355: PUSH1 0x01\n2357: PUSH1 0xa0\n2359: SHL\n2360: SUB\n2361: DUP4\n2362: DUP2\n2363: AND\n2364: PUSH1 0x00\n2366: SWAP1\n2367: DUP2\n2368: MSTORE\n2369: PUSH1 0x05\n2371: PUSH1 0x20\n2373: SWAP1\n2374: DUP2\n2375: MSTORE\n2376: PUSH1 0x40\n2378: DUP1\n2379: DUP4\n2380: SHA3\n2381: PUSH1 0xff\n2383: DUP8\n2384: AND\n2385: DUP5\n2386: MSTORE\n2387: PUSH1 0x03\n2389: ADD\n2390: SWAP1\n2391: SWAP2\n2392: MSTORE\n2393: SWAP1\n2394: SHA3\n2395: PUSH1 0x19\n2397: ADD\n2398: SLOAD\n2399: AND\n2400: PUSH2 0x0a12\n2403: JUMPI"
      },
      {
        "offset": 2404,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600a0180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260186020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906107be56",
        "parsedOpcodes": "2404: PUSH1 0x01\n2406: PUSH1 0x01\n2408: PUSH1 0xa0\n2410: SHL\n2411: SUB\n2412: DUP4\n2413: AND\n2414: PUSH1 0x00\n2416: SWAP1\n2417: DUP2\n2418: MSTORE\n2419: PUSH1 0x05\n2421: PUSH1 0x20\n2423: SWAP1\n2424: DUP2\n2425: MSTORE\n2426: PUSH1 0x40\n2428: DUP1\n2429: DUP4\n2430: SHA3\n2431: PUSH1 0xff\n2433: DUP7\n2434: AND\n2435: DUP5\n2436: MSTORE\n2437: PUSH1 0x03\n2439: ADD\n2440: SWAP1\n2441: SWAP2\n2442: MSTORE\n2443: SWAP1\n2444: SHA3\n2445: DUP5\n2446: SWAP1\n2447: PUSH1 0x0f\n2449: ADD\n2450: PUSH1 0x0a\n2452: ADD\n2453: DUP1\n2454: SLOAD\n2455: PUSH1 0x01\n2457: PUSH1 0x01\n2459: PUSH1 0xa0\n2461: SHL\n2462: SUB\n2463: NOT\n2464: AND\n2465: PUSH1 0x01\n2467: PUSH1 0x01\n2469: PUSH1 0xa0\n2471: SHL\n2472: SUB\n2473: SWAP3\n2474: DUP4\n2475: AND\n2476: OR\n2477: SWAP1\n2478: SSTORE\n2479: PUSH1 0x40\n2481: DUP1\n2482: MLOAD\n2483: PUSH1 0xff\n2485: DUP6\n2486: AND\n2487: DUP2\n2488: MSTORE\n2489: PUSH1 0x18\n2491: PUSH1 0x20\n2493: DUP3\n2494: ADD\n2495: MSTORE\n2496: DUP2\n2497: MLOAD\n2498: DUP7\n2499: DUP5\n2500: AND\n2501: SWAP4\n2502: DUP9\n2503: AND\n2504: SWAP3\n2505: PUSH1 0x00\n2507: DUP1\n2508: MLOAD\n2509: PUSH1 0x20\n2511: PUSH2 0x1feb\n2514: DUP4\n2515: CODECOPY\n2516: DUP2\n2517: MLOAD\n2518: SWAP2\n2519: MSTORE\n2520: SWAP3\n2521: DUP3\n2522: SWAP1\n2523: SUB\n2524: ADD\n2525: SWAP1\n2526: LOG3\n2527: PUSH1 0x01\n2529: PUSH1 0x01\n2531: PUSH1 0xa0\n2533: SHL\n2534: SUB\n2535: DUP4\n2536: AND\n2537: PUSH1 0x00\n2539: SWAP1\n2540: DUP2\n2541: MSTORE\n2542: PUSH1 0x05\n2544: PUSH1 0x20\n2546: SWAP1\n2547: DUP2\n2548: MSTORE\n2549: PUSH1 0x40\n2551: DUP1\n2552: DUP4\n2553: SHA3\n2554: PUSH1 0xff\n2556: DUP7\n2557: AND\n2558: DUP5\n2559: MSTORE\n2560: PUSH1 0x03\n2562: ADD\n2563: SWAP1\n2564: SWAP2\n2565: MSTORE\n2566: DUP2\n2567: SHA3\n2568: PUSH1 0x01\n2570: SWAP1\n2571: DUP2\n2572: ADD\n2573: SWAP1\n2574: PUSH2 0x07be\n2577: JUMP"
      },
      {
        "offset": 2578,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206013015416610bb257",
        "parsedOpcodes": "2578: JUMPDEST\n2579: PUSH1 0x01\n2581: PUSH1 0x01\n2583: PUSH1 0xa0\n2585: SHL\n2586: SUB\n2587: DUP4\n2588: DUP2\n2589: AND\n2590: PUSH1 0x00\n2592: SWAP1\n2593: DUP2\n2594: MSTORE\n2595: PUSH1 0x05\n2597: PUSH1 0x20\n2599: SWAP1\n2600: DUP2\n2601: MSTORE\n2602: PUSH1 0x40\n2604: DUP1\n2605: DUP4\n2606: SHA3\n2607: PUSH1 0xff\n2609: DUP8\n2610: AND\n2611: DUP5\n2612: MSTORE\n2613: PUSH1 0x03\n2615: ADD\n2616: SWAP1\n2617: SWAP2\n2618: MSTORE\n2619: SWAP1\n2620: SHA3\n2621: PUSH1 0x13\n2623: ADD\n2624: SLOAD\n2625: AND\n2626: PUSH2 0x0bb2\n2629: JUMPI"
      },
      {
        "offset": 2630,
        "length": 168,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160040180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260126020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "2630: PUSH1 0x01\n2632: PUSH1 0x01\n2634: PUSH1 0xa0\n2636: SHL\n2637: SUB\n2638: DUP4\n2639: AND\n2640: PUSH1 0x00\n2642: SWAP1\n2643: DUP2\n2644: MSTORE\n2645: PUSH1 0x05\n2647: PUSH1 0x20\n2649: SWAP1\n2650: DUP2\n2651: MSTORE\n2652: PUSH1 0x40\n2654: DUP1\n2655: DUP4\n2656: SHA3\n2657: PUSH1 0xff\n2659: DUP7\n2660: AND\n2661: DUP5\n2662: MSTORE\n2663: PUSH1 0x03\n2665: ADD\n2666: SWAP1\n2667: SWAP2\n2668: MSTORE\n2669: SWAP1\n2670: SHA3\n2671: DUP5\n2672: SWAP1\n2673: PUSH1 0x0f\n2675: ADD\n2676: PUSH1 0x04\n2678: ADD\n2679: DUP1\n2680: SLOAD\n2681: PUSH1 0x01\n2683: PUSH1 0x01\n2685: PUSH1 0xa0\n2687: SHL\n2688: SUB\n2689: NOT\n2690: AND\n2691: PUSH1 0x01\n2693: PUSH1 0x01\n2695: PUSH1 0xa0\n2697: SHL\n2698: SUB\n2699: SWAP3\n2700: DUP4\n2701: AND\n2702: OR\n2703: SWAP1\n2704: SSTORE\n2705: PUSH1 0x40\n2707: DUP1\n2708: MLOAD\n2709: PUSH1 0xff\n2711: DUP6\n2712: AND\n2713: DUP2\n2714: MSTORE\n2715: PUSH1 0x12\n2717: PUSH1 0x20\n2719: DUP3\n2720: ADD\n2721: MSTORE\n2722: DUP2\n2723: MLOAD\n2724: DUP7\n2725: DUP5\n2726: AND\n2727: SWAP4\n2728: DUP9\n2729: AND\n2730: SWAP3\n2731: PUSH1 0x00\n2733: DUP1\n2734: MLOAD\n2735: PUSH1 0x20\n2737: PUSH2 0x1feb\n2740: DUP4\n2741: CODECOPY\n2742: DUP2\n2743: MLOAD\n2744: SWAP2\n2745: MSTORE\n2746: SWAP3\n2747: DUP3\n2748: SWAP1\n2749: SUB\n2750: ADD\n2751: SWAP1\n2752: LOG3\n2753: PUSH1 0x01\n2755: PUSH1 0x01\n2757: PUSH1 0xa0\n2759: SHL\n2760: SUB\n2761: DUP4\n2762: AND\n2763: PUSH1 0x00\n2765: SWAP1\n2766: DUP2\n2767: MSTORE\n2768: PUSH1 0x05\n2770: PUSH1 0x20\n2772: SWAP1\n2773: DUP2\n2774: MSTORE\n2775: PUSH1 0x40\n2777: DUP1\n2778: DUP4\n2779: SHA3\n2780: PUSH1 0xff\n2782: DUP7\n2783: AND\n2784: DUP5\n2785: MSTORE\n2786: PUSH1 0x03\n2788: ADD\n2789: SWAP1\n2790: SWAP2\n2791: MSTORE\n2792: DUP2\n2793: SHA3\n2794: PUSH1 0x01\n2796: ADD\n2797: DUP2"
      },
      {
        "offset": 2798,
        "length": 144,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160040180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600a6020820152815184841693891692600080516020611feb833981519152928290030190a3610b7e858285600a6003870261044056",
        "parsedOpcodes": "2798: JUMPDEST\n2799: ADD\n2800: SLOAD\n2801: PUSH1 0x01\n2803: PUSH1 0x01\n2805: PUSH1 0xa0\n2807: SHL\n2808: SUB\n2809: AND\n2810: PUSH1 0x00\n2812: DUP2\n2813: DUP2\n2814: MSTORE\n2815: PUSH1 0x05\n2817: PUSH1 0x20\n2819: SWAP1\n2820: DUP2\n2821: MSTORE\n2822: PUSH1 0x40\n2824: DUP1\n2825: DUP4\n2826: SHA3\n2827: PUSH1 0xff\n2829: DUP9\n2830: AND\n2831: DUP5\n2832: MSTORE\n2833: PUSH1 0x03\n2835: ADD\n2836: SWAP1\n2837: SWAP2\n2838: MSTORE\n2839: SWAP1\n2840: SHA3\n2841: SWAP1\n2842: SWAP2\n2843: POP\n2844: DUP6\n2845: SWAP1\n2846: PUSH1 0x07\n2848: ADD\n2849: PUSH1 0x04\n2851: ADD\n2852: DUP1\n2853: SLOAD\n2854: PUSH1 0x01\n2856: PUSH1 0x01\n2858: PUSH1 0xa0\n2860: SHL\n2861: SUB\n2862: NOT\n2863: AND\n2864: PUSH1 0x01\n2866: PUSH1 0x01\n2868: PUSH1 0xa0\n2870: SHL\n2871: SUB\n2872: SWAP3\n2873: DUP4\n2874: AND\n2875: OR\n2876: SWAP1\n2877: SSTORE\n2878: PUSH1 0x40\n2880: DUP1\n2881: MLOAD\n2882: PUSH1 0xff\n2884: DUP7\n2885: AND\n2886: DUP2\n2887: MSTORE\n2888: PUSH1 0x0a\n2890: PUSH1 0x20\n2892: DUP3\n2893: ADD\n2894: MSTORE\n2895: DUP2\n2896: MLOAD\n2897: DUP5\n2898: DUP5\n2899: AND\n2900: SWAP4\n2901: DUP10\n2902: AND\n2903: SWAP3\n2904: PUSH1 0x00\n2906: DUP1\n2907: MLOAD\n2908: PUSH1 0x20\n2910: PUSH2 0x1feb\n2913: DUP4\n2914: CODECOPY\n2915: DUP2\n2916: MLOAD\n2917: SWAP2\n2918: MSTORE\n2919: SWAP3\n2920: DUP3\n2921: SWAP1\n2922: SUB\n2923: ADD\n2924: SWAP1\n2925: LOG3\n2926: PUSH2 0x0b7e\n2929: DUP6\n2930: DUP3\n2931: DUP6\n2932: PUSH1 0x0a\n2934: PUSH1 0x03\n2936: DUP8\n2937: MUL\n2938: PUSH2 0x0440\n2941: JUMP"
      },
      {
        "offset": 2942,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060019081019061047456",
        "parsedOpcodes": "2942: JUMPDEST\n2943: PUSH1 0x01\n2945: PUSH1 0x01\n2947: PUSH1 0xa0\n2949: SHL\n2950: SUB\n2951: DUP2\n2952: AND\n2953: PUSH1 0x00\n2955: SWAP1\n2956: DUP2\n2957: MSTORE\n2958: PUSH1 0x05\n2960: PUSH1 0x20\n2962: SWAP1\n2963: DUP2\n2964: MSTORE\n2965: PUSH1 0x40\n2967: DUP1\n2968: DUP4\n2969: SHA3\n2970: PUSH1 0xff\n2972: DUP8\n2973: AND\n2974: DUP5\n2975: MSTORE\n2976: PUSH1 0x03\n2978: ADD\n2979: SWAP1\n2980: SWAP2\n2981: MSTORE\n2982: DUP2\n2983: SHA3\n2984: PUSH1 0x01\n2986: SWAP1\n2987: DUP2\n2988: ADD\n2989: SWAP1\n2990: PUSH2 0x0474\n2993: JUMP"
      },
      {
        "offset": 2994,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601b015416610c9457",
        "parsedOpcodes": "2994: JUMPDEST\n2995: PUSH1 0x01\n2997: PUSH1 0x01\n2999: PUSH1 0xa0\n3001: SHL\n3002: SUB\n3003: DUP4\n3004: DUP2\n3005: AND\n3006: PUSH1 0x00\n3008: SWAP1\n3009: DUP2\n3010: MSTORE\n3011: PUSH1 0x05\n3013: PUSH1 0x20\n3015: SWAP1\n3016: DUP2\n3017: MSTORE\n3018: PUSH1 0x40\n3020: DUP1\n3021: DUP4\n3022: SHA3\n3023: PUSH1 0xff\n3025: DUP8\n3026: AND\n3027: DUP5\n3028: MSTORE\n3029: PUSH1 0x03\n3031: ADD\n3032: SWAP1\n3033: SWAP2\n3034: MSTORE\n3035: SWAP1\n3036: SHA3\n3037: PUSH1 0x1b\n3039: ADD\n3040: SLOAD\n3041: AND\n3042: PUSH2 0x0c94\n3045: JUMPI"
      },
      {
        "offset": 3046,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600c0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601a6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610aee56",
        "parsedOpcodes": "3046: PUSH1 0x01\n3048: PUSH1 0x01\n3050: PUSH1 0xa0\n3052: SHL\n3053: SUB\n3054: DUP4\n3055: AND\n3056: PUSH1 0x00\n3058: SWAP1\n3059: DUP2\n3060: MSTORE\n3061: PUSH1 0x05\n3063: PUSH1 0x20\n3065: SWAP1\n3066: DUP2\n3067: MSTORE\n3068: PUSH1 0x40\n3070: DUP1\n3071: DUP4\n3072: SHA3\n3073: PUSH1 0xff\n3075: DUP7\n3076: AND\n3077: DUP5\n3078: MSTORE\n3079: PUSH1 0x03\n3081: ADD\n3082: SWAP1\n3083: SWAP2\n3084: MSTORE\n3085: SWAP1\n3086: SHA3\n3087: DUP5\n3088: SWAP1\n3089: PUSH1 0x0f\n3091: ADD\n3092: PUSH1 0x0c\n3094: ADD\n3095: DUP1\n3096: SLOAD\n3097: PUSH1 0x01\n3099: PUSH1 0x01\n3101: PUSH1 0xa0\n3103: SHL\n3104: SUB\n3105: NOT\n3106: AND\n3107: PUSH1 0x01\n3109: PUSH1 0x01\n3111: PUSH1 0xa0\n3113: SHL\n3114: SUB\n3115: SWAP3\n3116: DUP4\n3117: AND\n3118: OR\n3119: SWAP1\n3120: SSTORE\n3121: PUSH1 0x40\n3123: DUP1\n3124: MLOAD\n3125: PUSH1 0xff\n3127: DUP6\n3128: AND\n3129: DUP2\n3130: MSTORE\n3131: PUSH1 0x1a\n3133: PUSH1 0x20\n3135: DUP3\n3136: ADD\n3137: MSTORE\n3138: DUP2\n3139: MLOAD\n3140: DUP7\n3141: DUP5\n3142: AND\n3143: SWAP4\n3144: DUP9\n3145: AND\n3146: SWAP3\n3147: PUSH1 0x00\n3149: DUP1\n3150: MLOAD\n3151: PUSH1 0x20\n3153: PUSH2 0x1feb\n3156: DUP4\n3157: CODECOPY\n3158: DUP2\n3159: MLOAD\n3160: SWAP2\n3161: MSTORE\n3162: SWAP3\n3163: DUP3\n3164: SWAP1\n3165: SUB\n3166: ADD\n3167: SWAP1\n3168: LOG3\n3169: PUSH1 0x01\n3171: PUSH1 0x01\n3173: PUSH1 0xa0\n3175: SHL\n3176: SUB\n3177: DUP4\n3178: AND\n3179: PUSH1 0x00\n3181: SWAP1\n3182: DUP2\n3183: MSTORE\n3184: PUSH1 0x05\n3186: PUSH1 0x20\n3188: SWAP1\n3189: DUP2\n3190: MSTORE\n3191: PUSH1 0x40\n3193: DUP1\n3194: DUP4\n3195: SHA3\n3196: PUSH1 0xff\n3198: DUP7\n3199: AND\n3200: DUP5\n3201: MSTORE\n3202: PUSH1 0x03\n3204: ADD\n3205: SWAP1\n3206: SWAP2\n3207: MSTORE\n3208: DUP2\n3209: SHA3\n3210: PUSH1 0x01\n3212: SWAP1\n3213: DUP2\n3214: ADD\n3215: SWAP1\n3216: PUSH2 0x0aee\n3219: JUMP"
      },
      {
        "offset": 3220,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206015015416610e3457",
        "parsedOpcodes": "3220: JUMPDEST\n3221: PUSH1 0x01\n3223: PUSH1 0x01\n3225: PUSH1 0xa0\n3227: SHL\n3228: SUB\n3229: DUP4\n3230: DUP2\n3231: AND\n3232: PUSH1 0x00\n3234: SWAP1\n3235: DUP2\n3236: MSTORE\n3237: PUSH1 0x05\n3239: PUSH1 0x20\n3241: SWAP1\n3242: DUP2\n3243: MSTORE\n3244: PUSH1 0x40\n3246: DUP1\n3247: DUP4\n3248: SHA3\n3249: PUSH1 0xff\n3251: DUP8\n3252: AND\n3253: DUP5\n3254: MSTORE\n3255: PUSH1 0x03\n3257: ADD\n3258: SWAP1\n3259: SWAP2\n3260: MSTORE\n3261: SWAP1\n3262: SHA3\n3263: PUSH1 0x15\n3265: ADD\n3266: SLOAD\n3267: AND\n3268: PUSH2 0x0e34\n3271: JUMPI"
      },
      {
        "offset": 3272,
        "length": 168,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160060180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260146020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "3272: PUSH1 0x01\n3274: PUSH1 0x01\n3276: PUSH1 0xa0\n3278: SHL\n3279: SUB\n3280: DUP4\n3281: AND\n3282: PUSH1 0x00\n3284: SWAP1\n3285: DUP2\n3286: MSTORE\n3287: PUSH1 0x05\n3289: PUSH1 0x20\n3291: SWAP1\n3292: DUP2\n3293: MSTORE\n3294: PUSH1 0x40\n3296: DUP1\n3297: DUP4\n3298: SHA3\n3299: PUSH1 0xff\n3301: DUP7\n3302: AND\n3303: DUP5\n3304: MSTORE\n3305: PUSH1 0x03\n3307: ADD\n3308: SWAP1\n3309: SWAP2\n3310: MSTORE\n3311: SWAP1\n3312: SHA3\n3313: DUP5\n3314: SWAP1\n3315: PUSH1 0x0f\n3317: ADD\n3318: PUSH1 0x06\n3320: ADD\n3321: DUP1\n3322: SLOAD\n3323: PUSH1 0x01\n3325: PUSH1 0x01\n3327: PUSH1 0xa0\n3329: SHL\n3330: SUB\n3331: NOT\n3332: AND\n3333: PUSH1 0x01\n3335: PUSH1 0x01\n3337: PUSH1 0xa0\n3339: SHL\n3340: SUB\n3341: SWAP3\n3342: DUP4\n3343: AND\n3344: OR\n3345: SWAP1\n3346: SSTORE\n3347: PUSH1 0x40\n3349: DUP1\n3350: MLOAD\n3351: PUSH1 0xff\n3353: DUP6\n3354: AND\n3355: DUP2\n3356: MSTORE\n3357: PUSH1 0x14\n3359: PUSH1 0x20\n3361: DUP3\n3362: ADD\n3363: MSTORE\n3364: DUP2\n3365: MLOAD\n3366: DUP7\n3367: DUP5\n3368: AND\n3369: SWAP4\n3370: DUP9\n3371: AND\n3372: SWAP3\n3373: PUSH1 0x00\n3375: DUP1\n3376: MLOAD\n3377: PUSH1 0x20\n3379: PUSH2 0x1feb\n3382: DUP4\n3383: CODECOPY\n3384: DUP2\n3385: MLOAD\n3386: SWAP2\n3387: MSTORE\n3388: SWAP3\n3389: DUP3\n3390: SWAP1\n3391: SUB\n3392: ADD\n3393: SWAP1\n3394: LOG3\n3395: PUSH1 0x01\n3397: PUSH1 0x01\n3399: PUSH1 0xa0\n3401: SHL\n3402: SUB\n3403: DUP4\n3404: AND\n3405: PUSH1 0x00\n3407: SWAP1\n3408: DUP2\n3409: MSTORE\n3410: PUSH1 0x05\n3412: PUSH1 0x20\n3414: SWAP1\n3415: DUP2\n3416: MSTORE\n3417: PUSH1 0x40\n3419: DUP1\n3420: DUP4\n3421: SHA3\n3422: PUSH1 0xff\n3424: DUP7\n3425: AND\n3426: DUP5\n3427: MSTORE\n3428: PUSH1 0x03\n3430: ADD\n3431: SWAP1\n3432: SWAP2\n3433: MSTORE\n3434: DUP2\n3435: SHA3\n3436: PUSH1 0x01\n3438: ADD\n3439: DUP2"
      },
      {
        "offset": 3440,
        "length": 144,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160060180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600c6020820152815184841693891692600080516020611feb833981519152928290030190a3610e00858285600a6003870261044056",
        "parsedOpcodes": "3440: JUMPDEST\n3441: ADD\n3442: SLOAD\n3443: PUSH1 0x01\n3445: PUSH1 0x01\n3447: PUSH1 0xa0\n3449: SHL\n3450: SUB\n3451: AND\n3452: PUSH1 0x00\n3454: DUP2\n3455: DUP2\n3456: MSTORE\n3457: PUSH1 0x05\n3459: PUSH1 0x20\n3461: SWAP1\n3462: DUP2\n3463: MSTORE\n3464: PUSH1 0x40\n3466: DUP1\n3467: DUP4\n3468: SHA3\n3469: PUSH1 0xff\n3471: DUP9\n3472: AND\n3473: DUP5\n3474: MSTORE\n3475: PUSH1 0x03\n3477: ADD\n3478: SWAP1\n3479: SWAP2\n3480: MSTORE\n3481: SWAP1\n3482: SHA3\n3483: SWAP1\n3484: SWAP2\n3485: POP\n3486: DUP6\n3487: SWAP1\n3488: PUSH1 0x07\n3490: ADD\n3491: PUSH1 0x06\n3493: ADD\n3494: DUP1\n3495: SLOAD\n3496: PUSH1 0x01\n3498: PUSH1 0x01\n3500: PUSH1 0xa0\n3502: SHL\n3503: SUB\n3504: NOT\n3505: AND\n3506: PUSH1 0x01\n3508: PUSH1 0x01\n3510: PUSH1 0xa0\n3512: SHL\n3513: SUB\n3514: SWAP3\n3515: DUP4\n3516: AND\n3517: OR\n3518: SWAP1\n3519: SSTORE\n3520: PUSH1 0x40\n3522: DUP1\n3523: MLOAD\n3524: PUSH1 0xff\n3526: DUP7\n3527: AND\n3528: DUP2\n3529: MSTORE\n3530: PUSH1 0x0c\n3532: PUSH1 0x20\n3534: DUP3\n3535: ADD\n3536: MSTORE\n3537: DUP2\n3538: MLOAD\n3539: DUP5\n3540: DUP5\n3541: AND\n3542: SWAP4\n3543: DUP10\n3544: AND\n3545: SWAP3\n3546: PUSH1 0x00\n3548: DUP1\n3549: MLOAD\n3550: PUSH1 0x20\n3552: PUSH2 0x1feb\n3555: DUP4\n3556: CODECOPY\n3557: DUP2\n3558: MLOAD\n3559: SWAP2\n3560: MSTORE\n3561: SWAP3\n3562: DUP3\n3563: SWAP1\n3564: SUB\n3565: ADD\n3566: SWAP1\n3567: LOG3\n3568: PUSH2 0x0e00\n3571: DUP6\n3572: DUP3\n3573: DUP6\n3574: PUSH1 0x0a\n3576: PUSH1 0x03\n3578: DUP8\n3579: MUL\n3580: PUSH2 0x0440\n3583: JUMP"
      },
      {
        "offset": 3584,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060019081019061087c56",
        "parsedOpcodes": "3584: JUMPDEST\n3585: PUSH1 0x01\n3587: PUSH1 0x01\n3589: PUSH1 0xa0\n3591: SHL\n3592: SUB\n3593: DUP2\n3594: AND\n3595: PUSH1 0x00\n3597: SWAP1\n3598: DUP2\n3599: MSTORE\n3600: PUSH1 0x05\n3602: PUSH1 0x20\n3604: SWAP1\n3605: DUP2\n3606: MSTORE\n3607: PUSH1 0x40\n3609: DUP1\n3610: DUP4\n3611: SHA3\n3612: PUSH1 0xff\n3614: DUP8\n3615: AND\n3616: DUP5\n3617: MSTORE\n3618: PUSH1 0x03\n3620: ADD\n3621: SWAP1\n3622: SWAP2\n3623: MSTORE\n3624: DUP2\n3625: SHA3\n3626: PUSH1 0x01\n3628: SWAP1\n3629: DUP2\n3630: ADD\n3631: SWAP1\n3632: PUSH2 0x087c\n3635: JUMP"
      },
      {
        "offset": 3636,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601d015416610f1657",
        "parsedOpcodes": "3636: JUMPDEST\n3637: PUSH1 0x01\n3639: PUSH1 0x01\n3641: PUSH1 0xa0\n3643: SHL\n3644: SUB\n3645: DUP4\n3646: DUP2\n3647: AND\n3648: PUSH1 0x00\n3650: SWAP1\n3651: DUP2\n3652: MSTORE\n3653: PUSH1 0x05\n3655: PUSH1 0x20\n3657: SWAP1\n3658: DUP2\n3659: MSTORE\n3660: PUSH1 0x40\n3662: DUP1\n3663: DUP4\n3664: SHA3\n3665: PUSH1 0xff\n3667: DUP8\n3668: AND\n3669: DUP5\n3670: MSTORE\n3671: PUSH1 0x03\n3673: ADD\n3674: SWAP1\n3675: SWAP2\n3676: MSTORE\n3677: SWAP1\n3678: SHA3\n3679: PUSH1 0x1d\n3681: ADD\n3682: SLOAD\n3683: AND\n3684: PUSH2 0x0f16\n3687: JUMPI"
      },
      {
        "offset": 3688,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600e0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601c6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610d7056",
        "parsedOpcodes": "3688: PUSH1 0x01\n3690: PUSH1 0x01\n3692: PUSH1 0xa0\n3694: SHL\n3695: SUB\n3696: DUP4\n3697: AND\n3698: PUSH1 0x00\n3700: SWAP1\n3701: DUP2\n3702: MSTORE\n3703: PUSH1 0x05\n3705: PUSH1 0x20\n3707: SWAP1\n3708: DUP2\n3709: MSTORE\n3710: PUSH1 0x40\n3712: DUP1\n3713: DUP4\n3714: SHA3\n3715: PUSH1 0xff\n3717: DUP7\n3718: AND\n3719: DUP5\n3720: MSTORE\n3721: PUSH1 0x03\n3723: ADD\n3724: SWAP1\n3725: SWAP2\n3726: MSTORE\n3727: SWAP1\n3728: SHA3\n3729: DUP5\n3730: SWAP1\n3731: PUSH1 0x0f\n3733: ADD\n3734: PUSH1 0x0e\n3736: ADD\n3737: DUP1\n3738: SLOAD\n3739: PUSH1 0x01\n3741: PUSH1 0x01\n3743: PUSH1 0xa0\n3745: SHL\n3746: SUB\n3747: NOT\n3748: AND\n3749: PUSH1 0x01\n3751: PUSH1 0x01\n3753: PUSH1 0xa0\n3755: SHL\n3756: SUB\n3757: SWAP3\n3758: DUP4\n3759: AND\n3760: OR\n3761: SWAP1\n3762: SSTORE\n3763: PUSH1 0x40\n3765: DUP1\n3766: MLOAD\n3767: PUSH1 0xff\n3769: DUP6\n3770: AND\n3771: DUP2\n3772: MSTORE\n3773: PUSH1 0x1c\n3775: PUSH1 0x20\n3777: DUP3\n3778: ADD\n3779: MSTORE\n3780: DUP2\n3781: MLOAD\n3782: DUP7\n3783: DUP5\n3784: AND\n3785: SWAP4\n3786: DUP9\n3787: AND\n3788: SWAP3\n3789: PUSH1 0x00\n3791: DUP1\n3792: MLOAD\n3793: PUSH1 0x20\n3795: PUSH2 0x1feb\n3798: DUP4\n3799: CODECOPY\n3800: DUP2\n3801: MLOAD\n3802: SWAP2\n3803: MSTORE\n3804: SWAP3\n3805: DUP3\n3806: SWAP1\n3807: SUB\n3808: ADD\n3809: SWAP1\n3810: LOG3\n3811: PUSH1 0x01\n3813: PUSH1 0x01\n3815: PUSH1 0xa0\n3817: SHL\n3818: SUB\n3819: DUP4\n3820: AND\n3821: PUSH1 0x00\n3823: SWAP1\n3824: DUP2\n3825: MSTORE\n3826: PUSH1 0x05\n3828: PUSH1 0x20\n3830: SWAP1\n3831: DUP2\n3832: MSTORE\n3833: PUSH1 0x40\n3835: DUP1\n3836: DUP4\n3837: SHA3\n3838: PUSH1 0xff\n3840: DUP7\n3841: AND\n3842: DUP5\n3843: MSTORE\n3844: PUSH1 0x03\n3846: ADD\n3847: SWAP1\n3848: SWAP2\n3849: MSTORE\n3850: DUP2\n3851: SHA3\n3852: PUSH1 0x01\n3854: SWAP1\n3855: DUP2\n3856: ADD\n3857: SWAP1\n3858: PUSH2 0x0d70\n3861: JUMP"
      },
      {
        "offset": 3862,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601001541661123c57",
        "parsedOpcodes": "3862: JUMPDEST\n3863: PUSH1 0x01\n3865: PUSH1 0x01\n3867: PUSH1 0xa0\n3869: SHL\n3870: SUB\n3871: DUP4\n3872: DUP2\n3873: AND\n3874: PUSH1 0x00\n3876: SWAP1\n3877: DUP2\n3878: MSTORE\n3879: PUSH1 0x05\n3881: PUSH1 0x20\n3883: SWAP1\n3884: DUP2\n3885: MSTORE\n3886: PUSH1 0x40\n3888: DUP1\n3889: DUP4\n3890: SHA3\n3891: PUSH1 0xff\n3893: DUP8\n3894: AND\n3895: DUP5\n3896: MSTORE\n3897: PUSH1 0x03\n3899: ADD\n3900: SWAP1\n3901: SWAP2\n3902: MSTORE\n3903: SWAP1\n3904: SHA3\n3905: PUSH1 0x10\n3907: ADD\n3908: SLOAD\n3909: AND\n3910: PUSH2 0x123c\n3913: JUMPI"
      },
      {
        "offset": 3914,
        "length": 168,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152600f6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "3914: PUSH1 0x01\n3916: PUSH1 0x01\n3918: PUSH1 0xa0\n3920: SHL\n3921: SUB\n3922: DUP4\n3923: AND\n3924: PUSH1 0x00\n3926: SWAP1\n3927: DUP2\n3928: MSTORE\n3929: PUSH1 0x05\n3931: PUSH1 0x20\n3933: SWAP1\n3934: DUP2\n3935: MSTORE\n3936: PUSH1 0x40\n3938: DUP1\n3939: DUP4\n3940: SHA3\n3941: PUSH1 0xff\n3943: DUP7\n3944: AND\n3945: DUP5\n3946: MSTORE\n3947: PUSH1 0x03\n3949: ADD\n3950: SWAP1\n3951: SWAP2\n3952: MSTORE\n3953: SWAP1\n3954: SHA3\n3955: DUP5\n3956: SWAP1\n3957: PUSH1 0x0f\n3959: ADD\n3960: PUSH1 0x01\n3962: ADD\n3963: DUP1\n3964: SLOAD\n3965: PUSH1 0x01\n3967: PUSH1 0x01\n3969: PUSH1 0xa0\n3971: SHL\n3972: SUB\n3973: NOT\n3974: AND\n3975: PUSH1 0x01\n3977: PUSH1 0x01\n3979: PUSH1 0xa0\n3981: SHL\n3982: SUB\n3983: SWAP3\n3984: DUP4\n3985: AND\n3986: OR\n3987: SWAP1\n3988: SSTORE\n3989: PUSH1 0x40\n3991: DUP1\n3992: MLOAD\n3993: PUSH1 0xff\n3995: DUP6\n3996: AND\n3997: DUP2\n3998: MSTORE\n3999: PUSH1 0x0f\n4001: PUSH1 0x20\n4003: DUP3\n4004: ADD\n4005: MSTORE\n4006: DUP2\n4007: MLOAD\n4008: DUP7\n4009: DUP5\n4010: AND\n4011: SWAP4\n4012: DUP9\n4013: AND\n4014: SWAP3\n4015: PUSH1 0x00\n4017: DUP1\n4018: MLOAD\n4019: PUSH1 0x20\n4021: PUSH2 0x1feb\n4024: DUP4\n4025: CODECOPY\n4026: DUP2\n4027: MLOAD\n4028: SWAP2\n4029: MSTORE\n4030: SWAP3\n4031: DUP3\n4032: SWAP1\n4033: SUB\n4034: ADD\n4035: SWAP1\n4036: LOG3\n4037: PUSH1 0x01\n4039: PUSH1 0x01\n4041: PUSH1 0xa0\n4043: SHL\n4044: SUB\n4045: DUP4\n4046: AND\n4047: PUSH1 0x00\n4049: SWAP1\n4050: DUP2\n4051: MSTORE\n4052: PUSH1 0x05\n4054: PUSH1 0x20\n4056: SWAP1\n4057: DUP2\n4058: MSTORE\n4059: PUSH1 0x40\n4061: DUP1\n4062: DUP4\n4063: SHA3\n4064: PUSH1 0xff\n4066: DUP7\n4067: AND\n4068: DUP5\n4069: MSTORE\n4070: PUSH1 0x03\n4072: ADD\n4073: SWAP1\n4074: SWAP2\n4075: MSTORE\n4076: DUP2\n4077: SHA3\n4078: PUSH1 0x01\n4080: ADD\n4081: DUP2"
      },
      {
        "offset": 4082,
        "length": 144,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff881684526003019091529020909150859060070160010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260076020820152815184841693891692600080516020611feb833981519152928290030190a3611082858285600a6003870261044056",
        "parsedOpcodes": "4082: JUMPDEST\n4083: ADD\n4084: SLOAD\n4085: PUSH1 0x01\n4087: PUSH1 0x01\n4089: PUSH1 0xa0\n4091: SHL\n4092: SUB\n4093: AND\n4094: PUSH1 0x00\n4096: DUP2\n4097: DUP2\n4098: MSTORE\n4099: PUSH1 0x05\n4101: PUSH1 0x20\n4103: SWAP1\n4104: DUP2\n4105: MSTORE\n4106: PUSH1 0x40\n4108: DUP1\n4109: DUP4\n4110: SHA3\n4111: PUSH1 0xff\n4113: DUP9\n4114: AND\n4115: DUP5\n4116: MSTORE\n4117: PUSH1 0x03\n4119: ADD\n4120: SWAP1\n4121: SWAP2\n4122: MSTORE\n4123: SWAP1\n4124: SHA3\n4125: SWAP1\n4126: SWAP2\n4127: POP\n4128: DUP6\n4129: SWAP1\n4130: PUSH1 0x07\n4132: ADD\n4133: PUSH1 0x01\n4135: ADD\n4136: DUP1\n4137: SLOAD\n4138: PUSH1 0x01\n4140: PUSH1 0x01\n4142: PUSH1 0xa0\n4144: SHL\n4145: SUB\n4146: NOT\n4147: AND\n4148: PUSH1 0x01\n4150: PUSH1 0x01\n4152: PUSH1 0xa0\n4154: SHL\n4155: SUB\n4156: SWAP3\n4157: DUP4\n4158: AND\n4159: OR\n4160: SWAP1\n4161: SSTORE\n4162: PUSH1 0x40\n4164: DUP1\n4165: MLOAD\n4166: PUSH1 0xff\n4168: DUP7\n4169: AND\n4170: DUP2\n4171: MSTORE\n4172: PUSH1 0x07\n4174: PUSH1 0x20\n4176: DUP3\n4177: ADD\n4178: MSTORE\n4179: DUP2\n4180: MLOAD\n4181: DUP5\n4182: DUP5\n4183: AND\n4184: SWAP4\n4185: DUP10\n4186: AND\n4187: SWAP3\n4188: PUSH1 0x00\n4190: DUP1\n4191: MLOAD\n4192: PUSH1 0x20\n4194: PUSH2 0x1feb\n4197: DUP4\n4198: CODECOPY\n4199: DUP2\n4200: MLOAD\n4201: SWAP2\n4202: MSTORE\n4203: SWAP3\n4204: DUP3\n4205: SWAP1\n4206: SUB\n4207: ADD\n4208: SWAP1\n4209: LOG3\n4210: PUSH2 0x1082\n4213: DUP6\n4214: DUP3\n4215: DUP6\n4216: PUSH1 0x0a\n4218: PUSH1 0x03\n4220: DUP8\n4221: MUL\n4222: PUSH2 0x0440\n4225: JUMP"
      },
      {
        "offset": 4226,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060010181",
        "parsedOpcodes": "4226: JUMPDEST\n4227: PUSH1 0x01\n4229: PUSH1 0x01\n4231: PUSH1 0xa0\n4233: SHL\n4234: SUB\n4235: DUP2\n4236: AND\n4237: PUSH1 0x00\n4239: SWAP1\n4240: DUP2\n4241: MSTORE\n4242: PUSH1 0x05\n4244: PUSH1 0x20\n4246: SWAP1\n4247: DUP2\n4248: MSTORE\n4249: PUSH1 0x40\n4251: DUP1\n4252: DUP4\n4253: SHA3\n4254: PUSH1 0xff\n4256: DUP8\n4257: AND\n4258: DUP5\n4259: MSTORE\n4260: PUSH1 0x03\n4262: ADD\n4263: SWAP1\n4264: SWAP2\n4265: MSTORE\n4266: DUP2\n4267: SHA3\n4268: PUSH1 0x01\n4270: ADD\n4271: DUP2"
      },
      {
        "offset": 4272,
        "length": 129,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b03908116600081815260056020908152604080832060ff8a16808552600391820184529382902060040180546001600160a01b031916968d1696871790558151938452918301919091528051929450849392600080516020611feb8339815191529281900390910190a361113186828660058761044056",
        "parsedOpcodes": "4272: JUMPDEST\n4273: ADD\n4274: SLOAD\n4275: PUSH1 0x01\n4277: PUSH1 0x01\n4279: PUSH1 0xa0\n4281: SHL\n4282: SUB\n4283: SWAP1\n4284: DUP2\n4285: AND\n4286: PUSH1 0x00\n4288: DUP2\n4289: DUP2\n4290: MSTORE\n4291: PUSH1 0x05\n4293: PUSH1 0x20\n4295: SWAP1\n4296: DUP2\n4297: MSTORE\n4298: PUSH1 0x40\n4300: DUP1\n4301: DUP4\n4302: SHA3\n4303: PUSH1 0xff\n4305: DUP11\n4306: AND\n4307: DUP1\n4308: DUP6\n4309: MSTORE\n4310: PUSH1 0x03\n4312: SWAP2\n4313: DUP3\n4314: ADD\n4315: DUP5\n4316: MSTORE\n4317: SWAP4\n4318: DUP3\n4319: SWAP1\n4320: SHA3\n4321: PUSH1 0x04\n4323: ADD\n4324: DUP1\n4325: SLOAD\n4326: PUSH1 0x01\n4328: PUSH1 0x01\n4330: PUSH1 0xa0\n4332: SHL\n4333: SUB\n4334: NOT\n4335: AND\n4336: SWAP7\n4337: DUP14\n4338: AND\n4339: SWAP7\n4340: DUP8\n4341: OR\n4342: SWAP1\n4343: SSTORE\n4344: DUP2\n4345: MLOAD\n4346: SWAP4\n4347: DUP5\n4348: MSTORE\n4349: SWAP2\n4350: DUP4\n4351: ADD\n4352: SWAP2\n4353: SWAP1\n4354: SWAP2\n4355: MSTORE\n4356: DUP1\n4357: MLOAD\n4358: SWAP3\n4359: SWAP5\n4360: POP\n4361: DUP5\n4362: SWAP4\n4363: SWAP3\n4364: PUSH1 0x00\n4366: DUP1\n4367: MLOAD\n4368: PUSH1 0x20\n4370: PUSH2 0x1feb\n4373: DUP4\n4374: CODECOPY\n4375: DUP2\n4376: MLOAD\n4377: SWAP2\n4378: MSTORE\n4379: SWAP3\n4380: DUP2\n4381: SWAP1\n4382: SUB\n4383: SWAP1\n4384: SWAP2\n4385: ADD\n4386: SWAP1\n4387: LOG3\n4388: PUSH2 0x1131\n4391: DUP7\n4392: DUP3\n4393: DUP7\n4394: PUSH1 0x05\n4396: DUP8\n4397: PUSH2 0x0440\n4400: JUMP"
      },
      {
        "offset": 4401,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060010181",
        "parsedOpcodes": "4401: JUMPDEST\n4402: PUSH1 0x01\n4404: PUSH1 0x01\n4406: PUSH1 0xa0\n4408: SHL\n4409: SUB\n4410: DUP2\n4411: AND\n4412: PUSH1 0x00\n4414: SWAP1\n4415: DUP2\n4416: MSTORE\n4417: PUSH1 0x05\n4419: PUSH1 0x20\n4421: SWAP1\n4422: DUP2\n4423: MSTORE\n4424: PUSH1 0x40\n4426: DUP1\n4427: DUP4\n4428: SHA3\n4429: PUSH1 0xff\n4431: DUP9\n4432: AND\n4433: DUP5\n4434: MSTORE\n4435: PUSH1 0x03\n4437: ADD\n4438: SWAP1\n4439: SWAP2\n4440: MSTORE\n4441: DUP2\n4442: SHA3\n4443: PUSH1 0x01\n4445: ADD\n4446: DUP2"
      },
      {
        "offset": 4447,
        "length": 221,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff8a1684526003019091529020909150879060019081010180546001600160a01b0319166001600160a01b039283161790556040805160ff88168152600160208201528151848416938b1692600080516020611feb833981519152928290030190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f018054600160801b60ff60801b1990911617905550611d08905056",
        "parsedOpcodes": "4447: JUMPDEST\n4448: ADD\n4449: SLOAD\n4450: PUSH1 0x01\n4452: PUSH1 0x01\n4454: PUSH1 0xa0\n4456: SHL\n4457: SUB\n4458: AND\n4459: PUSH1 0x00\n4461: DUP2\n4462: DUP2\n4463: MSTORE\n4464: PUSH1 0x05\n4466: PUSH1 0x20\n4468: SWAP1\n4469: DUP2\n4470: MSTORE\n4471: PUSH1 0x40\n4473: DUP1\n4474: DUP4\n4475: SHA3\n4476: PUSH1 0xff\n4478: DUP11\n4479: AND\n4480: DUP5\n4481: MSTORE\n4482: PUSH1 0x03\n4484: ADD\n4485: SWAP1\n4486: SWAP2\n4487: MSTORE\n4488: SWAP1\n4489: SHA3\n4490: SWAP1\n4491: SWAP2\n4492: POP\n4493: DUP8\n4494: SWAP1\n4495: PUSH1 0x01\n4497: SWAP1\n4498: DUP2\n4499: ADD\n4500: ADD\n4501: DUP1\n4502: SLOAD\n4503: PUSH1 0x01\n4505: PUSH1 0x01\n4507: PUSH1 0xa0\n4509: SHL\n4510: SUB\n4511: NOT\n4512: AND\n4513: PUSH1 0x01\n4515: PUSH1 0x01\n4517: PUSH1 0xa0\n4519: SHL\n4520: SUB\n4521: SWAP3\n4522: DUP4\n4523: AND\n4524: OR\n4525: SWAP1\n4526: SSTORE\n4527: PUSH1 0x40\n4529: DUP1\n4530: MLOAD\n4531: PUSH1 0xff\n4533: DUP9\n4534: AND\n4535: DUP2\n4536: MSTORE\n4537: PUSH1 0x01\n4539: PUSH1 0x20\n4541: DUP3\n4542: ADD\n4543: MSTORE\n4544: DUP2\n4545: MLOAD\n4546: DUP5\n4547: DUP5\n4548: AND\n4549: SWAP4\n4550: DUP12\n4551: AND\n4552: SWAP3\n4553: PUSH1 0x00\n4555: DUP1\n4556: MLOAD\n4557: PUSH1 0x20\n4559: PUSH2 0x1feb\n4562: DUP4\n4563: CODECOPY\n4564: DUP2\n4565: MLOAD\n4566: SWAP2\n4567: MSTORE\n4568: SWAP3\n4569: DUP3\n4570: SWAP1\n4571: SUB\n4572: ADD\n4573: SWAP1\n4574: LOG3\n4575: PUSH1 0x01\n4577: PUSH1 0x01\n4579: PUSH1 0xa0\n4581: SHL\n4582: SUB\n4583: DUP8\n4584: DUP2\n4585: AND\n4586: PUSH1 0x00\n4588: SWAP1\n4589: DUP2\n4590: MSTORE\n4591: PUSH1 0x05\n4593: PUSH1 0x20\n4595: SWAP1\n4596: DUP2\n4597: MSTORE\n4598: PUSH1 0x40\n4600: DUP1\n4601: DUP4\n4602: SHA3\n4603: PUSH1 0xff\n4605: DUP11\n4606: AND\n4607: DUP5\n4608: MSTORE\n4609: PUSH1 0x03\n4611: ADD\n4612: SWAP1\n4613: SWAP2\n4614: MSTORE\n4615: SWAP1\n4616: SHA3\n4617: DUP1\n4618: SLOAD\n4619: PUSH1 0x01\n4621: PUSH1 0x01\n4623: PUSH1 0xa0\n4625: SHL\n4626: SUB\n4627: NOT\n4628: AND\n4629: SWAP3\n4630: SWAP1\n4631: SWAP2\n4632: AND\n4633: SWAP2\n4634: SWAP1\n4635: SWAP2\n4636: OR\n4637: DUP2\n4638: SSTORE\n4639: PUSH1 0x1f\n4641: ADD\n4642: DUP1\n4643: SLOAD\n4644: PUSH1 0x01\n4646: PUSH1 0x80\n4648: SHL\n4649: PUSH1 0xff\n4651: PUSH1 0x80\n4653: SHL\n4654: NOT\n4655: SWAP1\n4656: SWAP2\n4657: AND\n4658: OR\n4659: SWAP1\n4660: SSTORE\n4661: POP\n4662: PUSH2 0x1d08\n4665: SWAP1\n4666: POP\n4667: JUMP"
      },
      {
        "offset": 4668,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601801541661131e57",
        "parsedOpcodes": "4668: JUMPDEST\n4669: PUSH1 0x01\n4671: PUSH1 0x01\n4673: PUSH1 0xa0\n4675: SHL\n4676: SUB\n4677: DUP4\n4678: DUP2\n4679: AND\n4680: PUSH1 0x00\n4682: SWAP1\n4683: DUP2\n4684: MSTORE\n4685: PUSH1 0x05\n4687: PUSH1 0x20\n4689: SWAP1\n4690: DUP2\n4691: MSTORE\n4692: PUSH1 0x40\n4694: DUP1\n4695: DUP4\n4696: SHA3\n4697: PUSH1 0xff\n4699: DUP8\n4700: AND\n4701: DUP5\n4702: MSTORE\n4703: PUSH1 0x03\n4705: ADD\n4706: SWAP1\n4707: SWAP2\n4708: MSTORE\n4709: SWAP1\n4710: SHA3\n4711: PUSH1 0x18\n4713: ADD\n4714: SLOAD\n4715: AND\n4716: PUSH2 0x131e\n4719: JUMPI"
      },
      {
        "offset": 4720,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160090180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260176020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff861684526003019091528120600190810190610ff256",
        "parsedOpcodes": "4720: PUSH1 0x01\n4722: PUSH1 0x01\n4724: PUSH1 0xa0\n4726: SHL\n4727: SUB\n4728: DUP4\n4729: AND\n4730: PUSH1 0x00\n4732: SWAP1\n4733: DUP2\n4734: MSTORE\n4735: PUSH1 0x05\n4737: PUSH1 0x20\n4739: SWAP1\n4740: DUP2\n4741: MSTORE\n4742: PUSH1 0x40\n4744: DUP1\n4745: DUP4\n4746: SHA3\n4747: PUSH1 0xff\n4749: DUP7\n4750: AND\n4751: DUP5\n4752: MSTORE\n4753: PUSH1 0x03\n4755: ADD\n4756: SWAP1\n4757: SWAP2\n4758: MSTORE\n4759: SWAP1\n4760: SHA3\n4761: DUP5\n4762: SWAP1\n4763: PUSH1 0x0f\n4765: ADD\n4766: PUSH1 0x09\n4768: ADD\n4769: DUP1\n4770: SLOAD\n4771: PUSH1 0x01\n4773: PUSH1 0x01\n4775: PUSH1 0xa0\n4777: SHL\n4778: SUB\n4779: NOT\n4780: AND\n4781: PUSH1 0x01\n4783: PUSH1 0x01\n4785: PUSH1 0xa0\n4787: SHL\n4788: SUB\n4789: SWAP3\n4790: DUP4\n4791: AND\n4792: OR\n4793: SWAP1\n4794: SSTORE\n4795: PUSH1 0x40\n4797: DUP1\n4798: MLOAD\n4799: PUSH1 0xff\n4801: DUP6\n4802: AND\n4803: DUP2\n4804: MSTORE\n4805: PUSH1 0x17\n4807: PUSH1 0x20\n4809: DUP3\n4810: ADD\n4811: MSTORE\n4812: DUP2\n4813: MLOAD\n4814: DUP7\n4815: DUP5\n4816: AND\n4817: SWAP4\n4818: DUP9\n4819: AND\n4820: SWAP3\n4821: PUSH1 0x00\n4823: DUP1\n4824: MLOAD\n4825: PUSH1 0x20\n4827: PUSH2 0x1feb\n4830: DUP4\n4831: CODECOPY\n4832: DUP2\n4833: MLOAD\n4834: SWAP2\n4835: MSTORE\n4836: SWAP3\n4837: DUP3\n4838: SWAP1\n4839: SUB\n4840: ADD\n4841: SWAP1\n4842: LOG3\n4843: PUSH1 0x01\n4845: PUSH1 0x01\n4847: PUSH1 0xa0\n4849: SHL\n4850: SUB\n4851: DUP4\n4852: AND\n4853: PUSH1 0x00\n4855: SWAP1\n4856: DUP2\n4857: MSTORE\n4858: PUSH1 0x05\n4860: PUSH1 0x20\n4862: SWAP1\n4863: DUP2\n4864: MSTORE\n4865: PUSH1 0x40\n4867: DUP1\n4868: DUP4\n4869: SHA3\n4870: PUSH1 0xff\n4872: DUP7\n4873: AND\n4874: DUP5\n4875: MSTORE\n4876: PUSH1 0x03\n4878: ADD\n4879: SWAP1\n4880: SWAP2\n4881: MSTORE\n4882: DUP2\n4883: SHA3\n4884: PUSH1 0x01\n4886: SWAP1\n4887: DUP2\n4888: ADD\n4889: SWAP1\n4890: PUSH2 0x0ff2\n4893: JUMP"
      },
      {
        "offset": 4894,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601201541661156357",
        "parsedOpcodes": "4894: JUMPDEST\n4895: PUSH1 0x01\n4897: PUSH1 0x01\n4899: PUSH1 0xa0\n4901: SHL\n4902: SUB\n4903: DUP4\n4904: DUP2\n4905: AND\n4906: PUSH1 0x00\n4908: SWAP1\n4909: DUP2\n4910: MSTORE\n4911: PUSH1 0x05\n4913: PUSH1 0x20\n4915: SWAP1\n4916: DUP2\n4917: MSTORE\n4918: PUSH1 0x40\n4920: DUP1\n4921: DUP4\n4922: SHA3\n4923: PUSH1 0xff\n4925: DUP8\n4926: AND\n4927: DUP5\n4928: MSTORE\n4929: PUSH1 0x03\n4931: ADD\n4932: SWAP1\n4933: SWAP2\n4934: MSTORE\n4935: SWAP1\n4936: SHA3\n4937: PUSH1 0x12\n4939: ADD\n4940: SLOAD\n4941: AND\n4942: PUSH2 0x1563\n4945: JUMPI"
      },
      {
        "offset": 4946,
        "length": 157,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b03838116600081815260056020908152604080832060ff8816808552600390910183529281902060120180546001600160a01b031916958a16958617905580519283526011918301919091528051929392600080516020611feb8339815191529281900390910190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "4946: PUSH1 0x01\n4948: PUSH1 0x01\n4950: PUSH1 0xa0\n4952: SHL\n4953: SUB\n4954: DUP4\n4955: DUP2\n4956: AND\n4957: PUSH1 0x00\n4959: DUP2\n4960: DUP2\n4961: MSTORE\n4962: PUSH1 0x05\n4964: PUSH1 0x20\n4966: SWAP1\n4967: DUP2\n4968: MSTORE\n4969: PUSH1 0x40\n4971: DUP1\n4972: DUP4\n4973: SHA3\n4974: PUSH1 0xff\n4976: DUP9\n4977: AND\n4978: DUP1\n4979: DUP6\n4980: MSTORE\n4981: PUSH1 0x03\n4983: SWAP1\n4984: SWAP2\n4985: ADD\n4986: DUP4\n4987: MSTORE\n4988: SWAP3\n4989: DUP2\n4990: SWAP1\n4991: SHA3\n4992: PUSH1 0x12\n4994: ADD\n4995: DUP1\n4996: SLOAD\n4997: PUSH1 0x01\n4999: PUSH1 0x01\n5001: PUSH1 0xa0\n5003: SHL\n5004: SUB\n5005: NOT\n5006: AND\n5007: SWAP6\n5008: DUP11\n5009: AND\n5010: SWAP6\n5011: DUP7\n5012: OR\n5013: SWAP1\n5014: SSTORE\n5015: DUP1\n5016: MLOAD\n5017: SWAP3\n5018: DUP4\n5019: MSTORE\n5020: PUSH1 0x11\n5022: SWAP2\n5023: DUP4\n5024: ADD\n5025: SWAP2\n5026: SWAP1\n5027: SWAP2\n5028: MSTORE\n5029: DUP1\n5030: MLOAD\n5031: SWAP3\n5032: SWAP4\n5033: SWAP3\n5034: PUSH1 0x00\n5036: DUP1\n5037: MLOAD\n5038: PUSH1 0x20\n5040: PUSH2 0x1feb\n5043: DUP4\n5044: CODECOPY\n5045: DUP2\n5046: MLOAD\n5047: SWAP2\n5048: MSTORE\n5049: SWAP3\n5050: DUP2\n5051: SWAP1\n5052: SUB\n5053: SWAP1\n5054: SWAP2\n5055: ADD\n5056: SWAP1\n5057: LOG3\n5058: PUSH1 0x01\n5060: PUSH1 0x01\n5062: PUSH1 0xa0\n5064: SHL\n5065: SUB\n5066: DUP4\n5067: AND\n5068: PUSH1 0x00\n5070: SWAP1\n5071: DUP2\n5072: MSTORE\n5073: PUSH1 0x05\n5075: PUSH1 0x20\n5077: SWAP1\n5078: DUP2\n5079: MSTORE\n5080: PUSH1 0x40\n5082: DUP1\n5083: DUP4\n5084: SHA3\n5085: PUSH1 0xff\n5087: DUP7\n5088: AND\n5089: DUP5\n5090: MSTORE\n5091: PUSH1 0x03\n5093: ADD\n5094: SWAP1\n5095: SWAP2\n5096: MSTORE\n5097: DUP2\n5098: SHA3\n5099: PUSH1 0x01\n5101: ADD\n5102: DUP2"
      },
      {
        "offset": 5103,
        "length": 145,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020908152604080832060ff88168452600390810190925290912091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff8616815260096020820152815184841693891692600080516020611feb833981519152928290030190a3611480858285600a6003870261044056",
        "parsedOpcodes": "5103: JUMPDEST\n5104: ADD\n5105: SLOAD\n5106: PUSH1 0x01\n5108: PUSH1 0x01\n5110: PUSH1 0xa0\n5112: SHL\n5113: SUB\n5114: AND\n5115: PUSH1 0x00\n5117: DUP2\n5118: DUP2\n5119: MSTORE\n5120: PUSH1 0x05\n5122: PUSH1 0x20\n5124: SWAP1\n5125: DUP2\n5126: MSTORE\n5127: PUSH1 0x40\n5129: DUP1\n5130: DUP4\n5131: SHA3\n5132: PUSH1 0xff\n5134: DUP9\n5135: AND\n5136: DUP5\n5137: MSTORE\n5138: PUSH1 0x03\n5140: SWAP1\n5141: DUP2\n5142: ADD\n5143: SWAP1\n5144: SWAP3\n5145: MSTORE\n5146: SWAP1\n5147: SWAP2\n5148: SHA3\n5149: SWAP2\n5150: SWAP3\n5151: POP\n5152: DUP7\n5153: SWAP2\n5154: PUSH1 0x07\n5156: ADD\n5157: ADD\n5158: DUP1\n5159: SLOAD\n5160: PUSH1 0x01\n5162: PUSH1 0x01\n5164: PUSH1 0xa0\n5166: SHL\n5167: SUB\n5168: NOT\n5169: AND\n5170: PUSH1 0x01\n5172: PUSH1 0x01\n5174: PUSH1 0xa0\n5176: SHL\n5177: SUB\n5178: SWAP3\n5179: DUP4\n5180: AND\n5181: OR\n5182: SWAP1\n5183: SSTORE\n5184: PUSH1 0x40\n5186: DUP1\n5187: MLOAD\n5188: PUSH1 0xff\n5190: DUP7\n5191: AND\n5192: DUP2\n5193: MSTORE\n5194: PUSH1 0x09\n5196: PUSH1 0x20\n5198: DUP3\n5199: ADD\n5200: MSTORE\n5201: DUP2\n5202: MLOAD\n5203: DUP5\n5204: DUP5\n5205: AND\n5206: SWAP4\n5207: DUP10\n5208: AND\n5209: SWAP3\n5210: PUSH1 0x00\n5212: DUP1\n5213: MLOAD\n5214: PUSH1 0x20\n5216: PUSH2 0x1feb\n5219: DUP4\n5220: CODECOPY\n5221: DUP2\n5222: MLOAD\n5223: SWAP2\n5224: MSTORE\n5225: SWAP3\n5226: DUP3\n5227: SWAP1\n5228: SUB\n5229: ADD\n5230: SWAP1\n5231: LOG3\n5232: PUSH2 0x1480\n5235: DUP6\n5236: DUP3\n5237: DUP6\n5238: PUSH1 0x0a\n5240: PUSH1 0x03\n5242: DUP8\n5243: MUL\n5244: PUSH2 0x0440\n5247: JUMP"
      },
      {
        "offset": 5248,
        "length": 46,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff87168452600301909152812060010181",
        "parsedOpcodes": "5248: JUMPDEST\n5249: PUSH1 0x01\n5251: PUSH1 0x01\n5253: PUSH1 0xa0\n5255: SHL\n5256: SUB\n5257: DUP2\n5258: AND\n5259: PUSH1 0x00\n5261: SWAP1\n5262: DUP2\n5263: MSTORE\n5264: PUSH1 0x05\n5266: PUSH1 0x20\n5268: SWAP1\n5269: DUP2\n5270: MSTORE\n5271: PUSH1 0x40\n5273: DUP1\n5274: DUP4\n5275: SHA3\n5276: PUSH1 0xff\n5278: DUP8\n5279: AND\n5280: DUP5\n5281: MSTORE\n5282: PUSH1 0x03\n5284: ADD\n5285: SWAP1\n5286: SWAP2\n5287: MSTORE\n5288: DUP2\n5289: SHA3\n5290: PUSH1 0x01\n5292: ADD\n5293: DUP2"
      },
      {
        "offset": 5294,
        "length": 129,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b03908116600081815260056020818152604080842060ff8b16808652600390910183529381902060060180546001600160a01b031916968d1696871790558051938452908301919091528051929450849392600080516020611feb8339815191529281900390910190a361152f86828660058761044056",
        "parsedOpcodes": "5294: JUMPDEST\n5295: ADD\n5296: SLOAD\n5297: PUSH1 0x01\n5299: PUSH1 0x01\n5301: PUSH1 0xa0\n5303: SHL\n5304: SUB\n5305: SWAP1\n5306: DUP2\n5307: AND\n5308: PUSH1 0x00\n5310: DUP2\n5311: DUP2\n5312: MSTORE\n5313: PUSH1 0x05\n5315: PUSH1 0x20\n5317: DUP2\n5318: DUP2\n5319: MSTORE\n5320: PUSH1 0x40\n5322: DUP1\n5323: DUP5\n5324: SHA3\n5325: PUSH1 0xff\n5327: DUP12\n5328: AND\n5329: DUP1\n5330: DUP7\n5331: MSTORE\n5332: PUSH1 0x03\n5334: SWAP1\n5335: SWAP2\n5336: ADD\n5337: DUP4\n5338: MSTORE\n5339: SWAP4\n5340: DUP2\n5341: SWAP1\n5342: SHA3\n5343: PUSH1 0x06\n5345: ADD\n5346: DUP1\n5347: SLOAD\n5348: PUSH1 0x01\n5350: PUSH1 0x01\n5352: PUSH1 0xa0\n5354: SHL\n5355: SUB\n5356: NOT\n5357: AND\n5358: SWAP7\n5359: DUP14\n5360: AND\n5361: SWAP7\n5362: DUP8\n5363: OR\n5364: SWAP1\n5365: SSTORE\n5366: DUP1\n5367: MLOAD\n5368: SWAP4\n5369: DUP5\n5370: MSTORE\n5371: SWAP1\n5372: DUP4\n5373: ADD\n5374: SWAP2\n5375: SWAP1\n5376: SWAP2\n5377: MSTORE\n5378: DUP1\n5379: MLOAD\n5380: SWAP3\n5381: SWAP5\n5382: POP\n5383: DUP5\n5384: SWAP4\n5385: SWAP3\n5386: PUSH1 0x00\n5388: DUP1\n5389: MLOAD\n5390: PUSH1 0x20\n5392: PUSH2 0x1feb\n5395: DUP4\n5396: CODECOPY\n5397: DUP2\n5398: MLOAD\n5399: SWAP2\n5400: MSTORE\n5401: SWAP3\n5402: DUP2\n5403: SWAP1\n5404: SUB\n5405: SWAP1\n5406: SWAP2\n5407: ADD\n5408: SWAP1\n5409: LOG3\n5410: PUSH2 0x152f\n5413: DUP7\n5414: DUP3\n5415: DUP7\n5416: PUSH1 0x05\n5418: DUP8\n5419: PUSH2 0x0440\n5422: JUMP"
      },
      {
        "offset": 5423,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff88168452600301909152812060019081019061115f56",
        "parsedOpcodes": "5423: JUMPDEST\n5424: PUSH1 0x01\n5426: PUSH1 0x01\n5428: PUSH1 0xa0\n5430: SHL\n5431: SUB\n5432: DUP2\n5433: AND\n5434: PUSH1 0x00\n5436: SWAP1\n5437: DUP2\n5438: MSTORE\n5439: PUSH1 0x05\n5441: PUSH1 0x20\n5443: SWAP1\n5444: DUP2\n5445: MSTORE\n5446: PUSH1 0x40\n5448: DUP1\n5449: DUP4\n5450: SHA3\n5451: PUSH1 0xff\n5453: DUP9\n5454: AND\n5455: DUP5\n5456: MSTORE\n5457: PUSH1 0x03\n5459: ADD\n5460: SWAP1\n5461: SWAP2\n5462: MSTORE\n5463: DUP2\n5464: SHA3\n5465: PUSH1 0x01\n5467: SWAP1\n5468: DUP2\n5469: ADD\n5470: SWAP1\n5471: PUSH2 0x115f\n5474: JUMP"
      },
      {
        "offset": 5475,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601a01541661164557",
        "parsedOpcodes": "5475: JUMPDEST\n5476: PUSH1 0x01\n5478: PUSH1 0x01\n5480: PUSH1 0xa0\n5482: SHL\n5483: SUB\n5484: DUP4\n5485: DUP2\n5486: AND\n5487: PUSH1 0x00\n5489: SWAP1\n5490: DUP2\n5491: MSTORE\n5492: PUSH1 0x05\n5494: PUSH1 0x20\n5496: SWAP1\n5497: DUP2\n5498: MSTORE\n5499: PUSH1 0x40\n5501: DUP1\n5502: DUP4\n5503: SHA3\n5504: PUSH1 0xff\n5506: DUP8\n5507: AND\n5508: DUP5\n5509: MSTORE\n5510: PUSH1 0x03\n5512: ADD\n5513: SWAP1\n5514: SWAP2\n5515: MSTORE\n5516: SWAP1\n5517: SHA3\n5518: PUSH1 0x1a\n5520: ADD\n5521: SLOAD\n5522: AND\n5523: PUSH2 0x1645\n5526: JUMPI"
      },
      {
        "offset": 5527,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600b0180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260196020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff8616845260030190915281206001908101906113ef56",
        "parsedOpcodes": "5527: PUSH1 0x01\n5529: PUSH1 0x01\n5531: PUSH1 0xa0\n5533: SHL\n5534: SUB\n5535: DUP4\n5536: AND\n5537: PUSH1 0x00\n5539: SWAP1\n5540: DUP2\n5541: MSTORE\n5542: PUSH1 0x05\n5544: PUSH1 0x20\n5546: SWAP1\n5547: DUP2\n5548: MSTORE\n5549: PUSH1 0x40\n5551: DUP1\n5552: DUP4\n5553: SHA3\n5554: PUSH1 0xff\n5556: DUP7\n5557: AND\n5558: DUP5\n5559: MSTORE\n5560: PUSH1 0x03\n5562: ADD\n5563: SWAP1\n5564: SWAP2\n5565: MSTORE\n5566: SWAP1\n5567: SHA3\n5568: DUP5\n5569: SWAP1\n5570: PUSH1 0x0f\n5572: ADD\n5573: PUSH1 0x0b\n5575: ADD\n5576: DUP1\n5577: SLOAD\n5578: PUSH1 0x01\n5580: PUSH1 0x01\n5582: PUSH1 0xa0\n5584: SHL\n5585: SUB\n5586: NOT\n5587: AND\n5588: PUSH1 0x01\n5590: PUSH1 0x01\n5592: PUSH1 0xa0\n5594: SHL\n5595: SUB\n5596: SWAP3\n5597: DUP4\n5598: AND\n5599: OR\n5600: SWAP1\n5601: SSTORE\n5602: PUSH1 0x40\n5604: DUP1\n5605: MLOAD\n5606: PUSH1 0xff\n5608: DUP6\n5609: AND\n5610: DUP2\n5611: MSTORE\n5612: PUSH1 0x19\n5614: PUSH1 0x20\n5616: DUP3\n5617: ADD\n5618: MSTORE\n5619: DUP2\n5620: MLOAD\n5621: DUP7\n5622: DUP5\n5623: AND\n5624: SWAP4\n5625: DUP9\n5626: AND\n5627: SWAP3\n5628: PUSH1 0x00\n5630: DUP1\n5631: MLOAD\n5632: PUSH1 0x20\n5634: PUSH2 0x1feb\n5637: DUP4\n5638: CODECOPY\n5639: DUP2\n5640: MLOAD\n5641: SWAP2\n5642: MSTORE\n5643: SWAP3\n5644: DUP3\n5645: SWAP1\n5646: SUB\n5647: ADD\n5648: SWAP1\n5649: LOG3\n5650: PUSH1 0x01\n5652: PUSH1 0x01\n5654: PUSH1 0xa0\n5656: SHL\n5657: SUB\n5658: DUP4\n5659: AND\n5660: PUSH1 0x00\n5662: SWAP1\n5663: DUP2\n5664: MSTORE\n5665: PUSH1 0x05\n5667: PUSH1 0x20\n5669: SWAP1\n5670: DUP2\n5671: MSTORE\n5672: PUSH1 0x40\n5674: DUP1\n5675: DUP4\n5676: SHA3\n5677: PUSH1 0xff\n5679: DUP7\n5680: AND\n5681: DUP5\n5682: MSTORE\n5683: PUSH1 0x03\n5685: ADD\n5686: SWAP1\n5687: SWAP2\n5688: MSTORE\n5689: DUP2\n5690: SHA3\n5691: PUSH1 0x01\n5693: SWAP1\n5694: DUP2\n5695: ADD\n5696: SWAP1\n5697: PUSH2 0x13ef\n5700: JUMP"
      },
      {
        "offset": 5701,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff87168452600301909152902060140154166117d957",
        "parsedOpcodes": "5701: JUMPDEST\n5702: PUSH1 0x01\n5704: PUSH1 0x01\n5706: PUSH1 0xa0\n5708: SHL\n5709: SUB\n5710: DUP4\n5711: DUP2\n5712: AND\n5713: PUSH1 0x00\n5715: SWAP1\n5716: DUP2\n5717: MSTORE\n5718: PUSH1 0x05\n5720: PUSH1 0x20\n5722: SWAP1\n5723: DUP2\n5724: MSTORE\n5725: PUSH1 0x40\n5727: DUP1\n5728: DUP4\n5729: SHA3\n5730: PUSH1 0xff\n5732: DUP8\n5733: AND\n5734: DUP5\n5735: MSTORE\n5736: PUSH1 0x03\n5738: ADD\n5739: SWAP1\n5740: SWAP2\n5741: MSTORE\n5742: SWAP1\n5743: SHA3\n5744: PUSH1 0x14\n5746: ADD\n5747: SLOAD\n5748: AND\n5749: PUSH2 0x17d9\n5752: JUMPI"
      },
      {
        "offset": 5753,
        "length": 157,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b03838116600081815260056020908152604080832060ff8816808552600390910183529281902060140180546001600160a01b031916958a16958617905580519283526013918301919091528051929392600080516020611feb8339815191529281900390910190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060010181",
        "parsedOpcodes": "5753: PUSH1 0x01\n5755: PUSH1 0x01\n5757: PUSH1 0xa0\n5759: SHL\n5760: SUB\n5761: DUP4\n5762: DUP2\n5763: AND\n5764: PUSH1 0x00\n5766: DUP2\n5767: DUP2\n5768: MSTORE\n5769: PUSH1 0x05\n5771: PUSH1 0x20\n5773: SWAP1\n5774: DUP2\n5775: MSTORE\n5776: PUSH1 0x40\n5778: DUP1\n5779: DUP4\n5780: SHA3\n5781: PUSH1 0xff\n5783: DUP9\n5784: AND\n5785: DUP1\n5786: DUP6\n5787: MSTORE\n5788: PUSH1 0x03\n5790: SWAP1\n5791: SWAP2\n5792: ADD\n5793: DUP4\n5794: MSTORE\n5795: SWAP3\n5796: DUP2\n5797: SWAP1\n5798: SHA3\n5799: PUSH1 0x14\n5801: ADD\n5802: DUP1\n5803: SLOAD\n5804: PUSH1 0x01\n5806: PUSH1 0x01\n5808: PUSH1 0xa0\n5810: SHL\n5811: SUB\n5812: NOT\n5813: AND\n5814: SWAP6\n5815: DUP11\n5816: AND\n5817: SWAP6\n5818: DUP7\n5819: OR\n5820: SWAP1\n5821: SSTORE\n5822: DUP1\n5823: MLOAD\n5824: SWAP3\n5825: DUP4\n5826: MSTORE\n5827: PUSH1 0x13\n5829: SWAP2\n5830: DUP4\n5831: ADD\n5832: SWAP2\n5833: SWAP1\n5834: SWAP2\n5835: MSTORE\n5836: DUP1\n5837: MLOAD\n5838: SWAP3\n5839: SWAP4\n5840: SWAP3\n5841: PUSH1 0x00\n5843: DUP1\n5844: MLOAD\n5845: PUSH1 0x20\n5847: PUSH2 0x1feb\n5850: DUP4\n5851: CODECOPY\n5852: DUP2\n5853: MLOAD\n5854: SWAP2\n5855: MSTORE\n5856: SWAP3\n5857: DUP2\n5858: SWAP1\n5859: SUB\n5860: SWAP1\n5861: SWAP2\n5862: ADD\n5863: SWAP1\n5864: LOG3\n5865: PUSH1 0x01\n5867: PUSH1 0x01\n5869: PUSH1 0xa0\n5871: SHL\n5872: SUB\n5873: DUP4\n5874: AND\n5875: PUSH1 0x00\n5877: SWAP1\n5878: DUP2\n5879: MSTORE\n5880: PUSH1 0x05\n5882: PUSH1 0x20\n5884: SWAP1\n5885: DUP2\n5886: MSTORE\n5887: PUSH1 0x40\n5889: DUP1\n5890: DUP4\n5891: SHA3\n5892: PUSH1 0xff\n5894: DUP7\n5895: AND\n5896: DUP5\n5897: MSTORE\n5898: PUSH1 0x03\n5900: ADD\n5901: SWAP1\n5902: SWAP2\n5903: MSTORE\n5904: DUP2\n5905: SHA3\n5906: PUSH1 0x01\n5908: ADD\n5909: DUP2"
      },
      {
        "offset": 5910,
        "length": 143,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b01546001600160a01b0316600081815260056020818152604080842060ff8916855260030190915290912091925086916007010180546001600160a01b0319166001600160a01b039283161790556040805160ff86168152600b6020820152815184841693891692600080516020611feb833981519152928290030190a36117a5858285600a6003870261044056",
        "parsedOpcodes": "5910: JUMPDEST\n5911: ADD\n5912: SLOAD\n5913: PUSH1 0x01\n5915: PUSH1 0x01\n5917: PUSH1 0xa0\n5919: SHL\n5920: SUB\n5921: AND\n5922: PUSH1 0x00\n5924: DUP2\n5925: DUP2\n5926: MSTORE\n5927: PUSH1 0x05\n5929: PUSH1 0x20\n5931: DUP2\n5932: DUP2\n5933: MSTORE\n5934: PUSH1 0x40\n5936: DUP1\n5937: DUP5\n5938: SHA3\n5939: PUSH1 0xff\n5941: DUP10\n5942: AND\n5943: DUP6\n5944: MSTORE\n5945: PUSH1 0x03\n5947: ADD\n5948: SWAP1\n5949: SWAP2\n5950: MSTORE\n5951: SWAP1\n5952: SWAP2\n5953: SHA3\n5954: SWAP2\n5955: SWAP3\n5956: POP\n5957: DUP7\n5958: SWAP2\n5959: PUSH1 0x07\n5961: ADD\n5962: ADD\n5963: DUP1\n5964: SLOAD\n5965: PUSH1 0x01\n5967: PUSH1 0x01\n5969: PUSH1 0xa0\n5971: SHL\n5972: SUB\n5973: NOT\n5974: AND\n5975: PUSH1 0x01\n5977: PUSH1 0x01\n5979: PUSH1 0xa0\n5981: SHL\n5982: SUB\n5983: SWAP3\n5984: DUP4\n5985: AND\n5986: OR\n5987: SWAP1\n5988: SSTORE\n5989: PUSH1 0x40\n5991: DUP1\n5992: MLOAD\n5993: PUSH1 0xff\n5995: DUP7\n5996: AND\n5997: DUP2\n5998: MSTORE\n5999: PUSH1 0x0b\n6001: PUSH1 0x20\n6003: DUP3\n6004: ADD\n6005: MSTORE\n6006: DUP2\n6007: MLOAD\n6008: DUP5\n6009: DUP5\n6010: AND\n6011: SWAP4\n6012: DUP10\n6013: AND\n6014: SWAP3\n6015: PUSH1 0x00\n6017: DUP1\n6018: MLOAD\n6019: PUSH1 0x20\n6021: PUSH2 0x1feb\n6024: DUP4\n6025: CODECOPY\n6026: DUP2\n6027: MLOAD\n6028: SWAP2\n6029: MSTORE\n6030: SWAP3\n6031: DUP3\n6032: SWAP1\n6033: SUB\n6034: ADD\n6035: SWAP1\n6036: LOG3\n6037: PUSH2 0x17a5\n6040: DUP6\n6041: DUP3\n6042: DUP6\n6043: PUSH1 0x0a\n6045: PUSH1 0x03\n6047: DUP8\n6048: MUL\n6049: PUSH2 0x0440\n6052: JUMP"
      },
      {
        "offset": 6053,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff8716845260030190915281206001908101906110b056",
        "parsedOpcodes": "6053: JUMPDEST\n6054: PUSH1 0x01\n6056: PUSH1 0x01\n6058: PUSH1 0xa0\n6060: SHL\n6061: SUB\n6062: DUP2\n6063: AND\n6064: PUSH1 0x00\n6066: SWAP1\n6067: DUP2\n6068: MSTORE\n6069: PUSH1 0x05\n6071: PUSH1 0x20\n6073: SWAP1\n6074: DUP2\n6075: MSTORE\n6076: PUSH1 0x40\n6078: DUP1\n6079: DUP4\n6080: SHA3\n6081: PUSH1 0xff\n6083: DUP8\n6084: AND\n6085: DUP5\n6086: MSTORE\n6087: PUSH1 0x03\n6089: ADD\n6090: SWAP1\n6091: SWAP2\n6092: MSTORE\n6093: DUP2\n6094: SHA3\n6095: PUSH1 0x01\n6097: SWAP1\n6098: DUP2\n6099: ADD\n6100: SWAP1\n6101: PUSH2 0x10b0\n6104: JUMP"
      },
      {
        "offset": 6105,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601c0154166118bb57",
        "parsedOpcodes": "6105: JUMPDEST\n6106: PUSH1 0x01\n6108: PUSH1 0x01\n6110: PUSH1 0xa0\n6112: SHL\n6113: SUB\n6114: DUP4\n6115: DUP2\n6116: AND\n6117: PUSH1 0x00\n6119: SWAP1\n6120: DUP2\n6121: MSTORE\n6122: PUSH1 0x05\n6124: PUSH1 0x20\n6126: SWAP1\n6127: DUP2\n6128: MSTORE\n6129: PUSH1 0x40\n6131: DUP1\n6132: DUP4\n6133: SHA3\n6134: PUSH1 0xff\n6136: DUP8\n6137: AND\n6138: DUP5\n6139: MSTORE\n6140: PUSH1 0x03\n6142: ADD\n6143: SWAP1\n6144: SWAP2\n6145: MSTORE\n6146: SWAP1\n6147: SHA3\n6148: PUSH1 0x1c\n6150: ADD\n6151: SLOAD\n6152: AND\n6153: PUSH2 0x18bb\n6156: JUMPI"
      },
      {
        "offset": 6157,
        "length": 174,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f01600d0180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601b6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b038316600090815260056020908152604080832060ff86168452600301909152812060019081019061171656",
        "parsedOpcodes": "6157: PUSH1 0x01\n6159: PUSH1 0x01\n6161: PUSH1 0xa0\n6163: SHL\n6164: SUB\n6165: DUP4\n6166: AND\n6167: PUSH1 0x00\n6169: SWAP1\n6170: DUP2\n6171: MSTORE\n6172: PUSH1 0x05\n6174: PUSH1 0x20\n6176: SWAP1\n6177: DUP2\n6178: MSTORE\n6179: PUSH1 0x40\n6181: DUP1\n6182: DUP4\n6183: SHA3\n6184: PUSH1 0xff\n6186: DUP7\n6187: AND\n6188: DUP5\n6189: MSTORE\n6190: PUSH1 0x03\n6192: ADD\n6193: SWAP1\n6194: SWAP2\n6195: MSTORE\n6196: SWAP1\n6197: SHA3\n6198: DUP5\n6199: SWAP1\n6200: PUSH1 0x0f\n6202: ADD\n6203: PUSH1 0x0d\n6205: ADD\n6206: DUP1\n6207: SLOAD\n6208: PUSH1 0x01\n6210: PUSH1 0x01\n6212: PUSH1 0xa0\n6214: SHL\n6215: SUB\n6216: NOT\n6217: AND\n6218: PUSH1 0x01\n6220: PUSH1 0x01\n6222: PUSH1 0xa0\n6224: SHL\n6225: SUB\n6226: SWAP3\n6227: DUP4\n6228: AND\n6229: OR\n6230: SWAP1\n6231: SSTORE\n6232: PUSH1 0x40\n6234: DUP1\n6235: MLOAD\n6236: PUSH1 0xff\n6238: DUP6\n6239: AND\n6240: DUP2\n6241: MSTORE\n6242: PUSH1 0x1b\n6244: PUSH1 0x20\n6246: DUP3\n6247: ADD\n6248: MSTORE\n6249: DUP2\n6250: MLOAD\n6251: DUP7\n6252: DUP5\n6253: AND\n6254: SWAP4\n6255: DUP9\n6256: AND\n6257: SWAP3\n6258: PUSH1 0x00\n6260: DUP1\n6261: MLOAD\n6262: PUSH1 0x20\n6264: PUSH2 0x1feb\n6267: DUP4\n6268: CODECOPY\n6269: DUP2\n6270: MLOAD\n6271: SWAP2\n6272: MSTORE\n6273: SWAP3\n6274: DUP3\n6275: SWAP1\n6276: SUB\n6277: ADD\n6278: SWAP1\n6279: LOG3\n6280: PUSH1 0x01\n6282: PUSH1 0x01\n6284: PUSH1 0xa0\n6286: SHL\n6287: SUB\n6288: DUP4\n6289: AND\n6290: PUSH1 0x00\n6292: SWAP1\n6293: DUP2\n6294: MSTORE\n6295: PUSH1 0x05\n6297: PUSH1 0x20\n6299: SWAP1\n6300: DUP2\n6301: MSTORE\n6302: PUSH1 0x40\n6304: DUP1\n6305: DUP4\n6306: SHA3\n6307: PUSH1 0xff\n6309: DUP7\n6310: AND\n6311: DUP5\n6312: MSTORE\n6313: PUSH1 0x03\n6315: ADD\n6316: SWAP1\n6317: SWAP2\n6318: MSTORE\n6319: DUP2\n6320: SHA3\n6321: PUSH1 0x01\n6323: SWAP1\n6324: DUP2\n6325: ADD\n6326: SWAP1\n6327: PUSH2 0x1716\n6330: JUMP"
      },
      {
        "offset": 6331,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff8716845260030190915290206016015416611a3c57",
        "parsedOpcodes": "6331: JUMPDEST\n6332: PUSH1 0x01\n6334: PUSH1 0x01\n6336: PUSH1 0xa0\n6338: SHL\n6339: SUB\n6340: DUP4\n6341: DUP2\n6342: AND\n6343: PUSH1 0x00\n6345: SWAP1\n6346: DUP2\n6347: MSTORE\n6348: PUSH1 0x05\n6350: PUSH1 0x20\n6352: SWAP1\n6353: DUP2\n6354: MSTORE\n6355: PUSH1 0x40\n6357: DUP1\n6358: DUP4\n6359: SHA3\n6360: PUSH1 0xff\n6362: DUP8\n6363: AND\n6364: DUP5\n6365: MSTORE\n6366: PUSH1 0x03\n6368: ADD\n6369: SWAP1\n6370: SWAP2\n6371: MSTORE\n6372: SWAP1\n6373: SHA3\n6374: PUSH1 0x16\n6376: ADD\n6377: SLOAD\n6378: AND\n6379: PUSH2 0x1a3c\n6382: JUMPI"
      },
      {
        "offset": 6383,
        "length": 281,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f0160070180546001600160a01b0319166001600160a01b039283161790556040805160ff8516815260156020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b03838116600090815260056020818152604080842060ff881680865260039182018452828620600101548716808752948452828620818752909101835293819020600e0180546001600160a01b031916958a1695861790558051938452600d918401919091528051919384939092600080516020611feb833981519152929181900390910190a3611a08858285600a6003870261044056",
        "parsedOpcodes": "6383: PUSH1 0x01\n6385: PUSH1 0x01\n6387: PUSH1 0xa0\n6389: SHL\n6390: SUB\n6391: DUP4\n6392: AND\n6393: PUSH1 0x00\n6395: SWAP1\n6396: DUP2\n6397: MSTORE\n6398: PUSH1 0x05\n6400: PUSH1 0x20\n6402: SWAP1\n6403: DUP2\n6404: MSTORE\n6405: PUSH1 0x40\n6407: DUP1\n6408: DUP4\n6409: SHA3\n6410: PUSH1 0xff\n6412: DUP7\n6413: AND\n6414: DUP5\n6415: MSTORE\n6416: PUSH1 0x03\n6418: ADD\n6419: SWAP1\n6420: SWAP2\n6421: MSTORE\n6422: SWAP1\n6423: SHA3\n6424: DUP5\n6425: SWAP1\n6426: PUSH1 0x0f\n6428: ADD\n6429: PUSH1 0x07\n6431: ADD\n6432: DUP1\n6433: SLOAD\n6434: PUSH1 0x01\n6436: PUSH1 0x01\n6438: PUSH1 0xa0\n6440: SHL\n6441: SUB\n6442: NOT\n6443: AND\n6444: PUSH1 0x01\n6446: PUSH1 0x01\n6448: PUSH1 0xa0\n6450: SHL\n6451: SUB\n6452: SWAP3\n6453: DUP4\n6454: AND\n6455: OR\n6456: SWAP1\n6457: SSTORE\n6458: PUSH1 0x40\n6460: DUP1\n6461: MLOAD\n6462: PUSH1 0xff\n6464: DUP6\n6465: AND\n6466: DUP2\n6467: MSTORE\n6468: PUSH1 0x15\n6470: PUSH1 0x20\n6472: DUP3\n6473: ADD\n6474: MSTORE\n6475: DUP2\n6476: MLOAD\n6477: DUP7\n6478: DUP5\n6479: AND\n6480: SWAP4\n6481: DUP9\n6482: AND\n6483: SWAP3\n6484: PUSH1 0x00\n6486: DUP1\n6487: MLOAD\n6488: PUSH1 0x20\n6490: PUSH2 0x1feb\n6493: DUP4\n6494: CODECOPY\n6495: DUP2\n6496: MLOAD\n6497: SWAP2\n6498: MSTORE\n6499: SWAP3\n6500: DUP3\n6501: SWAP1\n6502: SUB\n6503: ADD\n6504: SWAP1\n6505: LOG3\n6506: PUSH1 0x01\n6508: PUSH1 0x01\n6510: PUSH1 0xa0\n6512: SHL\n6513: SUB\n6514: DUP4\n6515: DUP2\n6516: AND\n6517: PUSH1 0x00\n6519: SWAP1\n6520: DUP2\n6521: MSTORE\n6522: PUSH1 0x05\n6524: PUSH1 0x20\n6526: DUP2\n6527: DUP2\n6528: MSTORE\n6529: PUSH1 0x40\n6531: DUP1\n6532: DUP5\n6533: SHA3\n6534: PUSH1 0xff\n6536: DUP9\n6537: AND\n6538: DUP1\n6539: DUP7\n6540: MSTORE\n6541: PUSH1 0x03\n6543: SWAP2\n6544: DUP3\n6545: ADD\n6546: DUP5\n6547: MSTORE\n6548: DUP3\n6549: DUP7\n6550: SHA3\n6551: PUSH1 0x01\n6553: ADD\n6554: SLOAD\n6555: DUP8\n6556: AND\n6557: DUP1\n6558: DUP8\n6559: MSTORE\n6560: SWAP5\n6561: DUP5\n6562: MSTORE\n6563: DUP3\n6564: DUP7\n6565: SHA3\n6566: DUP2\n6567: DUP8\n6568: MSTORE\n6569: SWAP1\n6570: SWAP2\n6571: ADD\n6572: DUP4\n6573: MSTORE\n6574: SWAP4\n6575: DUP2\n6576: SWAP1\n6577: SHA3\n6578: PUSH1 0x0e\n6580: ADD\n6581: DUP1\n6582: SLOAD\n6583: PUSH1 0x01\n6585: PUSH1 0x01\n6587: PUSH1 0xa0\n6589: SHL\n6590: SUB\n6591: NOT\n6592: AND\n6593: SWAP6\n6594: DUP11\n6595: AND\n6596: SWAP6\n6597: DUP7\n6598: OR\n6599: SWAP1\n6600: SSTORE\n6601: DUP1\n6602: MLOAD\n6603: SWAP4\n6604: DUP5\n6605: MSTORE\n6606: PUSH1 0x0d\n6608: SWAP2\n6609: DUP5\n6610: ADD\n6611: SWAP2\n6612: SWAP1\n6613: SWAP2\n6614: MSTORE\n6615: DUP1\n6616: MLOAD\n6617: SWAP2\n6618: SWAP4\n6619: DUP5\n6620: SWAP4\n6621: SWAP1\n6622: SWAP3\n6623: PUSH1 0x00\n6625: DUP1\n6626: MLOAD\n6627: PUSH1 0x20\n6629: PUSH2 0x1feb\n6632: DUP4\n6633: CODECOPY\n6634: DUP2\n6635: MLOAD\n6636: SWAP2\n6637: MSTORE\n6638: SWAP3\n6639: SWAP2\n6640: DUP2\n6641: SWAP1\n6642: SUB\n6643: SWAP1\n6644: SWAP2\n6645: ADD\n6646: SWAP1\n6647: LOG3\n6648: PUSH2 0x1a08\n6651: DUP6\n6652: DUP3\n6653: DUP6\n6654: PUSH1 0x0a\n6656: PUSH1 0x03\n6658: DUP8\n6659: MUL\n6660: PUSH2 0x0440\n6663: JUMP"
      },
      {
        "offset": 6664,
        "length": 52,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6001600160a01b038116600090815260056020908152604080832060ff8716845260030190915281206001908101906114ae56",
        "parsedOpcodes": "6664: JUMPDEST\n6665: PUSH1 0x01\n6667: PUSH1 0x01\n6669: PUSH1 0xa0\n6671: SHL\n6672: SUB\n6673: DUP2\n6674: AND\n6675: PUSH1 0x00\n6677: SWAP1\n6678: DUP2\n6679: MSTORE\n6680: PUSH1 0x05\n6682: PUSH1 0x20\n6684: SWAP1\n6685: DUP2\n6686: MSTORE\n6687: PUSH1 0x40\n6689: DUP1\n6690: DUP4\n6691: SHA3\n6692: PUSH1 0xff\n6694: DUP8\n6695: AND\n6696: DUP5\n6697: MSTORE\n6698: PUSH1 0x03\n6700: ADD\n6701: SWAP1\n6702: SWAP2\n6703: MSTORE\n6704: DUP2\n6705: SHA3\n6706: PUSH1 0x01\n6708: SWAP1\n6709: DUP2\n6710: ADD\n6711: SWAP1\n6712: PUSH2 0x14ae\n6715: JUMP"
      },
      {
        "offset": 6716,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b03838116600090815260056020908152604080832060ff871684526003019091529020601e015416611d0857",
        "parsedOpcodes": "6716: JUMPDEST\n6717: PUSH1 0x01\n6719: PUSH1 0x01\n6721: PUSH1 0xa0\n6723: SHL\n6724: SUB\n6725: DUP4\n6726: DUP2\n6727: AND\n6728: PUSH1 0x00\n6730: SWAP1\n6731: DUP2\n6732: MSTORE\n6733: PUSH1 0x05\n6735: PUSH1 0x20\n6737: SWAP1\n6738: DUP2\n6739: MSTORE\n6740: PUSH1 0x40\n6742: DUP1\n6743: DUP4\n6744: SHA3\n6745: PUSH1 0xff\n6747: DUP8\n6748: AND\n6749: DUP5\n6750: MSTORE\n6751: PUSH1 0x03\n6753: ADD\n6754: SWAP1\n6755: SWAP2\n6756: MSTORE\n6757: SWAP1\n6758: SHA3\n6759: PUSH1 0x1e\n6761: ADD\n6762: SLOAD\n6763: AND\n6764: PUSH2 0x1d08\n6767: JUMPI"
      },
      {
        "offset": 6768,
        "length": 281,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "6001600160a01b038316600090815260056020908152604080832060ff8616845260030190915290208490600f9081010180546001600160a01b0319166001600160a01b039283161790556040805160ff85168152601d6020820152815186841693881692600080516020611feb833981519152928290030190a36001600160a01b03838116600090815260056020818152604080842060ff881680865260039182018452828620600201548716808752948452828620818752909101835293819020600e0180546001600160a01b031916958a1695861790558051938452600d918401919091528051919384939092600080516020611feb833981519152929181900390910190a3611b89858285600a6003870261044056",
        "parsedOpcodes": "6768: PUSH1 0x01\n6770: PUSH1 0x01\n6772: PUSH1 0xa0\n6774: SHL\n6775: SUB\n6776: DUP4\n6777: AND\n6778: PUSH1 0x00\n6780: SWAP1\n6781: DUP2\n6782: MSTORE\n6783: PUSH1 0x05\n6785: PUSH1 0x20\n6787: SWAP1\n6788: DUP2\n6789: MSTORE\n6790: PUSH1 0x40\n6792: DUP1\n6793: DUP4\n6794: SHA3\n6795: PUSH1 0xff\n6797: DUP7\n6798: AND\n6799: DUP5\n6800: MSTORE\n6801: PUSH1 0x03\n6803: ADD\n6804: SWAP1\n6805: SWAP2\n6806: MSTORE\n6807: SWAP1\n6808: SHA3\n6809: DUP5\n6810: SWAP1\n6811: PUSH1 0x0f\n6813: SWAP1\n6814: DUP2\n6815: ADD\n6816: ADD\n6817: DUP1\n6818: SLOAD\n6819: PUSH1 0x01\n6821: PUSH1 0x01\n6823: PUSH1 0xa0\n6825: SHL\n6826: SUB\n6827: NOT\n6828: AND\n6829: PUSH1 0x01\n6831: PUSH1 0x01\n6833: PUSH1 0xa0\n6835: SHL\n6836: SUB\n6837: SWAP3\n6838: DUP4\n6839: AND\n6840: OR\n6841: SWAP1\n6842: SSTORE\n6843: PUSH1 0x40\n6845: DUP1\n6846: MLOAD\n6847: PUSH1 0xff\n6849: DUP6\n6850: AND\n6851: DUP2\n6852: MSTORE\n6853: PUSH1 0x1d\n6855: PUSH1 0x20\n6857: DUP3\n6858: ADD\n6859: MSTORE\n6860: DUP2\n6861: MLOAD\n6862: DUP7\n6863: DUP5\n6864: AND\n6865: SWAP4\n6866: DUP9\n6867: AND\n6868: SWAP3\n6869: PUSH1 0x00\n6871: DUP1\n6872: MLOAD\n6873: PUSH1 0x20\n6875: PUSH2 0x1feb\n6878: DUP4\n6879: CODECOPY\n6880: DUP2\n6881: MLOAD\n6882: SWAP2\n6883: MSTORE\n6884: SWAP3\n6885: DUP3\n6886: SWAP1\n6887: SUB\n6888: ADD\n6889: SWAP1\n6890: LOG3\n6891: PUSH1 0x01\n6893: PUSH1 0x01\n6895: PUSH1 0xa0\n6897: SHL\n6898: SUB\n6899: DUP4\n6900: DUP2\n6901: AND\n6902: PUSH1 0x00\n6904: SWAP1\n6905: DUP2\n6906: MSTORE\n6907: PUSH1 0x05\n6909: PUSH1 0x20\n6911: DUP2\n6912: DUP2\n6913: MSTORE\n6914: PUSH1 0x40\n6916: DUP1\n6917: DUP5\n6918: SHA3\n6919: PUSH1 0xff\n6921: DUP9\n6922: AND\n6923: DUP1\n6924: DUP7\n6925: MSTORE\n6926: PUSH1 0x03\n6928: SWAP2\n6929: DUP3\n6930: ADD\n6931: DUP5\n6932: MSTORE\n6933: DUP3\n6934: DUP7\n6935: SHA3\n6936: PUSH1 0x02\n6938: ADD\n6939: SLOAD\n6940: DUP8\n6941: AND\n6942: DUP1\n6943: DUP8\n6944: MSTORE\n6945: SWAP5\n6946: DUP5\n6947: MSTORE\n6948: DUP3\n6949: DUP7\n6950: SHA3\n6951: DUP2\n6952: DUP8\n6953: MSTORE\n6954: SWAP1\n6955: SWAP2\n6956: ADD\n6957: DUP4\n6958: MSTORE\n6959: SWAP4\n6960: DUP2\n6961: SWAP1\n6962: SHA3\n6963: PUSH1 0x0e\n6965: ADD\n6966: DUP1\n6967: SLOAD\n6968: PUSH1 0x01\n6970: PUSH1 0x01\n6972: PUSH1 0xa0\n6974: SHL\n6975: SUB\n6976: NOT\n6977: AND\n6978: SWAP6\n6979: DUP11\n6980: AND\n6981: SWAP6\n6982: DUP7\n6983: OR\n6984: SWAP1\n6985: SSTORE\n6986: DUP1\n6987: MLOAD\n6988: SWAP4\n6989: DUP5\n6990: MSTORE\n6991: PUSH1 0x0d\n6993: SWAP2\n6994: DUP5\n6995: ADD\n6996: SWAP2\n6997: SWAP1\n6998: SWAP2\n6999: MSTORE\n7000: DUP1\n7001: MLOAD\n7002: SWAP2\n7003: SWAP4\n7004: DUP5\n7005: SWAP4\n7006: SWAP1\n7007: SWAP3\n7008: PUSH1 0x00\n7010: DUP1\n7011: MLOAD\n7012: PUSH1 0x20\n7014: PUSH2 0x1feb\n7017: DUP4\n7018: CODECOPY\n7019: DUP2\n7020: MLOAD\n7021: SWAP2\n7022: MSTORE\n7023: SWAP3\n7024: SWAP2\n7025: DUP2\n7026: SWAP1\n7027: SUB\n7028: SWAP1\n7029: SWAP2\n7030: ADD\n7031: SWAP1\n7032: LOG3\n7033: PUSH2 0x1b89\n7036: DUP6\n7037: DUP3\n7038: DUP6\n7039: PUSH1 0x0a\n7041: PUSH1 0x03\n7043: DUP8\n7044: MUL\n7045: PUSH2 0x0440\n7048: JUMP"
      },
      {
        "offset": 7049,
        "length": 152,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b6001600160a01b03818116600090815260056020818152604080842060ff89168086526003918201845282862060020154871680875285855283872082885290920184529482902060060180546001600160a01b031916968c1696871790558151948552918401929092528151909384939092600080516020611feb83398151915292918290030190a3611c2186828660058761044056",
        "parsedOpcodes": "7049: JUMPDEST\n7050: PUSH1 0x01\n7052: PUSH1 0x01\n7054: PUSH1 0xa0\n7056: SHL\n7057: SUB\n7058: DUP2\n7059: DUP2\n7060: AND\n7061: PUSH1 0x00\n7063: SWAP1\n7064: DUP2\n7065: MSTORE\n7066: PUSH1 0x05\n7068: PUSH1 0x20\n7070: DUP2\n7071: DUP2\n7072: MSTORE\n7073: PUSH1 0x40\n7075: DUP1\n7076: DUP5\n7077: SHA3\n7078: PUSH1 0xff\n7080: DUP10\n7081: AND\n7082: DUP1\n7083: DUP7\n7084: MSTORE\n7085: PUSH1 0x03\n7087: SWAP2\n7088: DUP3\n7089: ADD\n7090: DUP5\n7091: MSTORE\n7092: DUP3\n7093: DUP7\n7094: SHA3\n7095: PUSH1 0x02\n7097: ADD\n7098: SLOAD\n7099: DUP8\n7100: AND\n7101: DUP1\n7102: DUP8\n7103: MSTORE\n7104: DUP6\n7105: DUP6\n7106: MSTORE\n7107: DUP4\n7108: DUP8\n7109: SHA3\n7110: DUP3\n7111: DUP9\n7112: MSTORE\n7113: SWAP1\n7114: SWAP3\n7115: ADD\n7116: DUP5\n7117: MSTORE\n7118: SWAP5\n7119: DUP3\n7120: SWAP1\n7121: SHA3\n7122: PUSH1 0x06\n7124: ADD\n7125: DUP1\n7126: SLOAD\n7127: PUSH1 0x01\n7129: PUSH1 0x01\n7131: PUSH1 0xa0\n7133: SHL\n7134: SUB\n7135: NOT\n7136: AND\n7137: SWAP7\n7138: DUP13\n7139: AND\n7140: SWAP7\n7141: DUP8\n7142: OR\n7143: SWAP1\n7144: SSTORE\n7145: DUP2\n7146: MLOAD\n7147: SWAP5\n7148: DUP6\n7149: MSTORE\n7150: SWAP2\n7151: DUP5\n7152: ADD\n7153: SWAP3\n7154: SWAP1\n7155: SWAP3\n7156: MSTORE\n7157: DUP2\n7158: MLOAD\n7159: SWAP1\n7160: SWAP4\n7161: DUP5\n7162: SWAP4\n7163: SWAP1\n7164: SWAP3\n7165: PUSH1 0x00\n7167: DUP1\n7168: MLOAD\n7169: PUSH1 0x20\n7171: PUSH2 0x1feb\n7174: DUP4\n7175: CODECOPY\n7176: DUP2\n7177: MLOAD\n7178: SWAP2\n7179: MSTORE\n7180: SWAP3\n7181: SWAP2\n7182: DUP3\n7183: SWAP1\n7184: SUB\n7185: ADD\n7186: SWAP1\n7187: LOG3\n7188: PUSH2 0x1c21\n7191: DUP7\n7192: DUP3\n7193: DUP7\n7194: PUSH1 0x05\n7196: DUP8\n7197: PUSH2 0x0440\n7200: JUMP"
      },
      {
        "offset": 7201,
        "length": 231,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b6001600160a01b03818116600090815260056020818152604080842060ff8a168086526003918201845282862060029081015488168088529585528387208288529092018452948290200180546001600160a01b031916958c16958617905580519384526001918401919091528051919384939092600080516020611feb833981519152929181900390910190a36001600160a01b03878116600090815260056020908152604080832060ff8a168452600301909152902080546001600160a01b03191692909116919091178155601f018054600160801b60ff60801b199091161790555050",
        "parsedOpcodes": "7201: JUMPDEST\n7202: PUSH1 0x01\n7204: PUSH1 0x01\n7206: PUSH1 0xa0\n7208: SHL\n7209: SUB\n7210: DUP2\n7211: DUP2\n7212: AND\n7213: PUSH1 0x00\n7215: SWAP1\n7216: DUP2\n7217: MSTORE\n7218: PUSH1 0x05\n7220: PUSH1 0x20\n7222: DUP2\n7223: DUP2\n7224: MSTORE\n7225: PUSH1 0x40\n7227: DUP1\n7228: DUP5\n7229: SHA3\n7230: PUSH1 0xff\n7232: DUP11\n7233: AND\n7234: DUP1\n7235: DUP7\n7236: MSTORE\n7237: PUSH1 0x03\n7239: SWAP2\n7240: DUP3\n7241: ADD\n7242: DUP5\n7243: MSTORE\n7244: DUP3\n7245: DUP7\n7246: SHA3\n7247: PUSH1 0x02\n7249: SWAP1\n7250: DUP2\n7251: ADD\n7252: SLOAD\n7253: DUP9\n7254: AND\n7255: DUP1\n7256: DUP9\n7257: MSTORE\n7258: SWAP6\n7259: DUP6\n7260: MSTORE\n7261: DUP4\n7262: DUP8\n7263: SHA3\n7264: DUP3\n7265: DUP9\n7266: MSTORE\n7267: SWAP1\n7268: SWAP3\n7269: ADD\n7270: DUP5\n7271: MSTORE\n7272: SWAP5\n7273: DUP3\n7274: SWAP1\n7275: SHA3\n7276: ADD\n7277: DUP1\n7278: SLOAD\n7279: PUSH1 0x01\n7281: PUSH1 0x01\n7283: PUSH1 0xa0\n7285: SHL\n7286: SUB\n7287: NOT\n7288: AND\n7289: SWAP6\n7290: DUP13\n7291: AND\n7292: SWAP6\n7293: DUP7\n7294: OR\n7295: SWAP1\n7296: SSTORE\n7297: DUP1\n7298: MLOAD\n7299: SWAP4\n7300: DUP5\n7301: MSTORE\n7302: PUSH1 0x01\n7304: SWAP2\n7305: DUP5\n7306: ADD\n7307: SWAP2\n7308: SWAP1\n7309: SWAP2\n7310: MSTORE\n7311: DUP1\n7312: MLOAD\n7313: SWAP2\n7314: SWAP4\n7315: DUP5\n7316: SWAP4\n7317: SWAP1\n7318: SWAP3\n7319: PUSH1 0x00\n7321: DUP1\n7322: MLOAD\n7323: PUSH1 0x20\n7325: PUSH2 0x1feb\n7328: DUP4\n7329: CODECOPY\n7330: DUP2\n7331: MLOAD\n7332: SWAP2\n7333: MSTORE\n7334: SWAP3\n7335: SWAP2\n7336: DUP2\n7337: SWAP1\n7338: SUB\n7339: SWAP1\n7340: SWAP2\n7341: ADD\n7342: SWAP1\n7343: LOG3\n7344: PUSH1 0x01\n7346: PUSH1 0x01\n7348: PUSH1 0xa0\n7350: SHL\n7351: SUB\n7352: DUP8\n7353: DUP2\n7354: AND\n7355: PUSH1 0x00\n7357: SWAP1\n7358: DUP2\n7359: MSTORE\n7360: PUSH1 0x05\n7362: PUSH1 0x20\n7364: SWAP1\n7365: DUP2\n7366: MSTORE\n7367: PUSH1 0x40\n7369: DUP1\n7370: DUP4\n7371: SHA3\n7372: PUSH1 0xff\n7374: DUP11\n7375: AND\n7376: DUP5\n7377: MSTORE\n7378: PUSH1 0x03\n7380: ADD\n7381: SWAP1\n7382: SWAP2\n7383: MSTORE\n7384: SWAP1\n7385: SHA3\n7386: DUP1\n7387: SLOAD\n7388: PUSH1 0x01\n7390: PUSH1 0x01\n7392: PUSH1 0xa0\n7394: SHL\n7395: SUB\n7396: NOT\n7397: AND\n7398: SWAP3\n7399: SWAP1\n7400: SWAP2\n7401: AND\n7402: SWAP2\n7403: SWAP1\n7404: SWAP2\n7405: OR\n7406: DUP2\n7407: SSTORE\n7408: PUSH1 0x1f\n7410: ADD\n7411: DUP1\n7412: SLOAD\n7413: PUSH1 0x01\n7415: PUSH1 0x80\n7417: SHL\n7418: PUSH1 0xff\n7420: PUSH1 0x80\n7422: SHL\n7423: NOT\n7424: SWAP1\n7425: SWAP2\n7426: AND\n7427: OR\n7428: SWAP1\n7429: SSTORE\n7430: POP\n7431: POP"
      },
      {
        "offset": 7432,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "7432: JUMPDEST\n7433: POP\n7434: POP\n7435: POP\n7436: POP\n7437: JUMP"
      },
      {
        "offset": 7438,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6004546001600160a01b03168156",
        "parsedOpcodes": "7438: JUMPDEST\n7439: PUSH1 0x04\n7441: SLOAD\n7442: PUSH1 0x01\n7444: PUSH1 0x01\n7446: PUSH1 0xa0\n7448: SHL\n7449: SUB\n7450: AND\n7451: DUP2\n7452: JUMP"
      },
      {
        "offset": 7453,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6002546001600160a01b03168156",
        "parsedOpcodes": "7453: JUMPDEST\n7454: PUSH1 0x02\n7456: SLOAD\n7457: PUSH1 0x01\n7459: PUSH1 0x01\n7461: PUSH1 0xa0\n7463: SHL\n7464: SUB\n7465: AND\n7466: DUP2\n7467: JUMP"
      },
      {
        "offset": 7468,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6003546001600160a01b03168156",
        "parsedOpcodes": "7468: JUMPDEST\n7469: PUSH1 0x03\n7471: SLOAD\n7472: PUSH1 0x01\n7474: PUSH1 0x01\n7476: PUSH1 0xa0\n7478: SHL\n7479: SUB\n7480: AND\n7481: DUP2\n7482: JUMP"
      },
      {
        "offset": 7483,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000546001600160a01b03168156",
        "parsedOpcodes": "7483: JUMPDEST\n7484: PUSH1 0x00\n7486: SLOAD\n7487: PUSH1 0x01\n7489: PUSH1 0x01\n7491: PUSH1 0xa0\n7493: SHL\n7494: SUB\n7495: AND\n7496: DUP2\n7497: JUMP"
      },
      {
        "offset": 7498,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6008546001600160a01b03168156",
        "parsedOpcodes": "7498: JUMPDEST\n7499: PUSH1 0x08\n7501: SLOAD\n7502: PUSH1 0x01\n7504: PUSH1 0x01\n7506: PUSH1 0xa0\n7508: SHL\n7509: SUB\n7510: AND\n7511: DUP2\n7512: JUMP"
      },
      {
        "offset": 7513,
        "length": 16,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600254600160a01b900460ff168156",
        "parsedOpcodes": "7513: JUMPDEST\n7514: PUSH1 0x02\n7516: SLOAD\n7517: PUSH1 0x01\n7519: PUSH1 0xa0\n7521: SHL\n7522: SWAP1\n7523: DIV\n7524: PUSH1 0xff\n7526: AND\n7527: DUP2\n7528: JUMP"
      },
      {
        "offset": 7529,
        "length": 46,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600560205260009081526040902080546001909101546001600160a01b03811690600160a01b900460ff168356",
        "parsedOpcodes": "7529: JUMPDEST\n7530: PUSH1 0x05\n7532: PUSH1 0x20\n7534: MSTORE\n7535: PUSH1 0x00\n7537: SWAP1\n7538: DUP2\n7539: MSTORE\n7540: PUSH1 0x40\n7542: SWAP1\n7543: SHA3\n7544: DUP1\n7545: SLOAD\n7546: PUSH1 0x01\n7548: SWAP1\n7549: SWAP2\n7550: ADD\n7551: SLOAD\n7552: PUSH1 0x01\n7554: PUSH1 0x01\n7556: PUSH1 0xa0\n7558: SHL\n7559: SUB\n7560: DUP2\n7561: AND\n7562: SWAP1\n7563: PUSH1 0x01\n7565: PUSH1 0xa0\n7567: SHL\n7568: SWAP1\n7569: DIV\n7570: PUSH1 0xff\n7572: AND\n7573: DUP4\n7574: JUMP"
      },
      {
        "offset": 7575,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001546001600160a01b03168156",
        "parsedOpcodes": "7575: JUMPDEST\n7576: PUSH1 0x01\n7578: SLOAD\n7579: PUSH1 0x01\n7581: PUSH1 0x01\n7583: PUSH1 0xa0\n7585: SHL\n7586: SUB\n7587: AND\n7588: DUP2\n7589: JUMP"
      },
      {
        "offset": 7590,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6007602052600090815260409020548156",
        "parsedOpcodes": "7590: JUMPDEST\n7591: PUSH1 0x07\n7593: PUSH1 0x20\n7595: MSTORE\n7596: PUSH1 0x00\n7598: SWAP1\n7599: DUP2\n7600: MSTORE\n7601: PUSH1 0x40\n7603: SWAP1\n7604: SHA3\n7605: SLOAD\n7606: DUP2\n7607: JUMP"
      },
      {
        "offset": 7608,
        "length": 13,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b6000611dc5848685611ee756",
        "parsedOpcodes": "7608: JUMPDEST\n7609: PUSH1 0x00\n7611: PUSH2 0x1dc5\n7614: DUP5\n7615: DUP7\n7616: DUP6\n7617: PUSH2 0x1ee7\n7620: JUMP"
      },
      {
        "offset": 7621,
        "length": 26,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6008549091506001600160a01b0380831691161415611e3957",
        "parsedOpcodes": "7621: JUMPDEST\n7622: PUSH1 0x08\n7624: SLOAD\n7625: SWAP1\n7626: SWAP2\n7627: POP\n7628: PUSH1 0x01\n7630: PUSH1 0x01\n7632: PUSH1 0xa0\n7634: SHL\n7635: SUB\n7636: DUP1\n7637: DUP4\n7638: AND\n7639: SWAP2\n7640: AND\n7641: EQ\n7642: ISZERO\n7643: PUSH2 0x1e39\n7646: JUMPI"
      },
      {
        "offset": 7647,
        "length": 43,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "600a546040516001600160a01b03909116904790600081818185875af1925050503d8060008114611e2b57",
        "parsedOpcodes": "7647: PUSH1 0x0a\n7649: SLOAD\n7650: PUSH1 0x40\n7652: MLOAD\n7653: PUSH1 0x01\n7655: PUSH1 0x01\n7657: PUSH1 0xa0\n7659: SHL\n7660: SUB\n7661: SWAP1\n7662: SWAP2\n7663: AND\n7664: SWAP1\n7665: SELFBALANCE\n7666: SWAP1\n7667: PUSH1 0x00\n7669: DUP2\n7670: DUP2\n7671: DUP2\n7672: DUP6\n7673: DUP8\n7674: GAS\n7675: CALL\n7676: SWAP3\n7677: POP\n7678: POP\n7679: POP\n7680: RETURNDATASIZE\n7681: DUP1\n7682: PUSH1 0x00\n7684: DUP2\n7685: EQ\n7686: PUSH2 0x1e2b\n7689: JUMPI"
      },
      {
        "offset": 7690,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040519150601f19603f3d011682016040523d82523d6000602084013e611e3056",
        "parsedOpcodes": "7690: PUSH1 0x40\n7692: MLOAD\n7693: SWAP2\n7694: POP\n7695: PUSH1 0x1f\n7697: NOT\n7698: PUSH1 0x3f\n7700: RETURNDATASIZE\n7701: ADD\n7702: AND\n7703: DUP3\n7704: ADD\n7705: PUSH1 0x40\n7707: MSTORE\n7708: RETURNDATASIZE\n7709: DUP3\n7710: MSTORE\n7711: RETURNDATASIZE\n7712: PUSH1 0x00\n7714: PUSH1 0x20\n7716: DUP5\n7717: ADD\n7718: RETURNDATACOPY\n7719: PUSH2 0x1e30\n7722: JUMP"
      },
      {
        "offset": 7723,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60609150",
        "parsedOpcodes": "7723: JUMPDEST\n7724: PUSH1 0x60\n7726: SWAP2\n7727: POP"
      },
      {
        "offset": 7728,
        "length": 9,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505050611d0856",
        "parsedOpcodes": "7728: JUMPDEST\n7729: POP\n7730: POP\n7731: POP\n7732: POP\n7733: PUSH2 0x1d08\n7736: JUMP"
      },
      {
        "offset": 7737,
        "length": 42,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6040516001600160a01b0382169083156108fc029084906000818181858888f19350505050611ee057",
        "parsedOpcodes": "7737: JUMPDEST\n7738: PUSH1 0x40\n7740: MLOAD\n7741: PUSH1 0x01\n7743: PUSH1 0x01\n7745: PUSH1 0xa0\n7747: SHL\n7748: SUB\n7749: DUP3\n7750: AND\n7751: SWAP1\n7752: DUP4\n7753: ISZERO\n7754: PUSH2 0x08fc\n7757: MUL\n7758: SWAP1\n7759: DUP5\n7760: SWAP1\n7761: PUSH1 0x00\n7763: DUP2\n7764: DUP2\n7765: DUP2\n7766: DUP6\n7767: DUP9\n7768: DUP9\n7769: CALL\n7770: SWAP4\n7771: POP\n7772: POP\n7773: POP\n7774: POP\n7775: PUSH2 0x1ee0\n7778: JUMPI"
      },
      {
        "offset": 7779,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040516001600160a01b038216904780156108fc02916000818181858888f19350505050611ee057",
        "parsedOpcodes": "7779: PUSH1 0x40\n7781: MLOAD\n7782: PUSH1 0x01\n7784: PUSH1 0x01\n7786: PUSH1 0xa0\n7788: SHL\n7789: SUB\n7790: DUP3\n7791: AND\n7792: SWAP1\n7793: SELFBALANCE\n7794: DUP1\n7795: ISZERO\n7796: PUSH2 0x08fc\n7799: MUL\n7800: SWAP2\n7801: PUSH1 0x00\n7803: DUP2\n7804: DUP2\n7805: DUP2\n7806: DUP6\n7807: DUP9\n7808: DUP9\n7809: CALL\n7810: SWAP4\n7811: POP\n7812: POP\n7813: POP\n7814: POP\n7815: PUSH2 0x1ee0\n7818: JUMPI"
      },
      {
        "offset": 7819,
        "length": 43,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "600a546040516001600160a01b03909116904790600081818185875af1925050503d8060008114611ed757",
        "parsedOpcodes": "7819: PUSH1 0x0a\n7821: SLOAD\n7822: PUSH1 0x40\n7824: MLOAD\n7825: PUSH1 0x01\n7827: PUSH1 0x01\n7829: PUSH1 0xa0\n7831: SHL\n7832: SUB\n7833: SWAP1\n7834: SWAP2\n7835: AND\n7836: SWAP1\n7837: SELFBALANCE\n7838: SWAP1\n7839: PUSH1 0x00\n7841: DUP2\n7842: DUP2\n7843: DUP2\n7844: DUP6\n7845: DUP8\n7846: GAS\n7847: CALL\n7848: SWAP3\n7849: POP\n7850: POP\n7851: POP\n7852: RETURNDATASIZE\n7853: DUP1\n7854: PUSH1 0x00\n7856: DUP2\n7857: EQ\n7858: PUSH2 0x1ed7\n7861: JUMPI"
      },
      {
        "offset": 7862,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040519150601f19603f3d011682016040523d82523d6000602084013e611edc56",
        "parsedOpcodes": "7862: PUSH1 0x40\n7864: MLOAD\n7865: SWAP2\n7866: POP\n7867: PUSH1 0x1f\n7869: NOT\n7870: PUSH1 0x3f\n7872: RETURNDATASIZE\n7873: ADD\n7874: AND\n7875: DUP3\n7876: ADD\n7877: PUSH1 0x40\n7879: MSTORE\n7880: RETURNDATASIZE\n7881: DUP3\n7882: MSTORE\n7883: RETURNDATASIZE\n7884: PUSH1 0x00\n7886: PUSH1 0x20\n7888: DUP5\n7889: ADD\n7890: RETURNDATACOPY\n7891: PUSH2 0x1edc\n7894: JUMP"
      },
      {
        "offset": 7895,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60609150",
        "parsedOpcodes": "7895: JUMPDEST\n7896: PUSH1 0x60\n7898: SWAP2\n7899: POP"
      },
      {
        "offset": 7900,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505050",
        "parsedOpcodes": "7900: JUMPDEST\n7901: POP\n7902: POP\n7903: POP"
      },
      {
        "offset": 7904,
        "length": 7,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505050505056",
        "parsedOpcodes": "7904: JUMPDEST\n7905: POP\n7906: POP\n7907: POP\n7908: POP\n7909: POP\n7910: JUMP"
      },
      {
        "offset": 7911,
        "length": 5,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60008381",
        "parsedOpcodes": "7911: JUMPDEST\n7912: PUSH1 0x00\n7914: DUP4\n7915: DUP2"
      },
      {
        "offset": 7916,
        "length": 63,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b038216600090815260056020908152604080832060ff80891685526003909101909252909120601f0154600160881b90041615611fd657",
        "parsedOpcodes": "7916: JUMPDEST\n7917: PUSH1 0x01\n7919: PUSH1 0x01\n7921: PUSH1 0xa0\n7923: SHL\n7924: SUB\n7925: DUP3\n7926: AND\n7927: PUSH1 0x00\n7929: SWAP1\n7930: DUP2\n7931: MSTORE\n7932: PUSH1 0x05\n7934: PUSH1 0x20\n7936: SWAP1\n7937: DUP2\n7938: MSTORE\n7939: PUSH1 0x40\n7941: DUP1\n7942: DUP4\n7943: SHA3\n7944: PUSH1 0xff\n7946: DUP1\n7947: DUP10\n7948: AND\n7949: DUP6\n7950: MSTORE\n7951: PUSH1 0x03\n7953: SWAP1\n7954: SWAP2\n7955: ADD\n7956: SWAP1\n7957: SWAP3\n7958: MSTORE\n7959: SWAP1\n7960: SWAP2\n7961: SHA3\n7962: PUSH1 0x1f\n7964: ADD\n7965: SLOAD\n7966: PUSH1 0x01\n7968: PUSH1 0x88\n7970: SHL\n7971: SWAP1\n7972: DIV\n7973: AND\n7974: ISZERO\n7975: PUSH2 0x1fd6\n7978: JUMPI"
      },
      {
        "offset": 7979,
        "length": 146,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "846001600160a01b0316826001600160a01b03167fe4c390745de94e576db58e5b18db9b14f1185dd2fe6204671461ca8bd05c520186604051808260ff16815260200191505060405180910390a36001600160a01b03918216600090815260056020908152604080832060ff80891685526003909101909252909120549092169160019190910190601990821610611fd157",
        "parsedOpcodes": "7979: DUP5\n7980: PUSH1 0x01\n7982: PUSH1 0x01\n7984: PUSH1 0xa0\n7986: SHL\n7987: SUB\n7988: AND\n7989: DUP3\n7990: PUSH1 0x01\n7992: PUSH1 0x01\n7994: PUSH1 0xa0\n7996: SHL\n7997: SUB\n7998: AND\n7999: PUSH32 0xe4c390745de94e576db58e5b18db9b14f1185dd2fe6204671461ca8bd05c5201\n8032: DUP7\n8033: PUSH1 0x40\n8035: MLOAD\n8036: DUP1\n8037: DUP3\n8038: PUSH1 0xff\n8040: AND\n8041: DUP2\n8042: MSTORE\n8043: PUSH1 0x20\n8045: ADD\n8046: SWAP2\n8047: POP\n8048: POP\n8049: PUSH1 0x40\n8051: MLOAD\n8052: DUP1\n8053: SWAP2\n8054: SUB\n8055: SWAP1\n8056: LOG3\n8057: PUSH1 0x01\n8059: PUSH1 0x01\n8061: PUSH1 0xa0\n8063: SHL\n8064: SUB\n8065: SWAP2\n8066: DUP3\n8067: AND\n8068: PUSH1 0x00\n8070: SWAP1\n8071: DUP2\n8072: MSTORE\n8073: PUSH1 0x05\n8075: PUSH1 0x20\n8077: SWAP1\n8078: DUP2\n8079: MSTORE\n8080: PUSH1 0x40\n8082: DUP1\n8083: DUP4\n8084: SHA3\n8085: PUSH1 0xff\n8087: DUP1\n8088: DUP10\n8089: AND\n8090: DUP6\n8091: MSTORE\n8092: PUSH1 0x03\n8094: SWAP1\n8095: SWAP2\n8096: ADD\n8097: SWAP1\n8098: SWAP3\n8099: MSTORE\n8100: SWAP1\n8101: SWAP2\n8102: SHA3\n8103: SLOAD\n8104: SWAP1\n8105: SWAP3\n8106: AND\n8107: SWAP2\n8108: PUSH1 0x01\n8110: SWAP2\n8111: SWAP1\n8112: SWAP2\n8113: ADD\n8114: SWAP1\n8115: PUSH1 0x19\n8117: SWAP1\n8118: DUP3\n8119: AND\n8120: LT\n8121: PUSH2 0x1fd1\n8124: JUMPI"
      },
      {
        "offset": 8125,
        "length": 20,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "50506008546001600160a01b03169050611fe356",
        "parsedOpcodes": "8125: POP\n8126: POP\n8127: PUSH1 0x08\n8129: SLOAD\n8130: PUSH1 0x01\n8132: PUSH1 0x01\n8134: PUSH1 0xa0\n8136: SHL\n8137: SUB\n8138: AND\n8139: SWAP1\n8140: POP\n8141: PUSH2 0x1fe3\n8144: JUMP"
      },
      {
        "offset": 8145,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b611fde56",
        "parsedOpcodes": "8145: JUMPDEST\n8146: PUSH2 0x1fde\n8149: JUMP"
      },
      {
        "offset": 8150,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b509050611fe356",
        "parsedOpcodes": "8150: JUMPDEST\n8151: POP\n8152: SWAP1\n8153: POP\n8154: PUSH2 0x1fe3\n8157: JUMP"
      },
      {
        "offset": 8158,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b611eec56",
        "parsedOpcodes": "8158: JUMPDEST\n8159: PUSH2 0x1eec\n8162: JUMP"
      },
      {
        "offset": 8163,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b939250505056",
        "parsedOpcodes": "8163: JUMPDEST\n8164: SWAP4\n8165: SWAP3\n8166: POP\n8167: POP\n8168: POP\n8169: JUMP"
      },
      {
        "offset": 8170,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "8170: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          194
        ]
      },
      {
        "from": 13,
        "to": [
          30,
          127
        ]
      },
      {
        "from": 30,
        "to": [
          41,
          89
        ]
      },
      {
        "from": 41,
        "to": [
          52,
          468
        ]
      },
      {
        "from": 52,
        "to": [
          63,
          511
        ]
      },
      {
        "from": 63,
        "to": [
          74,
          602
        ]
      },
      {
        "from": 74,
        "to": [
          85,
          623
        ]
      },
      {
        "from": 85,
        "to": [
          194,
          194
        ]
      },
      {
        "from": 89,
        "to": [
          101,
          405
        ]
      },
      {
        "from": 101,
        "to": [
          112,
          426
        ]
      },
      {
        "from": 112,
        "to": [
          123,
          447
        ]
      },
      {
        "from": 123,
        "to": [
          194,
          194
        ]
      },
      {
        "from": 127,
        "to": [
          139,
          199
        ]
      },
      {
        "from": 139,
        "to": [
          150,
          269
        ]
      },
      {
        "from": 150,
        "to": [
          161,
          279
        ]
      },
      {
        "from": 161,
        "to": [
          172,
          300
        ]
      },
      {
        "from": 172,
        "to": [
          183,
          363
        ]
      },
      {
        "from": 183,
        "to": [
          194,
          384
        ]
      },
      {
        "from": 194,
        "to": [
          8170
        ]
      },
      {
        "from": 199,
        "to": [
          207,
          211
        ]
      },
      {
        "from": 207,
        "to": [
          8170
        ]
      },
      {
        "from": 211,
        "to": [
          230,
          234
        ]
      },
      {
        "from": 230,
        "to": [
          8170
        ]
      },
      {
        "from": 234,
        "to": [
          686,
          686
        ]
      },
      {
        "from": 241,
        "to": [
          8170
        ]
      },
      {
        "from": 269,
        "to": [
          713,
          713
        ]
      },
      {
        "from": 277,
        "to": [
          8170
        ]
      },
      {
        "from": 279,
        "to": [
          287,
          291
        ]
      },
      {
        "from": 287,
        "to": [
          8170
        ]
      },
      {
        "from": 291,
        "to": [
          715,
          715
        ]
      },
      {
        "from": 300,
        "to": [
          318,
          322
        ]
      },
      {
        "from": 318,
        "to": [
          8170
        ]
      },
      {
        "from": 322,
        "to": [
          730,
          730
        ]
      },
      {
        "from": 363,
        "to": [
          371,
          375
        ]
      },
      {
        "from": 371,
        "to": [
          8170
        ]
      },
      {
        "from": 375,
        "to": [
          7438,
          7438
        ]
      },
      {
        "from": 384,
        "to": [
          392,
          396
        ]
      },
      {
        "from": 392,
        "to": [
          8170
        ]
      },
      {
        "from": 396,
        "to": [
          7453,
          7453
        ]
      },
      {
        "from": 405,
        "to": [
          413,
          417
        ]
      },
      {
        "from": 413,
        "to": [
          8170
        ]
      },
      {
        "from": 417,
        "to": [
          7468,
          7468
        ]
      },
      {
        "from": 426,
        "to": [
          434,
          438
        ]
      },
      {
        "from": 434,
        "to": [
          8170
        ]
      },
      {
        "from": 438,
        "to": [
          7483,
          7483
        ]
      },
      {
        "from": 447,
        "to": [
          455,
          459
        ]
      },
      {
        "from": 455,
        "to": [
          8170
        ]
      },
      {
        "from": 459,
        "to": [
          7498,
          7498
        ]
      },
      {
        "from": 468,
        "to": [
          476,
          480
        ]
      },
      {
        "from": 476,
        "to": [
          8170
        ]
      },
      {
        "from": 480,
        "to": [
          7513,
          7513
        ]
      },
      {
        "from": 489,
        "to": [
          8170
        ]
      },
      {
        "from": 511,
        "to": [
          519,
          523
        ]
      },
      {
        "from": 519,
        "to": [
          8170
        ]
      },
      {
        "from": 523,
        "to": [
          542,
          546
        ]
      },
      {
        "from": 542,
        "to": [
          8170
        ]
      },
      {
        "from": 546,
        "to": [
          7529,
          7529
        ]
      },
      {
        "from": 562,
        "to": [
          8170
        ]
      },
      {
        "from": 602,
        "to": [
          610,
          614
        ]
      },
      {
        "from": 610,
        "to": [
          8170
        ]
      },
      {
        "from": 614,
        "to": [
          7575,
          7575
        ]
      },
      {
        "from": 623,
        "to": [
          631,
          635
        ]
      },
      {
        "from": 631,
        "to": [
          8170
        ]
      },
      {
        "from": 635,
        "to": [
          654,
          658
        ]
      },
      {
        "from": 654,
        "to": [
          8170
        ]
      },
      {
        "from": 658,
        "to": [
          7590,
          7590
        ]
      },
      {
        "from": 668,
        "to": [
          8170
        ]
      },
      {
        "from": 686,
        "to": [
          241
        ]
      },
      {
        "from": 713,
        "to": [
          277
        ]
      },
      {
        "from": 715,
        "to": [
          241
        ]
      },
      {
        "from": 730,
        "to": [
          782,
          1536
        ]
      },
      {
        "from": 782,
        "to": [
          950
        ]
      },
      {
        "from": 950,
        "to": [
          1088
        ]
      },
      {
        "from": 1088,
        "to": [
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608,
          7608
        ]
      },
      {
        "from": 1094,
        "to": [
          1140
        ]
      },
      {
        "from": 1140,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 1279,
        "to": [
          1325
        ]
      },
      {
        "from": 1325,
        "to": [
          7432,
          7432
        ]
      },
      {
        "from": 1536,
        "to": [
          1588,
          1762
        ]
      },
      {
        "from": 1588,
        "to": [
          950,
          950
        ]
      },
      {
        "from": 1762,
        "to": [
          1814,
          2352
        ]
      },
      {
        "from": 1814,
        "to": [
          1982
        ]
      },
      {
        "from": 1982,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 2126,
        "to": [
          2172
        ]
      },
      {
        "from": 2172,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 2300,
        "to": [
          1325,
          1325,
          1325
        ]
      },
      {
        "from": 2352,
        "to": [
          2404,
          2578
        ]
      },
      {
        "from": 2404,
        "to": [
          1982,
          1982
        ]
      },
      {
        "from": 2578,
        "to": [
          2630,
          2994
        ]
      },
      {
        "from": 2630,
        "to": [
          2798
        ]
      },
      {
        "from": 2798,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 2942,
        "to": [
          1140,
          1140,
          1140
        ]
      },
      {
        "from": 2994,
        "to": [
          3046,
          3220
        ]
      },
      {
        "from": 3046,
        "to": [
          2798,
          2798
        ]
      },
      {
        "from": 3220,
        "to": [
          3272,
          3636
        ]
      },
      {
        "from": 3272,
        "to": [
          3440
        ]
      },
      {
        "from": 3440,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 3584,
        "to": [
          2172,
          2172,
          2172
        ]
      },
      {
        "from": 3636,
        "to": [
          3688,
          3862
        ]
      },
      {
        "from": 3688,
        "to": [
          3440,
          3440
        ]
      },
      {
        "from": 3862,
        "to": [
          3914,
          4668
        ]
      },
      {
        "from": 3914,
        "to": [
          4082
        ]
      },
      {
        "from": 4082,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 4226,
        "to": [
          4272
        ]
      },
      {
        "from": 4272,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 4401,
        "to": [
          4447
        ]
      },
      {
        "from": 4447,
        "to": [
          7432,
          7432
        ]
      },
      {
        "from": 4668,
        "to": [
          4720,
          4894
        ]
      },
      {
        "from": 4720,
        "to": [
          4082,
          4082
        ]
      },
      {
        "from": 4894,
        "to": [
          4946,
          5475
        ]
      },
      {
        "from": 4946,
        "to": [
          5103
        ]
      },
      {
        "from": 5103,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 5248,
        "to": [
          5294
        ]
      },
      {
        "from": 5294,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 5423,
        "to": [
          4447,
          4447,
          4447
        ]
      },
      {
        "from": 5475,
        "to": [
          5527,
          5701
        ]
      },
      {
        "from": 5527,
        "to": [
          5103,
          5103
        ]
      },
      {
        "from": 5701,
        "to": [
          5753,
          6105
        ]
      },
      {
        "from": 5753,
        "to": [
          5910
        ]
      },
      {
        "from": 5910,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 6053,
        "to": [
          4272,
          4272,
          4272
        ]
      },
      {
        "from": 6105,
        "to": [
          6157,
          6331
        ]
      },
      {
        "from": 6157,
        "to": [
          5910,
          5910
        ]
      },
      {
        "from": 6331,
        "to": [
          6383,
          6716
        ]
      },
      {
        "from": 6383,
        "to": [
          1088,
          1088
        ]
      },
      {
        "from": 6664,
        "to": [
          5294,
          5294,
          5294
        ]
      },
      {
        "from": 6716,
        "to": [
          6768,
          7432
        ]
      },
      {
        "from": 6768,
        "to": [
          1088,
          1088
        ]
      },
      {
        "from": 7049,
        "to": [
          1088,
          1088,
          1088
        ]
      },
      {
        "from": 7201,
        "to": [
          7432
        ]
      },
      {
        "from": 7432,
        "to": [
          277,
          277,
          7201,
          7049,
          277,
          5423,
          6664,
          4401,
          6053,
          5248,
          4226,
          277,
          2300,
          3584,
          1279,
          2942,
          2126,
          1094
        ]
      },
      {
        "from": 7438,
        "to": [
          241
        ]
      },
      {
        "from": 7453,
        "to": [
          241
        ]
      },
      {
        "from": 7468,
        "to": [
          241
        ]
      },
      {
        "from": 7483,
        "to": [
          241
        ]
      },
      {
        "from": 7498,
        "to": [
          241
        ]
      },
      {
        "from": 7513,
        "to": [
          489
        ]
      },
      {
        "from": 7529,
        "to": [
          562
        ]
      },
      {
        "from": 7575,
        "to": [
          241
        ]
      },
      {
        "from": 7590,
        "to": [
          668
        ]
      },
      {
        "from": 7608,
        "to": [
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911,
          7911
        ]
      },
      {
        "from": 7621,
        "to": [
          7647,
          7737
        ]
      },
      {
        "from": 7647,
        "to": [
          7690,
          7723
        ]
      },
      {
        "from": 7690,
        "to": [
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728,
          7728
        ]
      },
      {
        "from": 7723,
        "to": [
          7728
        ]
      },
      {
        "from": 7728,
        "to": [
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432,
          7432
        ]
      },
      {
        "from": 7737,
        "to": [
          7779,
          7904
        ]
      },
      {
        "from": 7779,
        "to": [
          7819,
          7904
        ]
      },
      {
        "from": 7819,
        "to": [
          7862,
          7895
        ]
      },
      {
        "from": 7862,
        "to": [
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900,
          7900
        ]
      },
      {
        "from": 7895,
        "to": [
          7900
        ]
      },
      {
        "from": 7900,
        "to": [
          7904
        ]
      },
      {
        "from": 7904,
        "to": [
          7049,
          7201,
          7201,
          7201,
          7049,
          7049,
          6664,
          5423,
          5423,
          5423,
          6664,
          6664,
          6053,
          4401,
          4401,
          4401,
          6053,
          6053,
          5248,
          5248,
          5248,
          4226,
          4226,
          4226,
          3584,
          2300,
          2300,
          2300,
          3584,
          3584,
          2942,
          1279,
          1279,
          1279,
          2942,
          2942,
          2126,
          2126,
          2126,
          1094,
          1094,
          1094
        ]
      },
      {
        "from": 7911,
        "to": [
          7916
        ]
      },
      {
        "from": 7916,
        "to": [
          7979,
          8150
        ]
      },
      {
        "from": 7979,
        "to": [
          8125,
          8145
        ]
      },
      {
        "from": 8125,
        "to": [
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163
        ]
      },
      {
        "from": 8145,
        "to": [
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158,
          8158
        ]
      },
      {
        "from": 8150,
        "to": [
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163,
          8163
        ]
      },
      {
        "from": 8158,
        "to": [
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916,
          7916
        ]
      },
      {
        "from": 8163,
        "to": [
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621,
          7621
        ]
      },
      {
        "from": 8170,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 482
    }
  }
}