{
  "name": "Analysis_2022-04-04_17-02-59",
  "address": "",
  "binarySource": "606060405236156100885763ffffffff60e060020a60003504166302d05d3f81146100d457806319e44e32146101005780631d972d41146101225780636c5b3893146101525780638985646a146101735780639c36e141146101a2578063a5ee79d3146101c4578063b00606a5146101d9578063ba3ae0ce1461020c578063c8ccaebc14610262575b6100d25b60408051600160a060020a033316815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b005b34156100dc57fe5b6100e4610284565b60408051600160a060020a039092168252519081900360200190f35b341561010857fe5b610110610293565b60408051918252519081900360200190f35b341561012a57fe5b61013e600160a060020a0360043516610299565b604080519115158252519081900360200190f35b341561015a57fe5b6100d260043560ff602435166044356064356102ae565b005b610110600160a060020a036004358116906024351660443561042f565b60408051918252519081900360200190f35b34156101aa57fe5b610110610636565b60408051918252519081900360200190f35b34156101cc57fe5b6100d260043561063c565b005b34156101e157fe5b61013e60043560ff6024351660443560643561070f565b604080519115158252519081900360200190f35b341561021457fe5b61021f600435610b27565b60408051600160a060020a03978816815260208101969096528581019490945260608501929092521515608084015290921660a082015290519081900360c00190f35b341561026a57fe5b610110610b6b565b60408051918252519081900360200190f35b600054600160a060020a031681565b60035481565b60046020526000908152604090205460ff1681565b600084815260056020526040812080549091600160a060020a0390911690808215156102da5760006000fd5b6040805160008181526020808301845291830181905282518b815260ff8b16818401528084018a905260608101899052925160019360808082019493601f19840193928390039091019190866161da5a03f1151561033457fe5b505060408051601f190151600160a060020a03811660009081526004602052919091205490925060ff16151561036a5760006000fd5b506001808401546000898152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191681559485018390556002850183905560038501929092556004909301805474ffffffffffffffffffffffffffffffffffffffffff191690558051600160a060020a0385811682529381018b905292851683820152606083018290525190917fca50872e8dbe797b8a6e3b46999a89e817803ae4e9bf13d9eb00e06b744ab8ac919081900360800190a15b5050505050505050565b60008054819081908190819033600160a060020a0390811691161480159061045e5750670de0b6b3a764000034105b156104695760006000fd5b30935060014303408460036000815460010191905081905560405180846000191660001916815260200183600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001935050505060405180910390206001900492508288876040518084815260200183600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018281526020019350505050604051809103902094506005600086600019166000191681526020019081526020016000209150868260000160006101000a815481600160a060020a030219169083600160a060020a03160217905550858260010181905550828260020181905550429050808260030181905550600060009054906101000a9004600160a060020a0316600160a060020a031633600160a060020a031614156105b857600154016105cc565b60025460048301805460ff19166001179055015b60408051848152600160a060020a03808b166020830152891681830152606081018890526080810183905260a0810187905290517ff7bbf755ca0827886a2e5bc7d839ed5d9f14da68048d5958856638f327b190d79181900360c00190a15b505050509392505050565b60015481565b6000805433600160a060020a039081169116146106595760006000fd5b5060008181526005602052604090208054600160a060020a0316151561067f5760006000fd5b600481015460ff161515600114156106975760006000fd5b60048101805460ff1916600190811790915560025460038301548354928401546040805192909301825260208201869052600160a060020a03909316818301526060810192909252517f6a986774b4cc919ca896d976b6557fd6f382b2dbe0905e6d3827d09f5c00d0a19181900360800190a15b5050565b6000848152600560205260408120805460038201546001830154600160a060020a0390921691848080808615156107465760006000fd5b60018d8d8d8d604051806000526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000866161da5a03f115156107c157fe5b505060408051601f190151600160a060020a03811660009081526004602052919091205490945060ff1615156107f75760006000fd5b600488015442879003935060ff168015610812575060025483105b1561087b57600254604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b13565b6001548310156108e957600154604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b13565b60048801546101009004600160a060020a031691508115156109b257838860040160016101000a815481600160a060020a030219169083600160a060020a031602179055507fcd5e96ae38c657cb153094e978a03814b65338247f58f66857cfb4ece4ec26068d88878760405180856000191660001916815260200184600160a060020a0316600160a060020a0316815260200183815260200182600160a060020a0316600160a060020a0316815260200194505050505060405180910390a160009850610b13565b83600160a060020a031682600160a060020a031614156109d25760006000fd5b60008d815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff19168155600181018390556002810183905560038101839055600401805474ffffffffffffffffffffffffffffffffffffffffff1916905551600160a060020a0389169187156108fc02918891818181858888f1935050505090508015610ab657604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fa8945d0ccfa7876b6b24bb07cf7bec0537fc79264aaa16d67f7f7448720551309181900360a00190a1610b0f565b604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fbedb283d6c6fc7ce860a21f094467e0d3f6bdd653e2193617d800015933966cf9181900360a00190a15b8098505b5b5b5b5b5050505050505050949350505050565b60056020526000908152604090208054600182015460028301546003840154600490940154600160a060020a0393841694929391929160ff82169161010090041686565b600254815600a165627a7a72305820a03983112b24a0a474d30cb19cfcec23c798f1bd9313aaa72b6f35a12347cb1d0029",
  "binaryHash": "6b11bf7a",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820a03983112b24a0a474d30cb19cfcec23c798f1bd9313aaa72b6f35a12347cb1d0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649059379563
    }
  },
  "runtimeCfg": {
    "bytecode": "606060405236156100885763ffffffff60e060020a60003504166302d05d3f81146100d457806319e44e32146101005780631d972d41146101225780636c5b3893146101525780638985646a146101735780639c36e141146101a2578063a5ee79d3146101c4578063b00606a5146101d9578063ba3ae0ce1461020c578063c8ccaebc14610262575b6100d25b60408051600160a060020a033316815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b005b34156100dc57fe5b6100e4610284565b60408051600160a060020a039092168252519081900360200190f35b341561010857fe5b610110610293565b60408051918252519081900360200190f35b341561012a57fe5b61013e600160a060020a0360043516610299565b604080519115158252519081900360200190f35b341561015a57fe5b6100d260043560ff602435166044356064356102ae565b005b610110600160a060020a036004358116906024351660443561042f565b60408051918252519081900360200190f35b34156101aa57fe5b610110610636565b60408051918252519081900360200190f35b34156101cc57fe5b6100d260043561063c565b005b34156101e157fe5b61013e60043560ff6024351660443560643561070f565b604080519115158252519081900360200190f35b341561021457fe5b61021f600435610b27565b60408051600160a060020a03978816815260208101969096528581019490945260608501929092521515608084015290921660a082015290519081900360c00190f35b341561026a57fe5b610110610b6b565b60408051918252519081900360200190f35b600054600160a060020a031681565b60035481565b60046020526000908152604090205460ff1681565b600084815260056020526040812080549091600160a060020a0390911690808215156102da5760006000fd5b6040805160008181526020808301845291830181905282518b815260ff8b16818401528084018a905260608101899052925160019360808082019493601f19840193928390039091019190866161da5a03f1151561033457fe5b505060408051601f190151600160a060020a03811660009081526004602052919091205490925060ff16151561036a5760006000fd5b506001808401546000898152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191681559485018390556002850183905560038501929092556004909301805474ffffffffffffffffffffffffffffffffffffffffff191690558051600160a060020a0385811682529381018b905292851683820152606083018290525190917fca50872e8dbe797b8a6e3b46999a89e817803ae4e9bf13d9eb00e06b744ab8ac919081900360800190a15b5050505050505050565b60008054819081908190819033600160a060020a0390811691161480159061045e5750670de0b6b3a764000034105b156104695760006000fd5b30935060014303408460036000815460010191905081905560405180846000191660001916815260200183600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001935050505060405180910390206001900492508288876040518084815260200183600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018281526020019350505050604051809103902094506005600086600019166000191681526020019081526020016000209150868260000160006101000a815481600160a060020a030219169083600160a060020a03160217905550858260010181905550828260020181905550429050808260030181905550600060009054906101000a9004600160a060020a0316600160a060020a031633600160a060020a031614156105b857600154016105cc565b60025460048301805460ff19166001179055015b60408051848152600160a060020a03808b166020830152891681830152606081018890526080810183905260a0810187905290517ff7bbf755ca0827886a2e5bc7d839ed5d9f14da68048d5958856638f327b190d79181900360c00190a15b505050509392505050565b60015481565b6000805433600160a060020a039081169116146106595760006000fd5b5060008181526005602052604090208054600160a060020a0316151561067f5760006000fd5b600481015460ff161515600114156106975760006000fd5b60048101805460ff1916600190811790915560025460038301548354928401546040805192909301825260208201869052600160a060020a03909316818301526060810192909252517f6a986774b4cc919ca896d976b6557fd6f382b2dbe0905e6d3827d09f5c00d0a19181900360800190a15b5050565b6000848152600560205260408120805460038201546001830154600160a060020a0390921691848080808615156107465760006000fd5b60018d8d8d8d604051806000526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000866161da5a03f115156107c157fe5b505060408051601f190151600160a060020a03811660009081526004602052919091205490945060ff1615156107f75760006000fd5b600488015442879003935060ff168015610812575060025483105b1561087b57600254604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b13565b6001548310156108e957600154604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b13565b60048801546101009004600160a060020a031691508115156109b257838860040160016101000a815481600160a060020a030219169083600160a060020a031602179055507fcd5e96ae38c657cb153094e978a03814b65338247f58f66857cfb4ece4ec26068d88878760405180856000191660001916815260200184600160a060020a0316600160a060020a0316815260200183815260200182600160a060020a0316600160a060020a0316815260200194505050505060405180910390a160009850610b13565b83600160a060020a031682600160a060020a031614156109d25760006000fd5b60008d815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff19168155600181018390556002810183905560038101839055600401805474ffffffffffffffffffffffffffffffffffffffffff1916905551600160a060020a0389169187156108fc02918891818181858888f1935050505090508015610ab657604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fa8945d0ccfa7876b6b24bb07cf7bec0537fc79264aaa16d67f7f7448720551309181900360a00190a1610b0f565b604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fbedb283d6c6fc7ce860a21f094467e0d3f6bdd653e2193617d800015933966cf9181900360a00190a15b8098505b5b5b5b5b5050505050505050949350505050565b60056020526000908152604090208054600182015460028301546003840154600490940154600160a060020a0393841694929391929160ff82169161010090041686565b600254815600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052361561008857",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x0088\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff60e060020a60003504166302d05d3f81146100d457",
        "parsedOpcodes": "11: PUSH4 0xffffffff\n16: PUSH1 0xe0\n18: PUSH1 0x02\n20: EXP\n21: PUSH1 0x00\n23: CALLDATALOAD\n24: DIV\n25: AND\n26: PUSH4 0x02d05d3f\n31: DUP2\n32: EQ\n33: PUSH2 0x00d4\n36: JUMPI"
      },
      {
        "offset": 37,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806319e44e321461010057",
        "parsedOpcodes": "37: DUP1\n38: PUSH4 0x19e44e32\n43: EQ\n44: PUSH2 0x0100\n47: JUMPI"
      },
      {
        "offset": 48,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80631d972d411461012257",
        "parsedOpcodes": "48: DUP1\n49: PUSH4 0x1d972d41\n54: EQ\n55: PUSH2 0x0122\n58: JUMPI"
      },
      {
        "offset": 59,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80636c5b38931461015257",
        "parsedOpcodes": "59: DUP1\n60: PUSH4 0x6c5b3893\n65: EQ\n66: PUSH2 0x0152\n69: JUMPI"
      },
      {
        "offset": 70,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638985646a1461017357",
        "parsedOpcodes": "70: DUP1\n71: PUSH4 0x8985646a\n76: EQ\n77: PUSH2 0x0173\n80: JUMPI"
      },
      {
        "offset": 81,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80639c36e141146101a257",
        "parsedOpcodes": "81: DUP1\n82: PUSH4 0x9c36e141\n87: EQ\n88: PUSH2 0x01a2\n91: JUMPI"
      },
      {
        "offset": 92,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a5ee79d3146101c457",
        "parsedOpcodes": "92: DUP1\n93: PUSH4 0xa5ee79d3\n98: EQ\n99: PUSH2 0x01c4\n102: JUMPI"
      },
      {
        "offset": 103,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063b00606a5146101d957",
        "parsedOpcodes": "103: DUP1\n104: PUSH4 0xb00606a5\n109: EQ\n110: PUSH2 0x01d9\n113: JUMPI"
      },
      {
        "offset": 114,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ba3ae0ce1461020c57",
        "parsedOpcodes": "114: DUP1\n115: PUSH4 0xba3ae0ce\n120: EQ\n121: PUSH2 0x020c\n124: JUMPI"
      },
      {
        "offset": 125,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063c8ccaebc1461026257",
        "parsedOpcodes": "125: DUP1\n126: PUSH4 0xc8ccaebc\n131: EQ\n132: PUSH2 0x0262\n135: JUMPI"
      },
      {
        "offset": 136,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100d2",
        "parsedOpcodes": "136: JUMPDEST\n137: PUSH2 0x00d2"
      },
      {
        "offset": 140,
        "length": 68,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051600160a060020a033316815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a1",
        "parsedOpcodes": "140: JUMPDEST\n141: PUSH1 0x40\n143: DUP1\n144: MLOAD\n145: PUSH1 0x01\n147: PUSH1 0xa0\n149: PUSH1 0x02\n151: EXP\n152: SUB\n153: CALLER\n154: AND\n155: DUP2\n156: MSTORE\n157: CALLVALUE\n158: PUSH1 0x20\n160: DUP3\n161: ADD\n162: MSTORE\n163: DUP2\n164: MLOAD\n165: PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n198: SWAP3\n199: SWAP2\n200: DUP2\n201: SWAP1\n202: SUB\n203: SWAP1\n204: SWAP2\n205: ADD\n206: SWAP1\n207: LOG1"
      },
      {
        "offset": 208,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "208: JUMPDEST\n209: JUMP"
      },
      {
        "offset": 210,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "210: JUMPDEST\n211: STOP"
      },
      {
        "offset": 212,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100dc57",
        "parsedOpcodes": "212: JUMPDEST\n213: CALLVALUE\n214: ISZERO\n215: PUSH2 0x00dc\n218: JUMPI"
      },
      {
        "offset": 219,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "219: INVALID"
      },
      {
        "offset": 220,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100e461028456",
        "parsedOpcodes": "220: JUMPDEST\n221: PUSH2 0x00e4\n224: PUSH2 0x0284\n227: JUMP"
      },
      {
        "offset": 228,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051600160a060020a039092168252519081900360200190f3",
        "parsedOpcodes": "228: JUMPDEST\n229: PUSH1 0x40\n231: DUP1\n232: MLOAD\n233: PUSH1 0x01\n235: PUSH1 0xa0\n237: PUSH1 0x02\n239: EXP\n240: SUB\n241: SWAP1\n242: SWAP3\n243: AND\n244: DUP3\n245: MSTORE\n246: MLOAD\n247: SWAP1\n248: DUP2\n249: SWAP1\n250: SUB\n251: PUSH1 0x20\n253: ADD\n254: SWAP1\n255: RETURN"
      },
      {
        "offset": 256,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561010857",
        "parsedOpcodes": "256: JUMPDEST\n257: CALLVALUE\n258: ISZERO\n259: PUSH2 0x0108\n262: JUMPI"
      },
      {
        "offset": 263,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "263: INVALID"
      },
      {
        "offset": 264,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61011061029356",
        "parsedOpcodes": "264: JUMPDEST\n265: PUSH2 0x0110\n268: PUSH2 0x0293\n271: JUMP"
      },
      {
        "offset": 272,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "272: JUMPDEST\n273: PUSH1 0x40\n275: DUP1\n276: MLOAD\n277: SWAP2\n278: DUP3\n279: MSTORE\n280: MLOAD\n281: SWAP1\n282: DUP2\n283: SWAP1\n284: SUB\n285: PUSH1 0x20\n287: ADD\n288: SWAP1\n289: RETURN"
      },
      {
        "offset": 290,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561012a57",
        "parsedOpcodes": "290: JUMPDEST\n291: CALLVALUE\n292: ISZERO\n293: PUSH2 0x012a\n296: JUMPI"
      },
      {
        "offset": 297,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "297: INVALID"
      },
      {
        "offset": 298,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61013e600160a060020a036004351661029956",
        "parsedOpcodes": "298: JUMPDEST\n299: PUSH2 0x013e\n302: PUSH1 0x01\n304: PUSH1 0xa0\n306: PUSH1 0x02\n308: EXP\n309: SUB\n310: PUSH1 0x04\n312: CALLDATALOAD\n313: AND\n314: PUSH2 0x0299\n317: JUMP"
      },
      {
        "offset": 318,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "318: JUMPDEST\n319: PUSH1 0x40\n321: DUP1\n322: MLOAD\n323: SWAP2\n324: ISZERO\n325: ISZERO\n326: DUP3\n327: MSTORE\n328: MLOAD\n329: SWAP1\n330: DUP2\n331: SWAP1\n332: SUB\n333: PUSH1 0x20\n335: ADD\n336: SWAP1\n337: RETURN"
      },
      {
        "offset": 338,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561015a57",
        "parsedOpcodes": "338: JUMPDEST\n339: CALLVALUE\n340: ISZERO\n341: PUSH2 0x015a\n344: JUMPI"
      },
      {
        "offset": 345,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "345: INVALID"
      },
      {
        "offset": 346,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b6100d260043560ff602435166044356064356102ae56",
        "parsedOpcodes": "346: JUMPDEST\n347: PUSH2 0x00d2\n350: PUSH1 0x04\n352: CALLDATALOAD\n353: PUSH1 0xff\n355: PUSH1 0x24\n357: CALLDATALOAD\n358: AND\n359: PUSH1 0x44\n361: CALLDATALOAD\n362: PUSH1 0x64\n364: CALLDATALOAD\n365: PUSH2 0x02ae\n368: JUMP"
      },
      {
        "offset": 369,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "369: JUMPDEST\n370: STOP"
      },
      {
        "offset": 371,
        "length": 29,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b610110600160a060020a036004358116906024351660443561042f56",
        "parsedOpcodes": "371: JUMPDEST\n372: PUSH2 0x0110\n375: PUSH1 0x01\n377: PUSH1 0xa0\n379: PUSH1 0x02\n381: EXP\n382: SUB\n383: PUSH1 0x04\n385: CALLDATALOAD\n386: DUP2\n387: AND\n388: SWAP1\n389: PUSH1 0x24\n391: CALLDATALOAD\n392: AND\n393: PUSH1 0x44\n395: CALLDATALOAD\n396: PUSH2 0x042f\n399: JUMP"
      },
      {
        "offset": 400,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "400: JUMPDEST\n401: PUSH1 0x40\n403: DUP1\n404: MLOAD\n405: SWAP2\n406: DUP3\n407: MSTORE\n408: MLOAD\n409: SWAP1\n410: DUP2\n411: SWAP1\n412: SUB\n413: PUSH1 0x20\n415: ADD\n416: SWAP1\n417: RETURN"
      },
      {
        "offset": 418,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101aa57",
        "parsedOpcodes": "418: JUMPDEST\n419: CALLVALUE\n420: ISZERO\n421: PUSH2 0x01aa\n424: JUMPI"
      },
      {
        "offset": 425,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "425: INVALID"
      },
      {
        "offset": 426,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61011061063656",
        "parsedOpcodes": "426: JUMPDEST\n427: PUSH2 0x0110\n430: PUSH2 0x0636\n433: JUMP"
      },
      {
        "offset": 434,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "434: JUMPDEST\n435: PUSH1 0x40\n437: DUP1\n438: MLOAD\n439: SWAP2\n440: DUP3\n441: MSTORE\n442: MLOAD\n443: SWAP1\n444: DUP2\n445: SWAP1\n446: SUB\n447: PUSH1 0x20\n449: ADD\n450: SWAP1\n451: RETURN"
      },
      {
        "offset": 452,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101cc57",
        "parsedOpcodes": "452: JUMPDEST\n453: CALLVALUE\n454: ISZERO\n455: PUSH2 0x01cc\n458: JUMPI"
      },
      {
        "offset": 459,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "459: INVALID"
      },
      {
        "offset": 460,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100d260043561063c56",
        "parsedOpcodes": "460: JUMPDEST\n461: PUSH2 0x00d2\n464: PUSH1 0x04\n466: CALLDATALOAD\n467: PUSH2 0x063c\n470: JUMP"
      },
      {
        "offset": 471,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "471: JUMPDEST\n472: STOP"
      },
      {
        "offset": 473,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101e157",
        "parsedOpcodes": "473: JUMPDEST\n474: CALLVALUE\n475: ISZERO\n476: PUSH2 0x01e1\n479: JUMPI"
      },
      {
        "offset": 480,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "480: INVALID"
      },
      {
        "offset": 481,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b61013e60043560ff6024351660443560643561070f56",
        "parsedOpcodes": "481: JUMPDEST\n482: PUSH2 0x013e\n485: PUSH1 0x04\n487: CALLDATALOAD\n488: PUSH1 0xff\n490: PUSH1 0x24\n492: CALLDATALOAD\n493: AND\n494: PUSH1 0x44\n496: CALLDATALOAD\n497: PUSH1 0x64\n499: CALLDATALOAD\n500: PUSH2 0x070f\n503: JUMP"
      },
      {
        "offset": 504,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "504: JUMPDEST\n505: PUSH1 0x40\n507: DUP1\n508: MLOAD\n509: SWAP2\n510: ISZERO\n511: ISZERO\n512: DUP3\n513: MSTORE\n514: MLOAD\n515: SWAP1\n516: DUP2\n517: SWAP1\n518: SUB\n519: PUSH1 0x20\n521: ADD\n522: SWAP1\n523: RETURN"
      },
      {
        "offset": 524,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561021457",
        "parsedOpcodes": "524: JUMPDEST\n525: CALLVALUE\n526: ISZERO\n527: PUSH2 0x0214\n530: JUMPI"
      },
      {
        "offset": 531,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "531: INVALID"
      },
      {
        "offset": 532,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61021f600435610b2756",
        "parsedOpcodes": "532: JUMPDEST\n533: PUSH2 0x021f\n536: PUSH1 0x04\n538: CALLDATALOAD\n539: PUSH2 0x0b27\n542: JUMP"
      },
      {
        "offset": 543,
        "length": 67,
        "type": "dispatcher",
        "stackBalance": -6,
        "bytecodeHex": "5b60408051600160a060020a03978816815260208101969096528581019490945260608501929092521515608084015290921660a082015290519081900360c00190f3",
        "parsedOpcodes": "543: JUMPDEST\n544: PUSH1 0x40\n546: DUP1\n547: MLOAD\n548: PUSH1 0x01\n550: PUSH1 0xa0\n552: PUSH1 0x02\n554: EXP\n555: SUB\n556: SWAP8\n557: DUP9\n558: AND\n559: DUP2\n560: MSTORE\n561: PUSH1 0x20\n563: DUP2\n564: ADD\n565: SWAP7\n566: SWAP1\n567: SWAP7\n568: MSTORE\n569: DUP6\n570: DUP2\n571: ADD\n572: SWAP5\n573: SWAP1\n574: SWAP5\n575: MSTORE\n576: PUSH1 0x60\n578: DUP6\n579: ADD\n580: SWAP3\n581: SWAP1\n582: SWAP3\n583: MSTORE\n584: ISZERO\n585: ISZERO\n586: PUSH1 0x80\n588: DUP5\n589: ADD\n590: MSTORE\n591: SWAP1\n592: SWAP3\n593: AND\n594: PUSH1 0xa0\n596: DUP3\n597: ADD\n598: MSTORE\n599: SWAP1\n600: MLOAD\n601: SWAP1\n602: DUP2\n603: SWAP1\n604: SUB\n605: PUSH1 0xc0\n607: ADD\n608: SWAP1\n609: RETURN"
      },
      {
        "offset": 610,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561026a57",
        "parsedOpcodes": "610: JUMPDEST\n611: CALLVALUE\n612: ISZERO\n613: PUSH2 0x026a\n616: JUMPI"
      },
      {
        "offset": 617,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "617: INVALID"
      },
      {
        "offset": 618,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b610110610b6b56",
        "parsedOpcodes": "618: JUMPDEST\n619: PUSH2 0x0110\n622: PUSH2 0x0b6b\n625: JUMP"
      },
      {
        "offset": 626,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "626: JUMPDEST\n627: PUSH1 0x40\n629: DUP1\n630: MLOAD\n631: SWAP2\n632: DUP3\n633: MSTORE\n634: MLOAD\n635: SWAP1\n636: DUP2\n637: SWAP1\n638: SUB\n639: PUSH1 0x20\n641: ADD\n642: SWAP1\n643: RETURN"
      },
      {
        "offset": 644,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600054600160a060020a03168156",
        "parsedOpcodes": "644: JUMPDEST\n645: PUSH1 0x00\n647: SLOAD\n648: PUSH1 0x01\n650: PUSH1 0xa0\n652: PUSH1 0x02\n654: EXP\n655: SUB\n656: AND\n657: DUP2\n658: JUMP"
      },
      {
        "offset": 659,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6003548156",
        "parsedOpcodes": "659: JUMPDEST\n660: PUSH1 0x03\n662: SLOAD\n663: DUP2\n664: JUMP"
      },
      {
        "offset": 665,
        "length": 21,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60046020526000908152604090205460ff168156",
        "parsedOpcodes": "665: JUMPDEST\n666: PUSH1 0x04\n668: PUSH1 0x20\n670: MSTORE\n671: PUSH1 0x00\n673: SWAP1\n674: DUP2\n675: MSTORE\n676: PUSH1 0x40\n678: SWAP1\n679: SHA3\n680: SLOAD\n681: PUSH1 0xff\n683: AND\n684: DUP2\n685: JUMP"
      },
      {
        "offset": 686,
        "length": 39,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b600084815260056020526040812080549091600160a060020a0390911690808215156102da57",
        "parsedOpcodes": "686: JUMPDEST\n687: PUSH1 0x00\n689: DUP5\n690: DUP2\n691: MSTORE\n692: PUSH1 0x05\n694: PUSH1 0x20\n696: MSTORE\n697: PUSH1 0x40\n699: DUP2\n700: SHA3\n701: DUP1\n702: SLOAD\n703: SWAP1\n704: SWAP2\n705: PUSH1 0x01\n707: PUSH1 0xa0\n709: PUSH1 0x02\n711: EXP\n712: SUB\n713: SWAP1\n714: SWAP2\n715: AND\n716: SWAP1\n717: DUP1\n718: DUP3\n719: ISZERO\n720: ISZERO\n721: PUSH2 0x02da\n724: JUMPI"
      },
      {
        "offset": 725,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "725: PUSH1 0x00\n727: PUSH1 0x00\n729: REVERT"
      },
      {
        "offset": 730,
        "length": 89,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b6040805160008181526020808301845291830181905282518b815260ff8b16818401528084018a905260608101899052925160019360808082019493601f19840193928390039091019190866161da5a03f1151561033457",
        "parsedOpcodes": "730: JUMPDEST\n731: PUSH1 0x40\n733: DUP1\n734: MLOAD\n735: PUSH1 0x00\n737: DUP2\n738: DUP2\n739: MSTORE\n740: PUSH1 0x20\n742: DUP1\n743: DUP4\n744: ADD\n745: DUP5\n746: MSTORE\n747: SWAP2\n748: DUP4\n749: ADD\n750: DUP2\n751: SWAP1\n752: MSTORE\n753: DUP3\n754: MLOAD\n755: DUP12\n756: DUP2\n757: MSTORE\n758: PUSH1 0xff\n760: DUP12\n761: AND\n762: DUP2\n763: DUP5\n764: ADD\n765: MSTORE\n766: DUP1\n767: DUP5\n768: ADD\n769: DUP11\n770: SWAP1\n771: MSTORE\n772: PUSH1 0x60\n774: DUP2\n775: ADD\n776: DUP10\n777: SWAP1\n778: MSTORE\n779: SWAP3\n780: MLOAD\n781: PUSH1 0x01\n783: SWAP4\n784: PUSH1 0x80\n786: DUP1\n787: DUP3\n788: ADD\n789: SWAP5\n790: SWAP4\n791: PUSH1 0x1f\n793: NOT\n794: DUP5\n795: ADD\n796: SWAP4\n797: SWAP3\n798: DUP4\n799: SWAP1\n800: SUB\n801: SWAP1\n802: SWAP2\n803: ADD\n804: SWAP2\n805: SWAP1\n806: DUP7\n807: PUSH2 0x61da\n810: GAS\n811: SUB\n812: CALL\n813: ISZERO\n814: ISZERO\n815: PUSH2 0x0334\n818: JUMPI"
      },
      {
        "offset": 819,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "819: INVALID"
      },
      {
        "offset": 820,
        "length": 49,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505060408051601f190151600160a060020a03811660009081526004602052919091205490925060ff16151561036a57",
        "parsedOpcodes": "820: JUMPDEST\n821: POP\n822: POP\n823: PUSH1 0x40\n825: DUP1\n826: MLOAD\n827: PUSH1 0x1f\n829: NOT\n830: ADD\n831: MLOAD\n832: PUSH1 0x01\n834: PUSH1 0xa0\n836: PUSH1 0x02\n838: EXP\n839: SUB\n840: DUP2\n841: AND\n842: PUSH1 0x00\n844: SWAP1\n845: DUP2\n846: MSTORE\n847: PUSH1 0x04\n849: PUSH1 0x20\n851: MSTORE\n852: SWAP2\n853: SWAP1\n854: SWAP2\n855: SHA3\n856: SLOAD\n857: SWAP1\n858: SWAP3\n859: POP\n860: PUSH1 0xff\n862: AND\n863: ISZERO\n864: ISZERO\n865: PUSH2 0x036a\n868: JUMPI"
      },
      {
        "offset": 869,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "869: PUSH1 0x00\n871: PUSH1 0x00\n873: REVERT"
      },
      {
        "offset": 874,
        "length": 187,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506001808401546000898152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191681559485018390556002850183905560038501929092556004909301805474ffffffffffffffffffffffffffffffffffffffffff191690558051600160a060020a0385811682529381018b905292851683820152606083018290525190917fca50872e8dbe797b8a6e3b46999a89e817803ae4e9bf13d9eb00e06b744ab8ac919081900360800190a1",
        "parsedOpcodes": "874: JUMPDEST\n875: POP\n876: PUSH1 0x01\n878: DUP1\n879: DUP5\n880: ADD\n881: SLOAD\n882: PUSH1 0x00\n884: DUP10\n885: DUP2\n886: MSTORE\n887: PUSH1 0x05\n889: PUSH1 0x20\n891: SWAP1\n892: DUP2\n893: MSTORE\n894: PUSH1 0x40\n896: DUP1\n897: DUP4\n898: SHA3\n899: DUP1\n900: SLOAD\n901: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n922: NOT\n923: AND\n924: DUP2\n925: SSTORE\n926: SWAP5\n927: DUP6\n928: ADD\n929: DUP4\n930: SWAP1\n931: SSTORE\n932: PUSH1 0x02\n934: DUP6\n935: ADD\n936: DUP4\n937: SWAP1\n938: SSTORE\n939: PUSH1 0x03\n941: DUP6\n942: ADD\n943: SWAP3\n944: SWAP1\n945: SWAP3\n946: SSTORE\n947: PUSH1 0x04\n949: SWAP1\n950: SWAP4\n951: ADD\n952: DUP1\n953: SLOAD\n954: PUSH21 0xffffffffffffffffffffffffffffffffffffffffff\n976: NOT\n977: AND\n978: SWAP1\n979: SSTORE\n980: DUP1\n981: MLOAD\n982: PUSH1 0x01\n984: PUSH1 0xa0\n986: PUSH1 0x02\n988: EXP\n989: SUB\n990: DUP6\n991: DUP2\n992: AND\n993: DUP3\n994: MSTORE\n995: SWAP4\n996: DUP2\n997: ADD\n998: DUP12\n999: SWAP1\n1000: MSTORE\n1001: SWAP3\n1002: DUP6\n1003: AND\n1004: DUP4\n1005: DUP3\n1006: ADD\n1007: MSTORE\n1008: PUSH1 0x60\n1010: DUP4\n1011: ADD\n1012: DUP3\n1013: SWAP1\n1014: MSTORE\n1015: MLOAD\n1016: SWAP1\n1017: SWAP2\n1018: PUSH32 0xca50872e8dbe797b8a6e3b46999a89e817803ae4e9bf13d9eb00e06b744ab8ac\n1051: SWAP2\n1052: SWAP1\n1053: DUP2\n1054: SWAP1\n1055: SUB\n1056: PUSH1 0x80\n1058: ADD\n1059: SWAP1\n1060: LOG1"
      },
      {
        "offset": 1061,
        "length": 10,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b505050505050505056",
        "parsedOpcodes": "1061: JUMPDEST\n1062: POP\n1063: POP\n1064: POP\n1065: POP\n1066: POP\n1067: POP\n1068: POP\n1069: POP\n1070: JUMP"
      },
      {
        "offset": 1071,
        "length": 35,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b60008054819081908190819033600160a060020a0390811691161480159061045e57",
        "parsedOpcodes": "1071: JUMPDEST\n1072: PUSH1 0x00\n1074: DUP1\n1075: SLOAD\n1076: DUP2\n1077: SWAP1\n1078: DUP2\n1079: SWAP1\n1080: DUP2\n1081: SWAP1\n1082: DUP2\n1083: SWAP1\n1084: CALLER\n1085: PUSH1 0x01\n1087: PUSH1 0xa0\n1089: PUSH1 0x02\n1091: EXP\n1092: SUB\n1093: SWAP1\n1094: DUP2\n1095: AND\n1096: SWAP2\n1097: AND\n1098: EQ\n1099: DUP1\n1100: ISZERO\n1101: SWAP1\n1102: PUSH2 0x045e\n1105: JUMPI"
      },
      {
        "offset": 1106,
        "length": 12,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50670de0b6b3a76400003410",
        "parsedOpcodes": "1106: POP\n1107: PUSH8 0x0de0b6b3a7640000\n1116: CALLVALUE\n1117: LT"
      },
      {
        "offset": 1118,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561046957",
        "parsedOpcodes": "1118: JUMPDEST\n1119: ISZERO\n1120: PUSH2 0x0469\n1123: JUMPI"
      },
      {
        "offset": 1124,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1124: PUSH1 0x00\n1126: PUSH1 0x00\n1128: REVERT"
      },
      {
        "offset": 1129,
        "length": 327,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b30935060014303408460036000815460010191905081905560405180846000191660001916815260200183600160a060020a0316600160a060020a03166c01000000000000000000000000028152601401828152602001935050505060405180910390206001900492508288876040518084815260200183600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018281526020019350505050604051809103902094506005600086600019166000191681526020019081526020016000209150868260000160006101000a815481600160a060020a030219169083600160a060020a03160217905550858260010181905550828260020181905550429050808260030181905550600060009054906101000a9004600160a060020a0316600160a060020a031633600160a060020a031614156105b857",
        "parsedOpcodes": "1129: JUMPDEST\n1130: ADDRESS\n1131: SWAP4\n1132: POP\n1133: PUSH1 0x01\n1135: NUMBER\n1136: SUB\n1137: BLOCKHASH\n1138: DUP5\n1139: PUSH1 0x03\n1141: PUSH1 0x00\n1143: DUP2\n1144: SLOAD\n1145: PUSH1 0x01\n1147: ADD\n1148: SWAP2\n1149: SWAP1\n1150: POP\n1151: DUP2\n1152: SWAP1\n1153: SSTORE\n1154: PUSH1 0x40\n1156: MLOAD\n1157: DUP1\n1158: DUP5\n1159: PUSH1 0x00\n1161: NOT\n1162: AND\n1163: PUSH1 0x00\n1165: NOT\n1166: AND\n1167: DUP2\n1168: MSTORE\n1169: PUSH1 0x20\n1171: ADD\n1172: DUP4\n1173: PUSH1 0x01\n1175: PUSH1 0xa0\n1177: PUSH1 0x02\n1179: EXP\n1180: SUB\n1181: AND\n1182: PUSH1 0x01\n1184: PUSH1 0xa0\n1186: PUSH1 0x02\n1188: EXP\n1189: SUB\n1190: AND\n1191: PUSH13 0x01000000000000000000000000\n1205: MUL\n1206: DUP2\n1207: MSTORE\n1208: PUSH1 0x14\n1210: ADD\n1211: DUP3\n1212: DUP2\n1213: MSTORE\n1214: PUSH1 0x20\n1216: ADD\n1217: SWAP4\n1218: POP\n1219: POP\n1220: POP\n1221: POP\n1222: PUSH1 0x40\n1224: MLOAD\n1225: DUP1\n1226: SWAP2\n1227: SUB\n1228: SWAP1\n1229: SHA3\n1230: PUSH1 0x01\n1232: SWAP1\n1233: DIV\n1234: SWAP3\n1235: POP\n1236: DUP3\n1237: DUP9\n1238: DUP8\n1239: PUSH1 0x40\n1241: MLOAD\n1242: DUP1\n1243: DUP5\n1244: DUP2\n1245: MSTORE\n1246: PUSH1 0x20\n1248: ADD\n1249: DUP4\n1250: PUSH1 0x01\n1252: PUSH1 0xa0\n1254: PUSH1 0x02\n1256: EXP\n1257: SUB\n1258: AND\n1259: PUSH1 0x01\n1261: PUSH1 0xa0\n1263: PUSH1 0x02\n1265: EXP\n1266: SUB\n1267: AND\n1268: PUSH13 0x01000000000000000000000000\n1282: MUL\n1283: DUP2\n1284: MSTORE\n1285: PUSH1 0x14\n1287: ADD\n1288: DUP3\n1289: DUP2\n1290: MSTORE\n1291: PUSH1 0x20\n1293: ADD\n1294: SWAP4\n1295: POP\n1296: POP\n1297: POP\n1298: POP\n1299: PUSH1 0x40\n1301: MLOAD\n1302: DUP1\n1303: SWAP2\n1304: SUB\n1305: SWAP1\n1306: SHA3\n1307: SWAP5\n1308: POP\n1309: PUSH1 0x05\n1311: PUSH1 0x00\n1313: DUP7\n1314: PUSH1 0x00\n1316: NOT\n1317: AND\n1318: PUSH1 0x00\n1320: NOT\n1321: AND\n1322: DUP2\n1323: MSTORE\n1324: PUSH1 0x20\n1326: ADD\n1327: SWAP1\n1328: DUP2\n1329: MSTORE\n1330: PUSH1 0x20\n1332: ADD\n1333: PUSH1 0x00\n1335: SHA3\n1336: SWAP2\n1337: POP\n1338: DUP7\n1339: DUP3\n1340: PUSH1 0x00\n1342: ADD\n1343: PUSH1 0x00\n1345: PUSH2 0x0100\n1348: EXP\n1349: DUP2\n1350: SLOAD\n1351: DUP2\n1352: PUSH1 0x01\n1354: PUSH1 0xa0\n1356: PUSH1 0x02\n1358: EXP\n1359: SUB\n1360: MUL\n1361: NOT\n1362: AND\n1363: SWAP1\n1364: DUP4\n1365: PUSH1 0x01\n1367: PUSH1 0xa0\n1369: PUSH1 0x02\n1371: EXP\n1372: SUB\n1373: AND\n1374: MUL\n1375: OR\n1376: SWAP1\n1377: SSTORE\n1378: POP\n1379: DUP6\n1380: DUP3\n1381: PUSH1 0x01\n1383: ADD\n1384: DUP2\n1385: SWAP1\n1386: SSTORE\n1387: POP\n1388: DUP3\n1389: DUP3\n1390: PUSH1 0x02\n1392: ADD\n1393: DUP2\n1394: SWAP1\n1395: SSTORE\n1396: POP\n1397: TIMESTAMP\n1398: SWAP1\n1399: POP\n1400: DUP1\n1401: DUP3\n1402: PUSH1 0x03\n1404: ADD\n1405: DUP2\n1406: SWAP1\n1407: SSTORE\n1408: POP\n1409: PUSH1 0x00\n1411: PUSH1 0x00\n1413: SWAP1\n1414: SLOAD\n1415: SWAP1\n1416: PUSH2 0x0100\n1419: EXP\n1420: SWAP1\n1421: DIV\n1422: PUSH1 0x01\n1424: PUSH1 0xa0\n1426: PUSH1 0x02\n1428: EXP\n1429: SUB\n1430: AND\n1431: PUSH1 0x01\n1433: PUSH1 0xa0\n1435: PUSH1 0x02\n1437: EXP\n1438: SUB\n1439: AND\n1440: CALLER\n1441: PUSH1 0x01\n1443: PUSH1 0xa0\n1445: PUSH1 0x02\n1447: EXP\n1448: SUB\n1449: AND\n1450: EQ\n1451: ISZERO\n1452: PUSH2 0x05b8\n1455: JUMPI"
      },
      {
        "offset": 1456,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600154016105cc56",
        "parsedOpcodes": "1456: PUSH1 0x01\n1458: SLOAD\n1459: ADD\n1460: PUSH2 0x05cc\n1463: JUMP"
      },
      {
        "offset": 1464,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60025460048301805460ff1916600117905501",
        "parsedOpcodes": "1464: JUMPDEST\n1465: PUSH1 0x02\n1467: SLOAD\n1468: PUSH1 0x04\n1470: DUP4\n1471: ADD\n1472: DUP1\n1473: SLOAD\n1474: PUSH1 0xff\n1476: NOT\n1477: AND\n1478: PUSH1 0x01\n1480: OR\n1481: SWAP1\n1482: SSTORE\n1483: ADD"
      },
      {
        "offset": 1484,
        "length": 95,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051848152600160a060020a03808b166020830152891681830152606081018890526080810183905260a0810187905290517ff7bbf755ca0827886a2e5bc7d839ed5d9f14da68048d5958856638f327b190d79181900360c00190a1",
        "parsedOpcodes": "1484: JUMPDEST\n1485: PUSH1 0x40\n1487: DUP1\n1488: MLOAD\n1489: DUP5\n1490: DUP2\n1491: MSTORE\n1492: PUSH1 0x01\n1494: PUSH1 0xa0\n1496: PUSH1 0x02\n1498: EXP\n1499: SUB\n1500: DUP1\n1501: DUP12\n1502: AND\n1503: PUSH1 0x20\n1505: DUP4\n1506: ADD\n1507: MSTORE\n1508: DUP10\n1509: AND\n1510: DUP2\n1511: DUP4\n1512: ADD\n1513: MSTORE\n1514: PUSH1 0x60\n1516: DUP2\n1517: ADD\n1518: DUP9\n1519: SWAP1\n1520: MSTORE\n1521: PUSH1 0x80\n1523: DUP2\n1524: ADD\n1525: DUP4\n1526: SWAP1\n1527: MSTORE\n1528: PUSH1 0xa0\n1530: DUP2\n1531: ADD\n1532: DUP8\n1533: SWAP1\n1534: MSTORE\n1535: SWAP1\n1536: MLOAD\n1537: PUSH32 0xf7bbf755ca0827886a2e5bc7d839ed5d9f14da68048d5958856638f327b190d7\n1570: SWAP2\n1571: DUP2\n1572: SWAP1\n1573: SUB\n1574: PUSH1 0xc0\n1576: ADD\n1577: SWAP1\n1578: LOG1"
      },
      {
        "offset": 1579,
        "length": 11,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b50505050939250505056",
        "parsedOpcodes": "1579: JUMPDEST\n1580: POP\n1581: POP\n1582: POP\n1583: POP\n1584: SWAP4\n1585: SWAP3\n1586: POP\n1587: POP\n1588: POP\n1589: JUMP"
      },
      {
        "offset": 1590,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001548156",
        "parsedOpcodes": "1590: JUMPDEST\n1591: PUSH1 0x01\n1593: SLOAD\n1594: DUP2\n1595: JUMP"
      },
      {
        "offset": 1596,
        "length": 24,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000805433600160a060020a0390811691161461065957",
        "parsedOpcodes": "1596: JUMPDEST\n1597: PUSH1 0x00\n1599: DUP1\n1600: SLOAD\n1601: CALLER\n1602: PUSH1 0x01\n1604: PUSH1 0xa0\n1606: PUSH1 0x02\n1608: EXP\n1609: SUB\n1610: SWAP1\n1611: DUP2\n1612: AND\n1613: SWAP2\n1614: AND\n1615: EQ\n1616: PUSH2 0x0659\n1619: JUMPI"
      },
      {
        "offset": 1620,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1620: PUSH1 0x00\n1622: PUSH1 0x00\n1624: REVERT"
      },
      {
        "offset": 1625,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b5060008181526005602052604090208054600160a060020a0316151561067f57",
        "parsedOpcodes": "1625: JUMPDEST\n1626: POP\n1627: PUSH1 0x00\n1629: DUP2\n1630: DUP2\n1631: MSTORE\n1632: PUSH1 0x05\n1634: PUSH1 0x20\n1636: MSTORE\n1637: PUSH1 0x40\n1639: SWAP1\n1640: SHA3\n1641: DUP1\n1642: SLOAD\n1643: PUSH1 0x01\n1645: PUSH1 0xa0\n1647: PUSH1 0x02\n1649: EXP\n1650: SUB\n1651: AND\n1652: ISZERO\n1653: ISZERO\n1654: PUSH2 0x067f\n1657: JUMPI"
      },
      {
        "offset": 1658,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1658: PUSH1 0x00\n1660: PUSH1 0x00\n1662: REVERT"
      },
      {
        "offset": 1663,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600481015460ff1615156001141561069757",
        "parsedOpcodes": "1663: JUMPDEST\n1664: PUSH1 0x04\n1666: DUP2\n1667: ADD\n1668: SLOAD\n1669: PUSH1 0xff\n1671: AND\n1672: ISZERO\n1673: ISZERO\n1674: PUSH1 0x01\n1676: EQ\n1677: ISZERO\n1678: PUSH2 0x0697\n1681: JUMPI"
      },
      {
        "offset": 1682,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1682: PUSH1 0x00\n1684: PUSH1 0x00\n1686: REVERT"
      },
      {
        "offset": 1687,
        "length": 116,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60048101805460ff1916600190811790915560025460038301548354928401546040805192909301825260208201869052600160a060020a03909316818301526060810192909252517f6a986774b4cc919ca896d976b6557fd6f382b2dbe0905e6d3827d09f5c00d0a19181900360800190a1",
        "parsedOpcodes": "1687: JUMPDEST\n1688: PUSH1 0x04\n1690: DUP2\n1691: ADD\n1692: DUP1\n1693: SLOAD\n1694: PUSH1 0xff\n1696: NOT\n1697: AND\n1698: PUSH1 0x01\n1700: SWAP1\n1701: DUP2\n1702: OR\n1703: SWAP1\n1704: SWAP2\n1705: SSTORE\n1706: PUSH1 0x02\n1708: SLOAD\n1709: PUSH1 0x03\n1711: DUP4\n1712: ADD\n1713: SLOAD\n1714: DUP4\n1715: SLOAD\n1716: SWAP3\n1717: DUP5\n1718: ADD\n1719: SLOAD\n1720: PUSH1 0x40\n1722: DUP1\n1723: MLOAD\n1724: SWAP3\n1725: SWAP1\n1726: SWAP4\n1727: ADD\n1728: DUP3\n1729: MSTORE\n1730: PUSH1 0x20\n1732: DUP3\n1733: ADD\n1734: DUP7\n1735: SWAP1\n1736: MSTORE\n1737: PUSH1 0x01\n1739: PUSH1 0xa0\n1741: PUSH1 0x02\n1743: EXP\n1744: SUB\n1745: SWAP1\n1746: SWAP4\n1747: AND\n1748: DUP2\n1749: DUP4\n1750: ADD\n1751: MSTORE\n1752: PUSH1 0x60\n1754: DUP2\n1755: ADD\n1756: SWAP3\n1757: SWAP1\n1758: SWAP3\n1759: MSTORE\n1760: MLOAD\n1761: PUSH32 0x6a986774b4cc919ca896d976b6557fd6f382b2dbe0905e6d3827d09f5c00d0a1\n1794: SWAP2\n1795: DUP2\n1796: SWAP1\n1797: SUB\n1798: PUSH1 0x80\n1800: ADD\n1801: SWAP1\n1802: LOG1"
      },
      {
        "offset": 1803,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1803: JUMPDEST\n1804: POP\n1805: POP\n1806: JUMP"
      },
      {
        "offset": 1807,
        "length": 50,
        "type": "common",
        "stackBalance": 9,
        "bytecodeHex": "5b6000848152600560205260408120805460038201546001830154600160a060020a03909216918480808086151561074657",
        "parsedOpcodes": "1807: JUMPDEST\n1808: PUSH1 0x00\n1810: DUP5\n1811: DUP2\n1812: MSTORE\n1813: PUSH1 0x05\n1815: PUSH1 0x20\n1817: MSTORE\n1818: PUSH1 0x40\n1820: DUP2\n1821: SHA3\n1822: DUP1\n1823: SLOAD\n1824: PUSH1 0x03\n1826: DUP3\n1827: ADD\n1828: SLOAD\n1829: PUSH1 0x01\n1831: DUP4\n1832: ADD\n1833: SLOAD\n1834: PUSH1 0x01\n1836: PUSH1 0xa0\n1838: PUSH1 0x02\n1840: EXP\n1841: SUB\n1842: SWAP1\n1843: SWAP3\n1844: AND\n1845: SWAP2\n1846: DUP5\n1847: DUP1\n1848: DUP1\n1849: DUP1\n1850: DUP7\n1851: ISZERO\n1852: ISZERO\n1853: PUSH2 0x0746\n1856: JUMPI"
      },
      {
        "offset": 1857,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1857: PUSH1 0x00\n1859: PUSH1 0x00\n1861: REVERT"
      },
      {
        "offset": 1862,
        "length": 122,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60018d8d8d8d604051806000526020016040526000604051602001526040518085600019166000191681526020018460ff1660ff1681526020018360001916600019168152602001826000191660001916815260200194505050505060206040516020810390808403906000866161da5a03f115156107c157",
        "parsedOpcodes": "1862: JUMPDEST\n1863: PUSH1 0x01\n1865: DUP14\n1866: DUP14\n1867: DUP14\n1868: DUP14\n1869: PUSH1 0x40\n1871: MLOAD\n1872: DUP1\n1873: PUSH1 0x00\n1875: MSTORE\n1876: PUSH1 0x20\n1878: ADD\n1879: PUSH1 0x40\n1881: MSTORE\n1882: PUSH1 0x00\n1884: PUSH1 0x40\n1886: MLOAD\n1887: PUSH1 0x20\n1889: ADD\n1890: MSTORE\n1891: PUSH1 0x40\n1893: MLOAD\n1894: DUP1\n1895: DUP6\n1896: PUSH1 0x00\n1898: NOT\n1899: AND\n1900: PUSH1 0x00\n1902: NOT\n1903: AND\n1904: DUP2\n1905: MSTORE\n1906: PUSH1 0x20\n1908: ADD\n1909: DUP5\n1910: PUSH1 0xff\n1912: AND\n1913: PUSH1 0xff\n1915: AND\n1916: DUP2\n1917: MSTORE\n1918: PUSH1 0x20\n1920: ADD\n1921: DUP4\n1922: PUSH1 0x00\n1924: NOT\n1925: AND\n1926: PUSH1 0x00\n1928: NOT\n1929: AND\n1930: DUP2\n1931: MSTORE\n1932: PUSH1 0x20\n1934: ADD\n1935: DUP3\n1936: PUSH1 0x00\n1938: NOT\n1939: AND\n1940: PUSH1 0x00\n1942: NOT\n1943: AND\n1944: DUP2\n1945: MSTORE\n1946: PUSH1 0x20\n1948: ADD\n1949: SWAP5\n1950: POP\n1951: POP\n1952: POP\n1953: POP\n1954: POP\n1955: PUSH1 0x20\n1957: PUSH1 0x40\n1959: MLOAD\n1960: PUSH1 0x20\n1962: DUP2\n1963: SUB\n1964: SWAP1\n1965: DUP1\n1966: DUP5\n1967: SUB\n1968: SWAP1\n1969: PUSH1 0x00\n1971: DUP7\n1972: PUSH2 0x61da\n1975: GAS\n1976: SUB\n1977: CALL\n1978: ISZERO\n1979: ISZERO\n1980: PUSH2 0x07c1\n1983: JUMPI"
      },
      {
        "offset": 1984,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1984: INVALID"
      },
      {
        "offset": 1985,
        "length": 49,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505060408051601f190151600160a060020a03811660009081526004602052919091205490945060ff1615156107f757",
        "parsedOpcodes": "1985: JUMPDEST\n1986: POP\n1987: POP\n1988: PUSH1 0x40\n1990: DUP1\n1991: MLOAD\n1992: PUSH1 0x1f\n1994: NOT\n1995: ADD\n1996: MLOAD\n1997: PUSH1 0x01\n1999: PUSH1 0xa0\n2001: PUSH1 0x02\n2003: EXP\n2004: SUB\n2005: DUP2\n2006: AND\n2007: PUSH1 0x00\n2009: SWAP1\n2010: DUP2\n2011: MSTORE\n2012: PUSH1 0x04\n2014: PUSH1 0x20\n2016: MSTORE\n2017: SWAP2\n2018: SWAP1\n2019: SWAP2\n2020: SHA3\n2021: SLOAD\n2022: SWAP1\n2023: SWAP5\n2024: POP\n2025: PUSH1 0xff\n2027: AND\n2028: ISZERO\n2029: ISZERO\n2030: PUSH2 0x07f7\n2033: JUMPI"
      },
      {
        "offset": 2034,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "2034: PUSH1 0x00\n2036: PUSH1 0x00\n2038: REVERT"
      },
      {
        "offset": 2039,
        "length": 21,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600488015442879003935060ff16801561081257",
        "parsedOpcodes": "2039: JUMPDEST\n2040: PUSH1 0x04\n2042: DUP9\n2043: ADD\n2044: SLOAD\n2045: TIMESTAMP\n2046: DUP8\n2047: SWAP1\n2048: SUB\n2049: SWAP4\n2050: POP\n2051: PUSH1 0xff\n2053: AND\n2054: DUP1\n2055: ISZERO\n2056: PUSH2 0x0812\n2059: JUMPI"
      },
      {
        "offset": 2060,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506002548310",
        "parsedOpcodes": "2060: POP\n2061: PUSH1 0x02\n2063: SLOAD\n2064: DUP4\n2065: LT"
      },
      {
        "offset": 2066,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561087b57",
        "parsedOpcodes": "2066: JUMPDEST\n2067: ISZERO\n2068: PUSH2 0x087b\n2071: JUMPI"
      },
      {
        "offset": 2072,
        "length": 99,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600254604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b1356",
        "parsedOpcodes": "2072: PUSH1 0x02\n2074: SLOAD\n2075: PUSH1 0x40\n2077: DUP1\n2078: MLOAD\n2079: SWAP2\n2080: DUP9\n2081: ADD\n2082: DUP3\n2083: MSTORE\n2084: PUSH1 0x20\n2086: DUP3\n2087: ADD\n2088: DUP16\n2089: SWAP1\n2090: MSTORE\n2091: PUSH1 0x01\n2093: PUSH1 0xa0\n2095: PUSH1 0x02\n2097: EXP\n2098: SUB\n2099: DUP1\n2100: DUP11\n2101: AND\n2102: DUP4\n2103: DUP4\n2104: ADD\n2105: MSTORE\n2106: PUSH1 0x60\n2108: DUP4\n2109: ADD\n2110: DUP9\n2111: SWAP1\n2112: MSTORE\n2113: DUP7\n2114: AND\n2115: PUSH1 0x80\n2117: DUP4\n2118: ADD\n2119: MSTORE\n2120: MLOAD\n2121: PUSH32 0x4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e053\n2154: SWAP2\n2155: DUP2\n2156: SWAP1\n2157: SUB\n2158: PUSH1 0xa0\n2160: ADD\n2161: SWAP1\n2162: LOG1\n2163: PUSH1 0x00\n2165: SWAP9\n2166: POP\n2167: PUSH2 0x0b13\n2170: JUMP"
      },
      {
        "offset": 2171,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001548310156108e957",
        "parsedOpcodes": "2171: JUMPDEST\n2172: PUSH1 0x01\n2174: SLOAD\n2175: DUP4\n2176: LT\n2177: ISZERO\n2178: PUSH2 0x08e9\n2181: JUMPI"
      },
      {
        "offset": 2182,
        "length": 99,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600154604080519188018252602082018f9052600160a060020a03808a16838301526060830188905286166080830152517f4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e0539181900360a00190a160009850610b1356",
        "parsedOpcodes": "2182: PUSH1 0x01\n2184: SLOAD\n2185: PUSH1 0x40\n2187: DUP1\n2188: MLOAD\n2189: SWAP2\n2190: DUP9\n2191: ADD\n2192: DUP3\n2193: MSTORE\n2194: PUSH1 0x20\n2196: DUP3\n2197: ADD\n2198: DUP16\n2199: SWAP1\n2200: MSTORE\n2201: PUSH1 0x01\n2203: PUSH1 0xa0\n2205: PUSH1 0x02\n2207: EXP\n2208: SUB\n2209: DUP1\n2210: DUP11\n2211: AND\n2212: DUP4\n2213: DUP4\n2214: ADD\n2215: MSTORE\n2216: PUSH1 0x60\n2218: DUP4\n2219: ADD\n2220: DUP9\n2221: SWAP1\n2222: MSTORE\n2223: DUP7\n2224: AND\n2225: PUSH1 0x80\n2227: DUP4\n2228: ADD\n2229: MSTORE\n2230: MLOAD\n2231: PUSH32 0x4a5197077568becc8611074d8f4e05f3f7aaa6d03d7556e43167ddc642a5e053\n2264: SWAP2\n2265: DUP2\n2266: SWAP1\n2267: SUB\n2268: PUSH1 0xa0\n2270: ADD\n2271: SWAP1\n2272: LOG1\n2273: PUSH1 0x00\n2275: SWAP9\n2276: POP\n2277: PUSH2 0x0b13\n2280: JUMP"
      },
      {
        "offset": 2281,
        "length": 29,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60048801546101009004600160a060020a031691508115156109b257",
        "parsedOpcodes": "2281: JUMPDEST\n2282: PUSH1 0x04\n2284: DUP9\n2285: ADD\n2286: SLOAD\n2287: PUSH2 0x0100\n2290: SWAP1\n2291: DIV\n2292: PUSH1 0x01\n2294: PUSH1 0xa0\n2296: PUSH1 0x02\n2298: EXP\n2299: SUB\n2300: AND\n2301: SWAP2\n2302: POP\n2303: DUP2\n2304: ISZERO\n2305: ISZERO\n2306: PUSH2 0x09b2\n2309: JUMPI"
      },
      {
        "offset": 2310,
        "length": 172,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "838860040160016101000a815481600160a060020a030219169083600160a060020a031602179055507fcd5e96ae38c657cb153094e978a03814b65338247f58f66857cfb4ece4ec26068d88878760405180856000191660001916815260200184600160a060020a0316600160a060020a0316815260200183815260200182600160a060020a0316600160a060020a0316815260200194505050505060405180910390a160009850610b1356",
        "parsedOpcodes": "2310: DUP4\n2311: DUP9\n2312: PUSH1 0x04\n2314: ADD\n2315: PUSH1 0x01\n2317: PUSH2 0x0100\n2320: EXP\n2321: DUP2\n2322: SLOAD\n2323: DUP2\n2324: PUSH1 0x01\n2326: PUSH1 0xa0\n2328: PUSH1 0x02\n2330: EXP\n2331: SUB\n2332: MUL\n2333: NOT\n2334: AND\n2335: SWAP1\n2336: DUP4\n2337: PUSH1 0x01\n2339: PUSH1 0xa0\n2341: PUSH1 0x02\n2343: EXP\n2344: SUB\n2345: AND\n2346: MUL\n2347: OR\n2348: SWAP1\n2349: SSTORE\n2350: POP\n2351: PUSH32 0xcd5e96ae38c657cb153094e978a03814b65338247f58f66857cfb4ece4ec2606\n2384: DUP14\n2385: DUP9\n2386: DUP8\n2387: DUP8\n2388: PUSH1 0x40\n2390: MLOAD\n2391: DUP1\n2392: DUP6\n2393: PUSH1 0x00\n2395: NOT\n2396: AND\n2397: PUSH1 0x00\n2399: NOT\n2400: AND\n2401: DUP2\n2402: MSTORE\n2403: PUSH1 0x20\n2405: ADD\n2406: DUP5\n2407: PUSH1 0x01\n2409: PUSH1 0xa0\n2411: PUSH1 0x02\n2413: EXP\n2414: SUB\n2415: AND\n2416: PUSH1 0x01\n2418: PUSH1 0xa0\n2420: PUSH1 0x02\n2422: EXP\n2423: SUB\n2424: AND\n2425: DUP2\n2426: MSTORE\n2427: PUSH1 0x20\n2429: ADD\n2430: DUP4\n2431: DUP2\n2432: MSTORE\n2433: PUSH1 0x20\n2435: ADD\n2436: DUP3\n2437: PUSH1 0x01\n2439: PUSH1 0xa0\n2441: PUSH1 0x02\n2443: EXP\n2444: SUB\n2445: AND\n2446: PUSH1 0x01\n2448: PUSH1 0xa0\n2450: PUSH1 0x02\n2452: EXP\n2453: SUB\n2454: AND\n2455: DUP2\n2456: MSTORE\n2457: PUSH1 0x20\n2459: ADD\n2460: SWAP5\n2461: POP\n2462: POP\n2463: POP\n2464: POP\n2465: POP\n2466: PUSH1 0x40\n2468: MLOAD\n2469: DUP1\n2470: SWAP2\n2471: SUB\n2472: SWAP1\n2473: LOG1\n2474: PUSH1 0x00\n2476: SWAP9\n2477: POP\n2478: PUSH2 0x0b13\n2481: JUMP"
      },
      {
        "offset": 2482,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b83600160a060020a031682600160a060020a031614156109d257",
        "parsedOpcodes": "2482: JUMPDEST\n2483: DUP4\n2484: PUSH1 0x01\n2486: PUSH1 0xa0\n2488: PUSH1 0x02\n2490: EXP\n2491: SUB\n2492: AND\n2493: DUP3\n2494: PUSH1 0x01\n2496: PUSH1 0xa0\n2498: PUSH1 0x02\n2500: EXP\n2501: SUB\n2502: AND\n2503: EQ\n2504: ISZERO\n2505: PUSH2 0x09d2\n2508: JUMPI"
      },
      {
        "offset": 2509,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "2509: PUSH1 0x00\n2511: PUSH1 0x00\n2513: REVERT"
      },
      {
        "offset": 2514,
        "length": 136,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60008d815260056020526040808220805473ffffffffffffffffffffffffffffffffffffffff19168155600181018390556002810183905560038101839055600401805474ffffffffffffffffffffffffffffffffffffffffff1916905551600160a060020a0389169187156108fc02918891818181858888f1935050505090508015610ab657",
        "parsedOpcodes": "2514: JUMPDEST\n2515: PUSH1 0x00\n2517: DUP14\n2518: DUP2\n2519: MSTORE\n2520: PUSH1 0x05\n2522: PUSH1 0x20\n2524: MSTORE\n2525: PUSH1 0x40\n2527: DUP1\n2528: DUP3\n2529: SHA3\n2530: DUP1\n2531: SLOAD\n2532: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2553: NOT\n2554: AND\n2555: DUP2\n2556: SSTORE\n2557: PUSH1 0x01\n2559: DUP2\n2560: ADD\n2561: DUP4\n2562: SWAP1\n2563: SSTORE\n2564: PUSH1 0x02\n2566: DUP2\n2567: ADD\n2568: DUP4\n2569: SWAP1\n2570: SSTORE\n2571: PUSH1 0x03\n2573: DUP2\n2574: ADD\n2575: DUP4\n2576: SWAP1\n2577: SSTORE\n2578: PUSH1 0x04\n2580: ADD\n2581: DUP1\n2582: SLOAD\n2583: PUSH21 0xffffffffffffffffffffffffffffffffffffffffff\n2605: NOT\n2606: AND\n2607: SWAP1\n2608: SSTORE\n2609: MLOAD\n2610: PUSH1 0x01\n2612: PUSH1 0xa0\n2614: PUSH1 0x02\n2616: EXP\n2617: SUB\n2618: DUP10\n2619: AND\n2620: SWAP2\n2621: DUP8\n2622: ISZERO\n2623: PUSH2 0x08fc\n2626: MUL\n2627: SWAP2\n2628: DUP9\n2629: SWAP2\n2630: DUP2\n2631: DUP2\n2632: DUP2\n2633: DUP6\n2634: DUP9\n2635: DUP9\n2636: CALL\n2637: SWAP4\n2638: POP\n2639: POP\n2640: POP\n2641: POP\n2642: SWAP1\n2643: POP\n2644: DUP1\n2645: ISZERO\n2646: PUSH2 0x0ab6\n2649: JUMPI"
      },
      {
        "offset": 2650,
        "length": 92,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fa8945d0ccfa7876b6b24bb07cf7bec0537fc79264aaa16d67f7f7448720551309181900360a00190a1610b0f56",
        "parsedOpcodes": "2650: PUSH1 0x40\n2652: DUP1\n2653: MLOAD\n2654: DUP15\n2655: DUP2\n2656: MSTORE\n2657: PUSH1 0x01\n2659: PUSH1 0xa0\n2661: PUSH1 0x02\n2663: EXP\n2664: SUB\n2665: DUP1\n2666: DUP11\n2667: AND\n2668: PUSH1 0x20\n2670: DUP4\n2671: ADD\n2672: MSTORE\n2673: DUP2\n2674: DUP4\n2675: ADD\n2676: DUP9\n2677: SWAP1\n2678: MSTORE\n2679: DUP1\n2680: DUP6\n2681: AND\n2682: PUSH1 0x60\n2684: DUP4\n2685: ADD\n2686: MSTORE\n2687: DUP7\n2688: AND\n2689: PUSH1 0x80\n2691: DUP3\n2692: ADD\n2693: MSTORE\n2694: SWAP1\n2695: MLOAD\n2696: PUSH32 0xa8945d0ccfa7876b6b24bb07cf7bec0537fc79264aaa16d67f7f744872055130\n2729: SWAP2\n2730: DUP2\n2731: SWAP1\n2732: SUB\n2733: PUSH1 0xa0\n2735: ADD\n2736: SWAP1\n2737: LOG1\n2738: PUSH2 0x0b0f\n2741: JUMP"
      },
      {
        "offset": 2742,
        "length": 89,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b604080518e8152600160a060020a03808a16602083015281830188905280851660608301528616608082015290517fbedb283d6c6fc7ce860a21f094467e0d3f6bdd653e2193617d800015933966cf9181900360a00190a1",
        "parsedOpcodes": "2742: JUMPDEST\n2743: PUSH1 0x40\n2745: DUP1\n2746: MLOAD\n2747: DUP15\n2748: DUP2\n2749: MSTORE\n2750: PUSH1 0x01\n2752: PUSH1 0xa0\n2754: PUSH1 0x02\n2756: EXP\n2757: SUB\n2758: DUP1\n2759: DUP11\n2760: AND\n2761: PUSH1 0x20\n2763: DUP4\n2764: ADD\n2765: MSTORE\n2766: DUP2\n2767: DUP4\n2768: ADD\n2769: DUP9\n2770: SWAP1\n2771: MSTORE\n2772: DUP1\n2773: DUP6\n2774: AND\n2775: PUSH1 0x60\n2777: DUP4\n2778: ADD\n2779: MSTORE\n2780: DUP7\n2781: AND\n2782: PUSH1 0x80\n2784: DUP3\n2785: ADD\n2786: MSTORE\n2787: SWAP1\n2788: MLOAD\n2789: PUSH32 0xbedb283d6c6fc7ce860a21f094467e0d3f6bdd653e2193617d800015933966cf\n2822: SWAP2\n2823: DUP2\n2824: SWAP1\n2825: SUB\n2826: PUSH1 0xa0\n2828: ADD\n2829: SWAP1\n2830: LOG1"
      },
      {
        "offset": 2831,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b809850",
        "parsedOpcodes": "2831: JUMPDEST\n2832: DUP1\n2833: SWAP9\n2834: POP"
      },
      {
        "offset": 2835,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2835: JUMPDEST"
      },
      {
        "offset": 2836,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2836: JUMPDEST"
      },
      {
        "offset": 2837,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2837: JUMPDEST"
      },
      {
        "offset": 2838,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2838: JUMPDEST"
      },
      {
        "offset": 2839,
        "length": 16,
        "type": "common",
        "stackBalance": -13,
        "bytecodeHex": "5b505050505050505094935050505056",
        "parsedOpcodes": "2839: JUMPDEST\n2840: POP\n2841: POP\n2842: POP\n2843: POP\n2844: POP\n2845: POP\n2846: POP\n2847: POP\n2848: SWAP5\n2849: SWAP4\n2850: POP\n2851: POP\n2852: POP\n2853: POP\n2854: JUMP"
      },
      {
        "offset": 2855,
        "length": 68,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b60056020526000908152604090208054600182015460028301546003840154600490940154600160a060020a0393841694929391929160ff8216916101009004168656",
        "parsedOpcodes": "2855: JUMPDEST\n2856: PUSH1 0x05\n2858: PUSH1 0x20\n2860: MSTORE\n2861: PUSH1 0x00\n2863: SWAP1\n2864: DUP2\n2865: MSTORE\n2866: PUSH1 0x40\n2868: SWAP1\n2869: SHA3\n2870: DUP1\n2871: SLOAD\n2872: PUSH1 0x01\n2874: DUP3\n2875: ADD\n2876: SLOAD\n2877: PUSH1 0x02\n2879: DUP4\n2880: ADD\n2881: SLOAD\n2882: PUSH1 0x03\n2884: DUP5\n2885: ADD\n2886: SLOAD\n2887: PUSH1 0x04\n2889: SWAP1\n2890: SWAP5\n2891: ADD\n2892: SLOAD\n2893: PUSH1 0x01\n2895: PUSH1 0xa0\n2897: PUSH1 0x02\n2899: EXP\n2900: SUB\n2901: SWAP4\n2902: DUP5\n2903: AND\n2904: SWAP5\n2905: SWAP3\n2906: SWAP4\n2907: SWAP2\n2908: SWAP3\n2909: SWAP2\n2910: PUSH1 0xff\n2912: DUP3\n2913: AND\n2914: SWAP2\n2915: PUSH2 0x0100\n2918: SWAP1\n2919: DIV\n2920: AND\n2921: DUP7\n2922: JUMP"
      },
      {
        "offset": 2923,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6002548156",
        "parsedOpcodes": "2923: JUMPDEST\n2924: PUSH1 0x02\n2926: SLOAD\n2927: DUP2\n2928: JUMP"
      },
      {
        "offset": 2929,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "2929: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          136
        ]
      },
      {
        "from": 11,
        "to": [
          37,
          212
        ]
      },
      {
        "from": 37,
        "to": [
          48,
          256
        ]
      },
      {
        "from": 48,
        "to": [
          59,
          290
        ]
      },
      {
        "from": 59,
        "to": [
          70,
          338
        ]
      },
      {
        "from": 70,
        "to": [
          81,
          371
        ]
      },
      {
        "from": 81,
        "to": [
          92,
          418
        ]
      },
      {
        "from": 92,
        "to": [
          103,
          452
        ]
      },
      {
        "from": 103,
        "to": [
          114,
          473
        ]
      },
      {
        "from": 114,
        "to": [
          125,
          524
        ]
      },
      {
        "from": 125,
        "to": [
          136,
          610
        ]
      },
      {
        "from": 136,
        "to": [
          140
        ]
      },
      {
        "from": 140,
        "to": [
          208
        ]
      },
      {
        "from": 208,
        "to": [
          210,
          210
        ]
      },
      {
        "from": 210,
        "to": [
          2929
        ]
      },
      {
        "from": 212,
        "to": [
          219,
          220
        ]
      },
      {
        "from": 219,
        "to": [
          2929
        ]
      },
      {
        "from": 220,
        "to": [
          644,
          644
        ]
      },
      {
        "from": 228,
        "to": [
          2929
        ]
      },
      {
        "from": 256,
        "to": [
          263,
          264
        ]
      },
      {
        "from": 263,
        "to": [
          2929
        ]
      },
      {
        "from": 264,
        "to": [
          659,
          659
        ]
      },
      {
        "from": 272,
        "to": [
          2929
        ]
      },
      {
        "from": 290,
        "to": [
          297,
          298
        ]
      },
      {
        "from": 297,
        "to": [
          2929
        ]
      },
      {
        "from": 298,
        "to": [
          665,
          665
        ]
      },
      {
        "from": 318,
        "to": [
          2929
        ]
      },
      {
        "from": 338,
        "to": [
          345,
          346
        ]
      },
      {
        "from": 345,
        "to": [
          2929
        ]
      },
      {
        "from": 346,
        "to": [
          686,
          686
        ]
      },
      {
        "from": 369,
        "to": [
          2929
        ]
      },
      {
        "from": 371,
        "to": [
          1071,
          1071
        ]
      },
      {
        "from": 400,
        "to": [
          2929
        ]
      },
      {
        "from": 418,
        "to": [
          425,
          426
        ]
      },
      {
        "from": 425,
        "to": [
          2929
        ]
      },
      {
        "from": 426,
        "to": [
          1590,
          1590
        ]
      },
      {
        "from": 434,
        "to": [
          2929
        ]
      },
      {
        "from": 452,
        "to": [
          459,
          460
        ]
      },
      {
        "from": 459,
        "to": [
          2929
        ]
      },
      {
        "from": 460,
        "to": [
          1596,
          1596
        ]
      },
      {
        "from": 471,
        "to": [
          2929
        ]
      },
      {
        "from": 473,
        "to": [
          480,
          481
        ]
      },
      {
        "from": 480,
        "to": [
          2929
        ]
      },
      {
        "from": 481,
        "to": [
          1807,
          1807
        ]
      },
      {
        "from": 504,
        "to": [
          2929
        ]
      },
      {
        "from": 524,
        "to": [
          531,
          532
        ]
      },
      {
        "from": 531,
        "to": [
          2929
        ]
      },
      {
        "from": 532,
        "to": [
          2855,
          2855
        ]
      },
      {
        "from": 543,
        "to": [
          2929
        ]
      },
      {
        "from": 610,
        "to": [
          617,
          618
        ]
      },
      {
        "from": 617,
        "to": [
          2929
        ]
      },
      {
        "from": 618,
        "to": [
          2923,
          2923
        ]
      },
      {
        "from": 626,
        "to": [
          2929
        ]
      },
      {
        "from": 644,
        "to": [
          228
        ]
      },
      {
        "from": 659,
        "to": [
          272
        ]
      },
      {
        "from": 665,
        "to": [
          318
        ]
      },
      {
        "from": 686,
        "to": [
          725,
          730
        ]
      },
      {
        "from": 725,
        "to": [
          2929
        ]
      },
      {
        "from": 730,
        "to": [
          819,
          820
        ]
      },
      {
        "from": 819,
        "to": [
          2929
        ]
      },
      {
        "from": 820,
        "to": [
          869,
          874
        ]
      },
      {
        "from": 869,
        "to": [
          2929
        ]
      },
      {
        "from": 874,
        "to": [
          1061
        ]
      },
      {
        "from": 1061,
        "to": [
          210
        ]
      },
      {
        "from": 1071,
        "to": [
          1106,
          1118
        ]
      },
      {
        "from": 1106,
        "to": [
          1118
        ]
      },
      {
        "from": 1118,
        "to": [
          1124,
          1129
        ]
      },
      {
        "from": 1124,
        "to": [
          2929
        ]
      },
      {
        "from": 1129,
        "to": [
          1456,
          1464
        ]
      },
      {
        "from": 1456,
        "to": [
          1484,
          1484
        ]
      },
      {
        "from": 1464,
        "to": [
          1484
        ]
      },
      {
        "from": 1484,
        "to": [
          1579
        ]
      },
      {
        "from": 1579,
        "to": [
          272
        ]
      },
      {
        "from": 1590,
        "to": [
          272
        ]
      },
      {
        "from": 1596,
        "to": [
          1620,
          1625
        ]
      },
      {
        "from": 1620,
        "to": [
          2929
        ]
      },
      {
        "from": 1625,
        "to": [
          1658,
          1663
        ]
      },
      {
        "from": 1658,
        "to": [
          2929
        ]
      },
      {
        "from": 1663,
        "to": [
          1682,
          1687
        ]
      },
      {
        "from": 1682,
        "to": [
          2929
        ]
      },
      {
        "from": 1687,
        "to": [
          1803
        ]
      },
      {
        "from": 1803,
        "to": [
          210
        ]
      },
      {
        "from": 1807,
        "to": [
          1857,
          1862
        ]
      },
      {
        "from": 1857,
        "to": [
          2929
        ]
      },
      {
        "from": 1862,
        "to": [
          1984,
          1985
        ]
      },
      {
        "from": 1984,
        "to": [
          2929
        ]
      },
      {
        "from": 1985,
        "to": [
          2034,
          2039
        ]
      },
      {
        "from": 2034,
        "to": [
          2929
        ]
      },
      {
        "from": 2039,
        "to": [
          2060,
          2066
        ]
      },
      {
        "from": 2060,
        "to": [
          2066
        ]
      },
      {
        "from": 2066,
        "to": [
          2072,
          2171
        ]
      },
      {
        "from": 2072,
        "to": [
          2835,
          2835
        ]
      },
      {
        "from": 2171,
        "to": [
          2182,
          2281
        ]
      },
      {
        "from": 2182,
        "to": [
          2835,
          2835
        ]
      },
      {
        "from": 2281,
        "to": [
          2310,
          2482
        ]
      },
      {
        "from": 2310,
        "to": [
          2835,
          2835
        ]
      },
      {
        "from": 2482,
        "to": [
          2509,
          2514
        ]
      },
      {
        "from": 2509,
        "to": [
          2929
        ]
      },
      {
        "from": 2514,
        "to": [
          2650,
          2742
        ]
      },
      {
        "from": 2650,
        "to": [
          2831,
          2831
        ]
      },
      {
        "from": 2742,
        "to": [
          2831
        ]
      },
      {
        "from": 2831,
        "to": [
          2835
        ]
      },
      {
        "from": 2835,
        "to": [
          2836
        ]
      },
      {
        "from": 2836,
        "to": [
          2837
        ]
      },
      {
        "from": 2837,
        "to": [
          2838
        ]
      },
      {
        "from": 2838,
        "to": [
          2839
        ]
      },
      {
        "from": 2839,
        "to": [
          318,
          318,
          318
        ]
      },
      {
        "from": 2855,
        "to": [
          543
        ]
      },
      {
        "from": 2923,
        "to": [
          272
        ]
      },
      {
        "from": 2929,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 7 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 172
    }
  }
}