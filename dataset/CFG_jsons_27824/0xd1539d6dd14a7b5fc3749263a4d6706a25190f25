{
  "name": "Analysis_2022-04-04_17-17-13",
  "address": "",
  "binarySource": "6060604052361561009d5763ffffffff60e060020a600035041662a714fa811461009f5780632b89115c146100c357806346941e53146100e757806354fd4d50146101115780637a5d5345146101a15780637ab0b998146101bf57806384191f62146101dd5780638ac0eef9146101ef578063cbd2c73b14610201578063d233fc0b1461021f578063d7f31eb914610231578063f653b81e14610296575bfe5b34156100a757fe5b6100c1600160a060020a0360043581169060243516610319565b005b34156100cb57fe5b6100c1600160a060020a0360043581169060243516610355565b005b34156100ef57fe5b6100c1600160a060020a03600435811690602435166044356064356103b8565b005b341561011957fe5b6101216104bc565b604080516020808252835181830152835191928392908301918501908083838215610167575b80518252602083111561016757601f199092019160209182019101610147565b505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a957fe5b6100c1600160a060020a036004351661054a565b005b34156101c757fe5b6100c1600160a060020a03600435166105e3565b005b34156101e557fe5b6100c161067c565b005b34156101f757fe5b6100c16107d4565b005b341561020957fe5b6100c1600160a060020a03600435166108aa565b005b341561022757fe5b6100c1610943565b005b341561023957fe5b604080516020600460443581810135601f81018490048402850184019095528484526100c1948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506109d095505050505050565b005b341561029e57fe5b6102b2600160a060020a0360043516610b25565b60408051600160a060020a039c8d1681529a8c1660208c01528a810199909952968a1660608a0152948916608089015260a088019390935290871660c087015260e08601526101008501526101208401529092166101408201529051908190036101600190f35b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d5761034d8383610b92565b5b5b5b505050565b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d57600160a060020a0383811660009081526001602052604090206003018054600160a060020a0319169184169190911790555b5b5b505050565b600160a060020a03808516600090815260016020526040812054909116156103df57610000565b600160a060020a0385811660008181526001602052604090208054600160a060020a0319908116909217815560038101805490921692871692909217905560088101849055600901829055610432610c8f565b60405190819003906000f080151561044657fe5b600160a060020a03868116600090815260016020908152604091829020600a018054600160a060020a0319168585169081179091558251339094168452915193945090927f2a27c6cf9c3213c48ff0c601216c2a57fea2bc0b9a40b9bd6f2ff8382cbaaab19281900390910190a25b5050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b505050505081565b600160a060020a033381166000818152600160209081526040918290206009810154420160078201556006018054948616600160a060020a0319909516949094179093558051928301919091528082526014828201527f7369676e436f6e74726f6c6c65724368616e6765000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a033381166000818152600160209081526040918290206009810154420160058201556004018054948616600160a060020a0319909516949094179093558051928301919091528082526012828201527f7369676e5265636f766572794368616e67650000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a03331660009081526001602052604090206007015442901080156106c35750600160a060020a033381166000908152600160205260409020600601541615155b156107d157600160a060020a03338116600090815260016020526040808220600a81015460069091015482517f1a69523000000000000000000000000000000000000000000000000000000000815290851660048201529151931692631a6952309260248084019391929182900301818387803b151561073f57fe5b60325a03f1151561074c57fe5b505050600160a060020a033316600090815260016020819052604082208054600160a060020a03199081168255918101805483169055600281018390556003810180548316905560048101805483169055600581018390556006810180548316905560078101839055600881018390556009810192909255600a909101805490911690555b5b565b600160a060020a033316600090815260016020526040902060020154429010801561081c5750600160a060020a03338116600090815260016020819052604090912001541615155b156107d157600160a060020a03338181166000908152600160208190526040909120015461084a9216610b92565b60408051600160a060020a0333166020820152818152600d818301527f6368616e6765557365724b65790000000000000000000000000000000000000060608201529051600080516020610eaf8339815191529181900360800190a15b5b565b600160a060020a033381166000818152600160208181526040928390206008810154420160028201559091018054948616600160a060020a0319909516949094179093558051928301919091528082526011828201527f7369676e557365724b65794368616e6765000000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a033316600090815260016020526040902060050154429010801561098a5750600160a060020a033381166000908152600160205260409020600401541615155b156107d15733600160a060020a03908116600090815260016020526040902060048101805460039092018054938316600160a060020a0319948516179055911690555b5b565b600160a060020a03338116600090815260016020908152604091829020600a015491517fd7f31eb90000000000000000000000000000000000000000000000000000000081528684166004820190815260248201879052606060448301908152865160648401528651949095169463d7f31eb99489948994899493926084909101918501908083838215610a7f575b805182526020831115610a7f57601f199092019160209182019101610a5f565b505050905090810190601f168015610aab5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610ac857fe5b60325a03f11515610ad557fe5b505050600160a060020a03338116600090815260016020526040808220600a015490519216917fa4dfdf2fdebc23ad4fcf9b656ae82cf98e212f5178e7109275a9ab4ee905298e9190a25b505050565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a90990154600160a060020a039a8b169a988916999798968716979587169694959385169492939192168b565b600160a060020a038082166000908152600160205260409020541615610bb757610000565b600160a060020a038281166000818152600160208190526040808320805487871685529184208054928716600160a060020a0319938416178155600380830180549183018054928a169286169290921790915560088084018054918401919091556009808501805491850191909155600a808601805491909501805491909b1690871617909955968652825484168355938201805484169055600282018590558354831690935560048101805483169055600581018490556006810180548316905560070183905592829055925581541690555b5050565b60405161020f80610ca0833901905600606060405260008054600160a060020a03191633600160a060020a0316179055341561002757fe5b5b6101d8806100376000396000f300606060405236156100305763ffffffff60e060020a6000350416631a6952308114610039578063d7f31eb914610057575b6100375b5b565b005b341561004157fe5b610037600160a060020a03600435166100b4565b005b604080516020600460443581810135601f8101849004840285018401909552848452610037948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506100f995505050505050565b005b60005433600160a060020a03908116911614156100f4576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b60005433600160a060020a03908116911614156101a45782600160a060020a0316828260405180828051906020019080838360008314610154575b80518252602083111561015457601f199092019160209182019101610134565b505050905090810190601f1680156101805780820380516001836020036101000a031916815260200191505b5091505060006040518083038185876185025a03f19250505015156101a457610000565b5b5b5b5050505600a165627a7a72305820e1cb77635c67ac3559c26f535532da4da495617c18ddd33e7c6ad63e559b801f0029ea8e84a162c4602ea0c61acf85fa1242db8ce550e7a448d613e3c7dff2f06793a165627a7a72305820d6b4adea01aa5719ebfdd501dc6617a072c7547ed03dfff71c205ad99c84ff0f0029",
  "binaryHash": "97e60274",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820e1cb77635c67ac3559c26f535532da4da495617c18ddd33e7c6ad63e559b801f0029ea8e84a162c4602ea0c61acf85fa1242db8ce550e7a448d613e3c7dff2f06793a165627a7a72305820d6b4adea01aa5719ebfdd501dc6617a072c7547ed03dfff71c205ad99c84ff0f0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "ea8e84a162c4602ea0c61acf85fa1242db8ce550e7a448d613e3c7dff2f06793a165627a7a72305820d6b4adea01aa5719ebfdd501dc6617a072c7547ed03dfff71c205ad99c84ff0f0029",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649060233576
    }
  },
  "runtimeCfg": {
    "bytecode": "6060604052361561009d5763ffffffff60e060020a600035041662a714fa811461009f5780632b89115c146100c357806346941e53146100e757806354fd4d50146101115780637a5d5345146101a15780637ab0b998146101bf57806384191f62146101dd5780638ac0eef9146101ef578063cbd2c73b14610201578063d233fc0b1461021f578063d7f31eb914610231578063f653b81e14610296575bfe5b34156100a757fe5b6100c1600160a060020a0360043581169060243516610319565b005b34156100cb57fe5b6100c1600160a060020a0360043581169060243516610355565b005b34156100ef57fe5b6100c1600160a060020a03600435811690602435166044356064356103b8565b005b341561011957fe5b6101216104bc565b604080516020808252835181830152835191928392908301918501908083838215610167575b80518252602083111561016757601f199092019160209182019101610147565b505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a957fe5b6100c1600160a060020a036004351661054a565b005b34156101c757fe5b6100c1600160a060020a03600435166105e3565b005b34156101e557fe5b6100c161067c565b005b34156101f757fe5b6100c16107d4565b005b341561020957fe5b6100c1600160a060020a03600435166108aa565b005b341561022757fe5b6100c1610943565b005b341561023957fe5b604080516020600460443581810135601f81018490048402850184019095528484526100c1948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506109d095505050505050565b005b341561029e57fe5b6102b2600160a060020a0360043516610b25565b60408051600160a060020a039c8d1681529a8c1660208c01528a810199909952968a1660608a0152948916608089015260a088019390935290871660c087015260e08601526101008501526101208401529092166101408201529051908190036101600190f35b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d5761034d8383610b92565b5b5b5b505050565b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d57600160a060020a0383811660009081526001602052604090206003018054600160a060020a0319169184169190911790555b5b5b505050565b600160a060020a03808516600090815260016020526040812054909116156103df57610000565b600160a060020a0385811660008181526001602052604090208054600160a060020a0319908116909217815560038101805490921692871692909217905560088101849055600901829055610432610c8f565b60405190819003906000f080151561044657fe5b600160a060020a03868116600090815260016020908152604091829020600a018054600160a060020a0319168585169081179091558251339094168452915193945090927f2a27c6cf9c3213c48ff0c601216c2a57fea2bc0b9a40b9bd6f2ff8382cbaaab19281900390910190a25b5050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105425780601f1061051757610100808354040283529160200191610542565b820191906000526020600020905b81548152906001019060200180831161052557829003601f168201915b505050505081565b600160a060020a033381166000818152600160209081526040918290206009810154420160078201556006018054948616600160a060020a0319909516949094179093558051928301919091528082526014828201527f7369676e436f6e74726f6c6c65724368616e6765000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a033381166000818152600160209081526040918290206009810154420160058201556004018054948616600160a060020a0319909516949094179093558051928301919091528082526012828201527f7369676e5265636f766572794368616e67650000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a03331660009081526001602052604090206007015442901080156106c35750600160a060020a033381166000908152600160205260409020600601541615155b156107d157600160a060020a03338116600090815260016020526040808220600a81015460069091015482517f1a69523000000000000000000000000000000000000000000000000000000000815290851660048201529151931692631a6952309260248084019391929182900301818387803b151561073f57fe5b60325a03f1151561074c57fe5b505050600160a060020a033316600090815260016020819052604082208054600160a060020a03199081168255918101805483169055600281018390556003810180548316905560048101805483169055600581018390556006810180548316905560078101839055600881018390556009810192909255600a909101805490911690555b5b565b600160a060020a033316600090815260016020526040902060020154429010801561081c5750600160a060020a03338116600090815260016020819052604090912001541615155b156107d157600160a060020a03338181166000908152600160208190526040909120015461084a9216610b92565b60408051600160a060020a0333166020820152818152600d818301527f6368616e6765557365724b65790000000000000000000000000000000000000060608201529051600080516020610eaf8339815191529181900360800190a15b5b565b600160a060020a033381166000818152600160208181526040928390206008810154420160028201559091018054948616600160a060020a0319909516949094179093558051928301919091528082526011828201527f7369676e557365724b65794368616e6765000000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a15b50565b600160a060020a033316600090815260016020526040902060050154429010801561098a5750600160a060020a033381166000908152600160205260409020600401541615155b156107d15733600160a060020a03908116600090815260016020526040902060048101805460039092018054938316600160a060020a0319948516179055911690555b5b565b600160a060020a03338116600090815260016020908152604091829020600a015491517fd7f31eb90000000000000000000000000000000000000000000000000000000081528684166004820190815260248201879052606060448301908152865160648401528651949095169463d7f31eb99489948994899493926084909101918501908083838215610a7f575b805182526020831115610a7f57601f199092019160209182019101610a5f565b505050905090810190601f168015610aab5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610ac857fe5b60325a03f11515610ad557fe5b505050600160a060020a03338116600090815260016020526040808220600a015490519216917fa4dfdf2fdebc23ad4fcf9b656ae82cf98e212f5178e7109275a9ab4ee905298e9190a25b505050565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a90990154600160a060020a039a8b169a988916999798968716979587169694959385169492939192168b565b600160a060020a038082166000908152600160205260409020541615610bb757610000565b600160a060020a038281166000818152600160208190526040808320805487871685529184208054928716600160a060020a0319938416178155600380830180549183018054928a169286169290921790915560088084018054918401919091556009808501805491850191909155600a808601805491909501805491909b1690871617909955968652825484168355938201805484169055600282018590558354831690935560048101805483169055600581018490556006810180548316905560070183905592829055925581541690555b5050565b60405161020f80610ca0833901905600",
    "remainingData": "00606060405260008054600160a060020a03191633600160a060020a0316179055341561002757fe5b5b6101d8806100376000396000f300606060405236156100305763ffffffff60e060020a6000350416631a6952308114610039578063d7f31eb914610057575b6100375b5b565b005b341561004157fe5b610037600160a060020a03600435166100b4565b005b604080516020600460443581810135601f8101849004840285018401909552848452610037948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506100f995505050505050565b005b60005433600160a060020a03908116911614156100f4576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b60005433600160a060020a03908116911614156101a45782600160a060020a0316828260405180828051906020019080838360008314610154575b80518252602083111561015457601f199092019160209182019101610134565b505050905090810190601f1680156101805780820380516001836020036101000a031916815260200191505b5091505060006040518083038185876185025a03f19250505015156101a457610000565b5b5b5b5050505600",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052361561009d57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x009d\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff60e060020a600035041662a714fa811461009f57",
        "parsedOpcodes": "11: PUSH4 0xffffffff\n16: PUSH1 0xe0\n18: PUSH1 0x02\n20: EXP\n21: PUSH1 0x00\n23: CALLDATALOAD\n24: DIV\n25: AND\n26: PUSH3 0xa714fa\n30: DUP2\n31: EQ\n32: PUSH2 0x009f\n35: JUMPI"
      },
      {
        "offset": 36,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80632b89115c146100c357",
        "parsedOpcodes": "36: DUP1\n37: PUSH4 0x2b89115c\n42: EQ\n43: PUSH2 0x00c3\n46: JUMPI"
      },
      {
        "offset": 47,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806346941e53146100e757",
        "parsedOpcodes": "47: DUP1\n48: PUSH4 0x46941e53\n53: EQ\n54: PUSH2 0x00e7\n57: JUMPI"
      },
      {
        "offset": 58,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806354fd4d501461011157",
        "parsedOpcodes": "58: DUP1\n59: PUSH4 0x54fd4d50\n64: EQ\n65: PUSH2 0x0111\n68: JUMPI"
      },
      {
        "offset": 69,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80637a5d5345146101a157",
        "parsedOpcodes": "69: DUP1\n70: PUSH4 0x7a5d5345\n75: EQ\n76: PUSH2 0x01a1\n79: JUMPI"
      },
      {
        "offset": 80,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80637ab0b998146101bf57",
        "parsedOpcodes": "80: DUP1\n81: PUSH4 0x7ab0b998\n86: EQ\n87: PUSH2 0x01bf\n90: JUMPI"
      },
      {
        "offset": 91,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806384191f62146101dd57",
        "parsedOpcodes": "91: DUP1\n92: PUSH4 0x84191f62\n97: EQ\n98: PUSH2 0x01dd\n101: JUMPI"
      },
      {
        "offset": 102,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638ac0eef9146101ef57",
        "parsedOpcodes": "102: DUP1\n103: PUSH4 0x8ac0eef9\n108: EQ\n109: PUSH2 0x01ef\n112: JUMPI"
      },
      {
        "offset": 113,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063cbd2c73b1461020157",
        "parsedOpcodes": "113: DUP1\n114: PUSH4 0xcbd2c73b\n119: EQ\n120: PUSH2 0x0201\n123: JUMPI"
      },
      {
        "offset": 124,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d233fc0b1461021f57",
        "parsedOpcodes": "124: DUP1\n125: PUSH4 0xd233fc0b\n130: EQ\n131: PUSH2 0x021f\n134: JUMPI"
      },
      {
        "offset": 135,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d7f31eb91461023157",
        "parsedOpcodes": "135: DUP1\n136: PUSH4 0xd7f31eb9\n141: EQ\n142: PUSH2 0x0231\n145: JUMPI"
      },
      {
        "offset": 146,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f653b81e1461029657",
        "parsedOpcodes": "146: DUP1\n147: PUSH4 0xf653b81e\n152: EQ\n153: PUSH2 0x0296\n156: JUMPI"
      },
      {
        "offset": 157,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5bfe",
        "parsedOpcodes": "157: JUMPDEST\n158: INVALID"
      },
      {
        "offset": 159,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100a757",
        "parsedOpcodes": "159: JUMPDEST\n160: CALLVALUE\n161: ISZERO\n162: PUSH2 0x00a7\n165: JUMPI"
      },
      {
        "offset": 166,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "166: INVALID"
      },
      {
        "offset": 167,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100c1600160a060020a036004358116906024351661031956",
        "parsedOpcodes": "167: JUMPDEST\n168: PUSH2 0x00c1\n171: PUSH1 0x01\n173: PUSH1 0xa0\n175: PUSH1 0x02\n177: EXP\n178: SUB\n179: PUSH1 0x04\n181: CALLDATALOAD\n182: DUP2\n183: AND\n184: SWAP1\n185: PUSH1 0x24\n187: CALLDATALOAD\n188: AND\n189: PUSH2 0x0319\n192: JUMP"
      },
      {
        "offset": 193,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "193: JUMPDEST\n194: STOP"
      },
      {
        "offset": 195,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100cb57",
        "parsedOpcodes": "195: JUMPDEST\n196: CALLVALUE\n197: ISZERO\n198: PUSH2 0x00cb\n201: JUMPI"
      },
      {
        "offset": 202,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "202: INVALID"
      },
      {
        "offset": 203,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100c1600160a060020a036004358116906024351661035556",
        "parsedOpcodes": "203: JUMPDEST\n204: PUSH2 0x00c1\n207: PUSH1 0x01\n209: PUSH1 0xa0\n211: PUSH1 0x02\n213: EXP\n214: SUB\n215: PUSH1 0x04\n217: CALLDATALOAD\n218: DUP2\n219: AND\n220: SWAP1\n221: PUSH1 0x24\n223: CALLDATALOAD\n224: AND\n225: PUSH2 0x0355\n228: JUMP"
      },
      {
        "offset": 229,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "229: JUMPDEST\n230: STOP"
      },
      {
        "offset": 231,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100ef57",
        "parsedOpcodes": "231: JUMPDEST\n232: CALLVALUE\n233: ISZERO\n234: PUSH2 0x00ef\n237: JUMPI"
      },
      {
        "offset": 238,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "238: INVALID"
      },
      {
        "offset": 239,
        "length": 32,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b6100c1600160a060020a03600435811690602435166044356064356103b856",
        "parsedOpcodes": "239: JUMPDEST\n240: PUSH2 0x00c1\n243: PUSH1 0x01\n245: PUSH1 0xa0\n247: PUSH1 0x02\n249: EXP\n250: SUB\n251: PUSH1 0x04\n253: CALLDATALOAD\n254: DUP2\n255: AND\n256: SWAP1\n257: PUSH1 0x24\n259: CALLDATALOAD\n260: AND\n261: PUSH1 0x44\n263: CALLDATALOAD\n264: PUSH1 0x64\n266: CALLDATALOAD\n267: PUSH2 0x03b8\n270: JUMP"
      },
      {
        "offset": 271,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "271: JUMPDEST\n272: STOP"
      },
      {
        "offset": 273,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561011957",
        "parsedOpcodes": "273: JUMPDEST\n274: CALLVALUE\n275: ISZERO\n276: PUSH2 0x0119\n279: JUMPI"
      },
      {
        "offset": 280,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "280: INVALID"
      },
      {
        "offset": 281,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101216104bc56",
        "parsedOpcodes": "281: JUMPDEST\n282: PUSH2 0x0121\n285: PUSH2 0x04bc\n288: JUMP"
      },
      {
        "offset": 289,
        "length": 38,
        "type": "dispatcher",
        "stackBalance": 8,
        "bytecodeHex": "5b60408051602080825283518183015283519192839290830191850190808383821561016757",
        "parsedOpcodes": "289: JUMPDEST\n290: PUSH1 0x40\n292: DUP1\n293: MLOAD\n294: PUSH1 0x20\n296: DUP1\n297: DUP3\n298: MSTORE\n299: DUP4\n300: MLOAD\n301: DUP2\n302: DUP4\n303: ADD\n304: MSTORE\n305: DUP4\n306: MLOAD\n307: SWAP2\n308: SWAP3\n309: DUP4\n310: SWAP3\n311: SWAP1\n312: DUP4\n313: ADD\n314: SWAP2\n315: DUP6\n316: ADD\n317: SWAP1\n318: DUP1\n319: DUP4\n320: DUP4\n321: DUP3\n322: ISZERO\n323: PUSH2 0x0167\n326: JUMPI"
      },
      {
        "offset": 327,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b80518252602083111561016757",
        "parsedOpcodes": "327: JUMPDEST\n328: DUP1\n329: MLOAD\n330: DUP3\n331: MSTORE\n332: PUSH1 0x20\n334: DUP4\n335: GT\n336: ISZERO\n337: PUSH2 0x0167\n340: JUMPI"
      },
      {
        "offset": 341,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "601f19909201916020918201910161014756",
        "parsedOpcodes": "341: PUSH1 0x1f\n343: NOT\n344: SWAP1\n345: SWAP3\n346: ADD\n347: SWAP2\n348: PUSH1 0x20\n350: SWAP2\n351: DUP3\n352: ADD\n353: SWAP2\n354: ADD\n355: PUSH2 0x0147\n358: JUMP"
      },
      {
        "offset": 359,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": -4,
        "bytecodeHex": "5b505050905090810190601f16801561019357",
        "parsedOpcodes": "359: JUMPDEST\n360: POP\n361: POP\n362: POP\n363: SWAP1\n364: POP\n365: SWAP1\n366: DUP2\n367: ADD\n368: SWAP1\n369: PUSH1 0x1f\n371: AND\n372: DUP1\n373: ISZERO\n374: PUSH2 0x0193\n377: JUMPI"
      },
      {
        "offset": 378,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "378: DUP1\n379: DUP3\n380: SUB\n381: DUP1\n382: MLOAD\n383: PUSH1 0x01\n385: DUP4\n386: PUSH1 0x20\n388: SUB\n389: PUSH2 0x0100\n392: EXP\n393: SUB\n394: NOT\n395: AND\n396: DUP2\n397: MSTORE\n398: PUSH1 0x20\n400: ADD\n401: SWAP2\n402: POP"
      },
      {
        "offset": 403,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b509250505060405180910390f3",
        "parsedOpcodes": "403: JUMPDEST\n404: POP\n405: SWAP3\n406: POP\n407: POP\n408: POP\n409: PUSH1 0x40\n411: MLOAD\n412: DUP1\n413: SWAP2\n414: SUB\n415: SWAP1\n416: RETURN"
      },
      {
        "offset": 417,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101a957",
        "parsedOpcodes": "417: JUMPDEST\n418: CALLVALUE\n419: ISZERO\n420: PUSH2 0x01a9\n423: JUMPI"
      },
      {
        "offset": 424,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "424: INVALID"
      },
      {
        "offset": 425,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100c1600160a060020a036004351661054a56",
        "parsedOpcodes": "425: JUMPDEST\n426: PUSH2 0x00c1\n429: PUSH1 0x01\n431: PUSH1 0xa0\n433: PUSH1 0x02\n435: EXP\n436: SUB\n437: PUSH1 0x04\n439: CALLDATALOAD\n440: AND\n441: PUSH2 0x054a\n444: JUMP"
      },
      {
        "offset": 445,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "445: JUMPDEST\n446: STOP"
      },
      {
        "offset": 447,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101c757",
        "parsedOpcodes": "447: JUMPDEST\n448: CALLVALUE\n449: ISZERO\n450: PUSH2 0x01c7\n453: JUMPI"
      },
      {
        "offset": 454,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "454: INVALID"
      },
      {
        "offset": 455,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100c1600160a060020a03600435166105e356",
        "parsedOpcodes": "455: JUMPDEST\n456: PUSH2 0x00c1\n459: PUSH1 0x01\n461: PUSH1 0xa0\n463: PUSH1 0x02\n465: EXP\n466: SUB\n467: PUSH1 0x04\n469: CALLDATALOAD\n470: AND\n471: PUSH2 0x05e3\n474: JUMP"
      },
      {
        "offset": 475,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "475: JUMPDEST\n476: STOP"
      },
      {
        "offset": 477,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101e557",
        "parsedOpcodes": "477: JUMPDEST\n478: CALLVALUE\n479: ISZERO\n480: PUSH2 0x01e5\n483: JUMPI"
      },
      {
        "offset": 484,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "484: INVALID"
      },
      {
        "offset": 485,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100c161067c56",
        "parsedOpcodes": "485: JUMPDEST\n486: PUSH2 0x00c1\n489: PUSH2 0x067c\n492: JUMP"
      },
      {
        "offset": 493,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "493: JUMPDEST\n494: STOP"
      },
      {
        "offset": 495,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101f757",
        "parsedOpcodes": "495: JUMPDEST\n496: CALLVALUE\n497: ISZERO\n498: PUSH2 0x01f7\n501: JUMPI"
      },
      {
        "offset": 502,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "502: INVALID"
      },
      {
        "offset": 503,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100c16107d456",
        "parsedOpcodes": "503: JUMPDEST\n504: PUSH2 0x00c1\n507: PUSH2 0x07d4\n510: JUMP"
      },
      {
        "offset": 511,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "511: JUMPDEST\n512: STOP"
      },
      {
        "offset": 513,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561020957",
        "parsedOpcodes": "513: JUMPDEST\n514: CALLVALUE\n515: ISZERO\n516: PUSH2 0x0209\n519: JUMPI"
      },
      {
        "offset": 520,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "520: INVALID"
      },
      {
        "offset": 521,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100c1600160a060020a03600435166108aa56",
        "parsedOpcodes": "521: JUMPDEST\n522: PUSH2 0x00c1\n525: PUSH1 0x01\n527: PUSH1 0xa0\n529: PUSH1 0x02\n531: EXP\n532: SUB\n533: PUSH1 0x04\n535: CALLDATALOAD\n536: AND\n537: PUSH2 0x08aa\n540: JUMP"
      },
      {
        "offset": 541,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "541: JUMPDEST\n542: STOP"
      },
      {
        "offset": 543,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561022757",
        "parsedOpcodes": "543: JUMPDEST\n544: CALLVALUE\n545: ISZERO\n546: PUSH2 0x0227\n549: JUMPI"
      },
      {
        "offset": 550,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "550: INVALID"
      },
      {
        "offset": 551,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100c161094356",
        "parsedOpcodes": "551: JUMPDEST\n552: PUSH2 0x00c1\n555: PUSH2 0x0943\n558: JUMP"
      },
      {
        "offset": 559,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "559: JUMPDEST\n560: STOP"
      },
      {
        "offset": 561,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561023957",
        "parsedOpcodes": "561: JUMPDEST\n562: CALLVALUE\n563: ISZERO\n564: PUSH2 0x0239\n567: JUMPI"
      },
      {
        "offset": 568,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "568: INVALID"
      },
      {
        "offset": 569,
        "length": 91,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b604080516020600460443581810135601f81018490048402850184019095528484526100c1948235600160a060020a03169460248035956064949293919092019181908401838280828437509496506109d09550505050505056",
        "parsedOpcodes": "569: JUMPDEST\n570: PUSH1 0x40\n572: DUP1\n573: MLOAD\n574: PUSH1 0x20\n576: PUSH1 0x04\n578: PUSH1 0x44\n580: CALLDATALOAD\n581: DUP2\n582: DUP2\n583: ADD\n584: CALLDATALOAD\n585: PUSH1 0x1f\n587: DUP2\n588: ADD\n589: DUP5\n590: SWAP1\n591: DIV\n592: DUP5\n593: MUL\n594: DUP6\n595: ADD\n596: DUP5\n597: ADD\n598: SWAP1\n599: SWAP6\n600: MSTORE\n601: DUP5\n602: DUP5\n603: MSTORE\n604: PUSH2 0x00c1\n607: SWAP5\n608: DUP3\n609: CALLDATALOAD\n610: PUSH1 0x01\n612: PUSH1 0xa0\n614: PUSH1 0x02\n616: EXP\n617: SUB\n618: AND\n619: SWAP5\n620: PUSH1 0x24\n622: DUP1\n623: CALLDATALOAD\n624: SWAP6\n625: PUSH1 0x64\n627: SWAP5\n628: SWAP3\n629: SWAP4\n630: SWAP2\n631: SWAP1\n632: SWAP3\n633: ADD\n634: SWAP2\n635: DUP2\n636: SWAP1\n637: DUP5\n638: ADD\n639: DUP4\n640: DUP3\n641: DUP1\n642: DUP3\n643: DUP5\n644: CALLDATACOPY\n645: POP\n646: SWAP5\n647: SWAP7\n648: POP\n649: PUSH2 0x09d0\n652: SWAP6\n653: POP\n654: POP\n655: POP\n656: POP\n657: POP\n658: POP\n659: JUMP"
      },
      {
        "offset": 660,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "660: JUMPDEST\n661: STOP"
      },
      {
        "offset": 662,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561029e57",
        "parsedOpcodes": "662: JUMPDEST\n663: CALLVALUE\n664: ISZERO\n665: PUSH2 0x029e\n668: JUMPI"
      },
      {
        "offset": 669,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "669: INVALID"
      },
      {
        "offset": 670,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6102b2600160a060020a0360043516610b2556",
        "parsedOpcodes": "670: JUMPDEST\n671: PUSH2 0x02b2\n674: PUSH1 0x01\n676: PUSH1 0xa0\n678: PUSH1 0x02\n680: EXP\n681: SUB\n682: PUSH1 0x04\n684: CALLDATALOAD\n685: AND\n686: PUSH2 0x0b25\n689: JUMP"
      },
      {
        "offset": 690,
        "length": 103,
        "type": "dispatcher",
        "stackBalance": -11,
        "bytecodeHex": "5b60408051600160a060020a039c8d1681529a8c1660208c01528a810199909952968a1660608a0152948916608089015260a088019390935290871660c087015260e08601526101008501526101208401529092166101408201529051908190036101600190f3",
        "parsedOpcodes": "690: JUMPDEST\n691: PUSH1 0x40\n693: DUP1\n694: MLOAD\n695: PUSH1 0x01\n697: PUSH1 0xa0\n699: PUSH1 0x02\n701: EXP\n702: SUB\n703: SWAP13\n704: DUP14\n705: AND\n706: DUP2\n707: MSTORE\n708: SWAP11\n709: DUP13\n710: AND\n711: PUSH1 0x20\n713: DUP13\n714: ADD\n715: MSTORE\n716: DUP11\n717: DUP2\n718: ADD\n719: SWAP10\n720: SWAP1\n721: SWAP10\n722: MSTORE\n723: SWAP7\n724: DUP11\n725: AND\n726: PUSH1 0x60\n728: DUP11\n729: ADD\n730: MSTORE\n731: SWAP5\n732: DUP10\n733: AND\n734: PUSH1 0x80\n736: DUP10\n737: ADD\n738: MSTORE\n739: PUSH1 0xa0\n741: DUP9\n742: ADD\n743: SWAP4\n744: SWAP1\n745: SWAP4\n746: MSTORE\n747: SWAP1\n748: DUP8\n749: AND\n750: PUSH1 0xc0\n752: DUP8\n753: ADD\n754: MSTORE\n755: PUSH1 0xe0\n757: DUP7\n758: ADD\n759: MSTORE\n760: PUSH2 0x0100\n763: DUP6\n764: ADD\n765: MSTORE\n766: PUSH2 0x0120\n769: DUP5\n770: ADD\n771: MSTORE\n772: SWAP1\n773: SWAP3\n774: AND\n775: PUSH2 0x0140\n778: DUP3\n779: ADD\n780: MSTORE\n781: SWAP1\n782: MLOAD\n783: SWAP1\n784: DUP2\n785: SWAP1\n786: SUB\n787: PUSH2 0x0160\n790: ADD\n791: SWAP1\n792: RETURN"
      },
      {
        "offset": 793,
        "length": 43,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d57",
        "parsedOpcodes": "793: JUMPDEST\n794: PUSH1 0x01\n796: PUSH1 0xa0\n798: PUSH1 0x02\n800: EXP\n801: SUB\n802: DUP3\n803: DUP2\n804: AND\n805: PUSH1 0x00\n807: SWAP1\n808: DUP2\n809: MSTORE\n810: PUSH1 0x01\n812: PUSH1 0x20\n814: MSTORE\n815: PUSH1 0x40\n817: SWAP1\n818: SHA3\n819: PUSH1 0x03\n821: ADD\n822: SLOAD\n823: DUP4\n824: SWAP2\n825: CALLER\n826: DUP2\n827: AND\n828: SWAP2\n829: AND\n830: EQ\n831: ISZERO\n832: PUSH2 0x034d\n835: JUMPI"
      },
      {
        "offset": 836,
        "length": 9,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "61034d8383610b9256",
        "parsedOpcodes": "836: PUSH2 0x034d\n839: DUP4\n840: DUP4\n841: PUSH2 0x0b92\n844: JUMP"
      },
      {
        "offset": 845,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "845: JUMPDEST"
      },
      {
        "offset": 846,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "846: JUMPDEST"
      },
      {
        "offset": 847,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "847: JUMPDEST"
      },
      {
        "offset": 848,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "848: JUMPDEST\n849: POP\n850: POP\n851: POP\n852: JUMP"
      },
      {
        "offset": 853,
        "length": 43,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a0382811660009081526001602052604090206003015483913381169116141561034d57",
        "parsedOpcodes": "853: JUMPDEST\n854: PUSH1 0x01\n856: PUSH1 0xa0\n858: PUSH1 0x02\n860: EXP\n861: SUB\n862: DUP3\n863: DUP2\n864: AND\n865: PUSH1 0x00\n867: SWAP1\n868: DUP2\n869: MSTORE\n870: PUSH1 0x01\n872: PUSH1 0x20\n874: MSTORE\n875: PUSH1 0x40\n877: SWAP1\n878: SHA3\n879: PUSH1 0x03\n881: ADD\n882: SLOAD\n883: DUP4\n884: SWAP2\n885: CALLER\n886: DUP2\n887: AND\n888: SWAP2\n889: AND\n890: EQ\n891: ISZERO\n892: PUSH2 0x034d\n895: JUMPI"
      },
      {
        "offset": 896,
        "length": 49,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600160a060020a0383811660009081526001602052604090206003018054600160a060020a031916918416919091179055",
        "parsedOpcodes": "896: PUSH1 0x01\n898: PUSH1 0xa0\n900: PUSH1 0x02\n902: EXP\n903: SUB\n904: DUP4\n905: DUP2\n906: AND\n907: PUSH1 0x00\n909: SWAP1\n910: DUP2\n911: MSTORE\n912: PUSH1 0x01\n914: PUSH1 0x20\n916: MSTORE\n917: PUSH1 0x40\n919: SWAP1\n920: SHA3\n921: PUSH1 0x03\n923: ADD\n924: DUP1\n925: SLOAD\n926: PUSH1 0x01\n928: PUSH1 0xa0\n930: PUSH1 0x02\n932: EXP\n933: SUB\n934: NOT\n935: AND\n936: SWAP2\n937: DUP5\n938: AND\n939: SWAP2\n940: SWAP1\n941: SWAP2\n942: OR\n943: SWAP1\n944: SSTORE"
      },
      {
        "offset": 945,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "945: JUMPDEST"
      },
      {
        "offset": 946,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "946: JUMPDEST"
      },
      {
        "offset": 947,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "947: JUMPDEST\n948: POP\n949: POP\n950: POP\n951: JUMP"
      },
      {
        "offset": 952,
        "length": 35,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a03808516600090815260016020526040812054909116156103df57",
        "parsedOpcodes": "952: JUMPDEST\n953: PUSH1 0x01\n955: PUSH1 0xa0\n957: PUSH1 0x02\n959: EXP\n960: SUB\n961: DUP1\n962: DUP6\n963: AND\n964: PUSH1 0x00\n966: SWAP1\n967: DUP2\n968: MSTORE\n969: PUSH1 0x01\n971: PUSH1 0x20\n973: MSTORE\n974: PUSH1 0x40\n976: DUP2\n977: SHA3\n978: SLOAD\n979: SWAP1\n980: SWAP2\n981: AND\n982: ISZERO\n983: PUSH2 0x03df\n986: JUMPI"
      },
      {
        "offset": 987,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61000056",
        "parsedOpcodes": "987: PUSH2 0x0000\n990: JUMP"
      },
      {
        "offset": 991,
        "length": 83,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a0385811660008181526001602052604090208054600160a060020a0319908116909217815560038101805490921692871692909217905560088101849055600901829055610432610c8f56",
        "parsedOpcodes": "991: JUMPDEST\n992: PUSH1 0x01\n994: PUSH1 0xa0\n996: PUSH1 0x02\n998: EXP\n999: SUB\n1000: DUP6\n1001: DUP2\n1002: AND\n1003: PUSH1 0x00\n1005: DUP2\n1006: DUP2\n1007: MSTORE\n1008: PUSH1 0x01\n1010: PUSH1 0x20\n1012: MSTORE\n1013: PUSH1 0x40\n1015: SWAP1\n1016: SHA3\n1017: DUP1\n1018: SLOAD\n1019: PUSH1 0x01\n1021: PUSH1 0xa0\n1023: PUSH1 0x02\n1025: EXP\n1026: SUB\n1027: NOT\n1028: SWAP1\n1029: DUP2\n1030: AND\n1031: SWAP1\n1032: SWAP3\n1033: OR\n1034: DUP2\n1035: SSTORE\n1036: PUSH1 0x03\n1038: DUP2\n1039: ADD\n1040: DUP1\n1041: SLOAD\n1042: SWAP1\n1043: SWAP3\n1044: AND\n1045: SWAP3\n1046: DUP8\n1047: AND\n1048: SWAP3\n1049: SWAP1\n1050: SWAP3\n1051: OR\n1052: SWAP1\n1053: SSTORE\n1054: PUSH1 0x08\n1056: DUP2\n1057: ADD\n1058: DUP5\n1059: SWAP1\n1060: SSTORE\n1061: PUSH1 0x09\n1063: ADD\n1064: DUP3\n1065: SWAP1\n1066: SSTORE\n1067: PUSH2 0x0432\n1070: PUSH2 0x0c8f\n1073: JUMP"
      },
      {
        "offset": 1074,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60405190819003906000f080151561044657",
        "parsedOpcodes": "1074: JUMPDEST\n1075: PUSH1 0x40\n1077: MLOAD\n1078: SWAP1\n1079: DUP2\n1080: SWAP1\n1081: SUB\n1082: SWAP1\n1083: PUSH1 0x00\n1085: CREATE\n1086: DUP1\n1087: ISZERO\n1088: ISZERO\n1089: PUSH2 0x0446\n1092: JUMPI"
      },
      {
        "offset": 1093,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1093: INVALID"
      },
      {
        "offset": 1094,
        "length": 111,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b600160a060020a03868116600090815260016020908152604091829020600a018054600160a060020a0319168585169081179091558251339094168452915193945090927f2a27c6cf9c3213c48ff0c601216c2a57fea2bc0b9a40b9bd6f2ff8382cbaaab19281900390910190a2",
        "parsedOpcodes": "1094: JUMPDEST\n1095: PUSH1 0x01\n1097: PUSH1 0xa0\n1099: PUSH1 0x02\n1101: EXP\n1102: SUB\n1103: DUP7\n1104: DUP2\n1105: AND\n1106: PUSH1 0x00\n1108: SWAP1\n1109: DUP2\n1110: MSTORE\n1111: PUSH1 0x01\n1113: PUSH1 0x20\n1115: SWAP1\n1116: DUP2\n1117: MSTORE\n1118: PUSH1 0x40\n1120: SWAP2\n1121: DUP3\n1122: SWAP1\n1123: SHA3\n1124: PUSH1 0x0a\n1126: ADD\n1127: DUP1\n1128: SLOAD\n1129: PUSH1 0x01\n1131: PUSH1 0xa0\n1133: PUSH1 0x02\n1135: EXP\n1136: SUB\n1137: NOT\n1138: AND\n1139: DUP6\n1140: DUP6\n1141: AND\n1142: SWAP1\n1143: DUP2\n1144: OR\n1145: SWAP1\n1146: SWAP2\n1147: SSTORE\n1148: DUP3\n1149: MLOAD\n1150: CALLER\n1151: SWAP1\n1152: SWAP5\n1153: AND\n1154: DUP5\n1155: MSTORE\n1156: SWAP2\n1157: MLOAD\n1158: SWAP4\n1159: SWAP5\n1160: POP\n1161: SWAP1\n1162: SWAP3\n1163: PUSH32 0x2a27c6cf9c3213c48ff0c601216c2a57fea2bc0b9a40b9bd6f2ff8382cbaaab1\n1196: SWAP3\n1197: DUP2\n1198: SWAP1\n1199: SUB\n1200: SWAP1\n1201: SWAP2\n1202: ADD\n1203: SWAP1\n1204: LOG2"
      },
      {
        "offset": 1205,
        "length": 7,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505050505056",
        "parsedOpcodes": "1205: JUMPDEST\n1206: POP\n1207: POP\n1208: POP\n1209: POP\n1210: POP\n1211: JUMP"
      },
      {
        "offset": 1212,
        "length": 64,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561054257",
        "parsedOpcodes": "1212: JUMPDEST\n1213: PUSH1 0x00\n1215: DUP1\n1216: SLOAD\n1217: PUSH1 0x40\n1219: DUP1\n1220: MLOAD\n1221: PUSH1 0x20\n1223: PUSH1 0x02\n1225: PUSH1 0x01\n1227: DUP6\n1228: AND\n1229: ISZERO\n1230: PUSH2 0x0100\n1233: MUL\n1234: PUSH1 0x00\n1236: NOT\n1237: ADD\n1238: SWAP1\n1239: SWAP5\n1240: AND\n1241: SWAP4\n1242: SWAP1\n1243: SWAP4\n1244: DIV\n1245: PUSH1 0x1f\n1247: DUP2\n1248: ADD\n1249: DUP5\n1250: SWAP1\n1251: DIV\n1252: DUP5\n1253: MUL\n1254: DUP3\n1255: ADD\n1256: DUP5\n1257: ADD\n1258: SWAP1\n1259: SWAP3\n1260: MSTORE\n1261: DUP2\n1262: DUP2\n1263: MSTORE\n1264: SWAP3\n1265: SWAP2\n1266: DUP4\n1267: ADD\n1268: DUP3\n1269: DUP3\n1270: DUP1\n1271: ISZERO\n1272: PUSH2 0x0542\n1275: JUMPI"
      },
      {
        "offset": 1276,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80601f1061051757",
        "parsedOpcodes": "1276: DUP1\n1277: PUSH1 0x1f\n1279: LT\n1280: PUSH2 0x0517\n1283: JUMPI"
      },
      {
        "offset": 1284,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61010080835404028352916020019161054256",
        "parsedOpcodes": "1284: PUSH2 0x0100\n1287: DUP1\n1288: DUP4\n1289: SLOAD\n1290: DIV\n1291: MUL\n1292: DUP4\n1293: MSTORE\n1294: SWAP2\n1295: PUSH1 0x20\n1297: ADD\n1298: SWAP2\n1299: PUSH2 0x0542\n1302: JUMP"
      },
      {
        "offset": 1303,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b82019190600052602060002090",
        "parsedOpcodes": "1303: JUMPDEST\n1304: DUP3\n1305: ADD\n1306: SWAP2\n1307: SWAP1\n1308: PUSH1 0x00\n1310: MSTORE\n1311: PUSH1 0x20\n1313: PUSH1 0x00\n1315: SHA3\n1316: SWAP1"
      },
      {
        "offset": 1317,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b81548152906001019060200180831161052557",
        "parsedOpcodes": "1317: JUMPDEST\n1318: DUP2\n1319: SLOAD\n1320: DUP2\n1321: MSTORE\n1322: SWAP1\n1323: PUSH1 0x01\n1325: ADD\n1326: SWAP1\n1327: PUSH1 0x20\n1329: ADD\n1330: DUP1\n1331: DUP4\n1332: GT\n1333: PUSH2 0x0525\n1336: JUMPI"
      },
      {
        "offset": 1337,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "829003601f16820191",
        "parsedOpcodes": "1337: DUP3\n1338: SWAP1\n1339: SUB\n1340: PUSH1 0x1f\n1342: AND\n1343: DUP3\n1344: ADD\n1345: SWAP2"
      },
      {
        "offset": 1346,
        "length": 8,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050508156",
        "parsedOpcodes": "1346: JUMPDEST\n1347: POP\n1348: POP\n1349: POP\n1350: POP\n1351: POP\n1352: DUP2\n1353: JUMP"
      },
      {
        "offset": 1354,
        "length": 150,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a033381166000818152600160209081526040918290206009810154420160078201556006018054948616600160a060020a0319909516949094179093558051928301919091528082526014828201527f7369676e436f6e74726f6c6c65724368616e6765000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a1",
        "parsedOpcodes": "1354: JUMPDEST\n1355: PUSH1 0x01\n1357: PUSH1 0xa0\n1359: PUSH1 0x02\n1361: EXP\n1362: SUB\n1363: CALLER\n1364: DUP2\n1365: AND\n1366: PUSH1 0x00\n1368: DUP2\n1369: DUP2\n1370: MSTORE\n1371: PUSH1 0x01\n1373: PUSH1 0x20\n1375: SWAP1\n1376: DUP2\n1377: MSTORE\n1378: PUSH1 0x40\n1380: SWAP2\n1381: DUP3\n1382: SWAP1\n1383: SHA3\n1384: PUSH1 0x09\n1386: DUP2\n1387: ADD\n1388: SLOAD\n1389: TIMESTAMP\n1390: ADD\n1391: PUSH1 0x07\n1393: DUP3\n1394: ADD\n1395: SSTORE\n1396: PUSH1 0x06\n1398: ADD\n1399: DUP1\n1400: SLOAD\n1401: SWAP5\n1402: DUP7\n1403: AND\n1404: PUSH1 0x01\n1406: PUSH1 0xa0\n1408: PUSH1 0x02\n1410: EXP\n1411: SUB\n1412: NOT\n1413: SWAP1\n1414: SWAP6\n1415: AND\n1416: SWAP5\n1417: SWAP1\n1418: SWAP5\n1419: OR\n1420: SWAP1\n1421: SWAP4\n1422: SSTORE\n1423: DUP1\n1424: MLOAD\n1425: SWAP3\n1426: DUP4\n1427: ADD\n1428: SWAP2\n1429: SWAP1\n1430: SWAP2\n1431: MSTORE\n1432: DUP1\n1433: DUP3\n1434: MSTORE\n1435: PUSH1 0x14\n1437: DUP3\n1438: DUP3\n1439: ADD\n1440: MSTORE\n1441: PUSH32 0x7369676e436f6e74726f6c6c65724368616e6765000000000000000000000000\n1474: PUSH1 0x60\n1476: DUP4\n1477: ADD\n1478: MSTORE\n1479: MLOAD\n1480: PUSH1 0x00\n1482: DUP1\n1483: MLOAD\n1484: PUSH1 0x20\n1486: PUSH2 0x0eaf\n1489: DUP4\n1490: CODECOPY\n1491: DUP2\n1492: MLOAD\n1493: SWAP2\n1494: MSTORE\n1495: SWAP2\n1496: DUP2\n1497: SWAP1\n1498: SUB\n1499: PUSH1 0x80\n1501: ADD\n1502: SWAP1\n1503: LOG1"
      },
      {
        "offset": 1504,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1504: JUMPDEST\n1505: POP\n1506: JUMP"
      },
      {
        "offset": 1507,
        "length": 150,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a033381166000818152600160209081526040918290206009810154420160058201556004018054948616600160a060020a0319909516949094179093558051928301919091528082526012828201527f7369676e5265636f766572794368616e67650000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a1",
        "parsedOpcodes": "1507: JUMPDEST\n1508: PUSH1 0x01\n1510: PUSH1 0xa0\n1512: PUSH1 0x02\n1514: EXP\n1515: SUB\n1516: CALLER\n1517: DUP2\n1518: AND\n1519: PUSH1 0x00\n1521: DUP2\n1522: DUP2\n1523: MSTORE\n1524: PUSH1 0x01\n1526: PUSH1 0x20\n1528: SWAP1\n1529: DUP2\n1530: MSTORE\n1531: PUSH1 0x40\n1533: SWAP2\n1534: DUP3\n1535: SWAP1\n1536: SHA3\n1537: PUSH1 0x09\n1539: DUP2\n1540: ADD\n1541: SLOAD\n1542: TIMESTAMP\n1543: ADD\n1544: PUSH1 0x05\n1546: DUP3\n1547: ADD\n1548: SSTORE\n1549: PUSH1 0x04\n1551: ADD\n1552: DUP1\n1553: SLOAD\n1554: SWAP5\n1555: DUP7\n1556: AND\n1557: PUSH1 0x01\n1559: PUSH1 0xa0\n1561: PUSH1 0x02\n1563: EXP\n1564: SUB\n1565: NOT\n1566: SWAP1\n1567: SWAP6\n1568: AND\n1569: SWAP5\n1570: SWAP1\n1571: SWAP5\n1572: OR\n1573: SWAP1\n1574: SWAP4\n1575: SSTORE\n1576: DUP1\n1577: MLOAD\n1578: SWAP3\n1579: DUP4\n1580: ADD\n1581: SWAP2\n1582: SWAP1\n1583: SWAP2\n1584: MSTORE\n1585: DUP1\n1586: DUP3\n1587: MSTORE\n1588: PUSH1 0x12\n1590: DUP3\n1591: DUP3\n1592: ADD\n1593: MSTORE\n1594: PUSH32 0x7369676e5265636f766572794368616e67650000000000000000000000000000\n1627: PUSH1 0x60\n1629: DUP4\n1630: ADD\n1631: MSTORE\n1632: MLOAD\n1633: PUSH1 0x00\n1635: DUP1\n1636: MLOAD\n1637: PUSH1 0x20\n1639: PUSH2 0x0eaf\n1642: DUP4\n1643: CODECOPY\n1644: DUP2\n1645: MLOAD\n1646: SWAP2\n1647: MSTORE\n1648: SWAP2\n1649: DUP2\n1650: SWAP1\n1651: SUB\n1652: PUSH1 0x80\n1654: ADD\n1655: SWAP1\n1656: LOG1"
      },
      {
        "offset": 1657,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1657: JUMPDEST\n1658: POP\n1659: JUMP"
      },
      {
        "offset": 1660,
        "length": 38,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a03331660009081526001602052604090206007015442901080156106c357",
        "parsedOpcodes": "1660: JUMPDEST\n1661: PUSH1 0x01\n1663: PUSH1 0xa0\n1665: PUSH1 0x02\n1667: EXP\n1668: SUB\n1669: CALLER\n1670: AND\n1671: PUSH1 0x00\n1673: SWAP1\n1674: DUP2\n1675: MSTORE\n1676: PUSH1 0x01\n1678: PUSH1 0x20\n1680: MSTORE\n1681: PUSH1 0x40\n1683: SWAP1\n1684: SHA3\n1685: PUSH1 0x07\n1687: ADD\n1688: SLOAD\n1689: TIMESTAMP\n1690: SWAP1\n1691: LT\n1692: DUP1\n1693: ISZERO\n1694: PUSH2 0x06c3\n1697: JUMPI"
      },
      {
        "offset": 1698,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160a060020a03338116600090815260016020526040902060060154161515",
        "parsedOpcodes": "1698: POP\n1699: PUSH1 0x01\n1701: PUSH1 0xa0\n1703: PUSH1 0x02\n1705: EXP\n1706: SUB\n1707: CALLER\n1708: DUP2\n1709: AND\n1710: PUSH1 0x00\n1712: SWAP1\n1713: DUP2\n1714: MSTORE\n1715: PUSH1 0x01\n1717: PUSH1 0x20\n1719: MSTORE\n1720: PUSH1 0x40\n1722: SWAP1\n1723: SHA3\n1724: PUSH1 0x06\n1726: ADD\n1727: SLOAD\n1728: AND\n1729: ISZERO\n1730: ISZERO"
      },
      {
        "offset": 1731,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156107d157",
        "parsedOpcodes": "1731: JUMPDEST\n1732: ISZERO\n1733: PUSH2 0x07d1\n1736: JUMPI"
      },
      {
        "offset": 1737,
        "length": 117,
        "type": "common",
        "stackBalance": 9,
        "bytecodeHex": "600160a060020a03338116600090815260016020526040808220600a81015460069091015482517f1a69523000000000000000000000000000000000000000000000000000000000815290851660048201529151931692631a6952309260248084019391929182900301818387803b151561073f57",
        "parsedOpcodes": "1737: PUSH1 0x01\n1739: PUSH1 0xa0\n1741: PUSH1 0x02\n1743: EXP\n1744: SUB\n1745: CALLER\n1746: DUP2\n1747: AND\n1748: PUSH1 0x00\n1750: SWAP1\n1751: DUP2\n1752: MSTORE\n1753: PUSH1 0x01\n1755: PUSH1 0x20\n1757: MSTORE\n1758: PUSH1 0x40\n1760: DUP1\n1761: DUP3\n1762: SHA3\n1763: PUSH1 0x0a\n1765: DUP2\n1766: ADD\n1767: SLOAD\n1768: PUSH1 0x06\n1770: SWAP1\n1771: SWAP2\n1772: ADD\n1773: SLOAD\n1774: DUP3\n1775: MLOAD\n1776: PUSH32 0x1a69523000000000000000000000000000000000000000000000000000000000\n1809: DUP2\n1810: MSTORE\n1811: SWAP1\n1812: DUP6\n1813: AND\n1814: PUSH1 0x04\n1816: DUP3\n1817: ADD\n1818: MSTORE\n1819: SWAP2\n1820: MLOAD\n1821: SWAP4\n1822: AND\n1823: SWAP3\n1824: PUSH4 0x1a695230\n1829: SWAP3\n1830: PUSH1 0x24\n1832: DUP1\n1833: DUP5\n1834: ADD\n1835: SWAP4\n1836: SWAP2\n1837: SWAP3\n1838: SWAP2\n1839: DUP3\n1840: SWAP1\n1841: SUB\n1842: ADD\n1843: DUP2\n1844: DUP4\n1845: DUP8\n1846: DUP1\n1847: EXTCODESIZE\n1848: ISZERO\n1849: ISZERO\n1850: PUSH2 0x073f\n1853: JUMPI"
      },
      {
        "offset": 1854,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1854: INVALID"
      },
      {
        "offset": 1855,
        "length": 12,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b60325a03f1151561074c57",
        "parsedOpcodes": "1855: JUMPDEST\n1856: PUSH1 0x32\n1858: GAS\n1859: SUB\n1860: CALL\n1861: ISZERO\n1862: ISZERO\n1863: PUSH2 0x074c\n1866: JUMPI"
      },
      {
        "offset": 1867,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1867: INVALID"
      },
      {
        "offset": 1868,
        "length": 133,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505050600160a060020a033316600090815260016020819052604082208054600160a060020a03199081168255918101805483169055600281018390556003810180548316905560048101805483169055600581018390556006810180548316905560078101839055600881018390556009810192909255600a90910180549091169055",
        "parsedOpcodes": "1868: JUMPDEST\n1869: POP\n1870: POP\n1871: POP\n1872: PUSH1 0x01\n1874: PUSH1 0xa0\n1876: PUSH1 0x02\n1878: EXP\n1879: SUB\n1880: CALLER\n1881: AND\n1882: PUSH1 0x00\n1884: SWAP1\n1885: DUP2\n1886: MSTORE\n1887: PUSH1 0x01\n1889: PUSH1 0x20\n1891: DUP2\n1892: SWAP1\n1893: MSTORE\n1894: PUSH1 0x40\n1896: DUP3\n1897: SHA3\n1898: DUP1\n1899: SLOAD\n1900: PUSH1 0x01\n1902: PUSH1 0xa0\n1904: PUSH1 0x02\n1906: EXP\n1907: SUB\n1908: NOT\n1909: SWAP1\n1910: DUP2\n1911: AND\n1912: DUP3\n1913: SSTORE\n1914: SWAP2\n1915: DUP2\n1916: ADD\n1917: DUP1\n1918: SLOAD\n1919: DUP4\n1920: AND\n1921: SWAP1\n1922: SSTORE\n1923: PUSH1 0x02\n1925: DUP2\n1926: ADD\n1927: DUP4\n1928: SWAP1\n1929: SSTORE\n1930: PUSH1 0x03\n1932: DUP2\n1933: ADD\n1934: DUP1\n1935: SLOAD\n1936: DUP4\n1937: AND\n1938: SWAP1\n1939: SSTORE\n1940: PUSH1 0x04\n1942: DUP2\n1943: ADD\n1944: DUP1\n1945: SLOAD\n1946: DUP4\n1947: AND\n1948: SWAP1\n1949: SSTORE\n1950: PUSH1 0x05\n1952: DUP2\n1953: ADD\n1954: DUP4\n1955: SWAP1\n1956: SSTORE\n1957: PUSH1 0x06\n1959: DUP2\n1960: ADD\n1961: DUP1\n1962: SLOAD\n1963: DUP4\n1964: AND\n1965: SWAP1\n1966: SSTORE\n1967: PUSH1 0x07\n1969: DUP2\n1970: ADD\n1971: DUP4\n1972: SWAP1\n1973: SSTORE\n1974: PUSH1 0x08\n1976: DUP2\n1977: ADD\n1978: DUP4\n1979: SWAP1\n1980: SSTORE\n1981: PUSH1 0x09\n1983: DUP2\n1984: ADD\n1985: SWAP3\n1986: SWAP1\n1987: SWAP3\n1988: SSTORE\n1989: PUSH1 0x0a\n1991: SWAP1\n1992: SWAP2\n1993: ADD\n1994: DUP1\n1995: SLOAD\n1996: SWAP1\n1997: SWAP2\n1998: AND\n1999: SWAP1\n2000: SSTORE"
      },
      {
        "offset": 2001,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2001: JUMPDEST"
      },
      {
        "offset": 2002,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "2002: JUMPDEST\n2003: JUMP"
      },
      {
        "offset": 2004,
        "length": 38,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a033316600090815260016020526040902060020154429010801561081c57",
        "parsedOpcodes": "2004: JUMPDEST\n2005: PUSH1 0x01\n2007: PUSH1 0xa0\n2009: PUSH1 0x02\n2011: EXP\n2012: SUB\n2013: CALLER\n2014: AND\n2015: PUSH1 0x00\n2017: SWAP1\n2018: DUP2\n2019: MSTORE\n2020: PUSH1 0x01\n2022: PUSH1 0x20\n2024: MSTORE\n2025: PUSH1 0x40\n2027: SWAP1\n2028: SHA3\n2029: PUSH1 0x02\n2031: ADD\n2032: SLOAD\n2033: TIMESTAMP\n2034: SWAP1\n2035: LT\n2036: DUP1\n2037: ISZERO\n2038: PUSH2 0x081c\n2041: JUMPI"
      },
      {
        "offset": 2042,
        "length": 34,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160a060020a0333811660009081526001602081905260409091200154161515",
        "parsedOpcodes": "2042: POP\n2043: PUSH1 0x01\n2045: PUSH1 0xa0\n2047: PUSH1 0x02\n2049: EXP\n2050: SUB\n2051: CALLER\n2052: DUP2\n2053: AND\n2054: PUSH1 0x00\n2056: SWAP1\n2057: DUP2\n2058: MSTORE\n2059: PUSH1 0x01\n2061: PUSH1 0x20\n2063: DUP2\n2064: SWAP1\n2065: MSTORE\n2066: PUSH1 0x40\n2068: SWAP1\n2069: SWAP2\n2070: SHA3\n2071: ADD\n2072: SLOAD\n2073: AND\n2074: ISZERO\n2075: ISZERO"
      },
      {
        "offset": 2076,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156107d157",
        "parsedOpcodes": "2076: JUMPDEST\n2077: ISZERO\n2078: PUSH2 0x07d1\n2081: JUMPI"
      },
      {
        "offset": 2082,
        "length": 40,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "600160a060020a03338181166000908152600160208190526040909120015461084a9216610b9256",
        "parsedOpcodes": "2082: PUSH1 0x01\n2084: PUSH1 0xa0\n2086: PUSH1 0x02\n2088: EXP\n2089: SUB\n2090: CALLER\n2091: DUP2\n2092: DUP2\n2093: AND\n2094: PUSH1 0x00\n2096: SWAP1\n2097: DUP2\n2098: MSTORE\n2099: PUSH1 0x01\n2101: PUSH1 0x20\n2103: DUP2\n2104: SWAP1\n2105: MSTORE\n2106: PUSH1 0x40\n2108: SWAP1\n2109: SWAP2\n2110: SHA3\n2111: ADD\n2112: SLOAD\n2113: PUSH2 0x084a\n2116: SWAP3\n2117: AND\n2118: PUSH2 0x0b92\n2121: JUMP"
      },
      {
        "offset": 2122,
        "length": 93,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051600160a060020a0333166020820152818152600d818301527f6368616e6765557365724b65790000000000000000000000000000000000000060608201529051600080516020610eaf8339815191529181900360800190a1",
        "parsedOpcodes": "2122: JUMPDEST\n2123: PUSH1 0x40\n2125: DUP1\n2126: MLOAD\n2127: PUSH1 0x01\n2129: PUSH1 0xa0\n2131: PUSH1 0x02\n2133: EXP\n2134: SUB\n2135: CALLER\n2136: AND\n2137: PUSH1 0x20\n2139: DUP3\n2140: ADD\n2141: MSTORE\n2142: DUP2\n2143: DUP2\n2144: MSTORE\n2145: PUSH1 0x0d\n2147: DUP2\n2148: DUP4\n2149: ADD\n2150: MSTORE\n2151: PUSH32 0x6368616e6765557365724b657900000000000000000000000000000000000000\n2184: PUSH1 0x60\n2186: DUP3\n2187: ADD\n2188: MSTORE\n2189: SWAP1\n2190: MLOAD\n2191: PUSH1 0x00\n2193: DUP1\n2194: MLOAD\n2195: PUSH1 0x20\n2197: PUSH2 0x0eaf\n2200: DUP4\n2201: CODECOPY\n2202: DUP2\n2203: MLOAD\n2204: SWAP2\n2205: MSTORE\n2206: SWAP2\n2207: DUP2\n2208: SWAP1\n2209: SUB\n2210: PUSH1 0x80\n2212: ADD\n2213: SWAP1\n2214: LOG1"
      },
      {
        "offset": 2215,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2215: JUMPDEST"
      },
      {
        "offset": 2216,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "2216: JUMPDEST\n2217: JUMP"
      },
      {
        "offset": 2218,
        "length": 150,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a033381166000818152600160208181526040928390206008810154420160028201559091018054948616600160a060020a0319909516949094179093558051928301919091528082526011828201527f7369676e557365724b65794368616e6765000000000000000000000000000000606083015251600080516020610eaf8339815191529181900360800190a1",
        "parsedOpcodes": "2218: JUMPDEST\n2219: PUSH1 0x01\n2221: PUSH1 0xa0\n2223: PUSH1 0x02\n2225: EXP\n2226: SUB\n2227: CALLER\n2228: DUP2\n2229: AND\n2230: PUSH1 0x00\n2232: DUP2\n2233: DUP2\n2234: MSTORE\n2235: PUSH1 0x01\n2237: PUSH1 0x20\n2239: DUP2\n2240: DUP2\n2241: MSTORE\n2242: PUSH1 0x40\n2244: SWAP3\n2245: DUP4\n2246: SWAP1\n2247: SHA3\n2248: PUSH1 0x08\n2250: DUP2\n2251: ADD\n2252: SLOAD\n2253: TIMESTAMP\n2254: ADD\n2255: PUSH1 0x02\n2257: DUP3\n2258: ADD\n2259: SSTORE\n2260: SWAP1\n2261: SWAP2\n2262: ADD\n2263: DUP1\n2264: SLOAD\n2265: SWAP5\n2266: DUP7\n2267: AND\n2268: PUSH1 0x01\n2270: PUSH1 0xa0\n2272: PUSH1 0x02\n2274: EXP\n2275: SUB\n2276: NOT\n2277: SWAP1\n2278: SWAP6\n2279: AND\n2280: SWAP5\n2281: SWAP1\n2282: SWAP5\n2283: OR\n2284: SWAP1\n2285: SWAP4\n2286: SSTORE\n2287: DUP1\n2288: MLOAD\n2289: SWAP3\n2290: DUP4\n2291: ADD\n2292: SWAP2\n2293: SWAP1\n2294: SWAP2\n2295: MSTORE\n2296: DUP1\n2297: DUP3\n2298: MSTORE\n2299: PUSH1 0x11\n2301: DUP3\n2302: DUP3\n2303: ADD\n2304: MSTORE\n2305: PUSH32 0x7369676e557365724b65794368616e6765000000000000000000000000000000\n2338: PUSH1 0x60\n2340: DUP4\n2341: ADD\n2342: MSTORE\n2343: MLOAD\n2344: PUSH1 0x00\n2346: DUP1\n2347: MLOAD\n2348: PUSH1 0x20\n2350: PUSH2 0x0eaf\n2353: DUP4\n2354: CODECOPY\n2355: DUP2\n2356: MLOAD\n2357: SWAP2\n2358: MSTORE\n2359: SWAP2\n2360: DUP2\n2361: SWAP1\n2362: SUB\n2363: PUSH1 0x80\n2365: ADD\n2366: SWAP1\n2367: LOG1"
      },
      {
        "offset": 2368,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "2368: JUMPDEST\n2369: POP\n2370: JUMP"
      },
      {
        "offset": 2371,
        "length": 38,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600160a060020a033316600090815260016020526040902060050154429010801561098a57",
        "parsedOpcodes": "2371: JUMPDEST\n2372: PUSH1 0x01\n2374: PUSH1 0xa0\n2376: PUSH1 0x02\n2378: EXP\n2379: SUB\n2380: CALLER\n2381: AND\n2382: PUSH1 0x00\n2384: SWAP1\n2385: DUP2\n2386: MSTORE\n2387: PUSH1 0x01\n2389: PUSH1 0x20\n2391: MSTORE\n2392: PUSH1 0x40\n2394: SWAP1\n2395: SHA3\n2396: PUSH1 0x05\n2398: ADD\n2399: SLOAD\n2400: TIMESTAMP\n2401: SWAP1\n2402: LT\n2403: DUP1\n2404: ISZERO\n2405: PUSH2 0x098a\n2408: JUMPI"
      },
      {
        "offset": 2409,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160a060020a03338116600090815260016020526040902060040154161515",
        "parsedOpcodes": "2409: POP\n2410: PUSH1 0x01\n2412: PUSH1 0xa0\n2414: PUSH1 0x02\n2416: EXP\n2417: SUB\n2418: CALLER\n2419: DUP2\n2420: AND\n2421: PUSH1 0x00\n2423: SWAP1\n2424: DUP2\n2425: MSTORE\n2426: PUSH1 0x01\n2428: PUSH1 0x20\n2430: MSTORE\n2431: PUSH1 0x40\n2433: SWAP1\n2434: SHA3\n2435: PUSH1 0x04\n2437: ADD\n2438: SLOAD\n2439: AND\n2440: ISZERO\n2441: ISZERO"
      },
      {
        "offset": 2442,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156107d157",
        "parsedOpcodes": "2442: JUMPDEST\n2443: ISZERO\n2444: PUSH2 0x07d1\n2447: JUMPI"
      },
      {
        "offset": 2448,
        "length": 61,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "33600160a060020a03908116600090815260016020526040902060048101805460039092018054938316600160a060020a031994851617905591169055",
        "parsedOpcodes": "2448: CALLER\n2449: PUSH1 0x01\n2451: PUSH1 0xa0\n2453: PUSH1 0x02\n2455: EXP\n2456: SUB\n2457: SWAP1\n2458: DUP2\n2459: AND\n2460: PUSH1 0x00\n2462: SWAP1\n2463: DUP2\n2464: MSTORE\n2465: PUSH1 0x01\n2467: PUSH1 0x20\n2469: MSTORE\n2470: PUSH1 0x40\n2472: SWAP1\n2473: SHA3\n2474: PUSH1 0x04\n2476: DUP2\n2477: ADD\n2478: DUP1\n2479: SLOAD\n2480: PUSH1 0x03\n2482: SWAP1\n2483: SWAP3\n2484: ADD\n2485: DUP1\n2486: SLOAD\n2487: SWAP4\n2488: DUP4\n2489: AND\n2490: PUSH1 0x01\n2492: PUSH1 0xa0\n2494: PUSH1 0x02\n2496: EXP\n2497: SUB\n2498: NOT\n2499: SWAP5\n2500: DUP6\n2501: AND\n2502: OR\n2503: SWAP1\n2504: SSTORE\n2505: SWAP2\n2506: AND\n2507: SWAP1\n2508: SSTORE"
      },
      {
        "offset": 2509,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "2509: JUMPDEST"
      },
      {
        "offset": 2510,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b56",
        "parsedOpcodes": "2510: JUMPDEST\n2511: JUMP"
      },
      {
        "offset": 2512,
        "length": 143,
        "type": "common",
        "stackBalance": 13,
        "bytecodeHex": "5b600160a060020a03338116600090815260016020908152604091829020600a015491517fd7f31eb90000000000000000000000000000000000000000000000000000000081528684166004820190815260248201879052606060448301908152865160648401528651949095169463d7f31eb99489948994899493926084909101918501908083838215610a7f57",
        "parsedOpcodes": "2512: JUMPDEST\n2513: PUSH1 0x01\n2515: PUSH1 0xa0\n2517: PUSH1 0x02\n2519: EXP\n2520: SUB\n2521: CALLER\n2522: DUP2\n2523: AND\n2524: PUSH1 0x00\n2526: SWAP1\n2527: DUP2\n2528: MSTORE\n2529: PUSH1 0x01\n2531: PUSH1 0x20\n2533: SWAP1\n2534: DUP2\n2535: MSTORE\n2536: PUSH1 0x40\n2538: SWAP2\n2539: DUP3\n2540: SWAP1\n2541: SHA3\n2542: PUSH1 0x0a\n2544: ADD\n2545: SLOAD\n2546: SWAP2\n2547: MLOAD\n2548: PUSH32 0xd7f31eb900000000000000000000000000000000000000000000000000000000\n2581: DUP2\n2582: MSTORE\n2583: DUP7\n2584: DUP5\n2585: AND\n2586: PUSH1 0x04\n2588: DUP3\n2589: ADD\n2590: SWAP1\n2591: DUP2\n2592: MSTORE\n2593: PUSH1 0x24\n2595: DUP3\n2596: ADD\n2597: DUP8\n2598: SWAP1\n2599: MSTORE\n2600: PUSH1 0x60\n2602: PUSH1 0x44\n2604: DUP4\n2605: ADD\n2606: SWAP1\n2607: DUP2\n2608: MSTORE\n2609: DUP7\n2610: MLOAD\n2611: PUSH1 0x64\n2613: DUP5\n2614: ADD\n2615: MSTORE\n2616: DUP7\n2617: MLOAD\n2618: SWAP5\n2619: SWAP1\n2620: SWAP6\n2621: AND\n2622: SWAP5\n2623: PUSH4 0xd7f31eb9\n2628: SWAP5\n2629: DUP10\n2630: SWAP5\n2631: DUP10\n2632: SWAP5\n2633: DUP10\n2634: SWAP5\n2635: SWAP4\n2636: SWAP3\n2637: PUSH1 0x84\n2639: SWAP1\n2640: SWAP2\n2641: ADD\n2642: SWAP2\n2643: DUP6\n2644: ADD\n2645: SWAP1\n2646: DUP1\n2647: DUP4\n2648: DUP4\n2649: DUP3\n2650: ISZERO\n2651: PUSH2 0x0a7f\n2654: JUMPI"
      },
      {
        "offset": 2655,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b805182526020831115610a7f57",
        "parsedOpcodes": "2655: JUMPDEST\n2656: DUP1\n2657: MLOAD\n2658: DUP3\n2659: MSTORE\n2660: PUSH1 0x20\n2662: DUP4\n2663: GT\n2664: ISZERO\n2665: PUSH2 0x0a7f\n2668: JUMPI"
      },
      {
        "offset": 2669,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "601f199092019160209182019101610a5f56",
        "parsedOpcodes": "2669: PUSH1 0x1f\n2671: NOT\n2672: SWAP1\n2673: SWAP3\n2674: ADD\n2675: SWAP2\n2676: PUSH1 0x20\n2678: SWAP2\n2679: DUP3\n2680: ADD\n2681: SWAP2\n2682: ADD\n2683: PUSH2 0x0a5f\n2686: JUMP"
      },
      {
        "offset": 2687,
        "length": 19,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b505050905090810190601f168015610aab57",
        "parsedOpcodes": "2687: JUMPDEST\n2688: POP\n2689: POP\n2690: POP\n2691: SWAP1\n2692: POP\n2693: SWAP1\n2694: DUP2\n2695: ADD\n2696: SWAP1\n2697: PUSH1 0x1f\n2699: AND\n2700: DUP1\n2701: ISZERO\n2702: PUSH2 0x0aab\n2705: JUMPI"
      },
      {
        "offset": 2706,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "2706: DUP1\n2707: DUP3\n2708: SUB\n2709: DUP1\n2710: MLOAD\n2711: PUSH1 0x01\n2713: DUP4\n2714: PUSH1 0x20\n2716: SUB\n2717: PUSH2 0x0100\n2720: EXP\n2721: SUB\n2722: NOT\n2723: AND\n2724: DUP2\n2725: MSTORE\n2726: PUSH1 0x20\n2728: ADD\n2729: SWAP2\n2730: POP"
      },
      {
        "offset": 2731,
        "length": 28,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50945050505050600060405180830381600087803b1515610ac857",
        "parsedOpcodes": "2731: JUMPDEST\n2732: POP\n2733: SWAP5\n2734: POP\n2735: POP\n2736: POP\n2737: POP\n2738: POP\n2739: PUSH1 0x00\n2741: PUSH1 0x40\n2743: MLOAD\n2744: DUP1\n2745: DUP4\n2746: SUB\n2747: DUP2\n2748: PUSH1 0x00\n2750: DUP8\n2751: DUP1\n2752: EXTCODESIZE\n2753: ISZERO\n2754: ISZERO\n2755: PUSH2 0x0ac8\n2758: JUMPI"
      },
      {
        "offset": 2759,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2759: INVALID"
      },
      {
        "offset": 2760,
        "length": 12,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b60325a03f11515610ad557",
        "parsedOpcodes": "2760: JUMPDEST\n2761: PUSH1 0x32\n2763: GAS\n2764: SUB\n2765: CALL\n2766: ISZERO\n2767: ISZERO\n2768: PUSH2 0x0ad5\n2771: JUMPI"
      },
      {
        "offset": 2772,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2772: INVALID"
      },
      {
        "offset": 2773,
        "length": 75,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505050600160a060020a03338116600090815260016020526040808220600a015490519216917fa4dfdf2fdebc23ad4fcf9b656ae82cf98e212f5178e7109275a9ab4ee905298e9190a2",
        "parsedOpcodes": "2773: JUMPDEST\n2774: POP\n2775: POP\n2776: POP\n2777: PUSH1 0x01\n2779: PUSH1 0xa0\n2781: PUSH1 0x02\n2783: EXP\n2784: SUB\n2785: CALLER\n2786: DUP2\n2787: AND\n2788: PUSH1 0x00\n2790: SWAP1\n2791: DUP2\n2792: MSTORE\n2793: PUSH1 0x01\n2795: PUSH1 0x20\n2797: MSTORE\n2798: PUSH1 0x40\n2800: DUP1\n2801: DUP3\n2802: SHA3\n2803: PUSH1 0x0a\n2805: ADD\n2806: SLOAD\n2807: SWAP1\n2808: MLOAD\n2809: SWAP3\n2810: AND\n2811: SWAP2\n2812: PUSH32 0xa4dfdf2fdebc23ad4fcf9b656ae82cf98e212f5178e7109275a9ab4ee905298e\n2845: SWAP2\n2846: SWAP1\n2847: LOG2"
      },
      {
        "offset": 2848,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "2848: JUMPDEST\n2849: POP\n2850: POP\n2851: POP\n2852: JUMP"
      },
      {
        "offset": 2853,
        "length": 109,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006860154600787015460088801546009890154600a90990154600160a060020a039a8b169a988916999798968716979587169694959385169492939192168b56",
        "parsedOpcodes": "2853: JUMPDEST\n2854: PUSH1 0x01\n2856: PUSH1 0x20\n2858: DUP2\n2859: SWAP1\n2860: MSTORE\n2861: PUSH1 0x00\n2863: SWAP2\n2864: DUP3\n2865: MSTORE\n2866: PUSH1 0x40\n2868: SWAP1\n2869: SWAP2\n2870: SHA3\n2871: DUP1\n2872: SLOAD\n2873: SWAP2\n2874: DUP2\n2875: ADD\n2876: SLOAD\n2877: PUSH1 0x02\n2879: DUP3\n2880: ADD\n2881: SLOAD\n2882: PUSH1 0x03\n2884: DUP4\n2885: ADD\n2886: SLOAD\n2887: PUSH1 0x04\n2889: DUP5\n2890: ADD\n2891: SLOAD\n2892: PUSH1 0x05\n2894: DUP6\n2895: ADD\n2896: SLOAD\n2897: PUSH1 0x06\n2899: DUP7\n2900: ADD\n2901: SLOAD\n2902: PUSH1 0x07\n2904: DUP8\n2905: ADD\n2906: SLOAD\n2907: PUSH1 0x08\n2909: DUP9\n2910: ADD\n2911: SLOAD\n2912: PUSH1 0x09\n2914: DUP10\n2915: ADD\n2916: SLOAD\n2917: PUSH1 0x0a\n2919: SWAP1\n2920: SWAP10\n2921: ADD\n2922: SLOAD\n2923: PUSH1 0x01\n2925: PUSH1 0xa0\n2927: PUSH1 0x02\n2929: EXP\n2930: SUB\n2931: SWAP11\n2932: DUP12\n2933: AND\n2934: SWAP11\n2935: SWAP9\n2936: DUP10\n2937: AND\n2938: SWAP10\n2939: SWAP8\n2940: SWAP9\n2941: SWAP7\n2942: DUP8\n2943: AND\n2944: SWAP8\n2945: SWAP6\n2946: DUP8\n2947: AND\n2948: SWAP7\n2949: SWAP5\n2950: SWAP6\n2951: SWAP4\n2952: DUP6\n2953: AND\n2954: SWAP5\n2955: SWAP3\n2956: SWAP4\n2957: SWAP2\n2958: SWAP3\n2959: AND\n2960: DUP12\n2961: JUMP"
      },
      {
        "offset": 2962,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a038082166000908152600160205260409020541615610bb757",
        "parsedOpcodes": "2962: JUMPDEST\n2963: PUSH1 0x01\n2965: PUSH1 0xa0\n2967: PUSH1 0x02\n2969: EXP\n2970: SUB\n2971: DUP1\n2972: DUP3\n2973: AND\n2974: PUSH1 0x00\n2976: SWAP1\n2977: DUP2\n2978: MSTORE\n2979: PUSH1 0x01\n2981: PUSH1 0x20\n2983: MSTORE\n2984: PUSH1 0x40\n2986: SWAP1\n2987: SHA3\n2988: SLOAD\n2989: AND\n2990: ISZERO\n2991: PUSH2 0x0bb7\n2994: JUMPI"
      },
      {
        "offset": 2995,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61000056",
        "parsedOpcodes": "2995: PUSH2 0x0000\n2998: JUMP"
      },
      {
        "offset": 2999,
        "length": 212,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a038281166000818152600160208190526040808320805487871685529184208054928716600160a060020a0319938416178155600380830180549183018054928a169286169290921790915560088084018054918401919091556009808501805491850191909155600a808601805491909501805491909b169087161790995596865282548416835593820180548416905560028201859055835483169093556004810180548316905560058101849055600681018054831690556007018390559282905592558154169055",
        "parsedOpcodes": "2999: JUMPDEST\n3000: PUSH1 0x01\n3002: PUSH1 0xa0\n3004: PUSH1 0x02\n3006: EXP\n3007: SUB\n3008: DUP3\n3009: DUP2\n3010: AND\n3011: PUSH1 0x00\n3013: DUP2\n3014: DUP2\n3015: MSTORE\n3016: PUSH1 0x01\n3018: PUSH1 0x20\n3020: DUP2\n3021: SWAP1\n3022: MSTORE\n3023: PUSH1 0x40\n3025: DUP1\n3026: DUP4\n3027: SHA3\n3028: DUP1\n3029: SLOAD\n3030: DUP8\n3031: DUP8\n3032: AND\n3033: DUP6\n3034: MSTORE\n3035: SWAP2\n3036: DUP5\n3037: SHA3\n3038: DUP1\n3039: SLOAD\n3040: SWAP3\n3041: DUP8\n3042: AND\n3043: PUSH1 0x01\n3045: PUSH1 0xa0\n3047: PUSH1 0x02\n3049: EXP\n3050: SUB\n3051: NOT\n3052: SWAP4\n3053: DUP5\n3054: AND\n3055: OR\n3056: DUP2\n3057: SSTORE\n3058: PUSH1 0x03\n3060: DUP1\n3061: DUP4\n3062: ADD\n3063: DUP1\n3064: SLOAD\n3065: SWAP2\n3066: DUP4\n3067: ADD\n3068: DUP1\n3069: SLOAD\n3070: SWAP3\n3071: DUP11\n3072: AND\n3073: SWAP3\n3074: DUP7\n3075: AND\n3076: SWAP3\n3077: SWAP1\n3078: SWAP3\n3079: OR\n3080: SWAP1\n3081: SWAP2\n3082: SSTORE\n3083: PUSH1 0x08\n3085: DUP1\n3086: DUP5\n3087: ADD\n3088: DUP1\n3089: SLOAD\n3090: SWAP2\n3091: DUP5\n3092: ADD\n3093: SWAP2\n3094: SWAP1\n3095: SWAP2\n3096: SSTORE\n3097: PUSH1 0x09\n3099: DUP1\n3100: DUP6\n3101: ADD\n3102: DUP1\n3103: SLOAD\n3104: SWAP2\n3105: DUP6\n3106: ADD\n3107: SWAP2\n3108: SWAP1\n3109: SWAP2\n3110: SSTORE\n3111: PUSH1 0x0a\n3113: DUP1\n3114: DUP7\n3115: ADD\n3116: DUP1\n3117: SLOAD\n3118: SWAP2\n3119: SWAP1\n3120: SWAP6\n3121: ADD\n3122: DUP1\n3123: SLOAD\n3124: SWAP2\n3125: SWAP1\n3126: SWAP12\n3127: AND\n3128: SWAP1\n3129: DUP8\n3130: AND\n3131: OR\n3132: SWAP1\n3133: SWAP10\n3134: SSTORE\n3135: SWAP7\n3136: DUP7\n3137: MSTORE\n3138: DUP3\n3139: SLOAD\n3140: DUP5\n3141: AND\n3142: DUP4\n3143: SSTORE\n3144: SWAP4\n3145: DUP3\n3146: ADD\n3147: DUP1\n3148: SLOAD\n3149: DUP5\n3150: AND\n3151: SWAP1\n3152: SSTORE\n3153: PUSH1 0x02\n3155: DUP3\n3156: ADD\n3157: DUP6\n3158: SWAP1\n3159: SSTORE\n3160: DUP4\n3161: SLOAD\n3162: DUP4\n3163: AND\n3164: SWAP1\n3165: SWAP4\n3166: SSTORE\n3167: PUSH1 0x04\n3169: DUP2\n3170: ADD\n3171: DUP1\n3172: SLOAD\n3173: DUP4\n3174: AND\n3175: SWAP1\n3176: SSTORE\n3177: PUSH1 0x05\n3179: DUP2\n3180: ADD\n3181: DUP5\n3182: SWAP1\n3183: SSTORE\n3184: PUSH1 0x06\n3186: DUP2\n3187: ADD\n3188: DUP1\n3189: SLOAD\n3190: DUP4\n3191: AND\n3192: SWAP1\n3193: SSTORE\n3194: PUSH1 0x07\n3196: ADD\n3197: DUP4\n3198: SWAP1\n3199: SSTORE\n3200: SWAP3\n3201: DUP3\n3202: SWAP1\n3203: SSTORE\n3204: SWAP3\n3205: SSTORE\n3206: DUP2\n3207: SLOAD\n3208: AND\n3209: SWAP1\n3210: SSTORE"
      },
      {
        "offset": 3211,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "3211: JUMPDEST\n3212: POP\n3213: POP\n3214: JUMP"
      },
      {
        "offset": 3215,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60405161020f80610ca08339019056",
        "parsedOpcodes": "3215: JUMPDEST\n3216: PUSH1 0x40\n3218: MLOAD\n3219: PUSH2 0x020f\n3222: DUP1\n3223: PUSH2 0x0ca0\n3226: DUP4\n3227: CODECOPY\n3228: ADD\n3229: SWAP1\n3230: JUMP"
      },
      {
        "offset": 3231,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "3231: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          157
        ]
      },
      {
        "from": 11,
        "to": [
          36,
          159
        ]
      },
      {
        "from": 36,
        "to": [
          47,
          195
        ]
      },
      {
        "from": 47,
        "to": [
          58,
          231
        ]
      },
      {
        "from": 58,
        "to": [
          69,
          273
        ]
      },
      {
        "from": 69,
        "to": [
          80,
          417
        ]
      },
      {
        "from": 80,
        "to": [
          91,
          447
        ]
      },
      {
        "from": 91,
        "to": [
          102,
          477
        ]
      },
      {
        "from": 102,
        "to": [
          113,
          495
        ]
      },
      {
        "from": 113,
        "to": [
          124,
          513
        ]
      },
      {
        "from": 124,
        "to": [
          135,
          543
        ]
      },
      {
        "from": 135,
        "to": [
          146,
          561
        ]
      },
      {
        "from": 146,
        "to": [
          157,
          662
        ]
      },
      {
        "from": 157,
        "to": [
          3231
        ]
      },
      {
        "from": 159,
        "to": [
          166,
          167
        ]
      },
      {
        "from": 166,
        "to": [
          3231
        ]
      },
      {
        "from": 167,
        "to": [
          793,
          793
        ]
      },
      {
        "from": 193,
        "to": [
          3231
        ]
      },
      {
        "from": 195,
        "to": [
          202,
          203
        ]
      },
      {
        "from": 202,
        "to": [
          3231
        ]
      },
      {
        "from": 203,
        "to": [
          853,
          853
        ]
      },
      {
        "from": 229,
        "to": [
          3231
        ]
      },
      {
        "from": 231,
        "to": [
          238,
          239
        ]
      },
      {
        "from": 238,
        "to": [
          3231
        ]
      },
      {
        "from": 239,
        "to": [
          952,
          952
        ]
      },
      {
        "from": 271,
        "to": [
          3231
        ]
      },
      {
        "from": 273,
        "to": [
          280,
          281
        ]
      },
      {
        "from": 280,
        "to": [
          3231
        ]
      },
      {
        "from": 281,
        "to": [
          1212,
          1212
        ]
      },
      {
        "from": 289,
        "to": [
          327,
          359
        ]
      },
      {
        "from": 327,
        "to": [
          341,
          359
        ]
      },
      {
        "from": 341,
        "to": [
          327,
          327
        ]
      },
      {
        "from": 359,
        "to": [
          378,
          403
        ]
      },
      {
        "from": 378,
        "to": [
          403
        ]
      },
      {
        "from": 403,
        "to": [
          3231
        ]
      },
      {
        "from": 417,
        "to": [
          424,
          425
        ]
      },
      {
        "from": 424,
        "to": [
          3231
        ]
      },
      {
        "from": 425,
        "to": [
          1354,
          1354
        ]
      },
      {
        "from": 445,
        "to": [
          3231
        ]
      },
      {
        "from": 447,
        "to": [
          454,
          455
        ]
      },
      {
        "from": 454,
        "to": [
          3231
        ]
      },
      {
        "from": 455,
        "to": [
          1507,
          1507
        ]
      },
      {
        "from": 475,
        "to": [
          3231
        ]
      },
      {
        "from": 477,
        "to": [
          484,
          485
        ]
      },
      {
        "from": 484,
        "to": [
          3231
        ]
      },
      {
        "from": 485,
        "to": [
          1660,
          1660
        ]
      },
      {
        "from": 493,
        "to": [
          3231
        ]
      },
      {
        "from": 495,
        "to": [
          502,
          503
        ]
      },
      {
        "from": 502,
        "to": [
          3231
        ]
      },
      {
        "from": 503,
        "to": [
          2004,
          2004
        ]
      },
      {
        "from": 511,
        "to": [
          3231
        ]
      },
      {
        "from": 513,
        "to": [
          520,
          521
        ]
      },
      {
        "from": 520,
        "to": [
          3231
        ]
      },
      {
        "from": 521,
        "to": [
          2218,
          2218
        ]
      },
      {
        "from": 541,
        "to": [
          3231
        ]
      },
      {
        "from": 543,
        "to": [
          550,
          551
        ]
      },
      {
        "from": 550,
        "to": [
          3231
        ]
      },
      {
        "from": 551,
        "to": [
          2371,
          2371
        ]
      },
      {
        "from": 559,
        "to": [
          3231
        ]
      },
      {
        "from": 561,
        "to": [
          568,
          569
        ]
      },
      {
        "from": 568,
        "to": [
          3231
        ]
      },
      {
        "from": 569,
        "to": [
          2512
        ]
      },
      {
        "from": 660,
        "to": [
          3231
        ]
      },
      {
        "from": 662,
        "to": [
          669,
          670
        ]
      },
      {
        "from": 669,
        "to": [
          3231
        ]
      },
      {
        "from": 670,
        "to": [
          2853,
          2853
        ]
      },
      {
        "from": 690,
        "to": [
          3231
        ]
      },
      {
        "from": 793,
        "to": [
          836,
          845
        ]
      },
      {
        "from": 836,
        "to": [
          2962,
          2962
        ]
      },
      {
        "from": 845,
        "to": [
          846
        ]
      },
      {
        "from": 846,
        "to": [
          847
        ]
      },
      {
        "from": 847,
        "to": [
          848
        ]
      },
      {
        "from": 848,
        "to": [
          193
        ]
      },
      {
        "from": 853,
        "to": [
          896,
          845
        ]
      },
      {
        "from": 896,
        "to": [
          945
        ]
      },
      {
        "from": 945,
        "to": [
          946
        ]
      },
      {
        "from": 946,
        "to": [
          947
        ]
      },
      {
        "from": 947,
        "to": [
          193
        ]
      },
      {
        "from": 952,
        "to": [
          987,
          991
        ]
      },
      {
        "from": 987,
        "to": [
          0,
          0
        ]
      },
      {
        "from": 991,
        "to": [
          3215,
          3215
        ]
      },
      {
        "from": 1074,
        "to": [
          1093,
          1094
        ]
      },
      {
        "from": 1093,
        "to": [
          3231
        ]
      },
      {
        "from": 1094,
        "to": [
          1205
        ]
      },
      {
        "from": 1205,
        "to": [
          193
        ]
      },
      {
        "from": 1212,
        "to": [
          1276,
          1346
        ]
      },
      {
        "from": 1276,
        "to": [
          1284,
          1303
        ]
      },
      {
        "from": 1284,
        "to": [
          1346,
          1346
        ]
      },
      {
        "from": 1303,
        "to": [
          1317
        ]
      },
      {
        "from": 1317,
        "to": [
          1337,
          1317
        ]
      },
      {
        "from": 1337,
        "to": [
          1346
        ]
      },
      {
        "from": 1346,
        "to": [
          289,
          289,
          289
        ]
      },
      {
        "from": 1354,
        "to": [
          1504
        ]
      },
      {
        "from": 1504,
        "to": [
          193
        ]
      },
      {
        "from": 1507,
        "to": [
          1657
        ]
      },
      {
        "from": 1657,
        "to": [
          193
        ]
      },
      {
        "from": 1660,
        "to": [
          1698,
          1731
        ]
      },
      {
        "from": 1698,
        "to": [
          1731
        ]
      },
      {
        "from": 1731,
        "to": [
          1737,
          2001
        ]
      },
      {
        "from": 1737,
        "to": [
          1854,
          1855
        ]
      },
      {
        "from": 1854,
        "to": [
          3231
        ]
      },
      {
        "from": 1855,
        "to": [
          1867,
          1868
        ]
      },
      {
        "from": 1867,
        "to": [
          3231
        ]
      },
      {
        "from": 1868,
        "to": [
          2001
        ]
      },
      {
        "from": 2001,
        "to": [
          2002
        ]
      },
      {
        "from": 2002,
        "to": [
          193
        ]
      },
      {
        "from": 2004,
        "to": [
          2042,
          2076
        ]
      },
      {
        "from": 2042,
        "to": [
          2076
        ]
      },
      {
        "from": 2076,
        "to": [
          2082,
          2001
        ]
      },
      {
        "from": 2082,
        "to": [
          2962,
          2962
        ]
      },
      {
        "from": 2122,
        "to": [
          2215
        ]
      },
      {
        "from": 2215,
        "to": [
          2216
        ]
      },
      {
        "from": 2216,
        "to": [
          193
        ]
      },
      {
        "from": 2218,
        "to": [
          2368
        ]
      },
      {
        "from": 2368,
        "to": [
          193
        ]
      },
      {
        "from": 2371,
        "to": [
          2409,
          2442
        ]
      },
      {
        "from": 2409,
        "to": [
          2442
        ]
      },
      {
        "from": 2442,
        "to": [
          2448,
          2001
        ]
      },
      {
        "from": 2448,
        "to": [
          2509
        ]
      },
      {
        "from": 2509,
        "to": [
          2510
        ]
      },
      {
        "from": 2510,
        "to": [
          193
        ]
      },
      {
        "from": 2512,
        "to": [
          2655,
          2687
        ]
      },
      {
        "from": 2655,
        "to": [
          2669,
          2687
        ]
      },
      {
        "from": 2669,
        "to": [
          2655,
          2655
        ]
      },
      {
        "from": 2687,
        "to": [
          2706,
          2731
        ]
      },
      {
        "from": 2706,
        "to": [
          2731
        ]
      },
      {
        "from": 2731,
        "to": [
          2759,
          2760
        ]
      },
      {
        "from": 2759,
        "to": [
          3231
        ]
      },
      {
        "from": 2760,
        "to": [
          2772,
          2773
        ]
      },
      {
        "from": 2772,
        "to": [
          3231
        ]
      },
      {
        "from": 2773,
        "to": [
          2848
        ]
      },
      {
        "from": 2848,
        "to": [
          193
        ]
      },
      {
        "from": 2853,
        "to": [
          690
        ]
      },
      {
        "from": 2962,
        "to": [
          2995,
          2999
        ]
      },
      {
        "from": 2995,
        "to": [
          0,
          0,
          0
        ]
      },
      {
        "from": 2999,
        "to": [
          3211
        ]
      },
      {
        "from": 3211,
        "to": [
          845,
          2122
        ]
      },
      {
        "from": 3215,
        "to": [
          1074
        ]
      },
      {
        "from": 3231,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 9 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 74
    }
  }
}