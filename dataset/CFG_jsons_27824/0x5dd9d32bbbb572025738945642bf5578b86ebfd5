{
  "name": "Analysis_2022-04-05_00-40-22",
  "address": "",
  "binarySource": "60806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166376afb7158114610050578063920d4135146100b0575b600080fd5b34801561005c57600080fd5b5061007760043560243560ff604435811690606435166100d9565b6040518082610c8080838360005b8381101561009d578181015183820152602001610085565b5050505090500191505060405180910390f35b3480156100bc57600080fd5b506100c56103b4565b604080519115158252519081900360200190f35b6100e16103b9565b60008060006100ee6103b9565b60008060008060008060008f60ff0143119a508a61010c578f610111565b600143035b6040805182406020808301919091526c01000000000000000000000000330282840152825160348184030181526054909201928390528151939d50909282918401908083835b602083106101765780518252601f199092019160209182019101610157565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209b5060049250505060ff8e1604965060009550600461ffff8a160660ff1694508e6007029350600092505b8383101561022c578660ff168961ffff168115156101e457fe5b066004028e0160ff1660088661ffff169060020a021761ffff16888460648110151561020c57fe5b6020020152620100009098049760036001958601169492909201916101ca565b8e60020284019150600195508392505b818310156102a057858760ff168a61ffff1681151561025757fe5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561028057fe5b60200201526201000090980497600360019586011694929092019161023c565b50808e018a1561030a578192505b8083101561030257858760ff168a61ffff168115156102c957fe5b066004028f010160ff1660088661ffff169060020a021761ffff1688846064811015156102f257fe5b60200201526001909201916102ae565b879b506103a1565b8192505b8083101561039d5760029550600a8f06151561033857600a8306151561033357600395505b610351565b600a61ffff8a160661ffff166000141561035157600395505b858760ff168a61ffff1681151561036457fe5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561038d57fe5b602002015260019092019161030e565b879b505b5050505050505050505050949350505050565b600190565b610c806040519081016040528060649060208202803883395091929150505600a165627a7a723058202514f56f3d711bb0a04cbce406233eaacc71e35a0e02b9688648602a8b2ddc660029",
  "binaryHash": "bf7827c4",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a723058202514f56f3d711bb0a04cbce406233eaacc71e35a0e02b9688648602a8b2ddc660029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649086822394
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166376afb7158114610050578063920d4135146100b0575b600080fd5b34801561005c57600080fd5b5061007760043560243560ff604435811690606435166100d9565b6040518082610c8080838360005b8381101561009d578181015183820152602001610085565b5050505090500191505060405180910390f35b3480156100bc57600080fd5b506100c56103b4565b604080519115158252519081900360200190f35b6100e16103b9565b60008060006100ee6103b9565b60008060008060008060008f60ff0143119a508a61010c578f610111565b600143035b6040805182406020808301919091526c01000000000000000000000000330282840152825160348184030181526054909201928390528151939d50909282918401908083835b602083106101765780518252601f199092019160209182019101610157565b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209b5060049250505060ff8e1604965060009550600461ffff8a160660ff1694508e6007029350600092505b8383101561022c578660ff168961ffff168115156101e457fe5b066004028e0160ff1660088661ffff169060020a021761ffff16888460648110151561020c57fe5b6020020152620100009098049760036001958601169492909201916101ca565b8e60020284019150600195508392505b818310156102a057858760ff168a61ffff1681151561025757fe5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561028057fe5b60200201526201000090980497600360019586011694929092019161023c565b50808e018a1561030a578192505b8083101561030257858760ff168a61ffff168115156102c957fe5b066004028f010160ff1660088661ffff169060020a021761ffff1688846064811015156102f257fe5b60200201526001909201916102ae565b879b506103a1565b8192505b8083101561039d5760029550600a8f06151561033857600a8306151561033357600395505b610351565b600a61ffff8a160661ffff166000141561035157600395505b858760ff168a61ffff1681151561036457fe5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561038d57fe5b602002015260019092019161030e565b879b505b5050505050505050505050949350505050565b600190565b610c806040519081016040528060649060208202803883395091929150505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004b57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004b\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166376afb715811461005057",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x76afb715\n58: DUP2\n59: EQ\n60: PUSH2 0x0050\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063920d4135146100b057",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0x920d4135\n70: EQ\n71: PUSH2 0x00b0\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "75: JUMPDEST\n76: PUSH1 0x00\n78: DUP1\n79: REVERT"
      },
      {
        "offset": 80,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005c57",
        "parsedOpcodes": "80: JUMPDEST\n81: CALLVALUE\n82: DUP1\n83: ISZERO\n84: PUSH2 0x005c\n87: JUMPI"
      },
      {
        "offset": 88,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 27,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b5061007760043560243560ff604435811690606435166100d956",
        "parsedOpcodes": "92: JUMPDEST\n93: POP\n94: PUSH2 0x0077\n97: PUSH1 0x04\n99: CALLDATALOAD\n100: PUSH1 0x24\n102: CALLDATALOAD\n103: PUSH1 0xff\n105: PUSH1 0x44\n107: CALLDATALOAD\n108: DUP2\n109: AND\n110: SWAP1\n111: PUSH1 0x64\n113: CALLDATALOAD\n114: AND\n115: PUSH2 0x00d9\n118: JUMP"
      },
      {
        "offset": 119,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 8,
        "bytecodeHex": "5b6040518082610c808083836000",
        "parsedOpcodes": "119: JUMPDEST\n120: PUSH1 0x40\n122: MLOAD\n123: DUP1\n124: DUP3\n125: PUSH2 0x0c80\n128: DUP1\n129: DUP4\n130: DUP4\n131: PUSH1 0x00"
      },
      {
        "offset": 133,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561009d57",
        "parsedOpcodes": "133: JUMPDEST\n134: DUP4\n135: DUP2\n136: LT\n137: ISZERO\n138: PUSH2 0x009d\n141: JUMPI"
      },
      {
        "offset": 142,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161008556",
        "parsedOpcodes": "142: DUP2\n143: DUP2\n144: ADD\n145: MLOAD\n146: DUP4\n147: DUP3\n148: ADD\n149: MSTORE\n150: PUSH1 0x20\n152: ADD\n153: PUSH2 0x0085\n156: JUMP"
      },
      {
        "offset": 157,
        "length": 19,
        "type": "dispatcher",
        "stackBalance": -9,
        "bytecodeHex": "5b5050505090500191505060405180910390f3",
        "parsedOpcodes": "157: JUMPDEST\n158: POP\n159: POP\n160: POP\n161: POP\n162: SWAP1\n163: POP\n164: ADD\n165: SWAP2\n166: POP\n167: POP\n168: PUSH1 0x40\n170: MLOAD\n171: DUP1\n172: SWAP2\n173: SUB\n174: SWAP1\n175: RETURN"
      },
      {
        "offset": 176,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100bc57",
        "parsedOpcodes": "176: JUMPDEST\n177: CALLVALUE\n178: DUP1\n179: ISZERO\n180: PUSH2 0x00bc\n183: JUMPI"
      },
      {
        "offset": 184,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "184: PUSH1 0x00\n186: DUP1\n187: REVERT"
      },
      {
        "offset": 188,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100c56103b456",
        "parsedOpcodes": "188: JUMPDEST\n189: POP\n190: PUSH2 0x00c5\n193: PUSH2 0x03b4\n196: JUMP"
      },
      {
        "offset": 197,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "197: JUMPDEST\n198: PUSH1 0x40\n200: DUP1\n201: MLOAD\n202: SWAP2\n203: ISZERO\n204: ISZERO\n205: DUP3\n206: MSTORE\n207: MLOAD\n208: SWAP1\n209: DUP2\n210: SWAP1\n211: SUB\n212: PUSH1 0x20\n214: ADD\n215: SWAP1\n216: RETURN"
      },
      {
        "offset": 217,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6100e16103b956",
        "parsedOpcodes": "217: JUMPDEST\n218: PUSH2 0x00e1\n221: PUSH2 0x03b9\n224: JUMP"
      },
      {
        "offset": 225,
        "length": 13,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b60008060006100ee6103b956",
        "parsedOpcodes": "225: JUMPDEST\n226: PUSH1 0x00\n228: DUP1\n229: PUSH1 0x00\n231: PUSH2 0x00ee\n234: PUSH2 0x03b9\n237: JUMP"
      },
      {
        "offset": 238,
        "length": 25,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b60008060008060008060008f60ff0143119a508a61010c57",
        "parsedOpcodes": "238: JUMPDEST\n239: PUSH1 0x00\n241: DUP1\n242: PUSH1 0x00\n244: DUP1\n245: PUSH1 0x00\n247: DUP1\n248: PUSH1 0x00\n250: DUP16\n251: PUSH1 0xff\n253: ADD\n254: NUMBER\n255: GT\n256: SWAP11\n257: POP\n258: DUP11\n259: PUSH2 0x010c\n262: JUMPI"
      },
      {
        "offset": 263,
        "length": 5,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "8f61011156",
        "parsedOpcodes": "263: DUP16\n264: PUSH2 0x0111\n267: JUMP"
      },
      {
        "offset": 268,
        "length": 5,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60014303",
        "parsedOpcodes": "268: JUMPDEST\n269: PUSH1 0x01\n271: NUMBER\n272: SUB"
      },
      {
        "offset": 273,
        "length": 70,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b6040805182406020808301919091526c01000000000000000000000000330282840152825160348184030181526054909201928390528151939d5090928291840190808383",
        "parsedOpcodes": "273: JUMPDEST\n274: PUSH1 0x40\n276: DUP1\n277: MLOAD\n278: DUP3\n279: BLOCKHASH\n280: PUSH1 0x20\n282: DUP1\n283: DUP4\n284: ADD\n285: SWAP2\n286: SWAP1\n287: SWAP2\n288: MSTORE\n289: PUSH13 0x01000000000000000000000000\n303: CALLER\n304: MUL\n305: DUP3\n306: DUP5\n307: ADD\n308: MSTORE\n309: DUP3\n310: MLOAD\n311: PUSH1 0x34\n313: DUP2\n314: DUP5\n315: SUB\n316: ADD\n317: DUP2\n318: MSTORE\n319: PUSH1 0x54\n321: SWAP1\n322: SWAP3\n323: ADD\n324: SWAP3\n325: DUP4\n326: SWAP1\n327: MSTORE\n328: DUP2\n329: MLOAD\n330: SWAP4\n331: SWAP14\n332: POP\n333: SWAP1\n334: SWAP3\n335: DUP3\n336: SWAP2\n337: DUP5\n338: ADD\n339: SWAP1\n340: DUP1\n341: DUP4\n342: DUP4"
      },
      {
        "offset": 343,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061017657",
        "parsedOpcodes": "343: JUMPDEST\n344: PUSH1 0x20\n346: DUP4\n347: LT\n348: PUSH2 0x0176\n351: JUMPI"
      },
      {
        "offset": 352,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161015756",
        "parsedOpcodes": "352: DUP1\n353: MLOAD\n354: DUP3\n355: MSTORE\n356: PUSH1 0x1f\n358: NOT\n359: SWAP1\n360: SWAP3\n361: ADD\n362: SWAP2\n363: PUSH1 0x20\n365: SWAP2\n366: DUP3\n367: ADD\n368: SWAP2\n369: ADD\n370: PUSH2 0x0157\n373: JUMP"
      },
      {
        "offset": 374,
        "length": 84,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b5181516020939093036101000a600019018019909116921691909117905260405192018290039091209b5060049250505060ff8e1604965060009550600461ffff8a160660ff1694508e600702935060009250",
        "parsedOpcodes": "374: JUMPDEST\n375: MLOAD\n376: DUP2\n377: MLOAD\n378: PUSH1 0x20\n380: SWAP4\n381: SWAP1\n382: SWAP4\n383: SUB\n384: PUSH2 0x0100\n387: EXP\n388: PUSH1 0x00\n390: NOT\n391: ADD\n392: DUP1\n393: NOT\n394: SWAP1\n395: SWAP2\n396: AND\n397: SWAP3\n398: AND\n399: SWAP2\n400: SWAP1\n401: SWAP2\n402: OR\n403: SWAP1\n404: MSTORE\n405: PUSH1 0x40\n407: MLOAD\n408: SWAP3\n409: ADD\n410: DUP3\n411: SWAP1\n412: SUB\n413: SWAP1\n414: SWAP2\n415: SHA3\n416: SWAP12\n417: POP\n418: PUSH1 0x04\n420: SWAP3\n421: POP\n422: POP\n423: POP\n424: PUSH1 0xff\n426: DUP15\n427: AND\n428: DIV\n429: SWAP7\n430: POP\n431: PUSH1 0x00\n433: SWAP6\n434: POP\n435: PUSH1 0x04\n437: PUSH2 0xffff\n440: DUP11\n441: AND\n442: MOD\n443: PUSH1 0xff\n445: AND\n446: SWAP5\n447: POP\n448: DUP15\n449: PUSH1 0x07\n451: MUL\n452: SWAP4\n453: POP\n454: PUSH1 0x00\n456: SWAP3\n457: POP"
      },
      {
        "offset": 458,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8383101561022c57",
        "parsedOpcodes": "458: JUMPDEST\n459: DUP4\n460: DUP4\n461: LT\n462: ISZERO\n463: PUSH2 0x022c\n466: JUMPI"
      },
      {
        "offset": 467,
        "length": 16,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "8660ff168961ffff168115156101e457",
        "parsedOpcodes": "467: DUP7\n468: PUSH1 0xff\n470: AND\n471: DUP10\n472: PUSH2 0xffff\n475: AND\n476: DUP2\n477: ISZERO\n478: ISZERO\n479: PUSH2 0x01e4\n482: JUMPI"
      },
      {
        "offset": 483,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "483: INVALID"
      },
      {
        "offset": 484,
        "length": 39,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b066004028e0160ff1660088661ffff169060020a021761ffff16888460648110151561020c57",
        "parsedOpcodes": "484: JUMPDEST\n485: MOD\n486: PUSH1 0x04\n488: MUL\n489: DUP15\n490: ADD\n491: PUSH1 0xff\n493: AND\n494: PUSH1 0x08\n496: DUP7\n497: PUSH2 0xffff\n500: AND\n501: SWAP1\n502: PUSH1 0x02\n504: EXP\n505: MUL\n506: OR\n507: PUSH2 0xffff\n510: AND\n511: DUP9\n512: DUP5\n513: PUSH1 0x64\n515: DUP2\n516: LT\n517: ISZERO\n518: ISZERO\n519: PUSH2 0x020c\n522: JUMPI"
      },
      {
        "offset": 523,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "523: INVALID"
      },
      {
        "offset": 524,
        "length": 32,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6020020152620100009098049760036001958601169492909201916101ca56",
        "parsedOpcodes": "524: JUMPDEST\n525: PUSH1 0x20\n527: MUL\n528: ADD\n529: MSTORE\n530: PUSH3 0x010000\n534: SWAP1\n535: SWAP9\n536: DIV\n537: SWAP8\n538: PUSH1 0x03\n540: PUSH1 0x01\n542: SWAP6\n543: DUP7\n544: ADD\n545: AND\n546: SWAP5\n547: SWAP3\n548: SWAP1\n549: SWAP3\n550: ADD\n551: SWAP2\n552: PUSH2 0x01ca\n555: JUMP"
      },
      {
        "offset": 556,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8e6002028401915060019550839250",
        "parsedOpcodes": "556: JUMPDEST\n557: DUP15\n558: PUSH1 0x02\n560: MUL\n561: DUP5\n562: ADD\n563: SWAP2\n564: POP\n565: PUSH1 0x01\n567: SWAP6\n568: POP\n569: DUP4\n570: SWAP3\n571: POP"
      },
      {
        "offset": 572,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b818310156102a057",
        "parsedOpcodes": "572: JUMPDEST\n573: DUP2\n574: DUP4\n575: LT\n576: ISZERO\n577: PUSH2 0x02a0\n580: JUMPI"
      },
      {
        "offset": 581,
        "length": 17,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "858760ff168a61ffff1681151561025757",
        "parsedOpcodes": "581: DUP6\n582: DUP8\n583: PUSH1 0xff\n585: AND\n586: DUP11\n587: PUSH2 0xffff\n590: AND\n591: DUP2\n592: ISZERO\n593: ISZERO\n594: PUSH2 0x0257\n597: JUMPI"
      },
      {
        "offset": 598,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "598: INVALID"
      },
      {
        "offset": 599,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561028057",
        "parsedOpcodes": "599: JUMPDEST\n600: MOD\n601: PUSH1 0x04\n603: MUL\n604: DUP16\n605: ADD\n606: ADD\n607: PUSH1 0xff\n609: AND\n610: PUSH1 0x08\n612: DUP7\n613: PUSH2 0xffff\n616: AND\n617: SWAP1\n618: PUSH1 0x02\n620: EXP\n621: MUL\n622: OR\n623: PUSH2 0xffff\n626: AND\n627: DUP9\n628: DUP5\n629: PUSH1 0x64\n631: DUP2\n632: LT\n633: ISZERO\n634: ISZERO\n635: PUSH2 0x0280\n638: JUMPI"
      },
      {
        "offset": 639,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "639: INVALID"
      },
      {
        "offset": 640,
        "length": 32,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b60200201526201000090980497600360019586011694929092019161023c56",
        "parsedOpcodes": "640: JUMPDEST\n641: PUSH1 0x20\n643: MUL\n644: ADD\n645: MSTORE\n646: PUSH3 0x010000\n650: SWAP1\n651: SWAP9\n652: DIV\n653: SWAP8\n654: PUSH1 0x03\n656: PUSH1 0x01\n658: SWAP6\n659: DUP7\n660: ADD\n661: AND\n662: SWAP5\n663: SWAP3\n664: SWAP1\n665: SWAP3\n666: ADD\n667: SWAP2\n668: PUSH2 0x023c\n671: JUMP"
      },
      {
        "offset": 672,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50808e018a1561030a57",
        "parsedOpcodes": "672: JUMPDEST\n673: POP\n674: DUP1\n675: DUP15\n676: ADD\n677: DUP11\n678: ISZERO\n679: PUSH2 0x030a\n682: JUMPI"
      },
      {
        "offset": 683,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "819250",
        "parsedOpcodes": "683: DUP2\n684: SWAP3\n685: POP"
      },
      {
        "offset": 686,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8083101561030257",
        "parsedOpcodes": "686: JUMPDEST\n687: DUP1\n688: DUP4\n689: LT\n690: ISZERO\n691: PUSH2 0x0302\n694: JUMPI"
      },
      {
        "offset": 695,
        "length": 17,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "858760ff168a61ffff168115156102c957",
        "parsedOpcodes": "695: DUP6\n696: DUP8\n697: PUSH1 0xff\n699: AND\n700: DUP11\n701: PUSH2 0xffff\n704: AND\n705: DUP2\n706: ISZERO\n707: ISZERO\n708: PUSH2 0x02c9\n711: JUMPI"
      },
      {
        "offset": 712,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "712: INVALID"
      },
      {
        "offset": 713,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b066004028f010160ff1660088661ffff169060020a021761ffff1688846064811015156102f257",
        "parsedOpcodes": "713: JUMPDEST\n714: MOD\n715: PUSH1 0x04\n717: MUL\n718: DUP16\n719: ADD\n720: ADD\n721: PUSH1 0xff\n723: AND\n724: PUSH1 0x08\n726: DUP7\n727: PUSH2 0xffff\n730: AND\n731: SWAP1\n732: PUSH1 0x02\n734: EXP\n735: MUL\n736: OR\n737: PUSH2 0xffff\n740: AND\n741: DUP9\n742: DUP5\n743: PUSH1 0x64\n745: DUP2\n746: LT\n747: ISZERO\n748: ISZERO\n749: PUSH2 0x02f2\n752: JUMPI"
      },
      {
        "offset": 753,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "753: INVALID"
      },
      {
        "offset": 754,
        "length": 16,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b60200201526001909201916102ae56",
        "parsedOpcodes": "754: JUMPDEST\n755: PUSH1 0x20\n757: MUL\n758: ADD\n759: MSTORE\n760: PUSH1 0x01\n762: SWAP1\n763: SWAP3\n764: ADD\n765: SWAP2\n766: PUSH2 0x02ae\n769: JUMP"
      },
      {
        "offset": 770,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b879b506103a156",
        "parsedOpcodes": "770: JUMPDEST\n771: DUP8\n772: SWAP12\n773: POP\n774: PUSH2 0x03a1\n777: JUMP"
      },
      {
        "offset": 778,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b819250",
        "parsedOpcodes": "778: JUMPDEST\n779: DUP2\n780: SWAP3\n781: POP"
      },
      {
        "offset": 782,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8083101561039d57",
        "parsedOpcodes": "782: JUMPDEST\n783: DUP1\n784: DUP4\n785: LT\n786: ISZERO\n787: PUSH2 0x039d\n790: JUMPI"
      },
      {
        "offset": 791,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60029550600a8f06151561033857",
        "parsedOpcodes": "791: PUSH1 0x02\n793: SWAP6\n794: POP\n795: PUSH1 0x0a\n797: DUP16\n798: MOD\n799: ISZERO\n800: ISZERO\n801: PUSH2 0x0338\n804: JUMPI"
      },
      {
        "offset": 805,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600a8306151561033357",
        "parsedOpcodes": "805: PUSH1 0x0a\n807: DUP4\n808: MOD\n809: ISZERO\n810: ISZERO\n811: PUSH2 0x0333\n814: JUMPI"
      },
      {
        "offset": 815,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60039550",
        "parsedOpcodes": "815: PUSH1 0x03\n817: SWAP6\n818: POP"
      },
      {
        "offset": 819,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b61035156",
        "parsedOpcodes": "819: JUMPDEST\n820: PUSH2 0x0351\n823: JUMP"
      },
      {
        "offset": 824,
        "length": 21,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600a61ffff8a160661ffff166000141561035157",
        "parsedOpcodes": "824: JUMPDEST\n825: PUSH1 0x0a\n827: PUSH2 0xffff\n830: DUP11\n831: AND\n832: MOD\n833: PUSH2 0xffff\n836: AND\n837: PUSH1 0x00\n839: EQ\n840: ISZERO\n841: PUSH2 0x0351\n844: JUMPI"
      },
      {
        "offset": 845,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60039550",
        "parsedOpcodes": "845: PUSH1 0x03\n847: SWAP6\n848: POP"
      },
      {
        "offset": 849,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b858760ff168a61ffff1681151561036457",
        "parsedOpcodes": "849: JUMPDEST\n850: DUP6\n851: DUP8\n852: PUSH1 0xff\n854: AND\n855: DUP11\n856: PUSH2 0xffff\n859: AND\n860: DUP2\n861: ISZERO\n862: ISZERO\n863: PUSH2 0x0364\n866: JUMPI"
      },
      {
        "offset": 867,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "867: INVALID"
      },
      {
        "offset": 868,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b066004028f010160ff1660088661ffff169060020a021761ffff16888460648110151561038d57",
        "parsedOpcodes": "868: JUMPDEST\n869: MOD\n870: PUSH1 0x04\n872: MUL\n873: DUP16\n874: ADD\n875: ADD\n876: PUSH1 0xff\n878: AND\n879: PUSH1 0x08\n881: DUP7\n882: PUSH2 0xffff\n885: AND\n886: SWAP1\n887: PUSH1 0x02\n889: EXP\n890: MUL\n891: OR\n892: PUSH2 0xffff\n895: AND\n896: DUP9\n897: DUP5\n898: PUSH1 0x64\n900: DUP2\n901: LT\n902: ISZERO\n903: ISZERO\n904: PUSH2 0x038d\n907: JUMPI"
      },
      {
        "offset": 908,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "908: INVALID"
      },
      {
        "offset": 909,
        "length": 16,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b602002015260019092019161030e56",
        "parsedOpcodes": "909: JUMPDEST\n910: PUSH1 0x20\n912: MUL\n913: ADD\n914: MSTORE\n915: PUSH1 0x01\n917: SWAP1\n918: SWAP3\n919: ADD\n920: SWAP2\n921: PUSH2 0x030e\n924: JUMP"
      },
      {
        "offset": 925,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b879b50",
        "parsedOpcodes": "925: JUMPDEST\n926: DUP8\n927: SWAP12\n928: POP"
      },
      {
        "offset": 929,
        "length": 19,
        "type": "common",
        "stackBalance": -16,
        "bytecodeHex": "5b505050505050505050505094935050505056",
        "parsedOpcodes": "929: JUMPDEST\n930: POP\n931: POP\n932: POP\n933: POP\n934: POP\n935: POP\n936: POP\n937: POP\n938: POP\n939: POP\n940: POP\n941: SWAP5\n942: SWAP4\n943: POP\n944: POP\n945: POP\n946: POP\n947: JUMP"
      },
      {
        "offset": 948,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60019056",
        "parsedOpcodes": "948: JUMPDEST\n949: PUSH1 0x01\n951: SWAP1\n952: JUMP"
      },
      {
        "offset": 953,
        "length": 32,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b610c8060405190810160405280606490602082028038833950919291505056",
        "parsedOpcodes": "953: JUMPDEST\n954: PUSH2 0x0c80\n957: PUSH1 0x40\n959: MLOAD\n960: SWAP1\n961: DUP2\n962: ADD\n963: PUSH1 0x40\n965: MSTORE\n966: DUP1\n967: PUSH1 0x64\n969: SWAP1\n970: PUSH1 0x20\n972: DUP3\n973: MUL\n974: DUP1\n975: CODESIZE\n976: DUP4\n977: CODECOPY\n978: POP\n979: SWAP2\n980: SWAP3\n981: SWAP2\n982: POP\n983: POP\n984: JUMP"
      },
      {
        "offset": 985,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "985: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          75
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          80
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          176
        ]
      },
      {
        "from": 75,
        "to": [
          985
        ]
      },
      {
        "from": 80,
        "to": [
          88,
          92
        ]
      },
      {
        "from": 88,
        "to": [
          985
        ]
      },
      {
        "from": 92,
        "to": [
          217,
          217
        ]
      },
      {
        "from": 119,
        "to": [
          133
        ]
      },
      {
        "from": 133,
        "to": [
          142,
          157
        ]
      },
      {
        "from": 142,
        "to": [
          133,
          133,
          133
        ]
      },
      {
        "from": 157,
        "to": [
          985
        ]
      },
      {
        "from": 176,
        "to": [
          184,
          188
        ]
      },
      {
        "from": 184,
        "to": [
          985
        ]
      },
      {
        "from": 188,
        "to": [
          948,
          948
        ]
      },
      {
        "from": 197,
        "to": [
          985
        ]
      },
      {
        "from": 217,
        "to": [
          953,
          953
        ]
      },
      {
        "from": 225,
        "to": [
          953,
          953
        ]
      },
      {
        "from": 238,
        "to": [
          263,
          268
        ]
      },
      {
        "from": 263,
        "to": [
          273,
          273
        ]
      },
      {
        "from": 268,
        "to": [
          273
        ]
      },
      {
        "from": 273,
        "to": [
          343
        ]
      },
      {
        "from": 343,
        "to": [
          352,
          374
        ]
      },
      {
        "from": 352,
        "to": [
          343,
          343
        ]
      },
      {
        "from": 374,
        "to": [
          458
        ]
      },
      {
        "from": 458,
        "to": [
          467,
          556
        ]
      },
      {
        "from": 467,
        "to": [
          483,
          484
        ]
      },
      {
        "from": 483,
        "to": [
          985
        ]
      },
      {
        "from": 484,
        "to": [
          523,
          524
        ]
      },
      {
        "from": 523,
        "to": [
          985
        ]
      },
      {
        "from": 524,
        "to": [
          458,
          458,
          458
        ]
      },
      {
        "from": 556,
        "to": [
          572
        ]
      },
      {
        "from": 572,
        "to": [
          581,
          672
        ]
      },
      {
        "from": 581,
        "to": [
          598,
          599
        ]
      },
      {
        "from": 598,
        "to": [
          985
        ]
      },
      {
        "from": 599,
        "to": [
          639,
          640
        ]
      },
      {
        "from": 639,
        "to": [
          985
        ]
      },
      {
        "from": 640,
        "to": [
          572,
          572
        ]
      },
      {
        "from": 672,
        "to": [
          683,
          778
        ]
      },
      {
        "from": 683,
        "to": [
          686
        ]
      },
      {
        "from": 686,
        "to": [
          695,
          770
        ]
      },
      {
        "from": 695,
        "to": [
          712,
          713
        ]
      },
      {
        "from": 712,
        "to": [
          985
        ]
      },
      {
        "from": 713,
        "to": [
          753,
          754
        ]
      },
      {
        "from": 753,
        "to": [
          985
        ]
      },
      {
        "from": 754,
        "to": [
          686,
          686
        ]
      },
      {
        "from": 770,
        "to": [
          929,
          929
        ]
      },
      {
        "from": 778,
        "to": [
          782
        ]
      },
      {
        "from": 782,
        "to": [
          791,
          925
        ]
      },
      {
        "from": 791,
        "to": [
          805,
          824
        ]
      },
      {
        "from": 805,
        "to": [
          815,
          819
        ]
      },
      {
        "from": 815,
        "to": [
          819
        ]
      },
      {
        "from": 819,
        "to": [
          849,
          849,
          849
        ]
      },
      {
        "from": 824,
        "to": [
          845,
          849
        ]
      },
      {
        "from": 845,
        "to": [
          849
        ]
      },
      {
        "from": 849,
        "to": [
          867,
          868
        ]
      },
      {
        "from": 867,
        "to": [
          985
        ]
      },
      {
        "from": 868,
        "to": [
          908,
          909
        ]
      },
      {
        "from": 908,
        "to": [
          985
        ]
      },
      {
        "from": 909,
        "to": [
          782,
          782,
          782
        ]
      },
      {
        "from": 925,
        "to": [
          929
        ]
      },
      {
        "from": 929,
        "to": [
          119,
          119,
          119,
          119
        ]
      },
      {
        "from": 948,
        "to": [
          197
        ]
      },
      {
        "from": 953,
        "to": [
          225,
          238
        ]
      },
      {
        "from": 985,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 51
    }
  }
}