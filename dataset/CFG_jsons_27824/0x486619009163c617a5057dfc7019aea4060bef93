{
  "name": "Analysis_2022-07-06_21-24-09",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063162996851461003b5780637e105ce214610102575b600080fd5b6100b26004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b50909250905061019d565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ee5781810151838201526020016100d6565b505050509050019250505060405180910390f35b6101286004803603602081101561011857600080fd5b50356001600160a01b0316610255565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606083806101a9575060015b806040519080825280602002602001820160405280156101d3578160200160208202803883390190505b50915060005b8181101561024c5761022085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102e592505050565b83828151811061022c57fe5b6001600160a01b03909216602092830291909101909101526001016101d9565b50509392505050565b6060806040518060600160405280602781526020016104c4602791399050606060405180608001604052806056815260200161046e60569139905060606102d0838660405160200180826001600160a01b03166001600160a01b031660601b81526014019150506040516020818303038152906040526103e9565b90506102dc81836103e9565b95945050505050565b60006060823360405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040516020018083805190602001908083835b6020831061034e5780518252601f19909201916020918201910161032f565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106103965780518252601f199092019160209182019101610377565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290508051602082016000f09150813b6103e357600080fd5b50919050565b8151815160609190810160006020601f8401049050600060208651601f018161040e57fe5b04905060405183815260005b838110156104365760010160208102898101519083015261041a565b5060005b8281101561045857600101602081028881015190870183015261043a565b5092830160200160405250909594505050505056fe9036600082376000803683855af43d806000843e818015603a578184f35b8184fdfea265627a7a7231582023106929d8db6b7e1171f170ca66e8b4182c543bad0dcea4a32eb002eb0eab5064736f6c634300051100326080604052348015600f57600080fd5b5060738061001e6000396000f3fe608060405260405173a265627a7a723158202835f0a291845f22e6c0555daa028fe0803f697cc8fb9cbe21e127c6917b9baf64736f6c63430005110032",
  "binaryHash": "a62cfc0e",
  "isOnlyRuntime": true,
  "metadata": "a265627a7a7231582023106929d8db6b7e1171f170ca66e8b4182c543bad0dcea4a32eb002eb0eab5064736f6c63430005110032",
  "solidityVersion": "0.5.17",
  "constructorRemainingData": "6080604052348015600f57600080fd5b5060738061001e6000396000f3fe608060405260405173a265627a7a723158202835f0a291845f22e6c0555daa028fe0803f697cc8fb9cbe21e127c6917b9baf64736f6c63430005110032",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657110249401
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063162996851461003b5780637e105ce214610102575b600080fd5b6100b26004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b50909250905061019d565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ee5781810151838201526020016100d6565b505050509050019250505060405180910390f35b6101286004803603602081101561011857600080fd5b50356001600160a01b0316610255565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606083806101a9575060015b806040519080825280602002602001820160405280156101d3578160200160208202803883390190505b50915060005b8181101561024c5761022085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102e592505050565b83828151811061022c57fe5b6001600160a01b03909216602092830291909101909101526001016101d9565b50509392505050565b6060806040518060600160405280602781526020016104c4602791399050606060405180608001604052806056815260200161046e60569139905060606102d0838660405160200180826001600160a01b03166001600160a01b031660601b81526014019150506040516020818303038152906040526103e9565b90506102dc81836103e9565b95945050505050565b60006060823360405160200180826001600160a01b03166001600160a01b031681526020019150506040516020818303038152906040526040516020018083805190602001908083835b6020831061034e5780518252601f19909201916020918201910161032f565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106103965780518252601f199092019160209182019101610377565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290508051602082016000f09150813b6103e357600080fd5b50919050565b8151815160609190810160006020601f8401049050600060208651601f018161040e57fe5b04905060405183815260005b838110156104365760010160208102898101519083015261041a565b5060005b8281101561045857600101602081028881015190870183015261043a565b5092830160200160405250909594505050505056fe9036600082376000803683855af43d806000843e818015603a578184f35b8184fdfe",
    "remainingData": "fe9036600082376000803683855af43d806000843e818015603a578184f35b8184fdfe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061003657",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063162996851461003b57",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0x16299685\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80637e105ce21461010257",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0x7e105ce2\n49: EQ\n50: PUSH2 0x0102\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT"
      },
      {
        "offset": 59,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100b26004803603604081101561005157",
        "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x00b2\n63: PUSH1 0x04\n65: DUP1\n66: CALLDATASIZE\n67: SUB\n68: PUSH1 0x40\n70: DUP2\n71: LT\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b8135919081019060408101602082013564010000000081111561007357",
        "parsedOpcodes": "81: JUMPDEST\n82: DUP2\n83: CALLDATALOAD\n84: SWAP2\n85: SWAP1\n86: DUP2\n87: ADD\n88: SWAP1\n89: PUSH1 0x40\n91: DUP2\n92: ADD\n93: PUSH1 0x20\n95: DUP3\n96: ADD\n97: CALLDATALOAD\n98: PUSH5 0x0100000000\n104: DUP2\n105: GT\n106: ISZERO\n107: PUSH2 0x0073\n110: JUMPI"
      },
      {
        "offset": 111,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "111: PUSH1 0x00\n113: DUP1\n114: REVERT"
      },
      {
        "offset": 115,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b82018360208201111561008557",
        "parsedOpcodes": "115: JUMPDEST\n116: DUP3\n117: ADD\n118: DUP4\n119: PUSH1 0x20\n121: DUP3\n122: ADD\n123: GT\n124: ISZERO\n125: PUSH2 0x0085\n128: JUMPI"
      },
      {
        "offset": 129,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "129: PUSH1 0x00\n131: DUP1\n132: REVERT"
      },
      {
        "offset": 133,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b803590602001918460018302840111640100000000831117156100a757",
        "parsedOpcodes": "133: JUMPDEST\n134: DUP1\n135: CALLDATALOAD\n136: SWAP1\n137: PUSH1 0x20\n139: ADD\n140: SWAP2\n141: DUP5\n142: PUSH1 0x01\n144: DUP4\n145: MUL\n146: DUP5\n147: ADD\n148: GT\n149: PUSH5 0x0100000000\n155: DUP4\n156: GT\n157: OR\n158: ISZERO\n159: PUSH2 0x00a7\n162: JUMPI"
      },
      {
        "offset": 163,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "163: PUSH1 0x00\n165: DUP1\n166: REVERT"
      },
      {
        "offset": 167,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b50909250905061019d56",
        "parsedOpcodes": "167: JUMPDEST\n168: POP\n169: SWAP1\n170: SWAP3\n171: POP\n172: SWAP1\n173: POP\n174: PUSH2 0x019d\n177: JUMP"
      },
      {
        "offset": 178,
        "length": 36,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b6040805160208082528351818301528351919283929083019185810191028083836000",
        "parsedOpcodes": "178: JUMPDEST\n179: PUSH1 0x40\n181: DUP1\n182: MLOAD\n183: PUSH1 0x20\n185: DUP1\n186: DUP3\n187: MSTORE\n188: DUP4\n189: MLOAD\n190: DUP2\n191: DUP4\n192: ADD\n193: MSTORE\n194: DUP4\n195: MLOAD\n196: SWAP2\n197: SWAP3\n198: DUP4\n199: SWAP3\n200: SWAP1\n201: DUP4\n202: ADD\n203: SWAP2\n204: DUP6\n205: DUP2\n206: ADD\n207: SWAP2\n208: MUL\n209: DUP1\n210: DUP4\n211: DUP4\n212: PUSH1 0x00"
      },
      {
        "offset": 214,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156100ee57",
        "parsedOpcodes": "214: JUMPDEST\n215: DUP4\n216: DUP2\n217: LT\n218: ISZERO\n219: PUSH2 0x00ee\n222: JUMPI"
      },
      {
        "offset": 223,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016100d656",
        "parsedOpcodes": "223: DUP2\n224: DUP2\n225: ADD\n226: MLOAD\n227: DUP4\n228: DUP3\n229: ADD\n230: MSTORE\n231: PUSH1 0x20\n233: ADD\n234: PUSH2 0x00d6\n237: JUMP"
      },
      {
        "offset": 238,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -10,
        "bytecodeHex": "5b505050509050019250505060405180910390f3",
        "parsedOpcodes": "238: JUMPDEST\n239: POP\n240: POP\n241: POP\n242: POP\n243: SWAP1\n244: POP\n245: ADD\n246: SWAP3\n247: POP\n248: POP\n249: POP\n250: PUSH1 0x40\n252: MLOAD\n253: DUP1\n254: SWAP2\n255: SUB\n256: SWAP1\n257: RETURN"
      },
      {
        "offset": 258,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6101286004803603602081101561011857",
        "parsedOpcodes": "258: JUMPDEST\n259: PUSH2 0x0128\n262: PUSH1 0x04\n264: DUP1\n265: CALLDATASIZE\n266: SUB\n267: PUSH1 0x20\n269: DUP2\n270: LT\n271: ISZERO\n272: PUSH2 0x0118\n275: JUMPI"
      },
      {
        "offset": 276,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "276: PUSH1 0x00\n278: DUP1\n279: REVERT"
      },
      {
        "offset": 280,
        "length": 16,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b50356001600160a01b031661025556",
        "parsedOpcodes": "280: JUMPDEST\n281: POP\n282: CALLDATALOAD\n283: PUSH1 0x01\n285: PUSH1 0x01\n287: PUSH1 0xa0\n289: SHL\n290: SUB\n291: AND\n292: PUSH2 0x0255\n295: JUMP"
      },
      {
        "offset": 296,
        "length": 34,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b604080516020808252835181830152835191928392908301918501908083836000",
        "parsedOpcodes": "296: JUMPDEST\n297: PUSH1 0x40\n299: DUP1\n300: MLOAD\n301: PUSH1 0x20\n303: DUP1\n304: DUP3\n305: MSTORE\n306: DUP4\n307: MLOAD\n308: DUP2\n309: DUP4\n310: ADD\n311: MSTORE\n312: DUP4\n313: MLOAD\n314: SWAP2\n315: SWAP3\n316: DUP4\n317: SWAP3\n318: SWAP1\n319: DUP4\n320: ADD\n321: SWAP2\n322: DUP6\n323: ADD\n324: SWAP1\n325: DUP1\n326: DUP4\n327: DUP4\n328: PUSH1 0x00"
      },
      {
        "offset": 330,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561016257",
        "parsedOpcodes": "330: JUMPDEST\n331: DUP4\n332: DUP2\n333: LT\n334: ISZERO\n335: PUSH2 0x0162\n338: JUMPI"
      },
      {
        "offset": 339,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161014a56",
        "parsedOpcodes": "339: DUP2\n340: DUP2\n341: ADD\n342: MLOAD\n343: DUP4\n344: DUP3\n345: ADD\n346: MSTORE\n347: PUSH1 0x20\n349: ADD\n350: PUSH2 0x014a\n353: JUMP"
      },
      {
        "offset": 354,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561018f57",
        "parsedOpcodes": "354: JUMPDEST\n355: POP\n356: POP\n357: POP\n358: POP\n359: SWAP1\n360: POP\n361: SWAP1\n362: DUP2\n363: ADD\n364: SWAP1\n365: PUSH1 0x1f\n367: AND\n368: DUP1\n369: ISZERO\n370: PUSH2 0x018f\n373: JUMPI"
      },
      {
        "offset": 374,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "374: DUP1\n375: DUP3\n376: SUB\n377: DUP1\n378: MLOAD\n379: PUSH1 0x01\n381: DUP4\n382: PUSH1 0x20\n384: SUB\n385: PUSH2 0x0100\n388: EXP\n389: SUB\n390: NOT\n391: AND\n392: DUP2\n393: MSTORE\n394: PUSH1 0x20\n396: ADD\n397: SWAP2\n398: POP"
      },
      {
        "offset": 399,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b509250505060405180910390f3",
        "parsedOpcodes": "399: JUMPDEST\n400: POP\n401: SWAP3\n402: POP\n403: POP\n404: POP\n405: PUSH1 0x40\n407: MLOAD\n408: DUP1\n409: SWAP2\n410: SUB\n411: SWAP1\n412: RETURN"
      },
      {
        "offset": 413,
        "length": 9,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b606083806101a957",
        "parsedOpcodes": "413: JUMPDEST\n414: PUSH1 0x60\n416: DUP4\n417: DUP1\n418: PUSH2 0x01a9\n421: JUMPI"
      },
      {
        "offset": 422,
        "length": 3,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506001",
        "parsedOpcodes": "422: POP\n423: PUSH1 0x01"
      },
      {
        "offset": 425,
        "length": 27,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b806040519080825280602002602001820160405280156101d357",
        "parsedOpcodes": "425: JUMPDEST\n426: DUP1\n427: PUSH1 0x40\n429: MLOAD\n430: SWAP1\n431: DUP1\n432: DUP3\n433: MSTORE\n434: DUP1\n435: PUSH1 0x20\n437: MUL\n438: PUSH1 0x20\n440: ADD\n441: DUP3\n442: ADD\n443: PUSH1 0x40\n445: MSTORE\n446: DUP1\n447: ISZERO\n448: PUSH2 0x01d3\n451: JUMPI"
      },
      {
        "offset": 452,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "816020016020820280388339019050",
        "parsedOpcodes": "452: DUP2\n453: PUSH1 0x20\n455: ADD\n456: PUSH1 0x20\n458: DUP3\n459: MUL\n460: DUP1\n461: CODESIZE\n462: DUP4\n463: CODECOPY\n464: ADD\n465: SWAP1\n466: POP"
      },
      {
        "offset": 467,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5091506000",
        "parsedOpcodes": "467: JUMPDEST\n468: POP\n469: SWAP2\n470: POP\n471: PUSH1 0x00"
      },
      {
        "offset": 473,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8181101561024c57",
        "parsedOpcodes": "473: JUMPDEST\n474: DUP2\n475: DUP2\n476: LT\n477: ISZERO\n478: PUSH2 0x024c\n481: JUMPI"
      },
      {
        "offset": 482,
        "length": 62,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "61022085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102e59250505056",
        "parsedOpcodes": "482: PUSH2 0x0220\n485: DUP6\n486: DUP6\n487: DUP1\n488: DUP1\n489: PUSH1 0x1f\n491: ADD\n492: PUSH1 0x20\n494: DUP1\n495: SWAP2\n496: DIV\n497: MUL\n498: PUSH1 0x20\n500: ADD\n501: PUSH1 0x40\n503: MLOAD\n504: SWAP1\n505: DUP2\n506: ADD\n507: PUSH1 0x40\n509: MSTORE\n510: DUP1\n511: SWAP4\n512: SWAP3\n513: SWAP2\n514: SWAP1\n515: DUP2\n516: DUP2\n517: MSTORE\n518: PUSH1 0x20\n520: ADD\n521: DUP4\n522: DUP4\n523: DUP1\n524: DUP3\n525: DUP5\n526: CALLDATACOPY\n527: PUSH1 0x00\n529: SWAP3\n530: ADD\n531: SWAP2\n532: SWAP1\n533: SWAP2\n534: MSTORE\n535: POP\n536: PUSH2 0x02e5\n539: SWAP3\n540: POP\n541: POP\n542: POP\n543: JUMP"
      },
      {
        "offset": 544,
        "length": 11,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b83828151811061022c57",
        "parsedOpcodes": "544: JUMPDEST\n545: DUP4\n546: DUP3\n547: DUP2\n548: MLOAD\n549: DUP2\n550: LT\n551: PUSH2 0x022c\n554: JUMPI"
      },
      {
        "offset": 555,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "555: INVALID"
      },
      {
        "offset": 556,
        "length": 32,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6001600160a01b03909216602092830291909101909101526001016101d956",
        "parsedOpcodes": "556: JUMPDEST\n557: PUSH1 0x01\n559: PUSH1 0x01\n561: PUSH1 0xa0\n563: SHL\n564: SUB\n565: SWAP1\n566: SWAP3\n567: AND\n568: PUSH1 0x20\n570: SWAP3\n571: DUP4\n572: MUL\n573: SWAP2\n574: SWAP1\n575: SWAP2\n576: ADD\n577: SWAP1\n578: SWAP2\n579: ADD\n580: MSTORE\n581: PUSH1 0x01\n583: ADD\n584: PUSH2 0x01d9\n587: JUMP"
      },
      {
        "offset": 588,
        "length": 9,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b5050939250505056",
        "parsedOpcodes": "588: JUMPDEST\n589: POP\n590: POP\n591: SWAP4\n592: SWAP3\n593: POP\n594: POP\n595: POP\n596: JUMP"
      },
      {
        "offset": 597,
        "length": 123,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b6060806040518060600160405280602781526020016104c4602791399050606060405180608001604052806056815260200161046e60569139905060606102d0838660405160200180826001600160a01b03166001600160a01b031660601b81526014019150506040516020818303038152906040526103e956",
        "parsedOpcodes": "597: JUMPDEST\n598: PUSH1 0x60\n600: DUP1\n601: PUSH1 0x40\n603: MLOAD\n604: DUP1\n605: PUSH1 0x60\n607: ADD\n608: PUSH1 0x40\n610: MSTORE\n611: DUP1\n612: PUSH1 0x27\n614: DUP2\n615: MSTORE\n616: PUSH1 0x20\n618: ADD\n619: PUSH2 0x04c4\n622: PUSH1 0x27\n624: SWAP2\n625: CODECOPY\n626: SWAP1\n627: POP\n628: PUSH1 0x60\n630: PUSH1 0x40\n632: MLOAD\n633: DUP1\n634: PUSH1 0x80\n636: ADD\n637: PUSH1 0x40\n639: MSTORE\n640: DUP1\n641: PUSH1 0x56\n643: DUP2\n644: MSTORE\n645: PUSH1 0x20\n647: ADD\n648: PUSH2 0x046e\n651: PUSH1 0x56\n653: SWAP2\n654: CODECOPY\n655: SWAP1\n656: POP\n657: PUSH1 0x60\n659: PUSH2 0x02d0\n662: DUP4\n663: DUP7\n664: PUSH1 0x40\n666: MLOAD\n667: PUSH1 0x20\n669: ADD\n670: DUP1\n671: DUP3\n672: PUSH1 0x01\n674: PUSH1 0x01\n676: PUSH1 0xa0\n678: SHL\n679: SUB\n680: AND\n681: PUSH1 0x01\n683: PUSH1 0x01\n685: PUSH1 0xa0\n687: SHL\n688: SUB\n689: AND\n690: PUSH1 0x60\n692: SHL\n693: DUP2\n694: MSTORE\n695: PUSH1 0x14\n697: ADD\n698: SWAP2\n699: POP\n700: POP\n701: PUSH1 0x40\n703: MLOAD\n704: PUSH1 0x20\n706: DUP2\n707: DUP4\n708: SUB\n709: SUB\n710: DUP2\n711: MSTORE\n712: SWAP1\n713: PUSH1 0x40\n715: MSTORE\n716: PUSH2 0x03e9\n719: JUMP"
      },
      {
        "offset": 720,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b90506102dc81836103e956",
        "parsedOpcodes": "720: JUMPDEST\n721: SWAP1\n722: POP\n723: PUSH2 0x02dc\n726: DUP2\n727: DUP4\n728: PUSH2 0x03e9\n731: JUMP"
      },
      {
        "offset": 732,
        "length": 9,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b9594505050505056",
        "parsedOpcodes": "732: JUMPDEST\n733: SWAP6\n734: SWAP5\n735: POP\n736: POP\n737: POP\n738: POP\n739: POP\n740: JUMP"
      },
      {
        "offset": 741,
        "length": 74,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60006060823360405160200180826001600160a01b03166001600160a01b03168152602001915050604051602081830303815290604052604051602001808380519060200190808383",
        "parsedOpcodes": "741: JUMPDEST\n742: PUSH1 0x00\n744: PUSH1 0x60\n746: DUP3\n747: CALLER\n748: PUSH1 0x40\n750: MLOAD\n751: PUSH1 0x20\n753: ADD\n754: DUP1\n755: DUP3\n756: PUSH1 0x01\n758: PUSH1 0x01\n760: PUSH1 0xa0\n762: SHL\n763: SUB\n764: AND\n765: PUSH1 0x01\n767: PUSH1 0x01\n769: PUSH1 0xa0\n771: SHL\n772: SUB\n773: AND\n774: DUP2\n775: MSTORE\n776: PUSH1 0x20\n778: ADD\n779: SWAP2\n780: POP\n781: POP\n782: PUSH1 0x40\n784: MLOAD\n785: PUSH1 0x20\n787: DUP2\n788: DUP4\n789: SUB\n790: SUB\n791: DUP2\n792: MSTORE\n793: SWAP1\n794: PUSH1 0x40\n796: MSTORE\n797: PUSH1 0x40\n799: MLOAD\n800: PUSH1 0x20\n802: ADD\n803: DUP1\n804: DUP4\n805: DUP1\n806: MLOAD\n807: SWAP1\n808: PUSH1 0x20\n810: ADD\n811: SWAP1\n812: DUP1\n813: DUP4\n814: DUP4"
      },
      {
        "offset": 815,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061034e57",
        "parsedOpcodes": "815: JUMPDEST\n816: PUSH1 0x20\n818: DUP4\n819: LT\n820: PUSH2 0x034e\n823: JUMPI"
      },
      {
        "offset": 824,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161032f56",
        "parsedOpcodes": "824: DUP1\n825: MLOAD\n826: DUP3\n827: MSTORE\n828: PUSH1 0x1f\n830: NOT\n831: SWAP1\n832: SWAP3\n833: ADD\n834: SWAP2\n835: PUSH1 0x20\n837: SWAP2\n838: DUP3\n839: ADD\n840: SWAP2\n841: ADD\n842: PUSH2 0x032f\n845: JUMP"
      },
      {
        "offset": 846,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790528551919093019285019150808383",
        "parsedOpcodes": "846: JUMPDEST\n847: MLOAD\n848: DUP2\n849: MLOAD\n850: PUSH1 0x20\n852: SWAP4\n853: DUP5\n854: SUB\n855: PUSH2 0x0100\n858: EXP\n859: PUSH1 0x00\n861: NOT\n862: ADD\n863: DUP1\n864: NOT\n865: SWAP1\n866: SWAP3\n867: AND\n868: SWAP2\n869: AND\n870: OR\n871: SWAP1\n872: MSTORE\n873: DUP6\n874: MLOAD\n875: SWAP2\n876: SWAP1\n877: SWAP4\n878: ADD\n879: SWAP3\n880: DUP6\n881: ADD\n882: SWAP2\n883: POP\n884: DUP1\n885: DUP4\n886: DUP4"
      },
      {
        "offset": 887,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061039657",
        "parsedOpcodes": "887: JUMPDEST\n888: PUSH1 0x20\n890: DUP4\n891: LT\n892: PUSH2 0x0396\n895: JUMPI"
      },
      {
        "offset": 896,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161037756",
        "parsedOpcodes": "896: DUP1\n897: MLOAD\n898: DUP3\n899: MSTORE\n900: PUSH1 0x1f\n902: NOT\n903: SWAP1\n904: SWAP3\n905: ADD\n906: SWAP2\n907: PUSH1 0x20\n909: SWAP2\n910: DUP3\n911: ADD\n912: SWAP2\n913: ADD\n914: PUSH2 0x0377\n917: JUMP"
      },
      {
        "offset": 918,
        "length": 73,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290508051602082016000f09150813b6103e357",
        "parsedOpcodes": "918: JUMPDEST\n919: PUSH1 0x01\n921: DUP4\n922: PUSH1 0x20\n924: SUB\n925: PUSH2 0x0100\n928: EXP\n929: SUB\n930: DUP1\n931: NOT\n932: DUP3\n933: MLOAD\n934: AND\n935: DUP2\n936: DUP5\n937: MLOAD\n938: AND\n939: DUP1\n940: DUP3\n941: OR\n942: DUP6\n943: MSTORE\n944: POP\n945: POP\n946: POP\n947: POP\n948: POP\n949: POP\n950: SWAP1\n951: POP\n952: ADD\n953: SWAP3\n954: POP\n955: POP\n956: POP\n957: PUSH1 0x40\n959: MLOAD\n960: PUSH1 0x20\n962: DUP2\n963: DUP4\n964: SUB\n965: SUB\n966: DUP2\n967: MSTORE\n968: SWAP1\n969: PUSH1 0x40\n971: MSTORE\n972: SWAP1\n973: POP\n974: DUP1\n975: MLOAD\n976: PUSH1 0x20\n978: DUP3\n979: ADD\n980: PUSH1 0x00\n982: CREATE\n983: SWAP2\n984: POP\n985: DUP2\n986: EXTCODESIZE\n987: PUSH2 0x03e3\n990: JUMPI"
      },
      {
        "offset": 991,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "991: PUSH1 0x00\n993: DUP1\n994: REVERT"
      },
      {
        "offset": 995,
        "length": 6,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b5091905056",
        "parsedOpcodes": "995: JUMPDEST\n996: POP\n997: SWAP2\n998: SWAP1\n999: POP\n1000: JUMP"
      },
      {
        "offset": 1001,
        "length": 36,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b8151815160609190810160006020601f8401049050600060208651601f018161040e57",
        "parsedOpcodes": "1001: JUMPDEST\n1002: DUP2\n1003: MLOAD\n1004: DUP2\n1005: MLOAD\n1006: PUSH1 0x60\n1008: SWAP2\n1009: SWAP1\n1010: DUP2\n1011: ADD\n1012: PUSH1 0x00\n1014: PUSH1 0x20\n1016: PUSH1 0x1f\n1018: DUP5\n1019: ADD\n1020: DIV\n1021: SWAP1\n1022: POP\n1023: PUSH1 0x00\n1025: PUSH1 0x20\n1027: DUP7\n1028: MLOAD\n1029: PUSH1 0x1f\n1031: ADD\n1032: DUP2\n1033: PUSH2 0x040e\n1036: JUMPI"
      },
      {
        "offset": 1037,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1037: INVALID"
      },
      {
        "offset": 1038,
        "length": 12,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b0490506040518381526000",
        "parsedOpcodes": "1038: JUMPDEST\n1039: DIV\n1040: SWAP1\n1041: POP\n1042: PUSH1 0x40\n1044: MLOAD\n1045: DUP4\n1046: DUP2\n1047: MSTORE\n1048: PUSH1 0x00"
      },
      {
        "offset": 1050,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561043657",
        "parsedOpcodes": "1050: JUMPDEST\n1051: DUP4\n1052: DUP2\n1053: LT\n1054: ISZERO\n1055: PUSH2 0x0436\n1058: JUMPI"
      },
      {
        "offset": 1059,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60010160208102898101519083015261041a56",
        "parsedOpcodes": "1059: PUSH1 0x01\n1061: ADD\n1062: PUSH1 0x20\n1064: DUP2\n1065: MUL\n1066: DUP10\n1067: DUP2\n1068: ADD\n1069: MLOAD\n1070: SWAP1\n1071: DUP4\n1072: ADD\n1073: MSTORE\n1074: PUSH2 0x041a\n1077: JUMP"
      },
      {
        "offset": 1078,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506000",
        "parsedOpcodes": "1078: JUMPDEST\n1079: POP\n1080: PUSH1 0x00"
      },
      {
        "offset": 1082,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8281101561045857",
        "parsedOpcodes": "1082: JUMPDEST\n1083: DUP3\n1084: DUP2\n1085: LT\n1086: ISZERO\n1087: PUSH2 0x0458\n1090: JUMPI"
      },
      {
        "offset": 1091,
        "length": 21,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600101602081028881015190870183015261043a56",
        "parsedOpcodes": "1091: PUSH1 0x01\n1093: ADD\n1094: PUSH1 0x20\n1096: DUP2\n1097: MUL\n1098: DUP9\n1099: DUP2\n1100: ADD\n1101: MLOAD\n1102: SWAP1\n1103: DUP8\n1104: ADD\n1105: DUP4\n1106: ADD\n1107: MSTORE\n1108: PUSH2 0x043a\n1111: JUMP"
      },
      {
        "offset": 1112,
        "length": 21,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b5092830160200160405250909594505050505056",
        "parsedOpcodes": "1112: JUMPDEST\n1113: POP\n1114: SWAP3\n1115: DUP4\n1116: ADD\n1117: PUSH1 0x20\n1119: ADD\n1120: PUSH1 0x40\n1122: MSTORE\n1123: POP\n1124: SWAP1\n1125: SWAP6\n1126: SWAP5\n1127: POP\n1128: POP\n1129: POP\n1130: POP\n1131: POP\n1132: JUMP"
      },
      {
        "offset": 1133,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1133: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          1133
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          54
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          59
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          258
        ]
      },
      {
        "from": 54,
        "to": [
          1133
        ]
      },
      {
        "from": 59,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          1133
        ]
      },
      {
        "from": 81,
        "to": [
          111,
          115
        ]
      },
      {
        "from": 111,
        "to": [
          1133
        ]
      },
      {
        "from": 115,
        "to": [
          129,
          133
        ]
      },
      {
        "from": 129,
        "to": [
          1133
        ]
      },
      {
        "from": 133,
        "to": [
          163,
          167
        ]
      },
      {
        "from": 163,
        "to": [
          1133
        ]
      },
      {
        "from": 167,
        "to": [
          413,
          413
        ]
      },
      {
        "from": 178,
        "to": [
          214
        ]
      },
      {
        "from": 214,
        "to": [
          223,
          238
        ]
      },
      {
        "from": 223,
        "to": [
          214,
          214,
          214
        ]
      },
      {
        "from": 238,
        "to": [
          1133
        ]
      },
      {
        "from": 258,
        "to": [
          276,
          280
        ]
      },
      {
        "from": 276,
        "to": [
          1133
        ]
      },
      {
        "from": 280,
        "to": [
          597,
          597
        ]
      },
      {
        "from": 296,
        "to": [
          330
        ]
      },
      {
        "from": 330,
        "to": [
          339,
          354
        ]
      },
      {
        "from": 339,
        "to": [
          330,
          330,
          330
        ]
      },
      {
        "from": 354,
        "to": [
          374,
          399
        ]
      },
      {
        "from": 374,
        "to": [
          399
        ]
      },
      {
        "from": 399,
        "to": [
          1133
        ]
      },
      {
        "from": 413,
        "to": [
          422,
          425
        ]
      },
      {
        "from": 422,
        "to": [
          425
        ]
      },
      {
        "from": 425,
        "to": [
          452,
          467
        ]
      },
      {
        "from": 452,
        "to": [
          467
        ]
      },
      {
        "from": 467,
        "to": [
          473
        ]
      },
      {
        "from": 473,
        "to": [
          482,
          588
        ]
      },
      {
        "from": 482,
        "to": [
          741,
          741,
          741,
          741
        ]
      },
      {
        "from": 544,
        "to": [
          555,
          556
        ]
      },
      {
        "from": 555,
        "to": [
          1133
        ]
      },
      {
        "from": 556,
        "to": [
          473,
          473,
          473,
          473,
          473
        ]
      },
      {
        "from": 588,
        "to": [
          178,
          178,
          178,
          178
        ]
      },
      {
        "from": 597,
        "to": [
          1001,
          1001
        ]
      },
      {
        "from": 720,
        "to": [
          1001,
          1001
        ]
      },
      {
        "from": 732,
        "to": [
          296
        ]
      },
      {
        "from": 741,
        "to": [
          815
        ]
      },
      {
        "from": 815,
        "to": [
          824,
          846
        ]
      },
      {
        "from": 824,
        "to": [
          815,
          815,
          815,
          815,
          815
        ]
      },
      {
        "from": 846,
        "to": [
          887
        ]
      },
      {
        "from": 887,
        "to": [
          896,
          918
        ]
      },
      {
        "from": 896,
        "to": [
          887,
          887,
          887,
          887,
          887
        ]
      },
      {
        "from": 918,
        "to": [
          991,
          995
        ]
      },
      {
        "from": 991,
        "to": [
          1133
        ]
      },
      {
        "from": 995,
        "to": [
          544,
          544,
          544,
          544
        ]
      },
      {
        "from": 1001,
        "to": [
          1037,
          1038
        ]
      },
      {
        "from": 1037,
        "to": [
          1133
        ]
      },
      {
        "from": 1038,
        "to": [
          1050
        ]
      },
      {
        "from": 1050,
        "to": [
          1059,
          1078
        ]
      },
      {
        "from": 1059,
        "to": [
          1050,
          1050,
          1050,
          1050,
          1050
        ]
      },
      {
        "from": 1078,
        "to": [
          1082
        ]
      },
      {
        "from": 1082,
        "to": [
          1091,
          1112
        ]
      },
      {
        "from": 1091,
        "to": [
          1082,
          1082,
          1082,
          1082,
          1082
        ]
      },
      {
        "from": 1112,
        "to": [
          720,
          732,
          732,
          720
        ]
      },
      {
        "from": 1133,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 1,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Direct jump unresolvable at 1159, block 58 does not exists\n",
      "buildTimeMillis": 86
    }
  }
}