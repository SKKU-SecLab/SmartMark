{
  "name": "Analysis_2022-04-04_23-34-54",
  "address": "",
  "binarySource": "6080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166354823e668114610045575b600080fd5b34801561005157600080fd5b5061005d60043561006f565b60408051918252519081900360200190f35b6000818152600e60209081526040808320805482518185028101850190935280835260609385938493869385938301828280156100e257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116100b7575b50505050509450845193506000841115610204578460405180828051906020019060200280838360005b8381101561012457818101518382015260200161010c565b5050505090500191505060405180910390209550600092505b83831015610204576000878152600b60205260408120865188929088908790811061016457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180836000191660001916815260200182805480156101e857602002820191906000526020600020905b8154815260200190600101908083116101d4575b50506040519081900390209850506001909401935061013d9050565b815193506000841115610351576000878152600f60209081526040918290208054835181840281018401909452808452909183018282801561027c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610251575b50506040518a815284519496508a9487945090925060208084019250808501910280838360005b838110156102bb5781810151838201526020016102a3565b505050509050019250505060405180910390209550600092505b8383101561035157600087815260116020526040812083518892908590879081106102fc57fe5b602090810290910181015173ffffffffffffffffffffffffffffffffffffffff1682528181019290925260409081016000205481519384529183019190915280519182900301902095506001909201916102d5565b50505060009384525050600560209081526040928390206001015483519283527fffffffffffffffff00000000000000000000000000000000000000000000000016908201528151908190039091019020905600a165627a7a72305820f77855acc2d511e9a3270002c711289d3a285385af82b720ac00ec37333798bb0029",
  "binaryHash": "498dd686",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820f77855acc2d511e9a3270002c711289d3a285385af82b720ac00ec37333798bb0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649082894033
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166354823e668114610045575b600080fd5b34801561005157600080fd5b5061005d60043561006f565b60408051918252519081900360200190f35b6000818152600e60209081526040808320805482518185028101850190935280835260609385938493869385938301828280156100e257602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116100b7575b50505050509450845193506000841115610204578460405180828051906020019060200280838360005b8381101561012457818101518382015260200161010c565b5050505090500191505060405180910390209550600092505b83831015610204576000878152600b60205260408120865188929088908790811061016457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180836000191660001916815260200182805480156101e857602002820191906000526020600020905b8154815260200190600101908083116101d4575b50506040519081900390209850506001909401935061013d9050565b815193506000841115610351576000878152600f60209081526040918290208054835181840281018401909452808452909183018282801561027c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610251575b50506040518a815284519496508a9487945090925060208084019250808501910280838360005b838110156102bb5781810151838201526020016102a3565b505050509050019250505060405180910390209550600092505b8383101561035157600087815260116020526040812083518892908590879081106102fc57fe5b602090810290910181015173ffffffffffffffffffffffffffffffffffffffff1682528181019290925260409081016000205481519384529183019190915280519182900301902095506001909201916102d5565b50505060009384525050600560209081526040928390206001015483519283527fffffffffffffffff00000000000000000000000000000000000000000000000016908201528151908190039091019020905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0040\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166354823e66811461004557",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x54823e66\n58: DUP2\n59: EQ\n60: PUSH2 0x0045\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "64: JUMPDEST\n65: PUSH1 0x00\n67: DUP1\n68: REVERT"
      },
      {
        "offset": 69,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005157",
        "parsedOpcodes": "69: JUMPDEST\n70: CALLVALUE\n71: DUP1\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b5061005d60043561006f56",
        "parsedOpcodes": "81: JUMPDEST\n82: POP\n83: PUSH2 0x005d\n86: PUSH1 0x04\n88: CALLDATALOAD\n89: PUSH2 0x006f\n92: JUMP"
      },
      {
        "offset": 93,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "93: JUMPDEST\n94: PUSH1 0x40\n96: DUP1\n97: MLOAD\n98: SWAP2\n99: DUP3\n100: MSTORE\n101: MLOAD\n102: SWAP1\n103: DUP2\n104: SWAP1\n105: SUB\n106: PUSH1 0x20\n108: ADD\n109: SWAP1\n110: RETURN"
      },
      {
        "offset": 111,
        "length": 56,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b6000818152600e60209081526040808320805482518185028101850190935280835260609385938493869385938301828280156100e257",
        "parsedOpcodes": "111: JUMPDEST\n112: PUSH1 0x00\n114: DUP2\n115: DUP2\n116: MSTORE\n117: PUSH1 0x0e\n119: PUSH1 0x20\n121: SWAP1\n122: DUP2\n123: MSTORE\n124: PUSH1 0x40\n126: DUP1\n127: DUP4\n128: SHA3\n129: DUP1\n130: SLOAD\n131: DUP3\n132: MLOAD\n133: DUP2\n134: DUP6\n135: MUL\n136: DUP2\n137: ADD\n138: DUP6\n139: ADD\n140: SWAP1\n141: SWAP4\n142: MSTORE\n143: DUP1\n144: DUP4\n145: MSTORE\n146: PUSH1 0x60\n148: SWAP4\n149: DUP6\n150: SWAP4\n151: DUP5\n152: SWAP4\n153: DUP7\n154: SWAP4\n155: DUP6\n156: SWAP4\n157: DUP4\n158: ADD\n159: DUP3\n160: DUP3\n161: DUP1\n162: ISZERO\n163: PUSH2 0x00e2\n166: JUMPI"
      },
      {
        "offset": 167,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60200282019190600052602060002090",
        "parsedOpcodes": "167: PUSH1 0x20\n169: MUL\n170: DUP3\n171: ADD\n172: SWAP2\n173: SWAP1\n174: PUSH1 0x00\n176: MSTORE\n177: PUSH1 0x20\n179: PUSH1 0x00\n181: SHA3\n182: SWAP1"
      },
      {
        "offset": 183,
        "length": 43,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116100b757",
        "parsedOpcodes": "183: JUMPDEST\n184: DUP2\n185: SLOAD\n186: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n207: AND\n208: DUP2\n209: MSTORE\n210: PUSH1 0x01\n212: SWAP1\n213: SWAP2\n214: ADD\n215: SWAP1\n216: PUSH1 0x20\n218: ADD\n219: DUP1\n220: DUP4\n221: GT\n222: PUSH2 0x00b7\n225: JUMPI"
      },
      {
        "offset": 226,
        "length": 21,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b5050505050945084519350600084111561020457",
        "parsedOpcodes": "226: JUMPDEST\n227: POP\n228: POP\n229: POP\n230: POP\n231: POP\n232: SWAP5\n233: POP\n234: DUP5\n235: MLOAD\n236: SWAP4\n237: POP\n238: PUSH1 0x00\n240: DUP5\n241: GT\n242: ISZERO\n243: PUSH2 0x0204\n246: JUMPI"
      },
      {
        "offset": 247,
        "length": 21,
        "type": "common",
        "stackBalance": 9,
        "bytecodeHex": "846040518082805190602001906020028083836000",
        "parsedOpcodes": "247: DUP5\n248: PUSH1 0x40\n250: MLOAD\n251: DUP1\n252: DUP3\n253: DUP1\n254: MLOAD\n255: SWAP1\n256: PUSH1 0x20\n258: ADD\n259: SWAP1\n260: PUSH1 0x20\n262: MUL\n263: DUP1\n264: DUP4\n265: DUP4\n266: PUSH1 0x00"
      },
      {
        "offset": 268,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561012457",
        "parsedOpcodes": "268: JUMPDEST\n269: DUP4\n270: DUP2\n271: LT\n272: ISZERO\n273: PUSH2 0x0124\n276: JUMPI"
      },
      {
        "offset": 277,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161010c56",
        "parsedOpcodes": "277: DUP2\n278: DUP2\n279: ADD\n280: MLOAD\n281: DUP4\n282: DUP3\n283: ADD\n284: MSTORE\n285: PUSH1 0x20\n287: ADD\n288: PUSH2 0x010c\n291: JUMP"
      },
      {
        "offset": 292,
        "length": 25,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b505050509050019150506040518091039020955060009250",
        "parsedOpcodes": "292: JUMPDEST\n293: POP\n294: POP\n295: POP\n296: POP\n297: SWAP1\n298: POP\n299: ADD\n300: SWAP2\n301: POP\n302: POP\n303: PUSH1 0x40\n305: MLOAD\n306: DUP1\n307: SWAP2\n308: SUB\n309: SWAP1\n310: SHA3\n311: SWAP6\n312: POP\n313: PUSH1 0x00\n315: SWAP3\n316: POP"
      },
      {
        "offset": 317,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8383101561020457",
        "parsedOpcodes": "317: JUMPDEST\n318: DUP4\n319: DUP4\n320: LT\n321: ISZERO\n322: PUSH2 0x0204\n325: JUMPI"
      },
      {
        "offset": 326,
        "length": 29,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "6000878152600b60205260408120865188929088908790811061016457",
        "parsedOpcodes": "326: PUSH1 0x00\n328: DUP8\n329: DUP2\n330: MSTORE\n331: PUSH1 0x0b\n333: PUSH1 0x20\n335: MSTORE\n336: PUSH1 0x40\n338: DUP2\n339: SHA3\n340: DUP7\n341: MLOAD\n342: DUP9\n343: SWAP3\n344: SWAP1\n345: DUP9\n346: SWAP1\n347: DUP8\n348: SWAP1\n349: DUP2\n350: LT\n351: PUSH2 0x0164\n354: JUMPI"
      },
      {
        "offset": 355,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "355: INVALID"
      },
      {
        "offset": 356,
        "length": 96,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180836000191660001916815260200182805480156101e857",
        "parsedOpcodes": "356: JUMPDEST\n357: SWAP1\n358: PUSH1 0x20\n360: ADD\n361: SWAP1\n362: PUSH1 0x20\n364: MUL\n365: ADD\n366: MLOAD\n367: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n388: AND\n389: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n410: AND\n411: DUP2\n412: MSTORE\n413: PUSH1 0x20\n415: ADD\n416: SWAP1\n417: DUP2\n418: MSTORE\n419: PUSH1 0x20\n421: ADD\n422: PUSH1 0x00\n424: SHA3\n425: PUSH1 0x40\n427: MLOAD\n428: DUP1\n429: DUP4\n430: PUSH1 0x00\n432: NOT\n433: AND\n434: PUSH1 0x00\n436: NOT\n437: AND\n438: DUP2\n439: MSTORE\n440: PUSH1 0x20\n442: ADD\n443: DUP3\n444: DUP1\n445: SLOAD\n446: DUP1\n447: ISZERO\n448: PUSH2 0x01e8\n451: JUMPI"
      },
      {
        "offset": 452,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60200282019190600052602060002090",
        "parsedOpcodes": "452: PUSH1 0x20\n454: MUL\n455: DUP3\n456: ADD\n457: SWAP2\n458: SWAP1\n459: PUSH1 0x00\n461: MSTORE\n462: PUSH1 0x20\n464: PUSH1 0x00\n466: SHA3\n467: SWAP1"
      },
      {
        "offset": 468,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8154815260200190600101908083116101d457",
        "parsedOpcodes": "468: JUMPDEST\n469: DUP2\n470: SLOAD\n471: DUP2\n472: MSTORE\n473: PUSH1 0x20\n475: ADD\n476: SWAP1\n477: PUSH1 0x01\n479: ADD\n480: SWAP1\n481: DUP1\n482: DUP4\n483: GT\n484: PUSH2 0x01d4\n487: JUMPI"
      },
      {
        "offset": 488,
        "length": 28,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b50506040519081900390209850506001909401935061013d905056",
        "parsedOpcodes": "488: JUMPDEST\n489: POP\n490: POP\n491: PUSH1 0x40\n493: MLOAD\n494: SWAP1\n495: DUP2\n496: SWAP1\n497: SUB\n498: SWAP1\n499: SHA3\n500: SWAP9\n501: POP\n502: POP\n503: PUSH1 0x01\n505: SWAP1\n506: SWAP5\n507: ADD\n508: SWAP4\n509: POP\n510: PUSH2 0x013d\n513: SWAP1\n514: POP\n515: JUMP"
      },
      {
        "offset": 516,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b81519350600084111561035157",
        "parsedOpcodes": "516: JUMPDEST\n517: DUP2\n518: MLOAD\n519: SWAP4\n520: POP\n521: PUSH1 0x00\n523: DUP5\n524: GT\n525: ISZERO\n526: PUSH2 0x0351\n529: JUMPI"
      },
      {
        "offset": 530,
        "length": 47,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "6000878152600f60209081526040918290208054835181840281018401909452808452909183018282801561027c57",
        "parsedOpcodes": "530: PUSH1 0x00\n532: DUP8\n533: DUP2\n534: MSTORE\n535: PUSH1 0x0f\n537: PUSH1 0x20\n539: SWAP1\n540: DUP2\n541: MSTORE\n542: PUSH1 0x40\n544: SWAP2\n545: DUP3\n546: SWAP1\n547: SHA3\n548: DUP1\n549: SLOAD\n550: DUP4\n551: MLOAD\n552: DUP2\n553: DUP5\n554: MUL\n555: DUP2\n556: ADD\n557: DUP5\n558: ADD\n559: SWAP1\n560: SWAP5\n561: MSTORE\n562: DUP1\n563: DUP5\n564: MSTORE\n565: SWAP1\n566: SWAP2\n567: DUP4\n568: ADD\n569: DUP3\n570: DUP3\n571: DUP1\n572: ISZERO\n573: PUSH2 0x027c\n576: JUMPI"
      },
      {
        "offset": 577,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60200282019190600052602060002090",
        "parsedOpcodes": "577: PUSH1 0x20\n579: MUL\n580: DUP3\n581: ADD\n582: SWAP2\n583: SWAP1\n584: PUSH1 0x00\n586: MSTORE\n587: PUSH1 0x20\n589: PUSH1 0x00\n591: SHA3\n592: SWAP1"
      },
      {
        "offset": 593,
        "length": 43,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b815473ffffffffffffffffffffffffffffffffffffffff16815260019091019060200180831161025157",
        "parsedOpcodes": "593: JUMPDEST\n594: DUP2\n595: SLOAD\n596: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n617: AND\n618: DUP2\n619: MSTORE\n620: PUSH1 0x01\n622: SWAP1\n623: SWAP2\n624: ADD\n625: SWAP1\n626: PUSH1 0x20\n628: ADD\n629: DUP1\n630: DUP4\n631: GT\n632: PUSH2 0x0251\n635: JUMPI"
      },
      {
        "offset": 636,
        "length": 39,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b50506040518a815284519496508a948794509092506020808401925080850191028083836000",
        "parsedOpcodes": "636: JUMPDEST\n637: POP\n638: POP\n639: PUSH1 0x40\n641: MLOAD\n642: DUP11\n643: DUP2\n644: MSTORE\n645: DUP5\n646: MLOAD\n647: SWAP5\n648: SWAP7\n649: POP\n650: DUP11\n651: SWAP5\n652: DUP8\n653: SWAP5\n654: POP\n655: SWAP1\n656: SWAP3\n657: POP\n658: PUSH1 0x20\n660: DUP1\n661: DUP5\n662: ADD\n663: SWAP3\n664: POP\n665: DUP1\n666: DUP6\n667: ADD\n668: SWAP2\n669: MUL\n670: DUP1\n671: DUP4\n672: DUP4\n673: PUSH1 0x00"
      },
      {
        "offset": 675,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156102bb57",
        "parsedOpcodes": "675: JUMPDEST\n676: DUP4\n677: DUP2\n678: LT\n679: ISZERO\n680: PUSH2 0x02bb\n683: JUMPI"
      },
      {
        "offset": 684,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016102a356",
        "parsedOpcodes": "684: DUP2\n685: DUP2\n686: ADD\n687: MLOAD\n688: DUP4\n689: DUP3\n690: ADD\n691: MSTORE\n692: PUSH1 0x20\n694: ADD\n695: PUSH2 0x02a3\n698: JUMP"
      },
      {
        "offset": 699,
        "length": 26,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b50505050905001925050506040518091039020955060009250",
        "parsedOpcodes": "699: JUMPDEST\n700: POP\n701: POP\n702: POP\n703: POP\n704: SWAP1\n705: POP\n706: ADD\n707: SWAP3\n708: POP\n709: POP\n710: POP\n711: PUSH1 0x40\n713: MLOAD\n714: DUP1\n715: SWAP2\n716: SUB\n717: SWAP1\n718: SHA3\n719: SWAP6\n720: POP\n721: PUSH1 0x00\n723: SWAP3\n724: POP"
      },
      {
        "offset": 725,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8383101561035157",
        "parsedOpcodes": "725: JUMPDEST\n726: DUP4\n727: DUP4\n728: LT\n729: ISZERO\n730: PUSH2 0x0351\n733: JUMPI"
      },
      {
        "offset": 734,
        "length": 29,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "600087815260116020526040812083518892908590879081106102fc57",
        "parsedOpcodes": "734: PUSH1 0x00\n736: DUP8\n737: DUP2\n738: MSTORE\n739: PUSH1 0x11\n741: PUSH1 0x20\n743: MSTORE\n744: PUSH1 0x40\n746: DUP2\n747: SHA3\n748: DUP4\n749: MLOAD\n750: DUP9\n751: SWAP3\n752: SWAP1\n753: DUP6\n754: SWAP1\n755: DUP8\n756: SWAP1\n757: DUP2\n758: LT\n759: PUSH2 0x02fc\n762: JUMPI"
      },
      {
        "offset": 763,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "763: INVALID"
      },
      {
        "offset": 764,
        "length": 85,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b602090810290910181015173ffffffffffffffffffffffffffffffffffffffff1682528181019290925260409081016000205481519384529183019190915280519182900301902095506001909201916102d556",
        "parsedOpcodes": "764: JUMPDEST\n765: PUSH1 0x20\n767: SWAP1\n768: DUP2\n769: MUL\n770: SWAP1\n771: SWAP2\n772: ADD\n773: DUP2\n774: ADD\n775: MLOAD\n776: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n797: AND\n798: DUP3\n799: MSTORE\n800: DUP2\n801: DUP2\n802: ADD\n803: SWAP3\n804: SWAP1\n805: SWAP3\n806: MSTORE\n807: PUSH1 0x40\n809: SWAP1\n810: DUP2\n811: ADD\n812: PUSH1 0x00\n814: SHA3\n815: SLOAD\n816: DUP2\n817: MLOAD\n818: SWAP4\n819: DUP5\n820: MSTORE\n821: SWAP2\n822: DUP4\n823: ADD\n824: SWAP2\n825: SWAP1\n826: SWAP2\n827: MSTORE\n828: DUP1\n829: MLOAD\n830: SWAP2\n831: DUP3\n832: SWAP1\n833: SUB\n834: ADD\n835: SWAP1\n836: SHA3\n837: SWAP6\n838: POP\n839: PUSH1 0x01\n841: SWAP1\n842: SWAP3\n843: ADD\n844: SWAP2\n845: PUSH2 0x02d5\n848: JUMP"
      },
      {
        "offset": 849,
        "length": 84,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b50505060009384525050600560209081526040928390206001015483519283527fffffffffffffffff000000000000000000000000000000000000000000000000169082015281519081900390910190209056",
        "parsedOpcodes": "849: JUMPDEST\n850: POP\n851: POP\n852: POP\n853: PUSH1 0x00\n855: SWAP4\n856: DUP5\n857: MSTORE\n858: POP\n859: POP\n860: PUSH1 0x05\n862: PUSH1 0x20\n864: SWAP1\n865: DUP2\n866: MSTORE\n867: PUSH1 0x40\n869: SWAP3\n870: DUP4\n871: SWAP1\n872: SHA3\n873: PUSH1 0x01\n875: ADD\n876: SLOAD\n877: DUP4\n878: MLOAD\n879: SWAP3\n880: DUP4\n881: MSTORE\n882: PUSH32 0xffffffffffffffff000000000000000000000000000000000000000000000000\n915: AND\n916: SWAP1\n917: DUP3\n918: ADD\n919: MSTORE\n920: DUP2\n921: MLOAD\n922: SWAP1\n923: DUP2\n924: SWAP1\n925: SUB\n926: SWAP1\n927: SWAP2\n928: ADD\n929: SWAP1\n930: SHA3\n931: SWAP1\n932: JUMP"
      },
      {
        "offset": 933,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "933: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          64
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          69
        ]
      },
      {
        "from": 64,
        "to": [
          933
        ]
      },
      {
        "from": 69,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          933
        ]
      },
      {
        "from": 81,
        "to": [
          111,
          111
        ]
      },
      {
        "from": 93,
        "to": [
          933
        ]
      },
      {
        "from": 111,
        "to": [
          167,
          226
        ]
      },
      {
        "from": 167,
        "to": [
          183
        ]
      },
      {
        "from": 183,
        "to": [
          226,
          183
        ]
      },
      {
        "from": 226,
        "to": [
          247,
          516
        ]
      },
      {
        "from": 247,
        "to": [
          268
        ]
      },
      {
        "from": 268,
        "to": [
          277,
          292
        ]
      },
      {
        "from": 277,
        "to": [
          268,
          268,
          268
        ]
      },
      {
        "from": 292,
        "to": [
          317
        ]
      },
      {
        "from": 317,
        "to": [
          326,
          516
        ]
      },
      {
        "from": 326,
        "to": [
          355,
          356
        ]
      },
      {
        "from": 355,
        "to": [
          933
        ]
      },
      {
        "from": 356,
        "to": [
          452,
          488
        ]
      },
      {
        "from": 452,
        "to": [
          468
        ]
      },
      {
        "from": 468,
        "to": [
          488,
          468
        ]
      },
      {
        "from": 488,
        "to": [
          317,
          317,
          317,
          317
        ]
      },
      {
        "from": 516,
        "to": [
          530,
          849
        ]
      },
      {
        "from": 530,
        "to": [
          577,
          636
        ]
      },
      {
        "from": 577,
        "to": [
          593
        ]
      },
      {
        "from": 593,
        "to": [
          636,
          593
        ]
      },
      {
        "from": 636,
        "to": [
          675
        ]
      },
      {
        "from": 675,
        "to": [
          684,
          699
        ]
      },
      {
        "from": 684,
        "to": [
          675,
          675,
          675,
          675,
          675,
          675,
          675
        ]
      },
      {
        "from": 699,
        "to": [
          725
        ]
      },
      {
        "from": 725,
        "to": [
          734,
          849
        ]
      },
      {
        "from": 734,
        "to": [
          763,
          764
        ]
      },
      {
        "from": 763,
        "to": [
          933
        ]
      },
      {
        "from": 764,
        "to": [
          725,
          725,
          725
        ]
      },
      {
        "from": 849,
        "to": [
          93,
          93,
          93,
          93,
          93
        ]
      },
      {
        "from": 933,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 66
    }
  }
}