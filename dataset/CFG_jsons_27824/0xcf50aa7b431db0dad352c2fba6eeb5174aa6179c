{
  "name": "Analysis_2022-04-04_23-35-28",
  "address": "",
  "binarySource": "60606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637faef76681146100505780639536428314610161575b600080fd5b341561005b57600080fd5b61015f60046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437509496506101c195505050505050565b005b341561016c57600080fd5b61018167ffffffffffffffff600435166103b3565b60405167ffffffffffffffff948516815292909316602083015265ffffffffffff1660408083019190915260ff9092166060820152608001905180910390f35b6101c96104a2565b60015460009073ffffffffffffffffffffffffffffffffffffffff90811690331681146101f557600080fd5b600091505b86518261ffff1610156103aa57868261ffff168151811061021757fe5b9060200190602002015167ffffffffffffffff1683528561ffff83168151811061023d57fe5b9060200190602002015167ffffffffffffffff1660208401528461ffff83168151811061026657fe5b9060200190602002015165ffffffffffff1660408401528361ffff83168151811061028d57fe5b9060200190602002015160ff16606084015260008054600181016102b183826104c9565b600092835260209092208591018151815467ffffffffffffffff191667ffffffffffffffff919091161781556020820151815467ffffffffffffffff9190911668010000000000000000026fffffffffffffffff0000000000000000199091161781556040820151815465ffffffffffff919091167001000000000000000000000000000000000275ffffffffffff00000000000000000000000000000000199091161781556060820151815460ff919091167601000000000000000000000000000000000000000000000276ff00000000000000000000000000000000000000000000199091161790555050600191909101906101fa565b50505050505050565b60008060008060008567ffffffffffffffff168154811015156103d257fe5b6000918252602082200154815467ffffffffffffffff918216929188169081106103f857fe5b6000918252602082200154815467ffffffffffffffff6801000000000000000090920482169291891690811061042a57fe5b6000918252602082200154815470010000000000000000000000000000000090910465ffffffffffff16919067ffffffffffffffff8a1690811061046a57fe5b6000918252602090912001549298919750955076010000000000000000000000000000000000000000000090910460ff169350915050565b60806040519081016040908152600080835260208301819052908201819052606082015290565b8154818355818115116104ed576000838152602090206104ed9181019083016104f2565b505050565b61052a91905b8082111561052657805476ffffffffffffffffffffffffffffffffffffffffffffff191681556001016104f8565b5090565b905600a165627a7a723058203c5c75e718e5c729b5a24093a5c5ffc9569fa387abd1dd8a5e69303c956bda920029",
  "binaryHash": "70785aa5",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a723058203c5c75e718e5c729b5a24093a5c5ffc9569fa387abd1dd8a5e69303c956bda920029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649082928861
    }
  },
  "runtimeCfg": {
    "bytecode": "60606040526004361061004b5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637faef76681146100505780639536428314610161575b600080fd5b341561005b57600080fd5b61015f60046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437509496506101c195505050505050565b005b341561016c57600080fd5b61018167ffffffffffffffff600435166103b3565b60405167ffffffffffffffff948516815292909316602083015265ffffffffffff1660408083019190915260ff9092166060820152608001905180910390f35b6101c96104a2565b60015460009073ffffffffffffffffffffffffffffffffffffffff90811690331681146101f557600080fd5b600091505b86518261ffff1610156103aa57868261ffff168151811061021757fe5b9060200190602002015167ffffffffffffffff1683528561ffff83168151811061023d57fe5b9060200190602002015167ffffffffffffffff1660208401528461ffff83168151811061026657fe5b9060200190602002015165ffffffffffff1660408401528361ffff83168151811061028d57fe5b9060200190602002015160ff16606084015260008054600181016102b183826104c9565b600092835260209092208591018151815467ffffffffffffffff191667ffffffffffffffff919091161781556020820151815467ffffffffffffffff9190911668010000000000000000026fffffffffffffffff0000000000000000199091161781556040820151815465ffffffffffff919091167001000000000000000000000000000000000275ffffffffffff00000000000000000000000000000000199091161781556060820151815460ff919091167601000000000000000000000000000000000000000000000276ff00000000000000000000000000000000000000000000199091161790555050600191909101906101fa565b50505050505050565b60008060008060008567ffffffffffffffff168154811015156103d257fe5b6000918252602082200154815467ffffffffffffffff918216929188169081106103f857fe5b6000918252602082200154815467ffffffffffffffff6801000000000000000090920482169291891690811061042a57fe5b6000918252602082200154815470010000000000000000000000000000000090910465ffffffffffff16919067ffffffffffffffff8a1690811061046a57fe5b6000918252602090912001549298919750955076010000000000000000000000000000000000000000000090910460ff169350915050565b60806040519081016040908152600080835260208301819052908201819052606082015290565b8154818355818115116104ed576000838152602090206104ed9181019083016104f2565b505050565b61052a91905b8082111561052657805476ffffffffffffffffffffffffffffffffffffffffffffff191681556001016104f8565b5090565b905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60606040526004361061004b57",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004b\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416637faef766811461005057",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x7faef766\n58: DUP2\n59: EQ\n60: PUSH2 0x0050\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063953642831461016157",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0x95364283\n70: EQ\n71: PUSH2 0x0161\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "75: JUMPDEST\n76: PUSH1 0x00\n78: DUP1\n79: REVERT"
      },
      {
        "offset": 80,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561005b57",
        "parsedOpcodes": "80: JUMPDEST\n81: CALLVALUE\n82: ISZERO\n83: PUSH2 0x005b\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "87: PUSH1 0x00\n89: DUP1\n90: REVERT"
      },
      {
        "offset": 91,
        "length": 260,
        "type": "dispatcher",
        "stackBalance": 5,
        "bytecodeHex": "5b61015f60046024813581810190830135806020818102016040519081016040528093929190818152602001838360200280828437820191505050505050919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091908035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437509496506101c19550505050505056",
        "parsedOpcodes": "91: JUMPDEST\n92: PUSH2 0x015f\n95: PUSH1 0x04\n97: PUSH1 0x24\n99: DUP2\n100: CALLDATALOAD\n101: DUP2\n102: DUP2\n103: ADD\n104: SWAP1\n105: DUP4\n106: ADD\n107: CALLDATALOAD\n108: DUP1\n109: PUSH1 0x20\n111: DUP2\n112: DUP2\n113: MUL\n114: ADD\n115: PUSH1 0x40\n117: MLOAD\n118: SWAP1\n119: DUP2\n120: ADD\n121: PUSH1 0x40\n123: MSTORE\n124: DUP1\n125: SWAP4\n126: SWAP3\n127: SWAP2\n128: SWAP1\n129: DUP2\n130: DUP2\n131: MSTORE\n132: PUSH1 0x20\n134: ADD\n135: DUP4\n136: DUP4\n137: PUSH1 0x20\n139: MUL\n140: DUP1\n141: DUP3\n142: DUP5\n143: CALLDATACOPY\n144: DUP3\n145: ADD\n146: SWAP2\n147: POP\n148: POP\n149: POP\n150: POP\n151: POP\n152: POP\n153: SWAP2\n154: SWAP1\n155: DUP1\n156: CALLDATALOAD\n157: SWAP1\n158: PUSH1 0x20\n160: ADD\n161: SWAP1\n162: DUP3\n163: ADD\n164: DUP1\n165: CALLDATALOAD\n166: SWAP1\n167: PUSH1 0x20\n169: ADD\n170: SWAP1\n171: DUP1\n172: DUP1\n173: PUSH1 0x20\n175: MUL\n176: PUSH1 0x20\n178: ADD\n179: PUSH1 0x40\n181: MLOAD\n182: SWAP1\n183: DUP2\n184: ADD\n185: PUSH1 0x40\n187: MSTORE\n188: DUP1\n189: SWAP4\n190: SWAP3\n191: SWAP2\n192: SWAP1\n193: DUP2\n194: DUP2\n195: MSTORE\n196: PUSH1 0x20\n198: ADD\n199: DUP4\n200: DUP4\n201: PUSH1 0x20\n203: MUL\n204: DUP1\n205: DUP3\n206: DUP5\n207: CALLDATACOPY\n208: DUP3\n209: ADD\n210: SWAP2\n211: POP\n212: POP\n213: POP\n214: POP\n215: POP\n216: POP\n217: SWAP2\n218: SWAP1\n219: DUP1\n220: CALLDATALOAD\n221: SWAP1\n222: PUSH1 0x20\n224: ADD\n225: SWAP1\n226: DUP3\n227: ADD\n228: DUP1\n229: CALLDATALOAD\n230: SWAP1\n231: PUSH1 0x20\n233: ADD\n234: SWAP1\n235: DUP1\n236: DUP1\n237: PUSH1 0x20\n239: MUL\n240: PUSH1 0x20\n242: ADD\n243: PUSH1 0x40\n245: MLOAD\n246: SWAP1\n247: DUP2\n248: ADD\n249: PUSH1 0x40\n251: MSTORE\n252: DUP1\n253: SWAP4\n254: SWAP3\n255: SWAP2\n256: SWAP1\n257: DUP2\n258: DUP2\n259: MSTORE\n260: PUSH1 0x20\n262: ADD\n263: DUP4\n264: DUP4\n265: PUSH1 0x20\n267: MUL\n268: DUP1\n269: DUP3\n270: DUP5\n271: CALLDATACOPY\n272: DUP3\n273: ADD\n274: SWAP2\n275: POP\n276: POP\n277: POP\n278: POP\n279: POP\n280: POP\n281: SWAP2\n282: SWAP1\n283: DUP1\n284: CALLDATALOAD\n285: SWAP1\n286: PUSH1 0x20\n288: ADD\n289: SWAP1\n290: DUP3\n291: ADD\n292: DUP1\n293: CALLDATALOAD\n294: SWAP1\n295: PUSH1 0x20\n297: ADD\n298: SWAP1\n299: DUP1\n300: DUP1\n301: PUSH1 0x20\n303: MUL\n304: PUSH1 0x20\n306: ADD\n307: PUSH1 0x40\n309: MLOAD\n310: SWAP1\n311: DUP2\n312: ADD\n313: PUSH1 0x40\n315: MSTORE\n316: DUP1\n317: SWAP4\n318: SWAP3\n319: SWAP2\n320: SWAP1\n321: DUP2\n322: DUP2\n323: MSTORE\n324: PUSH1 0x20\n326: ADD\n327: DUP4\n328: DUP4\n329: PUSH1 0x20\n331: MUL\n332: DUP1\n333: DUP3\n334: DUP5\n335: CALLDATACOPY\n336: POP\n337: SWAP5\n338: SWAP7\n339: POP\n340: PUSH2 0x01c1\n343: SWAP6\n344: POP\n345: POP\n346: POP\n347: POP\n348: POP\n349: POP\n350: JUMP"
      },
      {
        "offset": 351,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "351: JUMPDEST\n352: STOP"
      },
      {
        "offset": 353,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561016c57",
        "parsedOpcodes": "353: JUMPDEST\n354: CALLVALUE\n355: ISZERO\n356: PUSH2 0x016c\n359: JUMPI"
      },
      {
        "offset": 360,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "360: PUSH1 0x00\n362: DUP1\n363: REVERT"
      },
      {
        "offset": 364,
        "length": 21,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61018167ffffffffffffffff600435166103b356",
        "parsedOpcodes": "364: JUMPDEST\n365: PUSH2 0x0181\n368: PUSH8 0xffffffffffffffff\n377: PUSH1 0x04\n379: CALLDATALOAD\n380: AND\n381: PUSH2 0x03b3\n384: JUMP"
      },
      {
        "offset": 385,
        "length": 64,
        "type": "dispatcher",
        "stackBalance": -4,
        "bytecodeHex": "5b60405167ffffffffffffffff948516815292909316602083015265ffffffffffff1660408083019190915260ff9092166060820152608001905180910390f3",
        "parsedOpcodes": "385: JUMPDEST\n386: PUSH1 0x40\n388: MLOAD\n389: PUSH8 0xffffffffffffffff\n398: SWAP5\n399: DUP6\n400: AND\n401: DUP2\n402: MSTORE\n403: SWAP3\n404: SWAP1\n405: SWAP4\n406: AND\n407: PUSH1 0x20\n409: DUP4\n410: ADD\n411: MSTORE\n412: PUSH6 0xffffffffffff\n419: AND\n420: PUSH1 0x40\n422: DUP1\n423: DUP4\n424: ADD\n425: SWAP2\n426: SWAP1\n427: SWAP2\n428: MSTORE\n429: PUSH1 0xff\n431: SWAP1\n432: SWAP3\n433: AND\n434: PUSH1 0x60\n436: DUP3\n437: ADD\n438: MSTORE\n439: PUSH1 0x80\n441: ADD\n442: SWAP1\n443: MLOAD\n444: DUP1\n445: SWAP2\n446: SUB\n447: SWAP1\n448: RETURN"
      },
      {
        "offset": 449,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6101c96104a256",
        "parsedOpcodes": "449: JUMPDEST\n450: PUSH2 0x01c9\n453: PUSH2 0x04a2\n456: JUMP"
      },
      {
        "offset": 457,
        "length": 40,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60015460009073ffffffffffffffffffffffffffffffffffffffff90811690331681146101f557",
        "parsedOpcodes": "457: JUMPDEST\n458: PUSH1 0x01\n460: SLOAD\n461: PUSH1 0x00\n463: SWAP1\n464: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n485: SWAP1\n486: DUP2\n487: AND\n488: SWAP1\n489: CALLER\n490: AND\n491: DUP2\n492: EQ\n493: PUSH2 0x01f5\n496: JUMPI"
      },
      {
        "offset": 497,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "497: PUSH1 0x00\n499: DUP1\n500: REVERT"
      },
      {
        "offset": 501,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60009150",
        "parsedOpcodes": "501: JUMPDEST\n502: PUSH1 0x00\n504: SWAP2\n505: POP"
      },
      {
        "offset": 506,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b86518261ffff1610156103aa57",
        "parsedOpcodes": "506: JUMPDEST\n507: DUP7\n508: MLOAD\n509: DUP3\n510: PUSH2 0xffff\n513: AND\n514: LT\n515: ISZERO\n516: PUSH2 0x03aa\n519: JUMPI"
      },
      {
        "offset": 520,
        "length": 14,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "868261ffff168151811061021757",
        "parsedOpcodes": "520: DUP7\n521: DUP3\n522: PUSH2 0xffff\n525: AND\n526: DUP2\n527: MLOAD\n528: DUP2\n529: LT\n530: PUSH2 0x0217\n533: JUMPI"
      },
      {
        "offset": 534,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "534: INVALID"
      },
      {
        "offset": 535,
        "length": 37,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9060200190602002015167ffffffffffffffff1683528561ffff83168151811061023d57",
        "parsedOpcodes": "535: JUMPDEST\n536: SWAP1\n537: PUSH1 0x20\n539: ADD\n540: SWAP1\n541: PUSH1 0x20\n543: MUL\n544: ADD\n545: MLOAD\n546: PUSH8 0xffffffffffffffff\n555: AND\n556: DUP4\n557: MSTORE\n558: DUP6\n559: PUSH2 0xffff\n562: DUP4\n563: AND\n564: DUP2\n565: MLOAD\n566: DUP2\n567: LT\n568: PUSH2 0x023d\n571: JUMPI"
      },
      {
        "offset": 572,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "572: INVALID"
      },
      {
        "offset": 573,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9060200190602002015167ffffffffffffffff1660208401528461ffff83168151811061026657",
        "parsedOpcodes": "573: JUMPDEST\n574: SWAP1\n575: PUSH1 0x20\n577: ADD\n578: SWAP1\n579: PUSH1 0x20\n581: MUL\n582: ADD\n583: MLOAD\n584: PUSH8 0xffffffffffffffff\n593: AND\n594: PUSH1 0x20\n596: DUP5\n597: ADD\n598: MSTORE\n599: DUP5\n600: PUSH2 0xffff\n603: DUP4\n604: AND\n605: DUP2\n606: MLOAD\n607: DUP2\n608: LT\n609: PUSH2 0x0266\n612: JUMPI"
      },
      {
        "offset": 613,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "613: INVALID"
      },
      {
        "offset": 614,
        "length": 38,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9060200190602002015165ffffffffffff1660408401528361ffff83168151811061028d57",
        "parsedOpcodes": "614: JUMPDEST\n615: SWAP1\n616: PUSH1 0x20\n618: ADD\n619: SWAP1\n620: PUSH1 0x20\n622: MUL\n623: ADD\n624: MLOAD\n625: PUSH6 0xffffffffffff\n632: AND\n633: PUSH1 0x40\n635: DUP5\n636: ADD\n637: MSTORE\n638: DUP4\n639: PUSH2 0xffff\n642: DUP4\n643: AND\n644: DUP2\n645: MLOAD\n646: DUP2\n647: LT\n648: PUSH2 0x028d\n651: JUMPI"
      },
      {
        "offset": 652,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "652: INVALID"
      },
      {
        "offset": 653,
        "length": 36,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b9060200190602002015160ff16606084015260008054600181016102b183826104c956",
        "parsedOpcodes": "653: JUMPDEST\n654: SWAP1\n655: PUSH1 0x20\n657: ADD\n658: SWAP1\n659: PUSH1 0x20\n661: MUL\n662: ADD\n663: MLOAD\n664: PUSH1 0xff\n666: AND\n667: PUSH1 0x60\n669: DUP5\n670: ADD\n671: MSTORE\n672: PUSH1 0x00\n674: DUP1\n675: SLOAD\n676: PUSH1 0x01\n678: DUP2\n679: ADD\n680: PUSH2 0x02b1\n683: DUP4\n684: DUP3\n685: PUSH2 0x04c9\n688: JUMP"
      },
      {
        "offset": 689,
        "length": 249,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b600092835260209092208591018151815467ffffffffffffffff191667ffffffffffffffff919091161781556020820151815467ffffffffffffffff9190911668010000000000000000026fffffffffffffffff0000000000000000199091161781556040820151815465ffffffffffff919091167001000000000000000000000000000000000275ffffffffffff00000000000000000000000000000000199091161781556060820151815460ff919091167601000000000000000000000000000000000000000000000276ff00000000000000000000000000000000000000000000199091161790555050600191909101906101fa56",
        "parsedOpcodes": "689: JUMPDEST\n690: PUSH1 0x00\n692: SWAP3\n693: DUP4\n694: MSTORE\n695: PUSH1 0x20\n697: SWAP1\n698: SWAP3\n699: SHA3\n700: DUP6\n701: SWAP2\n702: ADD\n703: DUP2\n704: MLOAD\n705: DUP2\n706: SLOAD\n707: PUSH8 0xffffffffffffffff\n716: NOT\n717: AND\n718: PUSH8 0xffffffffffffffff\n727: SWAP2\n728: SWAP1\n729: SWAP2\n730: AND\n731: OR\n732: DUP2\n733: SSTORE\n734: PUSH1 0x20\n736: DUP3\n737: ADD\n738: MLOAD\n739: DUP2\n740: SLOAD\n741: PUSH8 0xffffffffffffffff\n750: SWAP2\n751: SWAP1\n752: SWAP2\n753: AND\n754: PUSH9 0x010000000000000000\n764: MUL\n765: PUSH16 0xffffffffffffffff0000000000000000\n782: NOT\n783: SWAP1\n784: SWAP2\n785: AND\n786: OR\n787: DUP2\n788: SSTORE\n789: PUSH1 0x40\n791: DUP3\n792: ADD\n793: MLOAD\n794: DUP2\n795: SLOAD\n796: PUSH6 0xffffffffffff\n803: SWAP2\n804: SWAP1\n805: SWAP2\n806: AND\n807: PUSH17 0x0100000000000000000000000000000000\n825: MUL\n826: PUSH22 0xffffffffffff00000000000000000000000000000000\n849: NOT\n850: SWAP1\n851: SWAP2\n852: AND\n853: OR\n854: DUP2\n855: SSTORE\n856: PUSH1 0x60\n858: DUP3\n859: ADD\n860: MLOAD\n861: DUP2\n862: SLOAD\n863: PUSH1 0xff\n865: SWAP2\n866: SWAP1\n867: SWAP2\n868: AND\n869: PUSH23 0x0100000000000000000000000000000000000000000000\n893: MUL\n894: PUSH23 0xff00000000000000000000000000000000000000000000\n918: NOT\n919: SWAP1\n920: SWAP2\n921: AND\n922: OR\n923: SWAP1\n924: SSTORE\n925: POP\n926: POP\n927: PUSH1 0x01\n929: SWAP2\n930: SWAP1\n931: SWAP2\n932: ADD\n933: SWAP1\n934: PUSH2 0x01fa\n937: JUMP"
      },
      {
        "offset": 938,
        "length": 9,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b5050505050505056",
        "parsedOpcodes": "938: JUMPDEST\n939: POP\n940: POP\n941: POP\n942: POP\n943: POP\n944: POP\n945: POP\n946: JUMP"
      },
      {
        "offset": 947,
        "length": 30,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b60008060008060008567ffffffffffffffff168154811015156103d257",
        "parsedOpcodes": "947: JUMPDEST\n948: PUSH1 0x00\n950: DUP1\n951: PUSH1 0x00\n953: DUP1\n954: PUSH1 0x00\n956: DUP6\n957: PUSH8 0xffffffffffffffff\n966: AND\n967: DUP2\n968: SLOAD\n969: DUP2\n970: LT\n971: ISZERO\n972: ISZERO\n973: PUSH2 0x03d2\n976: JUMPI"
      },
      {
        "offset": 977,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "977: INVALID"
      },
      {
        "offset": 978,
        "length": 37,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000918252602082200154815467ffffffffffffffff918216929188169081106103f857",
        "parsedOpcodes": "978: JUMPDEST\n979: PUSH1 0x00\n981: SWAP2\n982: DUP3\n983: MSTORE\n984: PUSH1 0x20\n986: DUP3\n987: SHA3\n988: ADD\n989: SLOAD\n990: DUP2\n991: SLOAD\n992: PUSH8 0xffffffffffffffff\n1001: SWAP2\n1002: DUP3\n1003: AND\n1004: SWAP3\n1005: SWAP2\n1006: DUP9\n1007: AND\n1008: SWAP1\n1009: DUP2\n1010: LT\n1011: PUSH2 0x03f8\n1014: JUMPI"
      },
      {
        "offset": 1015,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1015: INVALID"
      },
      {
        "offset": 1016,
        "length": 49,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000918252602082200154815467ffffffffffffffff6801000000000000000090920482169291891690811061042a57",
        "parsedOpcodes": "1016: JUMPDEST\n1017: PUSH1 0x00\n1019: SWAP2\n1020: DUP3\n1021: MSTORE\n1022: PUSH1 0x20\n1024: DUP3\n1025: SHA3\n1026: ADD\n1027: SLOAD\n1028: DUP2\n1029: SLOAD\n1030: PUSH8 0xffffffffffffffff\n1039: PUSH9 0x010000000000000000\n1049: SWAP1\n1050: SWAP3\n1051: DIV\n1052: DUP3\n1053: AND\n1054: SWAP3\n1055: SWAP2\n1056: DUP10\n1057: AND\n1058: SWAP1\n1059: DUP2\n1060: LT\n1061: PUSH2 0x042a\n1064: JUMPI"
      },
      {
        "offset": 1065,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1065: INVALID"
      },
      {
        "offset": 1066,
        "length": 63,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000918252602082200154815470010000000000000000000000000000000090910465ffffffffffff16919067ffffffffffffffff8a1690811061046a57",
        "parsedOpcodes": "1066: JUMPDEST\n1067: PUSH1 0x00\n1069: SWAP2\n1070: DUP3\n1071: MSTORE\n1072: PUSH1 0x20\n1074: DUP3\n1075: SHA3\n1076: ADD\n1077: SLOAD\n1078: DUP2\n1079: SLOAD\n1080: PUSH17 0x0100000000000000000000000000000000\n1098: SWAP1\n1099: SWAP2\n1100: DIV\n1101: PUSH6 0xffffffffffff\n1108: AND\n1109: SWAP2\n1110: SWAP1\n1111: PUSH8 0xffffffffffffffff\n1120: DUP11\n1121: AND\n1122: SWAP1\n1123: DUP2\n1124: LT\n1125: PUSH2 0x046a\n1128: JUMPI"
      },
      {
        "offset": 1129,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1129: INVALID"
      },
      {
        "offset": 1130,
        "length": 56,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b6000918252602090912001549298919750955076010000000000000000000000000000000000000000000090910460ff16935091505056",
        "parsedOpcodes": "1130: JUMPDEST\n1131: PUSH1 0x00\n1133: SWAP2\n1134: DUP3\n1135: MSTORE\n1136: PUSH1 0x20\n1138: SWAP1\n1139: SWAP2\n1140: SHA3\n1141: ADD\n1142: SLOAD\n1143: SWAP3\n1144: SWAP9\n1145: SWAP2\n1146: SWAP8\n1147: POP\n1148: SWAP6\n1149: POP\n1150: PUSH23 0x0100000000000000000000000000000000000000000000\n1174: SWAP1\n1175: SWAP2\n1176: DIV\n1177: PUSH1 0xff\n1179: AND\n1180: SWAP4\n1181: POP\n1182: SWAP2\n1183: POP\n1184: POP\n1185: JUMP"
      },
      {
        "offset": 1186,
        "length": 39,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6080604051908101604090815260008083526020830181905290820181905260608201529056",
        "parsedOpcodes": "1186: JUMPDEST\n1187: PUSH1 0x80\n1189: PUSH1 0x40\n1191: MLOAD\n1192: SWAP1\n1193: DUP2\n1194: ADD\n1195: PUSH1 0x40\n1197: SWAP1\n1198: DUP2\n1199: MSTORE\n1200: PUSH1 0x00\n1202: DUP1\n1203: DUP4\n1204: MSTORE\n1205: PUSH1 0x20\n1207: DUP4\n1208: ADD\n1209: DUP2\n1210: SWAP1\n1211: MSTORE\n1212: SWAP1\n1213: DUP3\n1214: ADD\n1215: DUP2\n1216: SWAP1\n1217: MSTORE\n1218: PUSH1 0x60\n1220: DUP3\n1221: ADD\n1222: MSTORE\n1223: SWAP1\n1224: JUMP"
      },
      {
        "offset": 1225,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b8154818355818115116104ed57",
        "parsedOpcodes": "1225: JUMPDEST\n1226: DUP2\n1227: SLOAD\n1228: DUP2\n1229: DUP4\n1230: SSTORE\n1231: DUP2\n1232: DUP2\n1233: ISZERO\n1234: GT\n1235: PUSH2 0x04ed\n1238: JUMPI"
      },
      {
        "offset": 1239,
        "length": 22,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "6000838152602090206104ed9181019083016104f256",
        "parsedOpcodes": "1239: PUSH1 0x00\n1241: DUP4\n1242: DUP2\n1243: MSTORE\n1244: PUSH1 0x20\n1246: SWAP1\n1247: SHA3\n1248: PUSH2 0x04ed\n1251: SWAP2\n1252: DUP2\n1253: ADD\n1254: SWAP1\n1255: DUP4\n1256: ADD\n1257: PUSH2 0x04f2\n1260: JUMP"
      },
      {
        "offset": 1261,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "1261: JUMPDEST\n1262: POP\n1263: POP\n1264: POP\n1265: JUMP"
      },
      {
        "offset": 1266,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61052a9190",
        "parsedOpcodes": "1266: JUMPDEST\n1267: PUSH2 0x052a\n1270: SWAP2\n1271: SWAP1"
      },
      {
        "offset": 1272,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8082111561052657",
        "parsedOpcodes": "1272: JUMPDEST\n1273: DUP1\n1274: DUP3\n1275: GT\n1276: ISZERO\n1277: PUSH2 0x0526\n1280: JUMPI"
      },
      {
        "offset": 1281,
        "length": 37,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805476ffffffffffffffffffffffffffffffffffffffffffffff191681556001016104f856",
        "parsedOpcodes": "1281: DUP1\n1282: SLOAD\n1283: PUSH23 0xffffffffffffffffffffffffffffffffffffffffffffff\n1307: NOT\n1308: AND\n1309: DUP2\n1310: SSTORE\n1311: PUSH1 0x01\n1313: ADD\n1314: PUSH2 0x04f8\n1317: JUMP"
      },
      {
        "offset": 1318,
        "length": 4,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b509056",
        "parsedOpcodes": "1318: JUMPDEST\n1319: POP\n1320: SWAP1\n1321: JUMP"
      },
      {
        "offset": 1322,
        "length": 3,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b9056",
        "parsedOpcodes": "1322: JUMPDEST\n1323: SWAP1\n1324: JUMP"
      },
      {
        "offset": 1325,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1325: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          75
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          80
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          353
        ]
      },
      {
        "from": 75,
        "to": [
          1325
        ]
      },
      {
        "from": 80,
        "to": [
          87,
          91
        ]
      },
      {
        "from": 87,
        "to": [
          1325
        ]
      },
      {
        "from": 91,
        "to": [
          449
        ]
      },
      {
        "from": 351,
        "to": [
          1325
        ]
      },
      {
        "from": 353,
        "to": [
          360,
          364
        ]
      },
      {
        "from": 360,
        "to": [
          1325
        ]
      },
      {
        "from": 364,
        "to": [
          947,
          947
        ]
      },
      {
        "from": 385,
        "to": [
          1325
        ]
      },
      {
        "from": 449,
        "to": [
          1186,
          1186
        ]
      },
      {
        "from": 457,
        "to": [
          497,
          501
        ]
      },
      {
        "from": 497,
        "to": [
          1325
        ]
      },
      {
        "from": 501,
        "to": [
          506
        ]
      },
      {
        "from": 506,
        "to": [
          520,
          938
        ]
      },
      {
        "from": 520,
        "to": [
          534,
          535
        ]
      },
      {
        "from": 534,
        "to": [
          1325
        ]
      },
      {
        "from": 535,
        "to": [
          572,
          573
        ]
      },
      {
        "from": 572,
        "to": [
          1325
        ]
      },
      {
        "from": 573,
        "to": [
          613,
          614
        ]
      },
      {
        "from": 613,
        "to": [
          1325
        ]
      },
      {
        "from": 614,
        "to": [
          652,
          653
        ]
      },
      {
        "from": 652,
        "to": [
          1325
        ]
      },
      {
        "from": 653,
        "to": [
          1225,
          1225,
          1225
        ]
      },
      {
        "from": 689,
        "to": [
          506,
          506,
          506
        ]
      },
      {
        "from": 938,
        "to": [
          351,
          351
        ]
      },
      {
        "from": 947,
        "to": [
          977,
          978
        ]
      },
      {
        "from": 977,
        "to": [
          1325
        ]
      },
      {
        "from": 978,
        "to": [
          1015,
          1016
        ]
      },
      {
        "from": 1015,
        "to": [
          1325
        ]
      },
      {
        "from": 1016,
        "to": [
          1065,
          1066
        ]
      },
      {
        "from": 1065,
        "to": [
          1325
        ]
      },
      {
        "from": 1066,
        "to": [
          1129,
          1130
        ]
      },
      {
        "from": 1129,
        "to": [
          1325
        ]
      },
      {
        "from": 1130,
        "to": [
          385
        ]
      },
      {
        "from": 1186,
        "to": [
          457
        ]
      },
      {
        "from": 1225,
        "to": [
          1239,
          1261
        ]
      },
      {
        "from": 1239,
        "to": [
          1266,
          1266,
          1266
        ]
      },
      {
        "from": 1261,
        "to": [
          689,
          689,
          689,
          689
        ]
      },
      {
        "from": 1266,
        "to": [
          1272
        ]
      },
      {
        "from": 1272,
        "to": [
          1281,
          1318
        ]
      },
      {
        "from": 1281,
        "to": [
          1272,
          1272,
          1272
        ]
      },
      {
        "from": 1318,
        "to": [
          1322,
          1322
        ]
      },
      {
        "from": 1322,
        "to": [
          1261,
          1261
        ]
      },
      {
        "from": 1325,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 52
    }
  }
}