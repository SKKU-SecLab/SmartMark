{
  "name": "Analysis_2022-07-06_21-25-58",
  "address": "",
  "binarySource": "6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166311dd8845811461005b578063c090b4df14610157578063ce606ee0146101f0575b600080fd5b34801561006757600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100b49436949293602493928401919081908401838280828437509497506102219650505050505050565b604051808515151515815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610119578181015183820152602001610101565b50505050905090810190601f1680156101465780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561016357600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101ee94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506103779650505050505050565b005b3480156101fc57600080fd5b50610205610557565b60408051600160a060020a039092168252519081900360200190f35b60008060006060610230610566565b6001866040518082805190602001908083835b602083106102625780518252601f199092019160209182019101610243565b518151600019602094850361010090810a82019283169219939093169190911790925294909201968752604080519788900382018820608089018252805460ff811615158a52600160a060020a039087900416898401526001818101548a840152600280830180548551601f94821615909a0290970190961604908101849004840287018401909252818652965060608801955091925083018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050919092525050815160208301516040840151606090940151919a9099509297509550909350505050565b61037f610566565b826001816040518082805190602001908083835b602083106103b25780518252601f199092019160209182019101610393565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150610451905057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4861736820616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b60806040519081016040528060011515815260200133600160a060020a03168152602001428152602001848152509150816001856040518082805190602001908083835b602083106104b45780518252601f199092019160209182019101610495565b518151600019602094850361010090810a919091019182169119929092161790915293909101958652604080519687900382019096208751815489840151600160a060020a031690950274ffffffffffffffffffffffffffffffffffffffff001991151560ff1990961695909517169390931783559486015160018301555060608501518051919461054e9450600286019350019061058c565b50505050505050565b600054600160a060020a031681565b604080516080810182526000808252602082018190529181019190915260608082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105cd57805160ff19168380011785556105fa565b828001600101855582156105fa579182015b828111156105fa5782518255916020019190600101906105df565b5061060692915061060a565b5090565b61062491905b808211156106065760008155600101610610565b905600a165627a7a72305820a2cf87fc2f144a2619bba4402a615527d34b9ec1844408c0238fdf15b0b2df480029",
  "binaryHash": "4ed8ef92",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820a2cf87fc2f144a2619bba4402a615527d34b9ec1844408c0238fdf15b0b2df480029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657110358642
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166311dd8845811461005b578063c090b4df14610157578063ce606ee0146101f0575b600080fd5b34801561006757600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100b49436949293602493928401919081908401838280828437509497506102219650505050505050565b604051808515151515815260200184600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610119578181015183820152602001610101565b50505050905090810190601f1680156101465780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561016357600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526101ee94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506103779650505050505050565b005b3480156101fc57600080fd5b50610205610557565b60408051600160a060020a039092168252519081900360200190f35b60008060006060610230610566565b6001866040518082805190602001908083835b602083106102625780518252601f199092019160209182019101610243565b518151600019602094850361010090810a82019283169219939093169190911790925294909201968752604080519788900382018820608089018252805460ff811615158a52600160a060020a039087900416898401526001818101548a840152600280830180548551601f94821615909a0290970190961604908101849004840287018401909252818652965060608801955091925083018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050919092525050815160208301516040840151606090940151919a9099509297509550909350505050565b61037f610566565b826001816040518082805190602001908083835b602083106103b25780518252601f199092019160209182019101610393565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150610451905057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4861736820616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd5b60806040519081016040528060011515815260200133600160a060020a03168152602001428152602001848152509150816001856040518082805190602001908083835b602083106104b45780518252601f199092019160209182019101610495565b518151600019602094850361010090810a919091019182169119929092161790915293909101958652604080519687900382019096208751815489840151600160a060020a031690950274ffffffffffffffffffffffffffffffffffffffff001991151560ff1990961695909517169390931783559486015160018301555060608501518051919461054e9450600286019350019061058c565b50505050505050565b600054600160a060020a031681565b604080516080810182526000808252602082018190529181019190915260608082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105cd57805160ff19168380011785556105fa565b828001600101855582156105fa579182015b828111156105fa5782518255916020019190600101906105df565b5061060692915061060a565b5090565b61062491905b808211156106065760008155600101610610565b905600",
    "remainingData": "5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105cd57805160ff19168380011785556105fa565b828001600101855582156105fa579182015b828111156105fa5782518255916020019190600101906105df565b5061060692915061060a565b5090565b61062491905b808211156106065760008155600101610610565b905600",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061005657",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0056\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166311dd8845811461005b57",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x11dd8845\n58: DUP2\n59: EQ\n60: PUSH2 0x005b\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063c090b4df1461015757",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0xc090b4df\n70: EQ\n71: PUSH2 0x0157\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063ce606ee0146101f057",
        "parsedOpcodes": "75: DUP1\n76: PUSH4 0xce606ee0\n81: EQ\n82: PUSH2 0x01f0\n85: JUMPI"
      },
      {
        "offset": 86,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "86: JUMPDEST\n87: PUSH1 0x00\n89: DUP1\n90: REVERT"
      },
      {
        "offset": 91,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561006757",
        "parsedOpcodes": "91: JUMPDEST\n92: CALLVALUE\n93: DUP1\n94: ISZERO\n95: PUSH2 0x0067\n98: JUMPI"
      },
      {
        "offset": 99,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "99: PUSH1 0x00\n101: DUP1\n102: REVERT"
      },
      {
        "offset": 103,
        "length": 77,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526100b4943694929360249392840191908190840183828082843750949750610221965050505050505056",
        "parsedOpcodes": "103: JUMPDEST\n104: POP\n105: PUSH1 0x40\n107: DUP1\n108: MLOAD\n109: PUSH1 0x20\n111: PUSH1 0x04\n113: DUP1\n114: CALLDATALOAD\n115: DUP1\n116: DUP3\n117: ADD\n118: CALLDATALOAD\n119: PUSH1 0x1f\n121: DUP2\n122: ADD\n123: DUP5\n124: SWAP1\n125: DIV\n126: DUP5\n127: MUL\n128: DUP6\n129: ADD\n130: DUP5\n131: ADD\n132: SWAP1\n133: SWAP6\n134: MSTORE\n135: DUP5\n136: DUP5\n137: MSTORE\n138: PUSH2 0x00b4\n141: SWAP5\n142: CALLDATASIZE\n143: SWAP5\n144: SWAP3\n145: SWAP4\n146: PUSH1 0x24\n148: SWAP4\n149: SWAP3\n150: DUP5\n151: ADD\n152: SWAP2\n153: SWAP1\n154: DUP2\n155: SWAP1\n156: DUP5\n157: ADD\n158: DUP4\n159: DUP3\n160: DUP1\n161: DUP3\n162: DUP5\n163: CALLDATACOPY\n164: POP\n165: SWAP5\n166: SWAP8\n167: POP\n168: PUSH2 0x0221\n171: SWAP7\n172: POP\n173: POP\n174: POP\n175: POP\n176: POP\n177: POP\n178: POP\n179: JUMP"
      },
      {
        "offset": 180,
        "length": 77,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b604051808515151515815260200184600160a060020a0316600160a060020a031681526020018381526020018060200182810382528381815181526020019150805190602001908083836000",
        "parsedOpcodes": "180: JUMPDEST\n181: PUSH1 0x40\n183: MLOAD\n184: DUP1\n185: DUP6\n186: ISZERO\n187: ISZERO\n188: ISZERO\n189: ISZERO\n190: DUP2\n191: MSTORE\n192: PUSH1 0x20\n194: ADD\n195: DUP5\n196: PUSH1 0x01\n198: PUSH1 0xa0\n200: PUSH1 0x02\n202: EXP\n203: SUB\n204: AND\n205: PUSH1 0x01\n207: PUSH1 0xa0\n209: PUSH1 0x02\n211: EXP\n212: SUB\n213: AND\n214: DUP2\n215: MSTORE\n216: PUSH1 0x20\n218: ADD\n219: DUP4\n220: DUP2\n221: MSTORE\n222: PUSH1 0x20\n224: ADD\n225: DUP1\n226: PUSH1 0x20\n228: ADD\n229: DUP3\n230: DUP2\n231: SUB\n232: DUP3\n233: MSTORE\n234: DUP4\n235: DUP2\n236: DUP2\n237: MLOAD\n238: DUP2\n239: MSTORE\n240: PUSH1 0x20\n242: ADD\n243: SWAP2\n244: POP\n245: DUP1\n246: MLOAD\n247: SWAP1\n248: PUSH1 0x20\n250: ADD\n251: SWAP1\n252: DUP1\n253: DUP4\n254: DUP4\n255: PUSH1 0x00"
      },
      {
        "offset": 257,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561011957",
        "parsedOpcodes": "257: JUMPDEST\n258: DUP4\n259: DUP2\n260: LT\n261: ISZERO\n262: PUSH2 0x0119\n265: JUMPI"
      },
      {
        "offset": 266,
        "length": 15,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161010156",
        "parsedOpcodes": "266: DUP2\n267: DUP2\n268: ADD\n269: MLOAD\n270: DUP4\n271: DUP3\n272: ADD\n273: MSTORE\n274: PUSH1 0x20\n276: ADD\n277: PUSH2 0x0101\n280: JUMP"
      },
      {
        "offset": 281,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561014657",
        "parsedOpcodes": "281: JUMPDEST\n282: POP\n283: POP\n284: POP\n285: POP\n286: SWAP1\n287: POP\n288: SWAP1\n289: DUP2\n290: ADD\n291: SWAP1\n292: PUSH1 0x1f\n294: AND\n295: DUP1\n296: ISZERO\n297: PUSH2 0x0146\n300: JUMPI"
      },
      {
        "offset": 301,
        "length": 25,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "301: DUP1\n302: DUP3\n303: SUB\n304: DUP1\n305: MLOAD\n306: PUSH1 0x01\n308: DUP4\n309: PUSH1 0x20\n311: SUB\n312: PUSH2 0x0100\n315: EXP\n316: SUB\n317: NOT\n318: AND\n319: DUP2\n320: MSTORE\n321: PUSH1 0x20\n323: ADD\n324: SWAP2\n325: POP"
      },
      {
        "offset": 326,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": -8,
        "bytecodeHex": "5b509550505050505060405180910390f3",
        "parsedOpcodes": "326: JUMPDEST\n327: POP\n328: SWAP6\n329: POP\n330: POP\n331: POP\n332: POP\n333: POP\n334: POP\n335: PUSH1 0x40\n337: MLOAD\n338: DUP1\n339: SWAP2\n340: SUB\n341: SWAP1\n342: RETURN"
      },
      {
        "offset": 343,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561016357",
        "parsedOpcodes": "343: JUMPDEST\n344: CALLVALUE\n345: DUP1\n346: ISZERO\n347: PUSH2 0x0163\n350: JUMPI"
      },
      {
        "offset": 351,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "351: PUSH1 0x00\n353: DUP1\n354: REVERT"
      },
      {
        "offset": 355,
        "length": 139,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526101ee94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610377965050505050505056",
        "parsedOpcodes": "355: JUMPDEST\n356: POP\n357: PUSH1 0x40\n359: DUP1\n360: MLOAD\n361: PUSH1 0x20\n363: PUSH1 0x04\n365: DUP1\n366: CALLDATALOAD\n367: DUP1\n368: DUP3\n369: ADD\n370: CALLDATALOAD\n371: PUSH1 0x1f\n373: DUP2\n374: ADD\n375: DUP5\n376: SWAP1\n377: DIV\n378: DUP5\n379: MUL\n380: DUP6\n381: ADD\n382: DUP5\n383: ADD\n384: SWAP1\n385: SWAP6\n386: MSTORE\n387: DUP5\n388: DUP5\n389: MSTORE\n390: PUSH2 0x01ee\n393: SWAP5\n394: CALLDATASIZE\n395: SWAP5\n396: SWAP3\n397: SWAP4\n398: PUSH1 0x24\n400: SWAP4\n401: SWAP3\n402: DUP5\n403: ADD\n404: SWAP2\n405: SWAP1\n406: DUP2\n407: SWAP1\n408: DUP5\n409: ADD\n410: DUP4\n411: DUP3\n412: DUP1\n413: DUP3\n414: DUP5\n415: CALLDATACOPY\n416: POP\n417: POP\n418: PUSH1 0x40\n420: DUP1\n421: MLOAD\n422: PUSH1 0x20\n424: PUSH1 0x1f\n426: DUP10\n427: CALLDATALOAD\n428: DUP12\n429: ADD\n430: DUP1\n431: CALLDATALOAD\n432: SWAP2\n433: DUP3\n434: ADD\n435: DUP4\n436: SWAP1\n437: DIV\n438: DUP4\n439: MUL\n440: DUP5\n441: ADD\n442: DUP4\n443: ADD\n444: SWAP1\n445: SWAP5\n446: MSTORE\n447: DUP1\n448: DUP4\n449: MSTORE\n450: SWAP8\n451: SWAP11\n452: SWAP10\n453: SWAP9\n454: DUP2\n455: ADD\n456: SWAP8\n457: SWAP2\n458: SWAP7\n459: POP\n460: SWAP2\n461: DUP3\n462: ADD\n463: SWAP5\n464: POP\n465: SWAP3\n466: POP\n467: DUP3\n468: SWAP2\n469: POP\n470: DUP5\n471: ADD\n472: DUP4\n473: DUP3\n474: DUP1\n475: DUP3\n476: DUP5\n477: CALLDATACOPY\n478: POP\n479: SWAP5\n480: SWAP8\n481: POP\n482: PUSH2 0x0377\n485: SWAP7\n486: POP\n487: POP\n488: POP\n489: POP\n490: POP\n491: POP\n492: POP\n493: JUMP"
      },
      {
        "offset": 494,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "494: JUMPDEST\n495: STOP"
      },
      {
        "offset": 496,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101fc57",
        "parsedOpcodes": "496: JUMPDEST\n497: CALLVALUE\n498: DUP1\n499: ISZERO\n500: PUSH2 0x01fc\n503: JUMPI"
      },
      {
        "offset": 504,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "504: PUSH1 0x00\n506: DUP1\n507: REVERT"
      },
      {
        "offset": 508,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061020561055756",
        "parsedOpcodes": "508: JUMPDEST\n509: POP\n510: PUSH2 0x0205\n513: PUSH2 0x0557\n516: JUMP"
      },
      {
        "offset": 517,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051600160a060020a039092168252519081900360200190f3",
        "parsedOpcodes": "517: JUMPDEST\n518: PUSH1 0x40\n520: DUP1\n521: MLOAD\n522: PUSH1 0x01\n524: PUSH1 0xa0\n526: PUSH1 0x02\n528: EXP\n529: SUB\n530: SWAP1\n531: SWAP3\n532: AND\n533: DUP3\n534: MSTORE\n535: MLOAD\n536: SWAP1\n537: DUP2\n538: SWAP1\n539: SUB\n540: PUSH1 0x20\n542: ADD\n543: SWAP1\n544: RETURN"
      },
      {
        "offset": 545,
        "length": 15,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b6000806000606061023061056656",
        "parsedOpcodes": "545: JUMPDEST\n546: PUSH1 0x00\n548: DUP1\n549: PUSH1 0x00\n551: PUSH1 0x60\n553: PUSH2 0x0230\n556: PUSH2 0x0566\n559: JUMP"
      },
      {
        "offset": 560,
        "length": 19,
        "type": "common",
        "stackBalance": 9,
        "bytecodeHex": "5b600186604051808280519060200190808383",
        "parsedOpcodes": "560: JUMPDEST\n561: PUSH1 0x01\n563: DUP7\n564: PUSH1 0x40\n566: MLOAD\n567: DUP1\n568: DUP3\n569: DUP1\n570: MLOAD\n571: SWAP1\n572: PUSH1 0x20\n574: ADD\n575: SWAP1\n576: DUP1\n577: DUP4\n578: DUP4"
      },
      {
        "offset": 579,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061026257",
        "parsedOpcodes": "579: JUMPDEST\n580: PUSH1 0x20\n582: DUP4\n583: LT\n584: PUSH2 0x0262\n587: JUMPI"
      },
      {
        "offset": 588,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161024356",
        "parsedOpcodes": "588: DUP1\n589: MLOAD\n590: DUP3\n591: MSTORE\n592: PUSH1 0x1f\n594: NOT\n595: SWAP1\n596: SWAP3\n597: ADD\n598: SWAP2\n599: PUSH1 0x20\n601: SWAP2\n602: DUP3\n603: ADD\n604: SWAP2\n605: ADD\n606: PUSH2 0x0243\n609: JUMP"
      },
      {
        "offset": 610,
        "length": 162,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b518151600019602094850361010090810a82019283169219939093169190911790925294909201968752604080519788900382018820608089018252805460ff811615158a52600160a060020a039087900416898401526001818101548a840152600280830180548551601f94821615909a0290970190961604908101849004840287018401909252818652965060608801955091925083018282801561034a57",
        "parsedOpcodes": "610: JUMPDEST\n611: MLOAD\n612: DUP2\n613: MLOAD\n614: PUSH1 0x00\n616: NOT\n617: PUSH1 0x20\n619: SWAP5\n620: DUP6\n621: SUB\n622: PUSH2 0x0100\n625: SWAP1\n626: DUP2\n627: EXP\n628: DUP3\n629: ADD\n630: SWAP3\n631: DUP4\n632: AND\n633: SWAP3\n634: NOT\n635: SWAP4\n636: SWAP1\n637: SWAP4\n638: AND\n639: SWAP2\n640: SWAP1\n641: SWAP2\n642: OR\n643: SWAP1\n644: SWAP3\n645: MSTORE\n646: SWAP5\n647: SWAP1\n648: SWAP3\n649: ADD\n650: SWAP7\n651: DUP8\n652: MSTORE\n653: PUSH1 0x40\n655: DUP1\n656: MLOAD\n657: SWAP8\n658: DUP9\n659: SWAP1\n660: SUB\n661: DUP3\n662: ADD\n663: DUP9\n664: SHA3\n665: PUSH1 0x80\n667: DUP10\n668: ADD\n669: DUP3\n670: MSTORE\n671: DUP1\n672: SLOAD\n673: PUSH1 0xff\n675: DUP2\n676: AND\n677: ISZERO\n678: ISZERO\n679: DUP11\n680: MSTORE\n681: PUSH1 0x01\n683: PUSH1 0xa0\n685: PUSH1 0x02\n687: EXP\n688: SUB\n689: SWAP1\n690: DUP8\n691: SWAP1\n692: DIV\n693: AND\n694: DUP10\n695: DUP5\n696: ADD\n697: MSTORE\n698: PUSH1 0x01\n700: DUP2\n701: DUP2\n702: ADD\n703: SLOAD\n704: DUP11\n705: DUP5\n706: ADD\n707: MSTORE\n708: PUSH1 0x02\n710: DUP1\n711: DUP4\n712: ADD\n713: DUP1\n714: SLOAD\n715: DUP6\n716: MLOAD\n717: PUSH1 0x1f\n719: SWAP5\n720: DUP3\n721: AND\n722: ISZERO\n723: SWAP1\n724: SWAP11\n725: MUL\n726: SWAP1\n727: SWAP8\n728: ADD\n729: SWAP1\n730: SWAP7\n731: AND\n732: DIV\n733: SWAP1\n734: DUP2\n735: ADD\n736: DUP5\n737: SWAP1\n738: DIV\n739: DUP5\n740: MUL\n741: DUP8\n742: ADD\n743: DUP5\n744: ADD\n745: SWAP1\n746: SWAP3\n747: MSTORE\n748: DUP2\n749: DUP7\n750: MSTORE\n751: SWAP7\n752: POP\n753: PUSH1 0x60\n755: DUP9\n756: ADD\n757: SWAP6\n758: POP\n759: SWAP2\n760: SWAP3\n761: POP\n762: DUP4\n763: ADD\n764: DUP3\n765: DUP3\n766: DUP1\n767: ISZERO\n768: PUSH2 0x034a\n771: JUMPI"
      },
      {
        "offset": 772,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80601f1061031f57",
        "parsedOpcodes": "772: DUP1\n773: PUSH1 0x1f\n775: LT\n776: PUSH2 0x031f\n779: JUMPI"
      },
      {
        "offset": 780,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "61010080835404028352916020019161034a56",
        "parsedOpcodes": "780: PUSH2 0x0100\n783: DUP1\n784: DUP4\n785: SLOAD\n786: DIV\n787: MUL\n788: DUP4\n789: MSTORE\n790: SWAP2\n791: PUSH1 0x20\n793: ADD\n794: SWAP2\n795: PUSH2 0x034a\n798: JUMP"
      },
      {
        "offset": 799,
        "length": 14,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b82019190600052602060002090",
        "parsedOpcodes": "799: JUMPDEST\n800: DUP3\n801: ADD\n802: SWAP2\n803: SWAP1\n804: PUSH1 0x00\n806: MSTORE\n807: PUSH1 0x20\n809: PUSH1 0x00\n811: SHA3\n812: SWAP1"
      },
      {
        "offset": 813,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b81548152906001019060200180831161032d57",
        "parsedOpcodes": "813: JUMPDEST\n814: DUP2\n815: SLOAD\n816: DUP2\n817: MSTORE\n818: SWAP1\n819: PUSH1 0x01\n821: ADD\n822: SWAP1\n823: PUSH1 0x20\n825: ADD\n826: DUP1\n827: DUP4\n828: GT\n829: PUSH2 0x032d\n832: JUMPI"
      },
      {
        "offset": 833,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "829003601f16820191",
        "parsedOpcodes": "833: DUP3\n834: SWAP1\n835: SUB\n836: PUSH1 0x1f\n838: AND\n839: DUP3\n840: ADD\n841: SWAP2"
      },
      {
        "offset": 842,
        "length": 45,
        "type": "common",
        "stackBalance": -12,
        "bytecodeHex": "5b505050919092525050815160208301516040840151606090940151919a909950929750955090935050505056",
        "parsedOpcodes": "842: JUMPDEST\n843: POP\n844: POP\n845: POP\n846: SWAP2\n847: SWAP1\n848: SWAP3\n849: MSTORE\n850: POP\n851: POP\n852: DUP2\n853: MLOAD\n854: PUSH1 0x20\n856: DUP4\n857: ADD\n858: MLOAD\n859: PUSH1 0x40\n861: DUP5\n862: ADD\n863: MLOAD\n864: PUSH1 0x60\n866: SWAP1\n867: SWAP5\n868: ADD\n869: MLOAD\n870: SWAP2\n871: SWAP11\n872: SWAP1\n873: SWAP10\n874: POP\n875: SWAP3\n876: SWAP8\n877: POP\n878: SWAP6\n879: POP\n880: SWAP1\n881: SWAP4\n882: POP\n883: POP\n884: POP\n885: POP\n886: JUMP"
      },
      {
        "offset": 887,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61037f61056656",
        "parsedOpcodes": "887: JUMPDEST\n888: PUSH2 0x037f\n891: PUSH2 0x0566\n894: JUMP"
      },
      {
        "offset": 895,
        "length": 20,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b82600181604051808280519060200190808383",
        "parsedOpcodes": "895: JUMPDEST\n896: DUP3\n897: PUSH1 0x01\n899: DUP2\n900: PUSH1 0x40\n902: MLOAD\n903: DUP1\n904: DUP3\n905: DUP1\n906: MLOAD\n907: SWAP1\n908: PUSH1 0x20\n910: ADD\n911: SWAP1\n912: DUP1\n913: DUP4\n914: DUP4"
      },
      {
        "offset": 915,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106103b257",
        "parsedOpcodes": "915: JUMPDEST\n916: PUSH1 0x20\n918: DUP4\n919: LT\n920: PUSH2 0x03b2\n923: JUMPI"
      },
      {
        "offset": 924,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161039356",
        "parsedOpcodes": "924: DUP1\n925: MLOAD\n926: DUP3\n927: MSTORE\n928: PUSH1 0x1f\n930: NOT\n931: SWAP1\n932: SWAP3\n933: ADD\n934: SWAP2\n935: PUSH1 0x20\n937: SWAP2\n938: DUP3\n939: ADD\n940: SWAP2\n941: ADD\n942: PUSH2 0x0393\n945: JUMP"
      },
      {
        "offset": 946,
        "length": 57,
        "type": "common",
        "stackBalance": -9,
        "bytecodeHex": "5b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150610451905057",
        "parsedOpcodes": "946: JUMPDEST\n947: MLOAD\n948: DUP2\n949: MLOAD\n950: PUSH1 0x20\n952: SWAP4\n953: DUP5\n954: SUB\n955: PUSH2 0x0100\n958: EXP\n959: PUSH1 0x00\n961: NOT\n962: ADD\n963: DUP1\n964: NOT\n965: SWAP1\n966: SWAP3\n967: AND\n968: SWAP2\n969: AND\n970: OR\n971: SWAP1\n972: MSTORE\n973: SWAP3\n974: ADD\n975: SWAP5\n976: DUP6\n977: MSTORE\n978: POP\n979: PUSH1 0x40\n981: MLOAD\n982: SWAP4\n983: DUP5\n984: SWAP1\n985: SUB\n986: ADD\n987: SWAP1\n988: SWAP3\n989: SHA3\n990: SLOAD\n991: PUSH1 0xff\n993: AND\n994: ISZERO\n995: SWAP2\n996: POP\n997: PUSH2 0x0451\n1000: SWAP1\n1001: POP\n1002: JUMPI"
      },
      {
        "offset": 1003,
        "length": 102,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4861736820616c72656164792072656769737465726564000000000000000000604482015290519081900360640190fd",
        "parsedOpcodes": "1003: PUSH1 0x40\n1005: DUP1\n1006: MLOAD\n1007: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n1040: DUP2\n1041: MSTORE\n1042: PUSH1 0x20\n1044: PUSH1 0x04\n1046: DUP3\n1047: ADD\n1048: MSTORE\n1049: PUSH1 0x17\n1051: PUSH1 0x24\n1053: DUP3\n1054: ADD\n1055: MSTORE\n1056: PUSH32 0x4861736820616c72656164792072656769737465726564000000000000000000\n1089: PUSH1 0x44\n1091: DUP3\n1092: ADD\n1093: MSTORE\n1094: SWAP1\n1095: MLOAD\n1096: SWAP1\n1097: DUP2\n1098: SWAP1\n1099: SUB\n1100: PUSH1 0x64\n1102: ADD\n1103: SWAP1\n1104: REVERT"
      },
      {
        "offset": 1105,
        "length": 68,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b60806040519081016040528060011515815260200133600160a060020a0316815260200142815260200184815250915081600185604051808280519060200190808383",
        "parsedOpcodes": "1105: JUMPDEST\n1106: PUSH1 0x80\n1108: PUSH1 0x40\n1110: MLOAD\n1111: SWAP1\n1112: DUP2\n1113: ADD\n1114: PUSH1 0x40\n1116: MSTORE\n1117: DUP1\n1118: PUSH1 0x01\n1120: ISZERO\n1121: ISZERO\n1122: DUP2\n1123: MSTORE\n1124: PUSH1 0x20\n1126: ADD\n1127: CALLER\n1128: PUSH1 0x01\n1130: PUSH1 0xa0\n1132: PUSH1 0x02\n1134: EXP\n1135: SUB\n1136: AND\n1137: DUP2\n1138: MSTORE\n1139: PUSH1 0x20\n1141: ADD\n1142: TIMESTAMP\n1143: DUP2\n1144: MSTORE\n1145: PUSH1 0x20\n1147: ADD\n1148: DUP5\n1149: DUP2\n1150: MSTORE\n1151: POP\n1152: SWAP2\n1153: POP\n1154: DUP2\n1155: PUSH1 0x01\n1157: DUP6\n1158: PUSH1 0x40\n1160: MLOAD\n1161: DUP1\n1162: DUP3\n1163: DUP1\n1164: MLOAD\n1165: SWAP1\n1166: PUSH1 0x20\n1168: ADD\n1169: SWAP1\n1170: DUP1\n1171: DUP4\n1172: DUP4"
      },
      {
        "offset": 1173,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106104b457",
        "parsedOpcodes": "1173: JUMPDEST\n1174: PUSH1 0x20\n1176: DUP4\n1177: LT\n1178: PUSH2 0x04b4\n1181: JUMPI"
      },
      {
        "offset": 1182,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161049556",
        "parsedOpcodes": "1182: DUP1\n1183: MLOAD\n1184: DUP3\n1185: MSTORE\n1186: PUSH1 0x1f\n1188: NOT\n1189: SWAP1\n1190: SWAP3\n1191: ADD\n1192: SWAP2\n1193: PUSH1 0x20\n1195: SWAP2\n1196: DUP3\n1197: ADD\n1198: SWAP2\n1199: ADD\n1200: PUSH2 0x0495\n1203: JUMP"
      },
      {
        "offset": 1204,
        "length": 154,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b518151600019602094850361010090810a919091019182169119929092161790915293909101958652604080519687900382019096208751815489840151600160a060020a031690950274ffffffffffffffffffffffffffffffffffffffff001991151560ff1990961695909517169390931783559486015160018301555060608501518051919461054e9450600286019350019061058c56",
        "parsedOpcodes": "1204: JUMPDEST\n1205: MLOAD\n1206: DUP2\n1207: MLOAD\n1208: PUSH1 0x00\n1210: NOT\n1211: PUSH1 0x20\n1213: SWAP5\n1214: DUP6\n1215: SUB\n1216: PUSH2 0x0100\n1219: SWAP1\n1220: DUP2\n1221: EXP\n1222: SWAP2\n1223: SWAP1\n1224: SWAP2\n1225: ADD\n1226: SWAP2\n1227: DUP3\n1228: AND\n1229: SWAP2\n1230: NOT\n1231: SWAP3\n1232: SWAP1\n1233: SWAP3\n1234: AND\n1235: OR\n1236: SWAP1\n1237: SWAP2\n1238: MSTORE\n1239: SWAP4\n1240: SWAP1\n1241: SWAP2\n1242: ADD\n1243: SWAP6\n1244: DUP7\n1245: MSTORE\n1246: PUSH1 0x40\n1248: DUP1\n1249: MLOAD\n1250: SWAP7\n1251: DUP8\n1252: SWAP1\n1253: SUB\n1254: DUP3\n1255: ADD\n1256: SWAP1\n1257: SWAP7\n1258: SHA3\n1259: DUP8\n1260: MLOAD\n1261: DUP2\n1262: SLOAD\n1263: DUP10\n1264: DUP5\n1265: ADD\n1266: MLOAD\n1267: PUSH1 0x01\n1269: PUSH1 0xa0\n1271: PUSH1 0x02\n1273: EXP\n1274: SUB\n1275: AND\n1276: SWAP1\n1277: SWAP6\n1278: MUL\n1279: PUSH21 0xffffffffffffffffffffffffffffffffffffffff00\n1301: NOT\n1302: SWAP2\n1303: ISZERO\n1304: ISZERO\n1305: PUSH1 0xff\n1307: NOT\n1308: SWAP1\n1309: SWAP7\n1310: AND\n1311: SWAP6\n1312: SWAP1\n1313: SWAP6\n1314: OR\n1315: AND\n1316: SWAP4\n1317: SWAP1\n1318: SWAP4\n1319: OR\n1320: DUP4\n1321: SSTORE\n1322: SWAP5\n1323: DUP7\n1324: ADD\n1325: MLOAD\n1326: PUSH1 0x01\n1328: DUP4\n1329: ADD\n1330: SSTORE\n1331: POP\n1332: PUSH1 0x60\n1334: DUP6\n1335: ADD\n1336: MLOAD\n1337: DUP1\n1338: MLOAD\n1339: SWAP2\n1340: SWAP5\n1341: PUSH2 0x054e\n1344: SWAP5\n1345: POP\n1346: PUSH1 0x02\n1348: DUP7\n1349: ADD\n1350: SWAP4\n1351: POP\n1352: ADD\n1353: SWAP1\n1354: PUSH2 0x058c\n1357: JUMP"
      },
      {
        "offset": 1358,
        "length": 9,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b5050505050505056",
        "parsedOpcodes": "1358: JUMPDEST\n1359: POP\n1360: POP\n1361: POP\n1362: POP\n1363: POP\n1364: POP\n1365: POP\n1366: JUMP"
      },
      {
        "offset": 1367,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600054600160a060020a03168156",
        "parsedOpcodes": "1367: JUMPDEST\n1368: PUSH1 0x00\n1370: SLOAD\n1371: PUSH1 0x01\n1373: PUSH1 0xa0\n1375: PUSH1 0x02\n1377: EXP\n1378: SUB\n1379: AND\n1380: DUP2\n1381: JUMP"
      },
      {
        "offset": 1382,
        "length": 38,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60408051608081018252600080825260208201819052918101919091526060808201529056",
        "parsedOpcodes": "1382: JUMPDEST\n1383: PUSH1 0x40\n1385: DUP1\n1386: MLOAD\n1387: PUSH1 0x80\n1389: DUP2\n1390: ADD\n1391: DUP3\n1392: MSTORE\n1393: PUSH1 0x00\n1395: DUP1\n1396: DUP3\n1397: MSTORE\n1398: PUSH1 0x20\n1400: DUP3\n1401: ADD\n1402: DUP2\n1403: SWAP1\n1404: MSTORE\n1405: SWAP2\n1406: DUP2\n1407: ADD\n1408: SWAP2\n1409: SWAP1\n1410: SWAP2\n1411: MSTORE\n1412: PUSH1 0x60\n1414: DUP1\n1415: DUP3\n1416: ADD\n1417: MSTORE\n1418: SWAP1\n1419: JUMP"
      },
      {
        "offset": 1420,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1420: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          86
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          91
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          343
        ]
      },
      {
        "from": 75,
        "to": [
          86,
          496
        ]
      },
      {
        "from": 86,
        "to": [
          1420
        ]
      },
      {
        "from": 91,
        "to": [
          99,
          103
        ]
      },
      {
        "from": 99,
        "to": [
          1420
        ]
      },
      {
        "from": 103,
        "to": [
          545
        ]
      },
      {
        "from": 180,
        "to": [
          257
        ]
      },
      {
        "from": 257,
        "to": [
          266,
          281
        ]
      },
      {
        "from": 266,
        "to": [
          257,
          257,
          257
        ]
      },
      {
        "from": 281,
        "to": [
          301,
          326
        ]
      },
      {
        "from": 301,
        "to": [
          326
        ]
      },
      {
        "from": 326,
        "to": [
          1420
        ]
      },
      {
        "from": 343,
        "to": [
          351,
          355
        ]
      },
      {
        "from": 351,
        "to": [
          1420
        ]
      },
      {
        "from": 355,
        "to": [
          887
        ]
      },
      {
        "from": 494,
        "to": [
          1420
        ]
      },
      {
        "from": 496,
        "to": [
          504,
          508
        ]
      },
      {
        "from": 504,
        "to": [
          1420
        ]
      },
      {
        "from": 508,
        "to": [
          1367,
          1367
        ]
      },
      {
        "from": 517,
        "to": [
          1420
        ]
      },
      {
        "from": 545,
        "to": [
          1382,
          1382
        ]
      },
      {
        "from": 560,
        "to": [
          579
        ]
      },
      {
        "from": 579,
        "to": [
          588,
          610
        ]
      },
      {
        "from": 588,
        "to": [
          579,
          579
        ]
      },
      {
        "from": 610,
        "to": [
          772,
          842
        ]
      },
      {
        "from": 772,
        "to": [
          780,
          799
        ]
      },
      {
        "from": 780,
        "to": [
          842,
          842
        ]
      },
      {
        "from": 799,
        "to": [
          813
        ]
      },
      {
        "from": 813,
        "to": [
          833,
          813
        ]
      },
      {
        "from": 833,
        "to": [
          842
        ]
      },
      {
        "from": 842,
        "to": [
          180,
          180,
          180
        ]
      },
      {
        "from": 887,
        "to": [
          1382,
          1382
        ]
      },
      {
        "from": 895,
        "to": [
          915
        ]
      },
      {
        "from": 915,
        "to": [
          924,
          946
        ]
      },
      {
        "from": 924,
        "to": [
          915,
          915
        ]
      },
      {
        "from": 946,
        "to": [
          1003
        ]
      },
      {
        "from": 1003,
        "to": [
          1420
        ]
      },
      {
        "from": 1105,
        "to": [
          1173
        ]
      },
      {
        "from": 1173,
        "to": [
          1182,
          1204
        ]
      },
      {
        "from": 1182,
        "to": [
          1173
        ]
      },
      {
        "from": 1204,
        "to": [
          1420
        ]
      },
      {
        "from": 1358,
        "to": [
          1420
        ]
      },
      {
        "from": 1367,
        "to": [
          517
        ]
      },
      {
        "from": 1382,
        "to": [
          560,
          895
        ]
      },
      {
        "from": 1420,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 4 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 118
    }
  }
}