{
  "name": "Analysis_2022-07-06_22-47-14",
  "address": "",
  "binarySource": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063206ec7a1146100515780637ad00bc01461013c575b600080fd5b34801561005d57600080fd5b50610126600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506101a5565b6040518082815260200191505060405180910390f35b34801561014857600080fd5b5061018b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610479565b604051808215151515815260200191505060405180910390f35b60008060003386604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561024a5780518252602082019150602081019050602083039250610225565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000855111151561028957600080fd5b845184511015151561029a57600080fd5b60011515600080846000191660001916815260200190815260200160002060009054906101000a900460ff161515141515156102d557600080fd5b600090505b8451811015610439578673ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561030e57fe5b90602001906020020151878581518110151561032657fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b505050506040513d602081101561041257600080fd5b8101908080519060200190929190505050151561042e57600080fd5b6001810190506102da565b6001600080846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055508092505050949350505050565b6000808383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561051c57805182526020820191506020810190506020830392506104f7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060011515600080836000191660001916815260200190815260200160002060009054906101000a900460ff16151514915050929150505600a165627a7a72305820ffb58679500497b948e511a11f8a43ac5be43ca0c1cb44a827226cdd3d7f9c720029",
  "binaryHash": "e670c3a",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820ffb58679500497b948e511a11f8a43ac5be43ca0c1cb44a827226cdd3d7f9c720029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657115234332
    }
  },
  "runtimeCfg": {
    "bytecode": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063206ec7a1146100515780637ad00bc01461013c575b600080fd5b34801561005d57600080fd5b50610126600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506101a5565b6040518082815260200191505060405180910390f35b34801561014857600080fd5b5061018b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035600019169060200190929190505050610479565b604051808215151515815260200191505060405180910390f35b60008060003386604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561024a5780518252602082019150602081019050602083039250610225565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000855111151561028957600080fd5b845184511015151561029a57600080fd5b60011515600080846000191660001916815260200190815260200160002060009054906101000a900460ff161515141515156102d557600080fd5b600090505b8451811015610439578673ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561030e57fe5b90602001906020020151878581518110151561032657fe5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b505050506040513d602081101561041257600080fd5b8101908080519060200190929190505050151561042e57600080fd5b6001810190506102da565b6001600080846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055508092505050949350505050565b6000808383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310151561051c57805182526020820191506020810190506020830392506104f7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060011515600080836000191660001916815260200190815260200160002060009054906101000a900460ff16151514915050929150505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004c57",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x004c\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063206ec7a11461005157",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x206ec7a1\n60: EQ\n61: PUSH2 0x0051\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80637ad00bc01461013c57",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x7ad00bc0\n71: EQ\n72: PUSH2 0x013c\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "76: JUMPDEST\n77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005d57",
        "parsedOpcodes": "81: JUMPDEST\n82: CALLVALUE\n83: DUP1\n84: ISZERO\n85: PUSH2 0x005d\n88: JUMPI"
      },
      {
        "offset": 89,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "89: PUSH1 0x00\n91: DUP1\n92: REVERT"
      },
      {
        "offset": 93,
        "length": 201,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b50610126600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192905050506101a556",
        "parsedOpcodes": "93: JUMPDEST\n94: POP\n95: PUSH2 0x0126\n98: PUSH1 0x04\n100: DUP1\n101: CALLDATASIZE\n102: SUB\n103: DUP2\n104: ADD\n105: SWAP1\n106: DUP1\n107: DUP1\n108: CALLDATALOAD\n109: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n130: AND\n131: SWAP1\n132: PUSH1 0x20\n134: ADD\n135: SWAP1\n136: SWAP3\n137: SWAP2\n138: SWAP1\n139: DUP1\n140: CALLDATALOAD\n141: PUSH1 0x00\n143: NOT\n144: AND\n145: SWAP1\n146: PUSH1 0x20\n148: ADD\n149: SWAP1\n150: SWAP3\n151: SWAP2\n152: SWAP1\n153: DUP1\n154: CALLDATALOAD\n155: SWAP1\n156: PUSH1 0x20\n158: ADD\n159: SWAP1\n160: DUP3\n161: ADD\n162: DUP1\n163: CALLDATALOAD\n164: SWAP1\n165: PUSH1 0x20\n167: ADD\n168: SWAP1\n169: DUP1\n170: DUP1\n171: PUSH1 0x20\n173: MUL\n174: PUSH1 0x20\n176: ADD\n177: PUSH1 0x40\n179: MLOAD\n180: SWAP1\n181: DUP2\n182: ADD\n183: PUSH1 0x40\n185: MSTORE\n186: DUP1\n187: SWAP4\n188: SWAP3\n189: SWAP2\n190: SWAP1\n191: DUP2\n192: DUP2\n193: MSTORE\n194: PUSH1 0x20\n196: ADD\n197: DUP4\n198: DUP4\n199: PUSH1 0x20\n201: MUL\n202: DUP1\n203: DUP3\n204: DUP5\n205: CALLDATACOPY\n206: DUP3\n207: ADD\n208: SWAP2\n209: POP\n210: POP\n211: POP\n212: POP\n213: POP\n214: POP\n215: SWAP2\n216: SWAP3\n217: SWAP2\n218: SWAP3\n219: SWAP1\n220: DUP1\n221: CALLDATALOAD\n222: SWAP1\n223: PUSH1 0x20\n225: ADD\n226: SWAP1\n227: DUP3\n228: ADD\n229: DUP1\n230: CALLDATALOAD\n231: SWAP1\n232: PUSH1 0x20\n234: ADD\n235: SWAP1\n236: DUP1\n237: DUP1\n238: PUSH1 0x20\n240: MUL\n241: PUSH1 0x20\n243: ADD\n244: PUSH1 0x40\n246: MLOAD\n247: SWAP1\n248: DUP2\n249: ADD\n250: PUSH1 0x40\n252: MSTORE\n253: DUP1\n254: SWAP4\n255: SWAP3\n256: SWAP2\n257: SWAP1\n258: DUP2\n259: DUP2\n260: MSTORE\n261: PUSH1 0x20\n263: ADD\n264: DUP4\n265: DUP4\n266: PUSH1 0x20\n268: MUL\n269: DUP1\n270: DUP3\n271: DUP5\n272: CALLDATACOPY\n273: DUP3\n274: ADD\n275: SWAP2\n276: POP\n277: POP\n278: POP\n279: POP\n280: POP\n281: POP\n282: SWAP2\n283: SWAP3\n284: SWAP2\n285: SWAP3\n286: SWAP1\n287: POP\n288: POP\n289: POP\n290: PUSH2 0x01a5\n293: JUMP"
      },
      {
        "offset": 294,
        "length": 22,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518082815260200191505060405180910390f3",
        "parsedOpcodes": "294: JUMPDEST\n295: PUSH1 0x40\n297: MLOAD\n298: DUP1\n299: DUP3\n300: DUP2\n301: MSTORE\n302: PUSH1 0x20\n304: ADD\n305: SWAP2\n306: POP\n307: POP\n308: PUSH1 0x40\n310: MLOAD\n311: DUP1\n312: SWAP2\n313: SUB\n314: SWAP1\n315: RETURN"
      },
      {
        "offset": 316,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561014857",
        "parsedOpcodes": "316: JUMPDEST\n317: CALLVALUE\n318: DUP1\n319: ISZERO\n320: PUSH2 0x0148\n323: JUMPI"
      },
      {
        "offset": 324,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "324: PUSH1 0x00\n326: DUP1\n327: REVERT"
      },
      {
        "offset": 328,
        "length": 67,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b5061018b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919050505061047956",
        "parsedOpcodes": "328: JUMPDEST\n329: POP\n330: PUSH2 0x018b\n333: PUSH1 0x04\n335: DUP1\n336: CALLDATASIZE\n337: SUB\n338: DUP2\n339: ADD\n340: SWAP1\n341: DUP1\n342: DUP1\n343: CALLDATALOAD\n344: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n365: AND\n366: SWAP1\n367: PUSH1 0x20\n369: ADD\n370: SWAP1\n371: SWAP3\n372: SWAP2\n373: SWAP1\n374: DUP1\n375: CALLDATALOAD\n376: PUSH1 0x00\n378: NOT\n379: AND\n380: SWAP1\n381: PUSH1 0x20\n383: ADD\n384: SWAP1\n385: SWAP3\n386: SWAP2\n387: SWAP1\n388: POP\n389: POP\n390: POP\n391: PUSH2 0x0479\n394: JUMP"
      },
      {
        "offset": 395,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808215151515815260200191505060405180910390f3",
        "parsedOpcodes": "395: JUMPDEST\n396: PUSH1 0x40\n398: MLOAD\n399: DUP1\n400: DUP3\n401: ISZERO\n402: ISZERO\n403: ISZERO\n404: ISZERO\n405: DUP2\n406: MSTORE\n407: PUSH1 0x20\n409: ADD\n410: SWAP2\n411: POP\n412: POP\n413: PUSH1 0x40\n415: MLOAD\n416: DUP1\n417: SWAP2\n418: SUB\n419: SWAP1\n420: RETURN"
      },
      {
        "offset": 421,
        "length": 128,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60008060003386604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401826000191660001916815260200192505050604051602081830303815290604052604051808280519060200190808383",
        "parsedOpcodes": "421: JUMPDEST\n422: PUSH1 0x00\n424: DUP1\n425: PUSH1 0x00\n427: CALLER\n428: DUP7\n429: PUSH1 0x40\n431: MLOAD\n432: PUSH1 0x20\n434: ADD\n435: DUP1\n436: DUP4\n437: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n458: AND\n459: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n480: AND\n481: PUSH13 0x01000000000000000000000000\n495: MUL\n496: DUP2\n497: MSTORE\n498: PUSH1 0x14\n500: ADD\n501: DUP3\n502: PUSH1 0x00\n504: NOT\n505: AND\n506: PUSH1 0x00\n508: NOT\n509: AND\n510: DUP2\n511: MSTORE\n512: PUSH1 0x20\n514: ADD\n515: SWAP3\n516: POP\n517: POP\n518: POP\n519: PUSH1 0x40\n521: MLOAD\n522: PUSH1 0x20\n524: DUP2\n525: DUP4\n526: SUB\n527: SUB\n528: DUP2\n529: MSTORE\n530: SWAP1\n531: PUSH1 0x40\n533: MSTORE\n534: PUSH1 0x40\n536: MLOAD\n537: DUP1\n538: DUP3\n539: DUP1\n540: MLOAD\n541: SWAP1\n542: PUSH1 0x20\n544: ADD\n545: SWAP1\n546: DUP1\n547: DUP4\n548: DUP4"
      },
      {
        "offset": 549,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60208310151561024a57",
        "parsedOpcodes": "549: JUMPDEST\n550: PUSH1 0x20\n552: DUP4\n553: LT\n554: ISZERO\n555: ISZERO\n556: PUSH2 0x024a\n559: JUMPI"
      },
      {
        "offset": 560,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8051825260208201915060208101905060208303925061022556",
        "parsedOpcodes": "560: DUP1\n561: MLOAD\n562: DUP3\n563: MSTORE\n564: PUSH1 0x20\n566: DUP3\n567: ADD\n568: SWAP2\n569: POP\n570: PUSH1 0x20\n572: DUP2\n573: ADD\n574: SWAP1\n575: POP\n576: PUSH1 0x20\n578: DUP4\n579: SUB\n580: SWAP3\n581: POP\n582: PUSH2 0x0225\n585: JUMP"
      },
      {
        "offset": 586,
        "length": 59,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000855111151561028957",
        "parsedOpcodes": "586: JUMPDEST\n587: PUSH1 0x01\n589: DUP4\n590: PUSH1 0x20\n592: SUB\n593: PUSH2 0x0100\n596: EXP\n597: SUB\n598: DUP1\n599: NOT\n600: DUP3\n601: MLOAD\n602: AND\n603: DUP2\n604: DUP5\n605: MLOAD\n606: AND\n607: DUP1\n608: DUP3\n609: OR\n610: DUP6\n611: MSTORE\n612: POP\n613: POP\n614: POP\n615: POP\n616: POP\n617: POP\n618: SWAP1\n619: POP\n620: ADD\n621: SWAP2\n622: POP\n623: POP\n624: PUSH1 0x40\n626: MLOAD\n627: DUP1\n628: SWAP2\n629: SUB\n630: SWAP1\n631: SHA3\n632: SWAP2\n633: POP\n634: PUSH1 0x00\n636: DUP6\n637: MLOAD\n638: GT\n639: ISZERO\n640: ISZERO\n641: PUSH2 0x0289\n644: JUMPI"
      },
      {
        "offset": 645,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "645: PUSH1 0x00\n647: DUP1\n648: REVERT"
      },
      {
        "offset": 649,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b845184511015151561029a57",
        "parsedOpcodes": "649: JUMPDEST\n650: DUP5\n651: MLOAD\n652: DUP5\n653: MLOAD\n654: LT\n655: ISZERO\n656: ISZERO\n657: ISZERO\n658: PUSH2 0x029a\n661: JUMPI"
      },
      {
        "offset": 662,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "662: PUSH1 0x00\n664: DUP1\n665: REVERT"
      },
      {
        "offset": 666,
        "length": 55,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60011515600080846000191660001916815260200190815260200160002060009054906101000a900460ff161515141515156102d557",
        "parsedOpcodes": "666: JUMPDEST\n667: PUSH1 0x01\n669: ISZERO\n670: ISZERO\n671: PUSH1 0x00\n673: DUP1\n674: DUP5\n675: PUSH1 0x00\n677: NOT\n678: AND\n679: PUSH1 0x00\n681: NOT\n682: AND\n683: DUP2\n684: MSTORE\n685: PUSH1 0x20\n687: ADD\n688: SWAP1\n689: DUP2\n690: MSTORE\n691: PUSH1 0x20\n693: ADD\n694: PUSH1 0x00\n696: SHA3\n697: PUSH1 0x00\n699: SWAP1\n700: SLOAD\n701: SWAP1\n702: PUSH2 0x0100\n705: EXP\n706: SWAP1\n707: DIV\n708: PUSH1 0xff\n710: AND\n711: ISZERO\n712: ISZERO\n713: EQ\n714: ISZERO\n715: ISZERO\n716: ISZERO\n717: PUSH2 0x02d5\n720: JUMPI"
      },
      {
        "offset": 721,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "721: PUSH1 0x00\n723: DUP1\n724: REVERT"
      },
      {
        "offset": 725,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60009050",
        "parsedOpcodes": "725: JUMPDEST\n726: PUSH1 0x00\n728: SWAP1\n729: POP"
      },
      {
        "offset": 730,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b845181101561043957",
        "parsedOpcodes": "730: JUMPDEST\n731: DUP5\n732: MLOAD\n733: DUP2\n734: LT\n735: ISZERO\n736: PUSH2 0x0439\n739: JUMPI"
      },
      {
        "offset": 740,
        "length": 41,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "8673ffffffffffffffffffffffffffffffffffffffff166323b872dd33878481518110151561030e57",
        "parsedOpcodes": "740: DUP7\n741: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n762: AND\n763: PUSH4 0x23b872dd\n768: CALLER\n769: DUP8\n770: DUP5\n771: DUP2\n772: MLOAD\n773: DUP2\n774: LT\n775: ISZERO\n776: ISZERO\n777: PUSH2 0x030e\n780: JUMPI"
      },
      {
        "offset": 781,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "781: INVALID"
      },
      {
        "offset": 782,
        "length": 23,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b90602001906020020151878581518110151561032657",
        "parsedOpcodes": "782: JUMPDEST\n783: SWAP1\n784: PUSH1 0x20\n786: ADD\n787: SWAP1\n788: PUSH1 0x20\n790: MUL\n791: ADD\n792: MLOAD\n793: DUP8\n794: DUP6\n795: DUP2\n796: MLOAD\n797: DUP2\n798: LT\n799: ISZERO\n800: ISZERO\n801: PUSH2 0x0326\n804: JUMPI"
      },
      {
        "offset": 805,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "805: INVALID"
      },
      {
        "offset": 806,
        "length": 190,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b906020019060200201516040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156103e857",
        "parsedOpcodes": "806: JUMPDEST\n807: SWAP1\n808: PUSH1 0x20\n810: ADD\n811: SWAP1\n812: PUSH1 0x20\n814: MUL\n815: ADD\n816: MLOAD\n817: PUSH1 0x40\n819: MLOAD\n820: DUP5\n821: PUSH4 0xffffffff\n826: AND\n827: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n857: MUL\n858: DUP2\n859: MSTORE\n860: PUSH1 0x04\n862: ADD\n863: DUP1\n864: DUP5\n865: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n886: AND\n887: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n908: AND\n909: DUP2\n910: MSTORE\n911: PUSH1 0x20\n913: ADD\n914: DUP4\n915: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n936: AND\n937: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n958: AND\n959: DUP2\n960: MSTORE\n961: PUSH1 0x20\n963: ADD\n964: DUP3\n965: DUP2\n966: MSTORE\n967: PUSH1 0x20\n969: ADD\n970: SWAP4\n971: POP\n972: POP\n973: POP\n974: POP\n975: PUSH1 0x20\n977: PUSH1 0x40\n979: MLOAD\n980: DUP1\n981: DUP4\n982: SUB\n983: DUP2\n984: PUSH1 0x00\n986: DUP8\n987: DUP1\n988: EXTCODESIZE\n989: ISZERO\n990: DUP1\n991: ISZERO\n992: PUSH2 0x03e8\n995: JUMPI"
      },
      {
        "offset": 996,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "996: PUSH1 0x00\n998: DUP1\n999: REVERT"
      },
      {
        "offset": 1000,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156103fc57",
        "parsedOpcodes": "1000: JUMPDEST\n1001: POP\n1002: GAS\n1003: CALL\n1004: ISZERO\n1005: DUP1\n1006: ISZERO\n1007: PUSH2 0x03fc\n1010: JUMPI"
      },
      {
        "offset": 1011,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1011: RETURNDATASIZE\n1012: PUSH1 0x00\n1014: DUP1\n1015: RETURNDATACOPY\n1016: RETURNDATASIZE\n1017: PUSH1 0x00\n1019: REVERT"
      },
      {
        "offset": 1020,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561041257",
        "parsedOpcodes": "1020: JUMPDEST\n1021: POP\n1022: POP\n1023: POP\n1024: POP\n1025: PUSH1 0x40\n1027: MLOAD\n1028: RETURNDATASIZE\n1029: PUSH1 0x20\n1031: DUP2\n1032: LT\n1033: ISZERO\n1034: PUSH2 0x0412\n1037: JUMPI"
      },
      {
        "offset": 1038,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1038: PUSH1 0x00\n1040: DUP1\n1041: REVERT"
      },
      {
        "offset": 1042,
        "length": 24,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b8101908080519060200190929190505050151561042e57",
        "parsedOpcodes": "1042: JUMPDEST\n1043: DUP2\n1044: ADD\n1045: SWAP1\n1046: DUP1\n1047: DUP1\n1048: MLOAD\n1049: SWAP1\n1050: PUSH1 0x20\n1052: ADD\n1053: SWAP1\n1054: SWAP3\n1055: SWAP2\n1056: SWAP1\n1057: POP\n1058: POP\n1059: POP\n1060: ISZERO\n1061: ISZERO\n1062: PUSH2 0x042e\n1065: JUMPI"
      },
      {
        "offset": 1066,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1066: PUSH1 0x00\n1068: DUP1\n1069: REVERT"
      },
      {
        "offset": 1070,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001810190506102da56",
        "parsedOpcodes": "1070: JUMPDEST\n1071: PUSH1 0x01\n1073: DUP2\n1074: ADD\n1075: SWAP1\n1076: POP\n1077: PUSH2 0x02da\n1080: JUMP"
      },
      {
        "offset": 1081,
        "length": 64,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b6001600080846000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550809250505094935050505056",
        "parsedOpcodes": "1081: JUMPDEST\n1082: PUSH1 0x01\n1084: PUSH1 0x00\n1086: DUP1\n1087: DUP5\n1088: PUSH1 0x00\n1090: NOT\n1091: AND\n1092: PUSH1 0x00\n1094: NOT\n1095: AND\n1096: DUP2\n1097: MSTORE\n1098: PUSH1 0x20\n1100: ADD\n1101: SWAP1\n1102: DUP2\n1103: MSTORE\n1104: PUSH1 0x20\n1106: ADD\n1107: PUSH1 0x00\n1109: SHA3\n1110: PUSH1 0x00\n1112: PUSH2 0x0100\n1115: EXP\n1116: DUP2\n1117: SLOAD\n1118: DUP2\n1119: PUSH1 0xff\n1121: MUL\n1122: NOT\n1123: AND\n1124: SWAP1\n1125: DUP4\n1126: ISZERO\n1127: ISZERO\n1128: MUL\n1129: OR\n1130: SWAP1\n1131: SSTORE\n1132: POP\n1133: DUP1\n1134: SWAP3\n1135: POP\n1136: POP\n1137: POP\n1138: SWAP5\n1139: SWAP4\n1140: POP\n1141: POP\n1142: POP\n1143: POP\n1144: JUMP"
      },
      {
        "offset": 1145,
        "length": 126,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b6000808383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401826000191660001916815260200192505050604051602081830303815290604052604051808280519060200190808383",
        "parsedOpcodes": "1145: JUMPDEST\n1146: PUSH1 0x00\n1148: DUP1\n1149: DUP4\n1150: DUP4\n1151: PUSH1 0x40\n1153: MLOAD\n1154: PUSH1 0x20\n1156: ADD\n1157: DUP1\n1158: DUP4\n1159: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1180: AND\n1181: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1202: AND\n1203: PUSH13 0x01000000000000000000000000\n1217: MUL\n1218: DUP2\n1219: MSTORE\n1220: PUSH1 0x14\n1222: ADD\n1223: DUP3\n1224: PUSH1 0x00\n1226: NOT\n1227: AND\n1228: PUSH1 0x00\n1230: NOT\n1231: AND\n1232: DUP2\n1233: MSTORE\n1234: PUSH1 0x20\n1236: ADD\n1237: SWAP3\n1238: POP\n1239: POP\n1240: POP\n1241: PUSH1 0x40\n1243: MLOAD\n1244: PUSH1 0x20\n1246: DUP2\n1247: DUP4\n1248: SUB\n1249: SUB\n1250: DUP2\n1251: MSTORE\n1252: SWAP1\n1253: PUSH1 0x40\n1255: MSTORE\n1256: PUSH1 0x40\n1258: MLOAD\n1259: DUP1\n1260: DUP3\n1261: DUP1\n1262: MLOAD\n1263: SWAP1\n1264: PUSH1 0x20\n1266: ADD\n1267: SWAP1\n1268: DUP1\n1269: DUP4\n1270: DUP4"
      },
      {
        "offset": 1271,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60208310151561051c57",
        "parsedOpcodes": "1271: JUMPDEST\n1272: PUSH1 0x20\n1274: DUP4\n1275: LT\n1276: ISZERO\n1277: ISZERO\n1278: PUSH2 0x051c\n1281: JUMPI"
      },
      {
        "offset": 1282,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805182526020820191506020810190506020830392506104f756",
        "parsedOpcodes": "1282: DUP1\n1283: MLOAD\n1284: DUP3\n1285: MSTORE\n1286: PUSH1 0x20\n1288: DUP3\n1289: ADD\n1290: SWAP2\n1291: POP\n1292: PUSH1 0x20\n1294: DUP2\n1295: ADD\n1296: SWAP1\n1297: POP\n1298: PUSH1 0x20\n1300: DUP4\n1301: SUB\n1302: SWAP3\n1303: POP\n1304: PUSH2 0x04f7\n1307: JUMP"
      },
      {
        "offset": 1308,
        "length": 103,
        "type": "common",
        "stackBalance": -12,
        "bytecodeHex": "5b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060011515600080836000191660001916815260200190815260200160002060009054906101000a900460ff161515149150509291505056",
        "parsedOpcodes": "1308: JUMPDEST\n1309: PUSH1 0x01\n1311: DUP4\n1312: PUSH1 0x20\n1314: SUB\n1315: PUSH2 0x0100\n1318: EXP\n1319: SUB\n1320: DUP1\n1321: NOT\n1322: DUP3\n1323: MLOAD\n1324: AND\n1325: DUP2\n1326: DUP5\n1327: MLOAD\n1328: AND\n1329: DUP1\n1330: DUP3\n1331: OR\n1332: DUP6\n1333: MSTORE\n1334: POP\n1335: POP\n1336: POP\n1337: POP\n1338: POP\n1339: POP\n1340: SWAP1\n1341: POP\n1342: ADD\n1343: SWAP2\n1344: POP\n1345: POP\n1346: PUSH1 0x40\n1348: MLOAD\n1349: DUP1\n1350: SWAP2\n1351: SUB\n1352: SWAP1\n1353: SHA3\n1354: SWAP1\n1355: POP\n1356: PUSH1 0x01\n1358: ISZERO\n1359: ISZERO\n1360: PUSH1 0x00\n1362: DUP1\n1363: DUP4\n1364: PUSH1 0x00\n1366: NOT\n1367: AND\n1368: PUSH1 0x00\n1370: NOT\n1371: AND\n1372: DUP2\n1373: MSTORE\n1374: PUSH1 0x20\n1376: ADD\n1377: SWAP1\n1378: DUP2\n1379: MSTORE\n1380: PUSH1 0x20\n1382: ADD\n1383: PUSH1 0x00\n1385: SHA3\n1386: PUSH1 0x00\n1388: SWAP1\n1389: SLOAD\n1390: SWAP1\n1391: PUSH2 0x0100\n1394: EXP\n1395: SWAP1\n1396: DIV\n1397: PUSH1 0xff\n1399: AND\n1400: ISZERO\n1401: ISZERO\n1402: EQ\n1403: SWAP2\n1404: POP\n1405: POP\n1406: SWAP3\n1407: SWAP2\n1408: POP\n1409: POP\n1410: JUMP"
      },
      {
        "offset": 1411,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1411: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          76
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          81
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          316
        ]
      },
      {
        "from": 76,
        "to": [
          1411
        ]
      },
      {
        "from": 81,
        "to": [
          89,
          93
        ]
      },
      {
        "from": 89,
        "to": [
          1411
        ]
      },
      {
        "from": 93,
        "to": [
          421,
          421
        ]
      },
      {
        "from": 294,
        "to": [
          1411
        ]
      },
      {
        "from": 316,
        "to": [
          324,
          328
        ]
      },
      {
        "from": 324,
        "to": [
          1411
        ]
      },
      {
        "from": 328,
        "to": [
          1145,
          1145
        ]
      },
      {
        "from": 395,
        "to": [
          1411
        ]
      },
      {
        "from": 421,
        "to": [
          549
        ]
      },
      {
        "from": 549,
        "to": [
          560,
          586
        ]
      },
      {
        "from": 560,
        "to": [
          549,
          549
        ]
      },
      {
        "from": 586,
        "to": [
          645,
          649
        ]
      },
      {
        "from": 645,
        "to": [
          1411
        ]
      },
      {
        "from": 649,
        "to": [
          662,
          666
        ]
      },
      {
        "from": 662,
        "to": [
          1411
        ]
      },
      {
        "from": 666,
        "to": [
          721,
          725
        ]
      },
      {
        "from": 721,
        "to": [
          1411
        ]
      },
      {
        "from": 725,
        "to": [
          730
        ]
      },
      {
        "from": 730,
        "to": [
          740,
          1081
        ]
      },
      {
        "from": 740,
        "to": [
          781,
          782
        ]
      },
      {
        "from": 781,
        "to": [
          1411
        ]
      },
      {
        "from": 782,
        "to": [
          805,
          806
        ]
      },
      {
        "from": 805,
        "to": [
          1411
        ]
      },
      {
        "from": 806,
        "to": [
          996,
          1000
        ]
      },
      {
        "from": 996,
        "to": [
          1411
        ]
      },
      {
        "from": 1000,
        "to": [
          1011,
          1020
        ]
      },
      {
        "from": 1011,
        "to": [
          1411
        ]
      },
      {
        "from": 1020,
        "to": [
          1038,
          1042
        ]
      },
      {
        "from": 1038,
        "to": [
          1411
        ]
      },
      {
        "from": 1042,
        "to": [
          1066,
          1070
        ]
      },
      {
        "from": 1066,
        "to": [
          1411
        ]
      },
      {
        "from": 1070,
        "to": [
          730,
          730,
          730
        ]
      },
      {
        "from": 1081,
        "to": [
          294,
          294
        ]
      },
      {
        "from": 1145,
        "to": [
          1271
        ]
      },
      {
        "from": 1271,
        "to": [
          1282,
          1308
        ]
      },
      {
        "from": 1282,
        "to": [
          1271,
          1271
        ]
      },
      {
        "from": 1308,
        "to": [
          395
        ]
      },
      {
        "from": 1411,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 110
    }
  }
}