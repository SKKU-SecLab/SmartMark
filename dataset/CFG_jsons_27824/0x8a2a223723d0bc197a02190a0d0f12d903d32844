{
  "name": "Analysis_2022-04-04_17-02-22",
  "address": "",
  "binarySource": "606060405236156100755763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e77b2e081146100775780634bb77d9d146100d15780636c0daed8146101265780638da5cb5b1461018e578063dc726205146101ba578063f2fde38b146101df575bfe5b341561007f57fe5b6100cf600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050933593506101fd92505050565b005b34156100d957fe5b6100cf60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061032b95505050505050565b005b341561012e57fe5b61017c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965061041895505050505050565b60408051918252519081900360200190f35b341561019657fe5b61019e610491565b60408051600160a060020a039092168252519081900360200190f35b34156101c257fe5b61017c6004356104a0565b60408051918252519081900360200190f35b34156101e757fe5b6100cf600160a060020a03600435166104b2565b005b60005433600160a060020a039081169116146102195760006000fd5b8060016000846040518082805190602001908083835b6020831061024e5780518252601f19909201916020918201910161022f565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160002094909455505184517fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea49350429286929182918401908083835b602083106102de5780518252601f1990920191602091820191016102bf565b51815160001960209485036101000a01908116901991909116179052604080519490920184900384209684528301959095525080840186905292519283900360600192915050a15b5b5050565b600080548190819033600160a060020a0390811691161461034c5760006000fd5b83516000906002905b0611156103625760006000fd5b600092505b83516002905b0483101561041057838360020281518110151561038657fe5b90602001906020020151600102915083836002026001018151811015156103a957fe5b60209081029091018101516000848152600183526040908190208290558051428152928301859052828101829052519092507fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea49181900360600190a1600190920191610367565b5b5b50505050565b600060016000836040518082805190602001908083835b6020831061044e5780518252601f19909201916020918201910161042f565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205493505050505b919050565b600054600160a060020a031681565b60016020526000908152604090205481565b60005433600160a060020a039081169116146104ce5760006000fd5b600160a060020a03811615610506576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b505600a165627a7a72305820aa5623bfaf37c4e6558ffcd33cc3c9e526a87e233d3177b5a26708893eeb776c0029",
  "binaryHash": "1053663c",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820aa5623bfaf37c4e6558ffcd33cc3c9e526a87e233d3177b5a26708893eeb776c0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649059342850
    }
  },
  "runtimeCfg": {
    "bytecode": "606060405236156100755763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e77b2e081146100775780634bb77d9d146100d15780636c0daed8146101265780638da5cb5b1461018e578063dc726205146101ba578063f2fde38b146101df575bfe5b341561007f57fe5b6100cf600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050933593506101fd92505050565b005b34156100d957fe5b6100cf60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061032b95505050505050565b005b341561012e57fe5b61017c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965061041895505050505050565b60408051918252519081900360200190f35b341561019657fe5b61019e610491565b60408051600160a060020a039092168252519081900360200190f35b34156101c257fe5b61017c6004356104a0565b60408051918252519081900360200190f35b34156101e757fe5b6100cf600160a060020a03600435166104b2565b005b60005433600160a060020a039081169116146102195760006000fd5b8060016000846040518082805190602001908083835b6020831061024e5780518252601f19909201916020918201910161022f565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160002094909455505184517fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea49350429286929182918401908083835b602083106102de5780518252601f1990920191602091820191016102bf565b51815160001960209485036101000a01908116901991909116179052604080519490920184900384209684528301959095525080840186905292519283900360600192915050a15b5b5050565b600080548190819033600160a060020a0390811691161461034c5760006000fd5b83516000906002905b0611156103625760006000fd5b600092505b83516002905b0483101561041057838360020281518110151561038657fe5b90602001906020020151600102915083836002026001018151811015156103a957fe5b60209081029091018101516000848152600183526040908190208290558051428152928301859052828101829052519092507fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea49181900360600190a1600190920191610367565b5b5b50505050565b600060016000836040518082805190602001908083835b6020831061044e5780518252601f19909201916020918201910161042f565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205493505050505b919050565b600054600160a060020a031681565b60016020526000908152604090205481565b60005433600160a060020a039081169116146104ce5760006000fd5b600160a060020a03811615610506576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "6060604052361561007557",
        "parsedOpcodes": "0: PUSH1 0x60\n2: PUSH1 0x40\n4: MSTORE\n5: CALLDATASIZE\n6: ISZERO\n7: PUSH2 0x0075\n10: JUMPI"
      },
      {
        "offset": 11,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631e77b2e0811461007757",
        "parsedOpcodes": "11: PUSH4 0xffffffff\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: PUSH1 0x00\n48: CALLDATALOAD\n49: DIV\n50: AND\n51: PUSH4 0x1e77b2e0\n56: DUP2\n57: EQ\n58: PUSH2 0x0077\n61: JUMPI"
      },
      {
        "offset": 62,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80634bb77d9d146100d157",
        "parsedOpcodes": "62: DUP1\n63: PUSH4 0x4bb77d9d\n68: EQ\n69: PUSH2 0x00d1\n72: JUMPI"
      },
      {
        "offset": 73,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80636c0daed81461012657",
        "parsedOpcodes": "73: DUP1\n74: PUSH4 0x6c0daed8\n79: EQ\n80: PUSH2 0x0126\n83: JUMPI"
      },
      {
        "offset": 84,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638da5cb5b1461018e57",
        "parsedOpcodes": "84: DUP1\n85: PUSH4 0x8da5cb5b\n90: EQ\n91: PUSH2 0x018e\n94: JUMPI"
      },
      {
        "offset": 95,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063dc726205146101ba57",
        "parsedOpcodes": "95: DUP1\n96: PUSH4 0xdc726205\n101: EQ\n102: PUSH2 0x01ba\n105: JUMPI"
      },
      {
        "offset": 106,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f2fde38b146101df57",
        "parsedOpcodes": "106: DUP1\n107: PUSH4 0xf2fde38b\n112: EQ\n113: PUSH2 0x01df\n116: JUMPI"
      },
      {
        "offset": 117,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5bfe",
        "parsedOpcodes": "117: JUMPDEST\n118: INVALID"
      },
      {
        "offset": 119,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561007f57",
        "parsedOpcodes": "119: JUMPDEST\n120: CALLVALUE\n121: ISZERO\n122: PUSH2 0x007f\n125: JUMPI"
      },
      {
        "offset": 126,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "126: INVALID"
      },
      {
        "offset": 127,
        "length": 80,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100cf600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375094965050933593506101fd9250505056",
        "parsedOpcodes": "127: JUMPDEST\n128: PUSH2 0x00cf\n131: PUSH1 0x04\n133: DUP1\n134: DUP1\n135: CALLDATALOAD\n136: SWAP1\n137: PUSH1 0x20\n139: ADD\n140: SWAP1\n141: DUP3\n142: ADD\n143: DUP1\n144: CALLDATALOAD\n145: SWAP1\n146: PUSH1 0x20\n148: ADD\n149: SWAP1\n150: DUP1\n151: DUP1\n152: PUSH1 0x1f\n154: ADD\n155: PUSH1 0x20\n157: DUP1\n158: SWAP2\n159: DIV\n160: MUL\n161: PUSH1 0x20\n163: ADD\n164: PUSH1 0x40\n166: MLOAD\n167: SWAP1\n168: DUP2\n169: ADD\n170: PUSH1 0x40\n172: MSTORE\n173: DUP1\n174: SWAP4\n175: SWAP3\n176: SWAP2\n177: SWAP1\n178: DUP2\n179: DUP2\n180: MSTORE\n181: PUSH1 0x20\n183: ADD\n184: DUP4\n185: DUP4\n186: DUP1\n187: DUP3\n188: DUP5\n189: CALLDATACOPY\n190: POP\n191: SWAP5\n192: SWAP7\n193: POP\n194: POP\n195: SWAP4\n196: CALLDATALOAD\n197: SWAP4\n198: POP\n199: PUSH2 0x01fd\n202: SWAP3\n203: POP\n204: POP\n205: POP\n206: JUMP"
      },
      {
        "offset": 207,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "207: JUMPDEST\n208: STOP"
      },
      {
        "offset": 209,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156100d957",
        "parsedOpcodes": "209: JUMPDEST\n210: CALLVALUE\n211: ISZERO\n212: PUSH2 0x00d9\n215: JUMPI"
      },
      {
        "offset": 216,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "216: INVALID"
      },
      {
        "offset": 217,
        "length": 75,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100cf60048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061032b9550505050505056",
        "parsedOpcodes": "217: JUMPDEST\n218: PUSH2 0x00cf\n221: PUSH1 0x04\n223: DUP1\n224: DUP1\n225: CALLDATALOAD\n226: SWAP1\n227: PUSH1 0x20\n229: ADD\n230: SWAP1\n231: DUP3\n232: ADD\n233: DUP1\n234: CALLDATALOAD\n235: SWAP1\n236: PUSH1 0x20\n238: ADD\n239: SWAP1\n240: DUP1\n241: DUP1\n242: PUSH1 0x20\n244: MUL\n245: PUSH1 0x20\n247: ADD\n248: PUSH1 0x40\n250: MLOAD\n251: SWAP1\n252: DUP2\n253: ADD\n254: PUSH1 0x40\n256: MSTORE\n257: DUP1\n258: SWAP4\n259: SWAP3\n260: SWAP2\n261: SWAP1\n262: DUP2\n263: DUP2\n264: MSTORE\n265: PUSH1 0x20\n267: ADD\n268: DUP4\n269: DUP4\n270: PUSH1 0x20\n272: MUL\n273: DUP1\n274: DUP3\n275: DUP5\n276: CALLDATACOPY\n277: POP\n278: SWAP5\n279: SWAP7\n280: POP\n281: PUSH2 0x032b\n284: SWAP6\n285: POP\n286: POP\n287: POP\n288: POP\n289: POP\n290: POP\n291: JUMP"
      },
      {
        "offset": 292,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "292: JUMPDEST\n293: STOP"
      },
      {
        "offset": 294,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561012e57",
        "parsedOpcodes": "294: JUMPDEST\n295: CALLVALUE\n296: ISZERO\n297: PUSH2 0x012e\n300: JUMPI"
      },
      {
        "offset": 301,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "301: INVALID"
      },
      {
        "offset": 302,
        "length": 78,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61017c600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437509496506104189550505050505056",
        "parsedOpcodes": "302: JUMPDEST\n303: PUSH2 0x017c\n306: PUSH1 0x04\n308: DUP1\n309: DUP1\n310: CALLDATALOAD\n311: SWAP1\n312: PUSH1 0x20\n314: ADD\n315: SWAP1\n316: DUP3\n317: ADD\n318: DUP1\n319: CALLDATALOAD\n320: SWAP1\n321: PUSH1 0x20\n323: ADD\n324: SWAP1\n325: DUP1\n326: DUP1\n327: PUSH1 0x1f\n329: ADD\n330: PUSH1 0x20\n332: DUP1\n333: SWAP2\n334: DIV\n335: MUL\n336: PUSH1 0x20\n338: ADD\n339: PUSH1 0x40\n341: MLOAD\n342: SWAP1\n343: DUP2\n344: ADD\n345: PUSH1 0x40\n347: MSTORE\n348: DUP1\n349: SWAP4\n350: SWAP3\n351: SWAP2\n352: SWAP1\n353: DUP2\n354: DUP2\n355: MSTORE\n356: PUSH1 0x20\n358: ADD\n359: DUP4\n360: DUP4\n361: DUP1\n362: DUP3\n363: DUP5\n364: CALLDATACOPY\n365: POP\n366: SWAP5\n367: SWAP7\n368: POP\n369: PUSH2 0x0418\n372: SWAP6\n373: POP\n374: POP\n375: POP\n376: POP\n377: POP\n378: POP\n379: JUMP"
      },
      {
        "offset": 380,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "380: JUMPDEST\n381: PUSH1 0x40\n383: DUP1\n384: MLOAD\n385: SWAP2\n386: DUP3\n387: MSTORE\n388: MLOAD\n389: SWAP1\n390: DUP2\n391: SWAP1\n392: SUB\n393: PUSH1 0x20\n395: ADD\n396: SWAP1\n397: RETURN"
      },
      {
        "offset": 398,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b341561019657",
        "parsedOpcodes": "398: JUMPDEST\n399: CALLVALUE\n400: ISZERO\n401: PUSH2 0x0196\n404: JUMPI"
      },
      {
        "offset": 405,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "405: INVALID"
      },
      {
        "offset": 406,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b61019e61049156",
        "parsedOpcodes": "406: JUMPDEST\n407: PUSH2 0x019e\n410: PUSH2 0x0491\n413: JUMP"
      },
      {
        "offset": 414,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051600160a060020a039092168252519081900360200190f3",
        "parsedOpcodes": "414: JUMPDEST\n415: PUSH1 0x40\n417: DUP1\n418: MLOAD\n419: PUSH1 0x01\n421: PUSH1 0xa0\n423: PUSH1 0x02\n425: EXP\n426: SUB\n427: SWAP1\n428: SWAP3\n429: AND\n430: DUP3\n431: MSTORE\n432: MLOAD\n433: SWAP1\n434: DUP2\n435: SWAP1\n436: SUB\n437: PUSH1 0x20\n439: ADD\n440: SWAP1\n441: RETURN"
      },
      {
        "offset": 442,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101c257",
        "parsedOpcodes": "442: JUMPDEST\n443: CALLVALUE\n444: ISZERO\n445: PUSH2 0x01c2\n448: JUMPI"
      },
      {
        "offset": 449,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "449: INVALID"
      },
      {
        "offset": 450,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b61017c6004356104a056",
        "parsedOpcodes": "450: JUMPDEST\n451: PUSH2 0x017c\n454: PUSH1 0x04\n456: CALLDATALOAD\n457: PUSH2 0x04a0\n460: JUMP"
      },
      {
        "offset": 461,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "461: JUMPDEST\n462: PUSH1 0x40\n464: DUP1\n465: MLOAD\n466: SWAP2\n467: DUP3\n468: MSTORE\n469: MLOAD\n470: SWAP1\n471: DUP2\n472: SWAP1\n473: SUB\n474: PUSH1 0x20\n476: ADD\n477: SWAP1\n478: RETURN"
      },
      {
        "offset": 479,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b34156101e757",
        "parsedOpcodes": "479: JUMPDEST\n480: CALLVALUE\n481: ISZERO\n482: PUSH2 0x01e7\n485: JUMPI"
      },
      {
        "offset": 486,
        "length": 1,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "486: INVALID"
      },
      {
        "offset": 487,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100cf600160a060020a03600435166104b256",
        "parsedOpcodes": "487: JUMPDEST\n488: PUSH2 0x00cf\n491: PUSH1 0x01\n493: PUSH1 0xa0\n495: PUSH1 0x02\n497: EXP\n498: SUB\n499: PUSH1 0x04\n501: CALLDATALOAD\n502: AND\n503: PUSH2 0x04b2\n506: JUMP"
      },
      {
        "offset": 507,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "507: JUMPDEST\n508: STOP"
      },
      {
        "offset": 509,
        "length": 23,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60005433600160a060020a0390811691161461021957",
        "parsedOpcodes": "509: JUMPDEST\n510: PUSH1 0x00\n512: SLOAD\n513: CALLER\n514: PUSH1 0x01\n516: PUSH1 0xa0\n518: PUSH1 0x02\n520: EXP\n521: SUB\n522: SWAP1\n523: DUP2\n524: AND\n525: SWAP2\n526: AND\n527: EQ\n528: PUSH2 0x0219\n531: JUMPI"
      },
      {
        "offset": 532,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "532: PUSH1 0x00\n534: PUSH1 0x00\n536: REVERT"
      },
      {
        "offset": 537,
        "length": 22,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b806001600084604051808280519060200190808383",
        "parsedOpcodes": "537: JUMPDEST\n538: DUP1\n539: PUSH1 0x01\n541: PUSH1 0x00\n543: DUP5\n544: PUSH1 0x40\n546: MLOAD\n547: DUP1\n548: DUP3\n549: DUP1\n550: MLOAD\n551: SWAP1\n552: PUSH1 0x20\n554: ADD\n555: SWAP1\n556: DUP1\n557: DUP4\n558: DUP4"
      },
      {
        "offset": 559,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061024e57",
        "parsedOpcodes": "559: JUMPDEST\n560: PUSH1 0x20\n562: DUP4\n563: LT\n564: PUSH2 0x024e\n567: JUMPI"
      },
      {
        "offset": 568,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161022f56",
        "parsedOpcodes": "568: DUP1\n569: MLOAD\n570: DUP3\n571: MSTORE\n572: PUSH1 0x1f\n574: NOT\n575: SWAP1\n576: SWAP3\n577: ADD\n578: SWAP2\n579: PUSH1 0x20\n581: SWAP2\n582: DUP3\n583: ADD\n584: SWAP2\n585: ADD\n586: PUSH2 0x022f\n589: JUMP"
      },
      {
        "offset": 590,
        "length": 113,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652858101969096525092830160002094909455505184517fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea4935042928692918291840190808383",
        "parsedOpcodes": "590: JUMPDEST\n591: MLOAD\n592: DUP2\n593: MLOAD\n594: PUSH1 0x20\n596: SWAP4\n597: DUP5\n598: SUB\n599: PUSH2 0x0100\n602: EXP\n603: PUSH1 0x00\n605: NOT\n606: ADD\n607: DUP1\n608: NOT\n609: SWAP1\n610: SWAP3\n611: AND\n612: SWAP2\n613: AND\n614: OR\n615: SWAP1\n616: MSTORE\n617: PUSH1 0x40\n619: DUP1\n620: MLOAD\n621: SWAP3\n622: SWAP1\n623: SWAP5\n624: ADD\n625: DUP3\n626: SWAP1\n627: SUB\n628: SWAP1\n629: SWAP2\n630: SHA3\n631: DUP7\n632: MSTORE\n633: DUP6\n634: DUP2\n635: ADD\n636: SWAP7\n637: SWAP1\n638: SWAP7\n639: MSTORE\n640: POP\n641: SWAP3\n642: DUP4\n643: ADD\n644: PUSH1 0x00\n646: SHA3\n647: SWAP5\n648: SWAP1\n649: SWAP5\n650: SSTORE\n651: POP\n652: MLOAD\n653: DUP5\n654: MLOAD\n655: PUSH32 0xac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea4\n688: SWAP4\n689: POP\n690: TIMESTAMP\n691: SWAP3\n692: DUP7\n693: SWAP3\n694: SWAP2\n695: DUP3\n696: SWAP2\n697: DUP5\n698: ADD\n699: SWAP1\n700: DUP1\n701: DUP4\n702: DUP4"
      },
      {
        "offset": 703,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106102de57",
        "parsedOpcodes": "703: JUMPDEST\n704: PUSH1 0x20\n706: DUP4\n707: LT\n708: PUSH2 0x02de\n711: JUMPI"
      },
      {
        "offset": 712,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016102bf56",
        "parsedOpcodes": "712: DUP1\n713: MLOAD\n714: DUP3\n715: MSTORE\n716: PUSH1 0x1f\n718: NOT\n719: SWAP1\n720: SWAP3\n721: ADD\n722: SWAP2\n723: PUSH1 0x20\n725: SWAP2\n726: DUP3\n727: ADD\n728: SWAP2\n729: ADD\n730: PUSH2 0x02bf\n733: JUMP"
      },
      {
        "offset": 734,
        "length": 72,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b51815160001960209485036101000a01908116901991909116179052604080519490920184900384209684528301959095525080840186905292519283900360600192915050a1",
        "parsedOpcodes": "734: JUMPDEST\n735: MLOAD\n736: DUP2\n737: MLOAD\n738: PUSH1 0x00\n740: NOT\n741: PUSH1 0x20\n743: SWAP5\n744: DUP6\n745: SUB\n746: PUSH2 0x0100\n749: EXP\n750: ADD\n751: SWAP1\n752: DUP2\n753: AND\n754: SWAP1\n755: NOT\n756: SWAP2\n757: SWAP1\n758: SWAP2\n759: AND\n760: OR\n761: SWAP1\n762: MSTORE\n763: PUSH1 0x40\n765: DUP1\n766: MLOAD\n767: SWAP5\n768: SWAP1\n769: SWAP3\n770: ADD\n771: DUP5\n772: SWAP1\n773: SUB\n774: DUP5\n775: SHA3\n776: SWAP7\n777: DUP5\n778: MSTORE\n779: DUP4\n780: ADD\n781: SWAP6\n782: SWAP1\n783: SWAP6\n784: MSTORE\n785: POP\n786: DUP1\n787: DUP5\n788: ADD\n789: DUP7\n790: SWAP1\n791: MSTORE\n792: SWAP3\n793: MLOAD\n794: SWAP3\n795: DUP4\n796: SWAP1\n797: SUB\n798: PUSH1 0x60\n800: ADD\n801: SWAP3\n802: SWAP2\n803: POP\n804: POP\n805: LOG1"
      },
      {
        "offset": 806,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "806: JUMPDEST"
      },
      {
        "offset": 807,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "807: JUMPDEST\n808: POP\n809: POP\n810: JUMP"
      },
      {
        "offset": 811,
        "length": 28,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600080548190819033600160a060020a0390811691161461034c57",
        "parsedOpcodes": "811: JUMPDEST\n812: PUSH1 0x00\n814: DUP1\n815: SLOAD\n816: DUP2\n817: SWAP1\n818: DUP2\n819: SWAP1\n820: CALLER\n821: PUSH1 0x01\n823: PUSH1 0xa0\n825: PUSH1 0x02\n827: EXP\n828: SUB\n829: SWAP1\n830: DUP2\n831: AND\n832: SWAP2\n833: AND\n834: EQ\n835: PUSH2 0x034c\n838: JUMPI"
      },
      {
        "offset": 839,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "839: PUSH1 0x00\n841: PUSH1 0x00\n843: REVERT"
      },
      {
        "offset": 844,
        "length": 9,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b8351600090600290",
        "parsedOpcodes": "844: JUMPDEST\n845: DUP4\n846: MLOAD\n847: PUSH1 0x00\n849: SWAP1\n850: PUSH1 0x02\n852: SWAP1"
      },
      {
        "offset": 853,
        "length": 8,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b06111561036257",
        "parsedOpcodes": "853: JUMPDEST\n854: MOD\n855: GT\n856: ISZERO\n857: PUSH2 0x0362\n860: JUMPI"
      },
      {
        "offset": 861,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "861: PUSH1 0x00\n863: PUSH1 0x00\n865: REVERT"
      },
      {
        "offset": 866,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60009250",
        "parsedOpcodes": "866: JUMPDEST\n867: PUSH1 0x00\n869: SWAP3\n870: POP"
      },
      {
        "offset": 871,
        "length": 6,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b8351600290",
        "parsedOpcodes": "871: JUMPDEST\n872: DUP4\n873: MLOAD\n874: PUSH1 0x02\n876: SWAP1"
      },
      {
        "offset": 877,
        "length": 9,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b0483101561041057",
        "parsedOpcodes": "877: JUMPDEST\n878: DIV\n879: DUP4\n880: LT\n881: ISZERO\n882: PUSH2 0x0410\n885: JUMPI"
      },
      {
        "offset": 886,
        "length": 15,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "838360020281518110151561038657",
        "parsedOpcodes": "886: DUP4\n887: DUP4\n888: PUSH1 0x02\n890: MUL\n891: DUP2\n892: MLOAD\n893: DUP2\n894: LT\n895: ISZERO\n896: ISZERO\n897: PUSH2 0x0386\n900: JUMPI"
      },
      {
        "offset": 901,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "901: INVALID"
      },
      {
        "offset": 902,
        "length": 34,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b90602001906020020151600102915083836002026001018151811015156103a957",
        "parsedOpcodes": "902: JUMPDEST\n903: SWAP1\n904: PUSH1 0x20\n906: ADD\n907: SWAP1\n908: PUSH1 0x20\n910: MUL\n911: ADD\n912: MLOAD\n913: PUSH1 0x01\n915: MUL\n916: SWAP2\n917: POP\n918: DUP4\n919: DUP4\n920: PUSH1 0x02\n922: MUL\n923: PUSH1 0x01\n925: ADD\n926: DUP2\n927: MLOAD\n928: DUP2\n929: LT\n930: ISZERO\n931: ISZERO\n932: PUSH2 0x03a9\n935: JUMPI"
      },
      {
        "offset": 936,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "936: INVALID"
      },
      {
        "offset": 937,
        "length": 103,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b60209081029091018101516000848152600183526040908190208290558051428152928301859052828101829052519092507fac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea49181900360600190a160019092019161036756",
        "parsedOpcodes": "937: JUMPDEST\n938: PUSH1 0x20\n940: SWAP1\n941: DUP2\n942: MUL\n943: SWAP1\n944: SWAP2\n945: ADD\n946: DUP2\n947: ADD\n948: MLOAD\n949: PUSH1 0x00\n951: DUP5\n952: DUP2\n953: MSTORE\n954: PUSH1 0x01\n956: DUP4\n957: MSTORE\n958: PUSH1 0x40\n960: SWAP1\n961: DUP2\n962: SWAP1\n963: SHA3\n964: DUP3\n965: SWAP1\n966: SSTORE\n967: DUP1\n968: MLOAD\n969: TIMESTAMP\n970: DUP2\n971: MSTORE\n972: SWAP3\n973: DUP4\n974: ADD\n975: DUP6\n976: SWAP1\n977: MSTORE\n978: DUP3\n979: DUP2\n980: ADD\n981: DUP3\n982: SWAP1\n983: MSTORE\n984: MLOAD\n985: SWAP1\n986: SWAP3\n987: POP\n988: PUSH32 0xac1deea0e640492bbd200ce9e2992f2cab37749ee28a89e8ae7fb852b9fb3ea4\n1021: SWAP2\n1022: DUP2\n1023: SWAP1\n1024: SUB\n1025: PUSH1 0x60\n1027: ADD\n1028: SWAP1\n1029: LOG1\n1030: PUSH1 0x01\n1032: SWAP1\n1033: SWAP3\n1034: ADD\n1035: SWAP2\n1036: PUSH2 0x0367\n1039: JUMP"
      },
      {
        "offset": 1040,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1040: JUMPDEST"
      },
      {
        "offset": 1041,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1041: JUMPDEST"
      },
      {
        "offset": 1042,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "1042: JUMPDEST\n1043: POP\n1044: POP\n1045: POP\n1046: POP\n1047: JUMP"
      },
      {
        "offset": 1048,
        "length": 23,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b60006001600083604051808280519060200190808383",
        "parsedOpcodes": "1048: JUMPDEST\n1049: PUSH1 0x00\n1051: PUSH1 0x01\n1053: PUSH1 0x00\n1055: DUP4\n1056: PUSH1 0x40\n1058: MLOAD\n1059: DUP1\n1060: DUP3\n1061: DUP1\n1062: MLOAD\n1063: SWAP1\n1064: PUSH1 0x20\n1066: ADD\n1067: SWAP1\n1068: DUP1\n1069: DUP4\n1070: DUP4"
      },
      {
        "offset": 1071,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061044e57",
        "parsedOpcodes": "1071: JUMPDEST\n1072: PUSH1 0x20\n1074: DUP4\n1075: LT\n1076: PUSH2 0x044e\n1079: JUMPI"
      },
      {
        "offset": 1080,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161042f56",
        "parsedOpcodes": "1080: DUP1\n1081: MLOAD\n1082: DUP3\n1083: MSTORE\n1084: PUSH1 0x1f\n1086: NOT\n1087: SWAP1\n1088: SWAP3\n1089: ADD\n1090: SWAP2\n1091: PUSH1 0x20\n1093: SWAP2\n1094: DUP3\n1095: ADD\n1096: SWAP2\n1097: ADD\n1098: PUSH2 0x042f\n1101: JUMP"
      },
      {
        "offset": 1102,
        "length": 62,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790526040805192909401829003909120865285019590955292909201600020549350505050",
        "parsedOpcodes": "1102: JUMPDEST\n1103: MLOAD\n1104: DUP2\n1105: MLOAD\n1106: PUSH1 0x20\n1108: SWAP4\n1109: DUP5\n1110: SUB\n1111: PUSH2 0x0100\n1114: EXP\n1115: PUSH1 0x00\n1117: NOT\n1118: ADD\n1119: DUP1\n1120: NOT\n1121: SWAP1\n1122: SWAP3\n1123: AND\n1124: SWAP2\n1125: AND\n1126: OR\n1127: SWAP1\n1128: MSTORE\n1129: PUSH1 0x40\n1131: DUP1\n1132: MLOAD\n1133: SWAP3\n1134: SWAP1\n1135: SWAP5\n1136: ADD\n1137: DUP3\n1138: SWAP1\n1139: SUB\n1140: SWAP1\n1141: SWAP2\n1142: SHA3\n1143: DUP7\n1144: MSTORE\n1145: DUP6\n1146: ADD\n1147: SWAP6\n1148: SWAP1\n1149: SWAP6\n1150: MSTORE\n1151: SWAP3\n1152: SWAP1\n1153: SWAP3\n1154: ADD\n1155: PUSH1 0x00\n1157: SHA3\n1158: SLOAD\n1159: SWAP4\n1160: POP\n1161: POP\n1162: POP\n1163: POP"
      },
      {
        "offset": 1164,
        "length": 5,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b91905056",
        "parsedOpcodes": "1164: JUMPDEST\n1165: SWAP2\n1166: SWAP1\n1167: POP\n1168: JUMP"
      },
      {
        "offset": 1169,
        "length": 15,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600054600160a060020a03168156",
        "parsedOpcodes": "1169: JUMPDEST\n1170: PUSH1 0x00\n1172: SLOAD\n1173: PUSH1 0x01\n1175: PUSH1 0xa0\n1177: PUSH1 0x02\n1179: EXP\n1180: SUB\n1181: AND\n1182: DUP2\n1183: JUMP"
      },
      {
        "offset": 1184,
        "length": 18,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001602052600090815260409020548156",
        "parsedOpcodes": "1184: JUMPDEST\n1185: PUSH1 0x01\n1187: PUSH1 0x20\n1189: MSTORE\n1190: PUSH1 0x00\n1192: SWAP1\n1193: DUP2\n1194: MSTORE\n1195: PUSH1 0x40\n1197: SWAP1\n1198: SHA3\n1199: SLOAD\n1200: DUP2\n1201: JUMP"
      },
      {
        "offset": 1202,
        "length": 23,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60005433600160a060020a039081169116146104ce57",
        "parsedOpcodes": "1202: JUMPDEST\n1203: PUSH1 0x00\n1205: SLOAD\n1206: CALLER\n1207: PUSH1 0x01\n1209: PUSH1 0xa0\n1211: PUSH1 0x02\n1213: EXP\n1214: SUB\n1215: SWAP1\n1216: DUP2\n1217: AND\n1218: SWAP2\n1219: AND\n1220: EQ\n1221: PUSH2 0x04ce\n1224: JUMPI"
      },
      {
        "offset": 1225,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60006000fd",
        "parsedOpcodes": "1225: PUSH1 0x00\n1227: PUSH1 0x00\n1229: REVERT"
      },
      {
        "offset": 1230,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160a060020a0381161561050657",
        "parsedOpcodes": "1230: JUMPDEST\n1231: PUSH1 0x01\n1233: PUSH1 0xa0\n1235: PUSH1 0x02\n1237: EXP\n1238: SUB\n1239: DUP2\n1240: AND\n1241: ISZERO\n1242: PUSH2 0x0506\n1245: JUMPI"
      },
      {
        "offset": 1246,
        "length": 40,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038316179055",
        "parsedOpcodes": "1246: PUSH1 0x00\n1248: DUP1\n1249: SLOAD\n1250: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1271: NOT\n1272: AND\n1273: PUSH1 0x01\n1275: PUSH1 0xa0\n1277: PUSH1 0x02\n1279: EXP\n1280: SUB\n1281: DUP4\n1282: AND\n1283: OR\n1284: SWAP1\n1285: SSTORE"
      },
      {
        "offset": 1286,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1286: JUMPDEST"
      },
      {
        "offset": 1287,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "1287: JUMPDEST"
      },
      {
        "offset": 1288,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1288: JUMPDEST\n1289: POP\n1290: JUMP"
      },
      {
        "offset": 1291,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1291: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          11,
          117
        ]
      },
      {
        "from": 11,
        "to": [
          62,
          119
        ]
      },
      {
        "from": 62,
        "to": [
          73,
          209
        ]
      },
      {
        "from": 73,
        "to": [
          84,
          294
        ]
      },
      {
        "from": 84,
        "to": [
          95,
          398
        ]
      },
      {
        "from": 95,
        "to": [
          106,
          442
        ]
      },
      {
        "from": 106,
        "to": [
          117,
          479
        ]
      },
      {
        "from": 117,
        "to": [
          1291
        ]
      },
      {
        "from": 119,
        "to": [
          126,
          127
        ]
      },
      {
        "from": 126,
        "to": [
          1291
        ]
      },
      {
        "from": 127,
        "to": [
          509
        ]
      },
      {
        "from": 207,
        "to": [
          1291
        ]
      },
      {
        "from": 209,
        "to": [
          216,
          217
        ]
      },
      {
        "from": 216,
        "to": [
          1291
        ]
      },
      {
        "from": 217,
        "to": [
          811
        ]
      },
      {
        "from": 292,
        "to": [
          1291
        ]
      },
      {
        "from": 294,
        "to": [
          301,
          302
        ]
      },
      {
        "from": 301,
        "to": [
          1291
        ]
      },
      {
        "from": 302,
        "to": [
          1048
        ]
      },
      {
        "from": 380,
        "to": [
          1291
        ]
      },
      {
        "from": 398,
        "to": [
          405,
          406
        ]
      },
      {
        "from": 405,
        "to": [
          1291
        ]
      },
      {
        "from": 406,
        "to": [
          1169,
          1169
        ]
      },
      {
        "from": 414,
        "to": [
          1291
        ]
      },
      {
        "from": 442,
        "to": [
          449,
          450
        ]
      },
      {
        "from": 449,
        "to": [
          1291
        ]
      },
      {
        "from": 450,
        "to": [
          1184,
          1184
        ]
      },
      {
        "from": 461,
        "to": [
          1291
        ]
      },
      {
        "from": 479,
        "to": [
          486,
          487
        ]
      },
      {
        "from": 486,
        "to": [
          1291
        ]
      },
      {
        "from": 487,
        "to": [
          1202,
          1202
        ]
      },
      {
        "from": 507,
        "to": [
          1291
        ]
      },
      {
        "from": 509,
        "to": [
          532,
          537
        ]
      },
      {
        "from": 532,
        "to": [
          1291
        ]
      },
      {
        "from": 537,
        "to": [
          559
        ]
      },
      {
        "from": 559,
        "to": [
          568,
          590
        ]
      },
      {
        "from": 568,
        "to": [
          559,
          559
        ]
      },
      {
        "from": 590,
        "to": [
          703
        ]
      },
      {
        "from": 703,
        "to": [
          712,
          734
        ]
      },
      {
        "from": 712,
        "to": [
          703,
          703
        ]
      },
      {
        "from": 734,
        "to": [
          806
        ]
      },
      {
        "from": 806,
        "to": [
          807
        ]
      },
      {
        "from": 807,
        "to": [
          207
        ]
      },
      {
        "from": 811,
        "to": [
          839,
          844
        ]
      },
      {
        "from": 839,
        "to": [
          1291
        ]
      },
      {
        "from": 844,
        "to": [
          853
        ]
      },
      {
        "from": 853,
        "to": [
          861,
          866
        ]
      },
      {
        "from": 861,
        "to": [
          1291
        ]
      },
      {
        "from": 866,
        "to": [
          871
        ]
      },
      {
        "from": 871,
        "to": [
          877
        ]
      },
      {
        "from": 877,
        "to": [
          886,
          1040
        ]
      },
      {
        "from": 886,
        "to": [
          901,
          902
        ]
      },
      {
        "from": 901,
        "to": [
          1291
        ]
      },
      {
        "from": 902,
        "to": [
          936,
          937
        ]
      },
      {
        "from": 936,
        "to": [
          1291
        ]
      },
      {
        "from": 937,
        "to": [
          871,
          871,
          871
        ]
      },
      {
        "from": 1040,
        "to": [
          1041
        ]
      },
      {
        "from": 1041,
        "to": [
          1042
        ]
      },
      {
        "from": 1042,
        "to": [
          207,
          207
        ]
      },
      {
        "from": 1048,
        "to": [
          1071
        ]
      },
      {
        "from": 1071,
        "to": [
          1080,
          1102
        ]
      },
      {
        "from": 1080,
        "to": [
          1071,
          1071
        ]
      },
      {
        "from": 1102,
        "to": [
          1164
        ]
      },
      {
        "from": 1164,
        "to": [
          380
        ]
      },
      {
        "from": 1169,
        "to": [
          414
        ]
      },
      {
        "from": 1184,
        "to": [
          380
        ]
      },
      {
        "from": 1202,
        "to": [
          1225,
          1230
        ]
      },
      {
        "from": 1225,
        "to": [
          1291
        ]
      },
      {
        "from": 1230,
        "to": [
          1246,
          1286
        ]
      },
      {
        "from": 1246,
        "to": [
          1286
        ]
      },
      {
        "from": 1286,
        "to": [
          1287
        ]
      },
      {
        "from": 1287,
        "to": [
          1288
        ]
      },
      {
        "from": 1288,
        "to": [
          207
        ]
      },
      {
        "from": 1291,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 4 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 133
    }
  }
}