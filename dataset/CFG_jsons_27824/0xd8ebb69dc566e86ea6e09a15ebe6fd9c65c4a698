{
  "name": "Analysis_2022-07-06_21-48-29",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063b5fe8a7914610051578063d08c4dfc146100b0578063e356fd5214610104578063fee515d51461010c575b600080fd5b610093600480360360a081101561006757600080fd5b506001600160a01b03813581169160208101359160408201351690606081013590608001351515610131565b60408051921515835260ff90911660208301528051918290030190f35b6100f2600480360360a08110156100c657600080fd5b506001600160a01b03813581169160208101359160408201351690606081013590608001351515610225565b60408051918252519081900360200190f35b6100f26102c9565b6101146102d0565b604080516001600160e01b03199092168252519081900360200190f35b6040805163809a9e5560e01b81526001600160a01b03878116600483015285166024820152604481018690528151600092839273818e6fecd516ecc3849daf6845e3ec868087b75592839263809a9e559260648082019391829003018186803b15801561019d57600080fd5b505afa9250505080156101c957506040513d60408110156101bd57600080fd5b50805160209091015160015b6101db5760006007925092505061021b565b8515610202578682106101f957600160035b9450945050505061021b565b600060056101ed565b86821161021257600160046101ed565b600060066101ed565b9550959350505050565b6040805163809a9e5560e01b81526001600160a01b0387811660048301528516602482015260448101869052815160009273818e6fecd516ecc3849daf6845e3ec868087b755928492849263809a9e559260648082019391829003018186803b15801561029157600080fd5b505afa1580156102a5573d6000803e3d6000fd5b505050506040513d60408110156102bb57600080fd5b505198975050505050505050565b6207a12081565b63b5fe8a7960e01b9056fea264697066735822122016adbd66caae61e0a1a8e8deab416dc512b29e8c7b15802b3087fe6488865c4b64736f6c63430006010033",
  "binaryHash": "fd85293b",
  "isOnlyRuntime": true,
  "metadata": "a264697066735822122016adbd66caae61e0a1a8e8deab416dc512b29e8c7b15802b3087fe6488865c4b64736f6c63430006010033",
  "solidityVersion": "0.6.1",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657111709549
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063b5fe8a7914610051578063d08c4dfc146100b0578063e356fd5214610104578063fee515d51461010c575b600080fd5b610093600480360360a081101561006757600080fd5b506001600160a01b03813581169160208101359160408201351690606081013590608001351515610131565b60408051921515835260ff90911660208301528051918290030190f35b6100f2600480360360a08110156100c657600080fd5b506001600160a01b03813581169160208101359160408201351690606081013590608001351515610225565b60408051918252519081900360200190f35b6100f26102c9565b6101146102d0565b604080516001600160e01b03199092168252519081900360200190f35b6040805163809a9e5560e01b81526001600160a01b03878116600483015285166024820152604481018690528151600092839273818e6fecd516ecc3849daf6845e3ec868087b75592839263809a9e559260648082019391829003018186803b15801561019d57600080fd5b505afa9250505080156101c957506040513d60408110156101bd57600080fd5b50805160209091015160015b6101db5760006007925092505061021b565b8515610202578682106101f957600160035b9450945050505061021b565b600060056101ed565b86821161021257600160046101ed565b600060066101ed565b9550959350505050565b6040805163809a9e5560e01b81526001600160a01b0387811660048301528516602482015260448101869052815160009273818e6fecd516ecc3849daf6845e3ec868087b755928492849263809a9e559260648082019391829003018186803b15801561029157600080fd5b505afa1580156102a5573d6000803e3d6000fd5b505050506040513d60408110156102bb57600080fd5b505198975050505050505050565b6207a12081565b63b5fe8a7960e01b9056fe",
    "remainingData": "fe",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061004c57",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x004c\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c8063b5fe8a791461005157",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0xb5fe8a79\n38: EQ\n39: PUSH2 0x0051\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d08c4dfc146100b057",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0xd08c4dfc\n49: EQ\n50: PUSH2 0x00b0\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063e356fd521461010457",
        "parsedOpcodes": "54: DUP1\n55: PUSH4 0xe356fd52\n60: EQ\n61: PUSH2 0x0104\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063fee515d51461010c57",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0xfee515d5\n71: EQ\n72: PUSH2 0x010c\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "76: JUMPDEST\n77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b610093600480360360a081101561006757",
        "parsedOpcodes": "81: JUMPDEST\n82: PUSH2 0x0093\n85: PUSH1 0x04\n87: DUP1\n88: CALLDATASIZE\n89: SUB\n90: PUSH1 0xa0\n92: DUP2\n93: LT\n94: ISZERO\n95: PUSH2 0x0067\n98: JUMPI"
      },
      {
        "offset": 99,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "99: PUSH1 0x00\n101: DUP1\n102: REVERT"
      },
      {
        "offset": 103,
        "length": 44,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b506001600160a01b0381358116916020810135916040820135169060608101359060800135151561013156",
        "parsedOpcodes": "103: JUMPDEST\n104: POP\n105: PUSH1 0x01\n107: PUSH1 0x01\n109: PUSH1 0xa0\n111: SHL\n112: SUB\n113: DUP2\n114: CALLDATALOAD\n115: DUP2\n116: AND\n117: SWAP2\n118: PUSH1 0x20\n120: DUP2\n121: ADD\n122: CALLDATALOAD\n123: SWAP2\n124: PUSH1 0x40\n126: DUP3\n127: ADD\n128: CALLDATALOAD\n129: AND\n130: SWAP1\n131: PUSH1 0x60\n133: DUP2\n134: ADD\n135: CALLDATALOAD\n136: SWAP1\n137: PUSH1 0x80\n139: ADD\n140: CALLDATALOAD\n141: ISZERO\n142: ISZERO\n143: PUSH2 0x0131\n146: JUMP"
      },
      {
        "offset": 147,
        "length": 29,
        "type": "dispatcher",
        "stackBalance": -2,
        "bytecodeHex": "5b60408051921515835260ff90911660208301528051918290030190f3",
        "parsedOpcodes": "147: JUMPDEST\n148: PUSH1 0x40\n150: DUP1\n151: MLOAD\n152: SWAP3\n153: ISZERO\n154: ISZERO\n155: DUP4\n156: MSTORE\n157: PUSH1 0xff\n159: SWAP1\n160: SWAP2\n161: AND\n162: PUSH1 0x20\n164: DUP4\n165: ADD\n166: MSTORE\n167: DUP1\n168: MLOAD\n169: SWAP2\n170: DUP3\n171: SWAP1\n172: SUB\n173: ADD\n174: SWAP1\n175: RETURN"
      },
      {
        "offset": 176,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6100f2600480360360a08110156100c657",
        "parsedOpcodes": "176: JUMPDEST\n177: PUSH2 0x00f2\n180: PUSH1 0x04\n182: DUP1\n183: CALLDATASIZE\n184: SUB\n185: PUSH1 0xa0\n187: DUP2\n188: LT\n189: ISZERO\n190: PUSH2 0x00c6\n193: JUMPI"
      },
      {
        "offset": 194,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "194: PUSH1 0x00\n196: DUP1\n197: REVERT"
      },
      {
        "offset": 198,
        "length": 44,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b506001600160a01b0381358116916020810135916040820135169060608101359060800135151561022556",
        "parsedOpcodes": "198: JUMPDEST\n199: POP\n200: PUSH1 0x01\n202: PUSH1 0x01\n204: PUSH1 0xa0\n206: SHL\n207: SUB\n208: DUP2\n209: CALLDATALOAD\n210: DUP2\n211: AND\n212: SWAP2\n213: PUSH1 0x20\n215: DUP2\n216: ADD\n217: CALLDATALOAD\n218: SWAP2\n219: PUSH1 0x40\n221: DUP3\n222: ADD\n223: CALLDATALOAD\n224: AND\n225: SWAP1\n226: PUSH1 0x60\n228: DUP2\n229: ADD\n230: CALLDATALOAD\n231: SWAP1\n232: PUSH1 0x80\n234: ADD\n235: CALLDATALOAD\n236: ISZERO\n237: ISZERO\n238: PUSH2 0x0225\n241: JUMP"
      },
      {
        "offset": 242,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60408051918252519081900360200190f3",
        "parsedOpcodes": "242: JUMPDEST\n243: PUSH1 0x40\n245: DUP1\n246: MLOAD\n247: SWAP2\n248: DUP3\n249: MSTORE\n250: MLOAD\n251: SWAP1\n252: DUP2\n253: SWAP1\n254: SUB\n255: PUSH1 0x20\n257: ADD\n258: SWAP1\n259: RETURN"
      },
      {
        "offset": 260,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100f26102c956",
        "parsedOpcodes": "260: JUMPDEST\n261: PUSH2 0x00f2\n264: PUSH2 0x02c9\n267: JUMP"
      },
      {
        "offset": 268,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6101146102d056",
        "parsedOpcodes": "268: JUMPDEST\n269: PUSH2 0x0114\n272: PUSH2 0x02d0\n275: JUMP"
      },
      {
        "offset": 276,
        "length": 29,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080516001600160e01b03199092168252519081900360200190f3",
        "parsedOpcodes": "276: JUMPDEST\n277: PUSH1 0x40\n279: DUP1\n280: MLOAD\n281: PUSH1 0x01\n283: PUSH1 0x01\n285: PUSH1 0xe0\n287: SHL\n288: SUB\n289: NOT\n290: SWAP1\n291: SWAP3\n292: AND\n293: DUP3\n294: MSTORE\n295: MLOAD\n296: SWAP1\n297: DUP2\n298: SWAP1\n299: SUB\n300: PUSH1 0x20\n302: ADD\n303: SWAP1\n304: RETURN"
      },
      {
        "offset": 305,
        "length": 104,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b6040805163809a9e5560e01b81526001600160a01b03878116600483015285166024820152604481018690528151600092839273818e6fecd516ecc3849daf6845e3ec868087b75592839263809a9e559260648082019391829003018186803b15801561019d57",
        "parsedOpcodes": "305: JUMPDEST\n306: PUSH1 0x40\n308: DUP1\n309: MLOAD\n310: PUSH4 0x809a9e55\n315: PUSH1 0xe0\n317: SHL\n318: DUP2\n319: MSTORE\n320: PUSH1 0x01\n322: PUSH1 0x01\n324: PUSH1 0xa0\n326: SHL\n327: SUB\n328: DUP8\n329: DUP2\n330: AND\n331: PUSH1 0x04\n333: DUP4\n334: ADD\n335: MSTORE\n336: DUP6\n337: AND\n338: PUSH1 0x24\n340: DUP3\n341: ADD\n342: MSTORE\n343: PUSH1 0x44\n345: DUP2\n346: ADD\n347: DUP7\n348: SWAP1\n349: MSTORE\n350: DUP2\n351: MLOAD\n352: PUSH1 0x00\n354: SWAP3\n355: DUP4\n356: SWAP3\n357: PUSH20 0x818e6fecd516ecc3849daf6845e3ec868087b755\n378: SWAP3\n379: DUP4\n380: SWAP3\n381: PUSH4 0x809a9e55\n386: SWAP3\n387: PUSH1 0x64\n389: DUP1\n390: DUP3\n391: ADD\n392: SWAP4\n393: SWAP2\n394: DUP3\n395: SWAP1\n396: SUB\n397: ADD\n398: DUP2\n399: DUP7\n400: DUP1\n401: EXTCODESIZE\n402: ISZERO\n403: DUP1\n404: ISZERO\n405: PUSH2 0x019d\n408: JUMPI"
      },
      {
        "offset": 409,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "409: PUSH1 0x00\n411: DUP1\n412: REVERT"
      },
      {
        "offset": 413,
        "length": 14,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b505afa9250505080156101c957",
        "parsedOpcodes": "413: JUMPDEST\n414: POP\n415: GAS\n416: STATICCALL\n417: SWAP3\n418: POP\n419: POP\n420: POP\n421: DUP1\n422: ISZERO\n423: PUSH2 0x01c9\n426: JUMPI"
      },
      {
        "offset": 427,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "506040513d60408110156101bd57",
        "parsedOpcodes": "427: POP\n428: PUSH1 0x40\n430: MLOAD\n431: RETURNDATASIZE\n432: PUSH1 0x40\n434: DUP2\n435: LT\n436: ISZERO\n437: PUSH2 0x01bd\n440: JUMPI"
      },
      {
        "offset": 441,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "441: PUSH1 0x00\n443: DUP1\n444: REVERT"
      },
      {
        "offset": 445,
        "length": 12,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b5080516020909101516001",
        "parsedOpcodes": "445: JUMPDEST\n446: POP\n447: DUP1\n448: MLOAD\n449: PUSH1 0x20\n451: SWAP1\n452: SWAP2\n453: ADD\n454: MLOAD\n455: PUSH1 0x01"
      },
      {
        "offset": 457,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6101db57",
        "parsedOpcodes": "457: JUMPDEST\n458: PUSH2 0x01db\n461: JUMPI"
      },
      {
        "offset": 462,
        "length": 13,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "60006007925092505061021b56",
        "parsedOpcodes": "462: PUSH1 0x00\n464: PUSH1 0x07\n466: SWAP3\n467: POP\n468: SWAP3\n469: POP\n470: POP\n471: PUSH2 0x021b\n474: JUMP"
      },
      {
        "offset": 475,
        "length": 7,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b851561020257",
        "parsedOpcodes": "475: JUMPDEST\n476: DUP6\n477: ISZERO\n478: PUSH2 0x0202\n481: JUMPI"
      },
      {
        "offset": 482,
        "length": 7,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8682106101f957",
        "parsedOpcodes": "482: DUP7\n483: DUP3\n484: LT\n485: PUSH2 0x01f9\n488: JUMPI"
      },
      {
        "offset": 489,
        "length": 4,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "60016003",
        "parsedOpcodes": "489: PUSH1 0x01\n491: PUSH1 0x03"
      },
      {
        "offset": 493,
        "length": 12,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b9450945050505061021b56",
        "parsedOpcodes": "493: JUMPDEST\n494: SWAP5\n495: POP\n496: SWAP5\n497: POP\n498: POP\n499: POP\n500: POP\n501: PUSH2 0x021b\n504: JUMP"
      },
      {
        "offset": 505,
        "length": 9,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600060056101ed56",
        "parsedOpcodes": "505: JUMPDEST\n506: PUSH1 0x00\n508: PUSH1 0x05\n510: PUSH2 0x01ed\n513: JUMP"
      },
      {
        "offset": 514,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b86821161021257",
        "parsedOpcodes": "514: JUMPDEST\n515: DUP7\n516: DUP3\n517: GT\n518: PUSH2 0x0212\n521: JUMPI"
      },
      {
        "offset": 522,
        "length": 8,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "600160046101ed56",
        "parsedOpcodes": "522: PUSH1 0x01\n524: PUSH1 0x04\n526: PUSH2 0x01ed\n529: JUMP"
      },
      {
        "offset": 530,
        "length": 9,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600060066101ed56",
        "parsedOpcodes": "530: JUMPDEST\n531: PUSH1 0x00\n533: PUSH1 0x06\n535: PUSH2 0x01ed\n538: JUMP"
      },
      {
        "offset": 539,
        "length": 10,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b955095935050505056",
        "parsedOpcodes": "539: JUMPDEST\n540: SWAP6\n541: POP\n542: SWAP6\n543: SWAP4\n544: POP\n545: POP\n546: POP\n547: POP\n548: JUMP"
      },
      {
        "offset": 549,
        "length": 104,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b6040805163809a9e5560e01b81526001600160a01b0387811660048301528516602482015260448101869052815160009273818e6fecd516ecc3849daf6845e3ec868087b755928492849263809a9e559260648082019391829003018186803b15801561029157",
        "parsedOpcodes": "549: JUMPDEST\n550: PUSH1 0x40\n552: DUP1\n553: MLOAD\n554: PUSH4 0x809a9e55\n559: PUSH1 0xe0\n561: SHL\n562: DUP2\n563: MSTORE\n564: PUSH1 0x01\n566: PUSH1 0x01\n568: PUSH1 0xa0\n570: SHL\n571: SUB\n572: DUP8\n573: DUP2\n574: AND\n575: PUSH1 0x04\n577: DUP4\n578: ADD\n579: MSTORE\n580: DUP6\n581: AND\n582: PUSH1 0x24\n584: DUP3\n585: ADD\n586: MSTORE\n587: PUSH1 0x44\n589: DUP2\n590: ADD\n591: DUP7\n592: SWAP1\n593: MSTORE\n594: DUP2\n595: MLOAD\n596: PUSH1 0x00\n598: SWAP3\n599: PUSH20 0x818e6fecd516ecc3849daf6845e3ec868087b755\n620: SWAP3\n621: DUP5\n622: SWAP3\n623: DUP5\n624: SWAP3\n625: PUSH4 0x809a9e55\n630: SWAP3\n631: PUSH1 0x64\n633: DUP1\n634: DUP3\n635: ADD\n636: SWAP4\n637: SWAP2\n638: DUP3\n639: SWAP1\n640: SUB\n641: ADD\n642: DUP2\n643: DUP7\n644: DUP1\n645: EXTCODESIZE\n646: ISZERO\n647: DUP1\n648: ISZERO\n649: PUSH2 0x0291\n652: JUMPI"
      },
      {
        "offset": 653,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "653: PUSH1 0x00\n655: DUP1\n656: REVERT"
      },
      {
        "offset": 657,
        "length": 11,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b505afa1580156102a557",
        "parsedOpcodes": "657: JUMPDEST\n658: POP\n659: GAS\n660: STATICCALL\n661: ISZERO\n662: DUP1\n663: ISZERO\n664: PUSH2 0x02a5\n667: JUMPI"
      },
      {
        "offset": 668,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "668: RETURNDATASIZE\n669: PUSH1 0x00\n671: DUP1\n672: RETURNDATACOPY\n673: RETURNDATASIZE\n674: PUSH1 0x00\n676: REVERT"
      },
      {
        "offset": 677,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d60408110156102bb57",
        "parsedOpcodes": "677: JUMPDEST\n678: POP\n679: POP\n680: POP\n681: POP\n682: PUSH1 0x40\n684: MLOAD\n685: RETURNDATASIZE\n686: PUSH1 0x40\n688: DUP2\n689: LT\n690: ISZERO\n691: PUSH2 0x02bb\n694: JUMPI"
      },
      {
        "offset": 695,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "695: PUSH1 0x00\n697: DUP1\n698: REVERT"
      },
      {
        "offset": 699,
        "length": 14,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b50519897505050505050505056",
        "parsedOpcodes": "699: JUMPDEST\n700: POP\n701: MLOAD\n702: SWAP9\n703: SWAP8\n704: POP\n705: POP\n706: POP\n707: POP\n708: POP\n709: POP\n710: POP\n711: POP\n712: JUMP"
      },
      {
        "offset": 713,
        "length": 7,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6207a1208156",
        "parsedOpcodes": "713: JUMPDEST\n714: PUSH3 0x07a120\n718: DUP2\n719: JUMP"
      },
      {
        "offset": 720,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b63b5fe8a7960e01b9056",
        "parsedOpcodes": "720: JUMPDEST\n721: PUSH4 0xb5fe8a79\n726: PUSH1 0xe0\n728: SHL\n729: SWAP1\n730: JUMP"
      },
      {
        "offset": 731,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "731: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          731
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          76
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          81
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          176
        ]
      },
      {
        "from": 54,
        "to": [
          65,
          260
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          268
        ]
      },
      {
        "from": 76,
        "to": [
          731
        ]
      },
      {
        "from": 81,
        "to": [
          99,
          103
        ]
      },
      {
        "from": 99,
        "to": [
          731
        ]
      },
      {
        "from": 103,
        "to": [
          305,
          305
        ]
      },
      {
        "from": 147,
        "to": [
          731
        ]
      },
      {
        "from": 176,
        "to": [
          194,
          198
        ]
      },
      {
        "from": 194,
        "to": [
          731
        ]
      },
      {
        "from": 198,
        "to": [
          549
        ]
      },
      {
        "from": 242,
        "to": [
          731
        ]
      },
      {
        "from": 260,
        "to": [
          713
        ]
      },
      {
        "from": 268,
        "to": [
          720
        ]
      },
      {
        "from": 276,
        "to": [
          731
        ]
      },
      {
        "from": 305,
        "to": [
          409,
          413
        ]
      },
      {
        "from": 409,
        "to": [
          731
        ]
      },
      {
        "from": 413,
        "to": [
          427,
          457
        ]
      },
      {
        "from": 427,
        "to": [
          441,
          445
        ]
      },
      {
        "from": 441,
        "to": [
          731
        ]
      },
      {
        "from": 445,
        "to": [
          457
        ]
      },
      {
        "from": 457,
        "to": [
          462,
          475
        ]
      },
      {
        "from": 462,
        "to": [
          539
        ]
      },
      {
        "from": 475,
        "to": [
          482,
          514
        ]
      },
      {
        "from": 482,
        "to": [
          489,
          505
        ]
      },
      {
        "from": 489,
        "to": [
          493
        ]
      },
      {
        "from": 493,
        "to": [
          539,
          539
        ]
      },
      {
        "from": 505,
        "to": [
          493
        ]
      },
      {
        "from": 514,
        "to": [
          522,
          530
        ]
      },
      {
        "from": 522,
        "to": [
          493
        ]
      },
      {
        "from": 530,
        "to": [
          493,
          493
        ]
      },
      {
        "from": 539,
        "to": [
          731
        ]
      },
      {
        "from": 549,
        "to": [
          653,
          657
        ]
      },
      {
        "from": 653,
        "to": [
          731
        ]
      },
      {
        "from": 657,
        "to": [
          668,
          677
        ]
      },
      {
        "from": 668,
        "to": [
          731
        ]
      },
      {
        "from": 677,
        "to": [
          695,
          699
        ]
      },
      {
        "from": 695,
        "to": [
          731
        ]
      },
      {
        "from": 699,
        "to": [
          731
        ]
      },
      {
        "from": 713,
        "to": [
          731
        ]
      },
      {
        "from": 720,
        "to": [
          731
        ]
      },
      {
        "from": 731,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 1,
      "errorLog": "Critical error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 6\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:459)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeSwap(SymbolicExecutionStack.java:70)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeOpcode(SymbolicExecutionStack.java:45)\n\tat parseTree.cfg.CfgBuilder.resolveOrphanJumps(CfgBuilder.java:211)\n\tat parseTree.cfg.CfgBuilder.buildCfg(CfgBuilder.java:90)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:54)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:62)\n\tat cli.MainCLI.call(MainCLI.java:70)\n\tat cli.MainCLI.call(MainCLI.java:24)\n\tat picocli.CommandLine.executeUserObject(CommandLine.java:1933)\n\tat picocli.CommandLine.access$1100(CommandLine.java:145)\n\tat picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2326)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2291)\n\tat picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2159)\n\tat picocli.CommandLine.execute(CommandLine.java:2058)\n\tat cli.MainCLI.main(MainCLI.java:102)\nWarning: the CFG has 4 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 120
    }
  }
}