{
  "name": "Analysis_2022-04-04_23-13-23",
  "address": "",
  "binarySource": "6080604052600436106100325763ffffffff60e060020a60003504166367845daf81146100375780639138f38b146100d9575b600080fd5b34801561004357600080fd5b506040805160206004808201808301808401808501808601803586018035601f8101899004890289018a01909a528989526100d7998735600160a060020a039081169a973581169996351697943596933595368690038601959493810193928101919081908401838280828437509497505060ff853516955050506000196020938401803582169401351691506101359050565b005b3480156100e557600080fd5b506100d7600160a060020a036004803582169160209182018035821692908101803590921691810180359190810180359160ff9181018035929092169160001990820180358216920135166103c7565b60008989898989896040518087600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140186600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140185600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140184815260200183815260200182805190602001908083835b6020831015156101ed57805182526020928390039291820191016101ce565b6001836020036101000a03801982511681845116808217855250505050505090500196505050505050506040518091039020905061022e89828686866104b5565b89600160a060020a03166362ad1b838a8a8a896040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018381526020018060200180602001838103835284818151815260200191508051906020019080838360005b838110156102ca5781810151838201526020016102b2565b50505050905090810190601f1680156102f75780820380516001836020036101000a031916815260200191505b50838103825260098152602001807f737061636564726f7000000000000000000000000000000000000000000000008152506020019650505050505050600060405180830381600087803b15801561034e57600080fd5b505af1158015610362573d6000803e3d6000fd5b5050604080518a815260209081018a81526103099082019081529151600160a060020a03808e1695508e811694508f16927ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd04920181900390a450505050505050505050565b60408051600160a060020a038a811681166c0100000000000000000000000090810283528a82168216810260149384019081528a83169092160290820190815201868152602090810186815291519101819003902061042988828686866104b5565b610444600160a060020a038a1689898963ffffffff61066816565b86600160a060020a031688600160a060020a03168a600160a060020a03167ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd048989601460405180848152602001838152602001828152602001935050505060405180910390a4505050505050505050565b606060006040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509150600182876040518083805190602001908083835b6020831015156105245780518252602092839003929182019101610505565b518151600160209485036101000a0380199092169116179052600080199687168716929094019182526040805192820183900383208584529282018082529287168716835260ff8e8116169282019283528c871687169282019283528b871690961691810191825294519085019550848103935080860392909150865af11580156105b3573d6000803e3d6000fd5b50505060206040510351905086600160a060020a031681600160a060020a03161480156105f357506000600160a060020a031681600160a060020a031614155b15156105fe57600080fd5b6000801980881616815260208082018281520181205460ff6101009290920a90041615151561062c57600080fd5b6001600080886000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b83600160a060020a03166323b872dd8484846040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a031681526020018281526020019350505050602060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b505050506040513d602081101561070f57600080fd5b5051151561071c57600080fd5b505050505600a165627a7a72305820b513a15fa62fff02076469a1b5707eab8b64fb55837ea2d665af3e01de281c850029",
  "binaryHash": "b1e3ba85",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820b513a15fa62fff02076469a1b5707eab8b64fb55837ea2d665af3e01de281c850029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649081603714
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100325763ffffffff60e060020a60003504166367845daf81146100375780639138f38b146100d9575b600080fd5b34801561004357600080fd5b506040805160206004808201808301808401808501808601803586018035601f8101899004890289018a01909a528989526100d7998735600160a060020a039081169a973581169996351697943596933595368690038601959493810193928101919081908401838280828437509497505060ff853516955050506000196020938401803582169401351691506101359050565b005b3480156100e557600080fd5b506100d7600160a060020a036004803582169160209182018035821692908101803590921691810180359190810180359160ff9181018035929092169160001990820180358216920135166103c7565b60008989898989896040518087600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140186600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140185600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140184815260200183815260200182805190602001908083835b6020831015156101ed57805182526020928390039291820191016101ce565b6001836020036101000a03801982511681845116808217855250505050505090500196505050505050506040518091039020905061022e89828686866104b5565b89600160a060020a03166362ad1b838a8a8a896040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018381526020018060200180602001838103835284818151815260200191508051906020019080838360005b838110156102ca5781810151838201526020016102b2565b50505050905090810190601f1680156102f75780820380516001836020036101000a031916815260200191505b50838103825260098152602001807f737061636564726f7000000000000000000000000000000000000000000000008152506020019650505050505050600060405180830381600087803b15801561034e57600080fd5b505af1158015610362573d6000803e3d6000fd5b5050604080518a815260209081018a81526103099082019081529151600160a060020a03808e1695508e811694508f16927ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd04920181900390a450505050505050505050565b60408051600160a060020a038a811681166c0100000000000000000000000090810283528a82168216810260149384019081528a83169092160290820190815201868152602090810186815291519101819003902061042988828686866104b5565b610444600160a060020a038a1689898963ffffffff61066816565b86600160a060020a031688600160a060020a03168a600160a060020a03167ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd048989601460405180848152602001838152602001828152602001935050505060405180910390a4505050505050505050565b606060006040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509150600182876040518083805190602001908083835b6020831015156105245780518252602092839003929182019101610505565b518151600160209485036101000a0380199092169116179052600080199687168716929094019182526040805192820183900383208584529282018082529287168716835260ff8e8116169282019283528c871687169282019283528b871690961691810191825294519085019550848103935080860392909150865af11580156105b3573d6000803e3d6000fd5b50505060206040510351905086600160a060020a031681600160a060020a03161480156105f357506000600160a060020a031681600160a060020a031614155b15156105fe57600080fd5b6000801980881616815260208082018281520181205460ff6101009290920a90041615151561062c57600080fd5b6001600080886000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050565b83600160a060020a03166323b872dd8484846040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a031681526020018281526020019350505050602060405180830381600087803b1580156106e557600080fd5b505af11580156106f9573d6000803e3d6000fd5b505050506040513d602081101561070f57600080fd5b5051151561071c57600080fd5b505050505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061003257",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0032\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 26,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff60e060020a60003504166367845daf811461003757",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH1 0xe0\n20: PUSH1 0x02\n22: EXP\n23: PUSH1 0x00\n25: CALLDATALOAD\n26: DIV\n27: AND\n28: PUSH4 0x67845daf\n33: DUP2\n34: EQ\n35: PUSH2 0x0037\n38: JUMPI"
      },
      {
        "offset": 39,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80639138f38b146100d957",
        "parsedOpcodes": "39: DUP1\n40: PUSH4 0x9138f38b\n45: EQ\n46: PUSH2 0x00d9\n49: JUMPI"
      },
      {
        "offset": 50,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "50: JUMPDEST\n51: PUSH1 0x00\n53: DUP1\n54: REVERT"
      },
      {
        "offset": 55,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561004357",
        "parsedOpcodes": "55: JUMPDEST\n56: CALLVALUE\n57: DUP1\n58: ISZERO\n59: PUSH2 0x0043\n62: JUMPI"
      },
      {
        "offset": 63,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "63: PUSH1 0x00\n65: DUP1\n66: REVERT"
      },
      {
        "offset": 67,
        "length": 148,
        "type": "dispatcher",
        "stackBalance": 9,
        "bytecodeHex": "5b506040805160206004808201808301808401808501808601803586018035601f8101899004890289018a01909a528989526100d7998735600160a060020a039081169a973581169996351697943596933595368690038601959493810193928101919081908401838280828437509497505060ff85351695505050600019602093840180358216940135169150610135905056",
        "parsedOpcodes": "67: JUMPDEST\n68: POP\n69: PUSH1 0x40\n71: DUP1\n72: MLOAD\n73: PUSH1 0x20\n75: PUSH1 0x04\n77: DUP1\n78: DUP3\n79: ADD\n80: DUP1\n81: DUP4\n82: ADD\n83: DUP1\n84: DUP5\n85: ADD\n86: DUP1\n87: DUP6\n88: ADD\n89: DUP1\n90: DUP7\n91: ADD\n92: DUP1\n93: CALLDATALOAD\n94: DUP7\n95: ADD\n96: DUP1\n97: CALLDATALOAD\n98: PUSH1 0x1f\n100: DUP2\n101: ADD\n102: DUP10\n103: SWAP1\n104: DIV\n105: DUP10\n106: MUL\n107: DUP10\n108: ADD\n109: DUP11\n110: ADD\n111: SWAP1\n112: SWAP11\n113: MSTORE\n114: DUP10\n115: DUP10\n116: MSTORE\n117: PUSH2 0x00d7\n120: SWAP10\n121: DUP8\n122: CALLDATALOAD\n123: PUSH1 0x01\n125: PUSH1 0xa0\n127: PUSH1 0x02\n129: EXP\n130: SUB\n131: SWAP1\n132: DUP2\n133: AND\n134: SWAP11\n135: SWAP8\n136: CALLDATALOAD\n137: DUP2\n138: AND\n139: SWAP10\n140: SWAP7\n141: CALLDATALOAD\n142: AND\n143: SWAP8\n144: SWAP5\n145: CALLDATALOAD\n146: SWAP7\n147: SWAP4\n148: CALLDATALOAD\n149: SWAP6\n150: CALLDATASIZE\n151: DUP7\n152: SWAP1\n153: SUB\n154: DUP7\n155: ADD\n156: SWAP6\n157: SWAP5\n158: SWAP4\n159: DUP2\n160: ADD\n161: SWAP4\n162: SWAP3\n163: DUP2\n164: ADD\n165: SWAP2\n166: SWAP1\n167: DUP2\n168: SWAP1\n169: DUP5\n170: ADD\n171: DUP4\n172: DUP3\n173: DUP1\n174: DUP3\n175: DUP5\n176: CALLDATACOPY\n177: POP\n178: SWAP5\n179: SWAP8\n180: POP\n181: POP\n182: PUSH1 0xff\n184: DUP6\n185: CALLDATALOAD\n186: AND\n187: SWAP6\n188: POP\n189: POP\n190: POP\n191: PUSH1 0x00\n193: NOT\n194: PUSH1 0x20\n196: SWAP4\n197: DUP5\n198: ADD\n199: DUP1\n200: CALLDATALOAD\n201: DUP3\n202: AND\n203: SWAP5\n204: ADD\n205: CALLDATALOAD\n206: AND\n207: SWAP2\n208: POP\n209: PUSH2 0x0135\n212: SWAP1\n213: POP\n214: JUMP"
      },
      {
        "offset": 215,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "215: JUMPDEST\n216: STOP"
      },
      {
        "offset": 217,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100e557",
        "parsedOpcodes": "217: JUMPDEST\n218: CALLVALUE\n219: DUP1\n220: ISZERO\n221: PUSH2 0x00e5\n224: JUMPI"
      },
      {
        "offset": 225,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "225: PUSH1 0x00\n227: DUP1\n228: REVERT"
      },
      {
        "offset": 229,
        "length": 80,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b506100d7600160a060020a036004803582169160209182018035821692908101803590921691810180359190810180359160ff9181018035929092169160001990820180358216920135166103c756",
        "parsedOpcodes": "229: JUMPDEST\n230: POP\n231: PUSH2 0x00d7\n234: PUSH1 0x01\n236: PUSH1 0xa0\n238: PUSH1 0x02\n240: EXP\n241: SUB\n242: PUSH1 0x04\n244: DUP1\n245: CALLDATALOAD\n246: DUP3\n247: AND\n248: SWAP2\n249: PUSH1 0x20\n251: SWAP2\n252: DUP3\n253: ADD\n254: DUP1\n255: CALLDATALOAD\n256: DUP3\n257: AND\n258: SWAP3\n259: SWAP1\n260: DUP2\n261: ADD\n262: DUP1\n263: CALLDATALOAD\n264: SWAP1\n265: SWAP3\n266: AND\n267: SWAP2\n268: DUP2\n269: ADD\n270: DUP1\n271: CALLDATALOAD\n272: SWAP2\n273: SWAP1\n274: DUP2\n275: ADD\n276: DUP1\n277: CALLDATALOAD\n278: SWAP2\n279: PUSH1 0xff\n281: SWAP2\n282: DUP2\n283: ADD\n284: DUP1\n285: CALLDATALOAD\n286: SWAP3\n287: SWAP1\n288: SWAP3\n289: AND\n290: SWAP2\n291: PUSH1 0x00\n293: NOT\n294: SWAP1\n295: DUP3\n296: ADD\n297: DUP1\n298: CALLDATALOAD\n299: DUP3\n300: AND\n301: SWAP3\n302: ADD\n303: CALLDATALOAD\n304: AND\n305: PUSH2 0x03c7\n308: JUMP"
      },
      {
        "offset": 309,
        "length": 153,
        "type": "common",
        "stackBalance": 14,
        "bytecodeHex": "5b60008989898989896040518087600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140186600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140185600160a060020a0316600160a060020a03166c010000000000000000000000000281526014018481526020018381526020018280519060200190808383",
        "parsedOpcodes": "309: JUMPDEST\n310: PUSH1 0x00\n312: DUP10\n313: DUP10\n314: DUP10\n315: DUP10\n316: DUP10\n317: DUP10\n318: PUSH1 0x40\n320: MLOAD\n321: DUP1\n322: DUP8\n323: PUSH1 0x01\n325: PUSH1 0xa0\n327: PUSH1 0x02\n329: EXP\n330: SUB\n331: AND\n332: PUSH1 0x01\n334: PUSH1 0xa0\n336: PUSH1 0x02\n338: EXP\n339: SUB\n340: AND\n341: PUSH13 0x01000000000000000000000000\n355: MUL\n356: DUP2\n357: MSTORE\n358: PUSH1 0x14\n360: ADD\n361: DUP7\n362: PUSH1 0x01\n364: PUSH1 0xa0\n366: PUSH1 0x02\n368: EXP\n369: SUB\n370: AND\n371: PUSH1 0x01\n373: PUSH1 0xa0\n375: PUSH1 0x02\n377: EXP\n378: SUB\n379: AND\n380: PUSH13 0x01000000000000000000000000\n394: MUL\n395: DUP2\n396: MSTORE\n397: PUSH1 0x14\n399: ADD\n400: DUP6\n401: PUSH1 0x01\n403: PUSH1 0xa0\n405: PUSH1 0x02\n407: EXP\n408: SUB\n409: AND\n410: PUSH1 0x01\n412: PUSH1 0xa0\n414: PUSH1 0x02\n416: EXP\n417: SUB\n418: AND\n419: PUSH13 0x01000000000000000000000000\n433: MUL\n434: DUP2\n435: MSTORE\n436: PUSH1 0x14\n438: ADD\n439: DUP5\n440: DUP2\n441: MSTORE\n442: PUSH1 0x20\n444: ADD\n445: DUP4\n446: DUP2\n447: MSTORE\n448: PUSH1 0x20\n450: ADD\n451: DUP3\n452: DUP1\n453: MLOAD\n454: SWAP1\n455: PUSH1 0x20\n457: ADD\n458: SWAP1\n459: DUP1\n460: DUP4\n461: DUP4"
      },
      {
        "offset": 462,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831015156101ed57",
        "parsedOpcodes": "462: JUMPDEST\n463: PUSH1 0x20\n465: DUP4\n466: LT\n467: ISZERO\n468: ISZERO\n469: PUSH2 0x01ed\n472: JUMPI"
      },
      {
        "offset": 473,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805182526020928390039291820191016101ce56",
        "parsedOpcodes": "473: DUP1\n474: MLOAD\n475: DUP3\n476: MSTORE\n477: PUSH1 0x20\n479: SWAP3\n480: DUP4\n481: SWAP1\n482: SUB\n483: SWAP3\n484: SWAP2\n485: DUP3\n486: ADD\n487: SWAP2\n488: ADD\n489: PUSH2 0x01ce\n492: JUMP"
      },
      {
        "offset": 493,
        "length": 65,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b6001836020036101000a03801982511681845116808217855250505050505090500196505050505050506040518091039020905061022e89828686866104b556",
        "parsedOpcodes": "493: JUMPDEST\n494: PUSH1 0x01\n496: DUP4\n497: PUSH1 0x20\n499: SUB\n500: PUSH2 0x0100\n503: EXP\n504: SUB\n505: DUP1\n506: NOT\n507: DUP3\n508: MLOAD\n509: AND\n510: DUP2\n511: DUP5\n512: MLOAD\n513: AND\n514: DUP1\n515: DUP3\n516: OR\n517: DUP6\n518: MSTORE\n519: POP\n520: POP\n521: POP\n522: POP\n523: POP\n524: POP\n525: SWAP1\n526: POP\n527: ADD\n528: SWAP7\n529: POP\n530: POP\n531: POP\n532: POP\n533: POP\n534: POP\n535: POP\n536: PUSH1 0x40\n538: MLOAD\n539: DUP1\n540: SWAP2\n541: SUB\n542: SWAP1\n543: SHA3\n544: SWAP1\n545: POP\n546: PUSH2 0x022e\n549: DUP10\n550: DUP3\n551: DUP7\n552: DUP7\n553: DUP7\n554: PUSH2 0x04b5\n557: JUMP"
      },
      {
        "offset": 558,
        "length": 132,
        "type": "common",
        "stackBalance": 16,
        "bytecodeHex": "5b89600160a060020a03166362ad1b838a8a8a896040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a03168152602001838152602001806020018060200183810383528481815181526020019150805190602001908083836000",
        "parsedOpcodes": "558: JUMPDEST\n559: DUP10\n560: PUSH1 0x01\n562: PUSH1 0xa0\n564: PUSH1 0x02\n566: EXP\n567: SUB\n568: AND\n569: PUSH4 0x62ad1b83\n574: DUP11\n575: DUP11\n576: DUP11\n577: DUP10\n578: PUSH1 0x40\n580: MLOAD\n581: DUP6\n582: PUSH4 0xffffffff\n587: AND\n588: PUSH1 0xe0\n590: PUSH1 0x02\n592: EXP\n593: MUL\n594: DUP2\n595: MSTORE\n596: PUSH1 0x04\n598: ADD\n599: DUP1\n600: DUP6\n601: PUSH1 0x01\n603: PUSH1 0xa0\n605: PUSH1 0x02\n607: EXP\n608: SUB\n609: AND\n610: PUSH1 0x01\n612: PUSH1 0xa0\n614: PUSH1 0x02\n616: EXP\n617: SUB\n618: AND\n619: DUP2\n620: MSTORE\n621: PUSH1 0x20\n623: ADD\n624: DUP5\n625: PUSH1 0x01\n627: PUSH1 0xa0\n629: PUSH1 0x02\n631: EXP\n632: SUB\n633: AND\n634: PUSH1 0x01\n636: PUSH1 0xa0\n638: PUSH1 0x02\n640: EXP\n641: SUB\n642: AND\n643: DUP2\n644: MSTORE\n645: PUSH1 0x20\n647: ADD\n648: DUP4\n649: DUP2\n650: MSTORE\n651: PUSH1 0x20\n653: ADD\n654: DUP1\n655: PUSH1 0x20\n657: ADD\n658: DUP1\n659: PUSH1 0x20\n661: ADD\n662: DUP4\n663: DUP2\n664: SUB\n665: DUP4\n666: MSTORE\n667: DUP5\n668: DUP2\n669: DUP2\n670: MLOAD\n671: DUP2\n672: MSTORE\n673: PUSH1 0x20\n675: ADD\n676: SWAP2\n677: POP\n678: DUP1\n679: MLOAD\n680: SWAP1\n681: PUSH1 0x20\n683: ADD\n684: SWAP1\n685: DUP1\n686: DUP4\n687: DUP4\n688: PUSH1 0x00"
      },
      {
        "offset": 690,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156102ca57",
        "parsedOpcodes": "690: JUMPDEST\n691: DUP4\n692: DUP2\n693: LT\n694: ISZERO\n695: PUSH2 0x02ca\n698: JUMPI"
      },
      {
        "offset": 699,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016102b256",
        "parsedOpcodes": "699: DUP2\n700: DUP2\n701: ADD\n702: MLOAD\n703: DUP4\n704: DUP3\n705: ADD\n706: MSTORE\n707: PUSH1 0x20\n709: ADD\n710: PUSH2 0x02b2\n713: JUMP"
      },
      {
        "offset": 714,
        "length": 20,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f1680156102f757",
        "parsedOpcodes": "714: JUMPDEST\n715: POP\n716: POP\n717: POP\n718: POP\n719: SWAP1\n720: POP\n721: SWAP1\n722: DUP2\n723: ADD\n724: SWAP1\n725: PUSH1 0x1f\n727: AND\n728: DUP1\n729: ISZERO\n730: PUSH2 0x02f7\n733: JUMPI"
      },
      {
        "offset": 734,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "734: DUP1\n735: DUP3\n736: SUB\n737: DUP1\n738: MLOAD\n739: PUSH1 0x01\n741: DUP4\n742: PUSH1 0x20\n744: SUB\n745: PUSH2 0x0100\n748: EXP\n749: SUB\n750: NOT\n751: AND\n752: DUP2\n753: MSTORE\n754: PUSH1 0x20\n756: ADD\n757: SWAP2\n758: POP"
      },
      {
        "offset": 759,
        "length": 83,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50838103825260098152602001807f737061636564726f7000000000000000000000000000000000000000000000008152506020019650505050505050600060405180830381600087803b15801561034e57",
        "parsedOpcodes": "759: JUMPDEST\n760: POP\n761: DUP4\n762: DUP2\n763: SUB\n764: DUP3\n765: MSTORE\n766: PUSH1 0x09\n768: DUP2\n769: MSTORE\n770: PUSH1 0x20\n772: ADD\n773: DUP1\n774: PUSH32 0x737061636564726f700000000000000000000000000000000000000000000000\n807: DUP2\n808: MSTORE\n809: POP\n810: PUSH1 0x20\n812: ADD\n813: SWAP7\n814: POP\n815: POP\n816: POP\n817: POP\n818: POP\n819: POP\n820: POP\n821: PUSH1 0x00\n823: PUSH1 0x40\n825: MLOAD\n826: DUP1\n827: DUP4\n828: SUB\n829: DUP2\n830: PUSH1 0x00\n832: DUP8\n833: DUP1\n834: EXTCODESIZE\n835: ISZERO\n836: DUP1\n837: ISZERO\n838: PUSH2 0x034e\n841: JUMPI"
      },
      {
        "offset": 842,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "842: PUSH1 0x00\n844: DUP1\n845: REVERT"
      },
      {
        "offset": 846,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561036257",
        "parsedOpcodes": "846: JUMPDEST\n847: POP\n848: GAS\n849: CALL\n850: ISZERO\n851: DUP1\n852: ISZERO\n853: PUSH2 0x0362\n856: JUMPI"
      },
      {
        "offset": 857,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "857: RETURNDATASIZE\n858: PUSH1 0x00\n860: DUP1\n861: RETURNDATACOPY\n862: RETURNDATASIZE\n863: PUSH1 0x00\n865: REVERT"
      },
      {
        "offset": 866,
        "length": 101,
        "type": "common",
        "stackBalance": -15,
        "bytecodeHex": "5b5050604080518a815260209081018a81526103099082019081529151600160a060020a03808e1695508e811694508f16927ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd04920181900390a45050505050505050505056",
        "parsedOpcodes": "866: JUMPDEST\n867: POP\n868: POP\n869: PUSH1 0x40\n871: DUP1\n872: MLOAD\n873: DUP11\n874: DUP2\n875: MSTORE\n876: PUSH1 0x20\n878: SWAP1\n879: DUP2\n880: ADD\n881: DUP11\n882: DUP2\n883: MSTORE\n884: PUSH2 0x0309\n887: SWAP1\n888: DUP3\n889: ADD\n890: SWAP1\n891: DUP2\n892: MSTORE\n893: SWAP2\n894: MLOAD\n895: PUSH1 0x01\n897: PUSH1 0xa0\n899: PUSH1 0x02\n901: EXP\n902: SUB\n903: DUP1\n904: DUP15\n905: AND\n906: SWAP6\n907: POP\n908: DUP15\n909: DUP2\n910: AND\n911: SWAP5\n912: POP\n913: DUP16\n914: AND\n915: SWAP3\n916: PUSH32 0xfcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd04\n949: SWAP3\n950: ADD\n951: DUP2\n952: SWAP1\n953: SUB\n954: SWAP1\n955: LOG4\n956: POP\n957: POP\n958: POP\n959: POP\n960: POP\n961: POP\n962: POP\n963: POP\n964: POP\n965: POP\n966: JUMP"
      },
      {
        "offset": 967,
        "length": 98,
        "type": "common",
        "stackBalance": 7,
        "bytecodeHex": "5b60408051600160a060020a038a811681166c0100000000000000000000000090810283528a82168216810260149384019081528a83169092160290820190815201868152602090810186815291519101819003902061042988828686866104b556",
        "parsedOpcodes": "967: JUMPDEST\n968: PUSH1 0x40\n970: DUP1\n971: MLOAD\n972: PUSH1 0x01\n974: PUSH1 0xa0\n976: PUSH1 0x02\n978: EXP\n979: SUB\n980: DUP11\n981: DUP2\n982: AND\n983: DUP2\n984: AND\n985: PUSH13 0x01000000000000000000000000\n999: SWAP1\n1000: DUP2\n1001: MUL\n1002: DUP4\n1003: MSTORE\n1004: DUP11\n1005: DUP3\n1006: AND\n1007: DUP3\n1008: AND\n1009: DUP2\n1010: MUL\n1011: PUSH1 0x14\n1013: SWAP4\n1014: DUP5\n1015: ADD\n1016: SWAP1\n1017: DUP2\n1018: MSTORE\n1019: DUP11\n1020: DUP4\n1021: AND\n1022: SWAP1\n1023: SWAP3\n1024: AND\n1025: MUL\n1026: SWAP1\n1027: DUP3\n1028: ADD\n1029: SWAP1\n1030: DUP2\n1031: MSTORE\n1032: ADD\n1033: DUP7\n1034: DUP2\n1035: MSTORE\n1036: PUSH1 0x20\n1038: SWAP1\n1039: DUP2\n1040: ADD\n1041: DUP7\n1042: DUP2\n1043: MSTORE\n1044: SWAP2\n1045: MLOAD\n1046: SWAP2\n1047: ADD\n1048: DUP2\n1049: SWAP1\n1050: SUB\n1051: SWAP1\n1052: SHA3\n1053: PUSH2 0x0429\n1056: DUP9\n1057: DUP3\n1058: DUP7\n1059: DUP7\n1060: DUP7\n1061: PUSH2 0x04b5\n1064: JUMP"
      },
      {
        "offset": 1065,
        "length": 27,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b610444600160a060020a038a1689898963ffffffff6106681656",
        "parsedOpcodes": "1065: JUMPDEST\n1066: PUSH2 0x0444\n1069: PUSH1 0x01\n1071: PUSH1 0xa0\n1073: PUSH1 0x02\n1075: EXP\n1076: SUB\n1077: DUP11\n1078: AND\n1079: DUP10\n1080: DUP10\n1081: DUP10\n1082: PUSH4 0xffffffff\n1087: PUSH2 0x0668\n1090: AND\n1091: JUMP"
      },
      {
        "offset": 1092,
        "length": 113,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b86600160a060020a031688600160a060020a03168a600160a060020a03167ffcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd048989601460405180848152602001838152602001828152602001935050505060405180910390a450505050505050505056",
        "parsedOpcodes": "1092: JUMPDEST\n1093: DUP7\n1094: PUSH1 0x01\n1096: PUSH1 0xa0\n1098: PUSH1 0x02\n1100: EXP\n1101: SUB\n1102: AND\n1103: DUP9\n1104: PUSH1 0x01\n1106: PUSH1 0xa0\n1108: PUSH1 0x02\n1110: EXP\n1111: SUB\n1112: AND\n1113: DUP11\n1114: PUSH1 0x01\n1116: PUSH1 0xa0\n1118: PUSH1 0x02\n1120: EXP\n1121: SUB\n1122: AND\n1123: PUSH32 0xfcd400187065ed4700064f858ec3ae800ba90796a5ed85d720e1d588ab27fd04\n1156: DUP10\n1157: DUP10\n1158: PUSH1 0x14\n1160: PUSH1 0x40\n1162: MLOAD\n1163: DUP1\n1164: DUP5\n1165: DUP2\n1166: MSTORE\n1167: PUSH1 0x20\n1169: ADD\n1170: DUP4\n1171: DUP2\n1172: MSTORE\n1173: PUSH1 0x20\n1175: ADD\n1176: DUP3\n1177: DUP2\n1178: MSTORE\n1179: PUSH1 0x20\n1181: ADD\n1182: SWAP4\n1183: POP\n1184: POP\n1185: POP\n1186: POP\n1187: PUSH1 0x40\n1189: MLOAD\n1190: DUP1\n1191: SWAP2\n1192: SUB\n1193: SWAP1\n1194: LOG4\n1195: POP\n1196: POP\n1197: POP\n1198: POP\n1199: POP\n1200: POP\n1201: POP\n1202: POP\n1203: POP\n1204: JUMP"
      },
      {
        "offset": 1205,
        "length": 80,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b606060006040805190810160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250915060018287604051808380519060200190808383",
        "parsedOpcodes": "1205: JUMPDEST\n1206: PUSH1 0x60\n1208: PUSH1 0x00\n1210: PUSH1 0x40\n1212: DUP1\n1213: MLOAD\n1214: SWAP1\n1215: DUP2\n1216: ADD\n1217: PUSH1 0x40\n1219: MSTORE\n1220: DUP1\n1221: PUSH1 0x1c\n1223: DUP2\n1224: MSTORE\n1225: PUSH1 0x20\n1227: ADD\n1228: PUSH32 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n1261: DUP2\n1262: MSTORE\n1263: POP\n1264: SWAP2\n1265: POP\n1266: PUSH1 0x01\n1268: DUP3\n1269: DUP8\n1270: PUSH1 0x40\n1272: MLOAD\n1273: DUP1\n1274: DUP4\n1275: DUP1\n1276: MLOAD\n1277: SWAP1\n1278: PUSH1 0x20\n1280: ADD\n1281: SWAP1\n1282: DUP1\n1283: DUP4\n1284: DUP4"
      },
      {
        "offset": 1285,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60208310151561052457",
        "parsedOpcodes": "1285: JUMPDEST\n1286: PUSH1 0x20\n1288: DUP4\n1289: LT\n1290: ISZERO\n1291: ISZERO\n1292: PUSH2 0x0524\n1295: JUMPI"
      },
      {
        "offset": 1296,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8051825260209283900392918201910161050556",
        "parsedOpcodes": "1296: DUP1\n1297: MLOAD\n1298: DUP3\n1299: MSTORE\n1300: PUSH1 0x20\n1302: SWAP3\n1303: DUP4\n1304: SWAP1\n1305: SUB\n1306: SWAP3\n1307: SWAP2\n1308: DUP3\n1309: ADD\n1310: SWAP2\n1311: ADD\n1312: PUSH2 0x0505\n1315: JUMP"
      },
      {
        "offset": 1316,
        "length": 134,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b518151600160209485036101000a0380199092169116179052600080199687168716929094019182526040805192820183900383208584529282018082529287168716835260ff8e8116169282019283528c871687169282019283528b871690961691810191825294519085019550848103935080860392909150865af11580156105b357",
        "parsedOpcodes": "1316: JUMPDEST\n1317: MLOAD\n1318: DUP2\n1319: MLOAD\n1320: PUSH1 0x01\n1322: PUSH1 0x20\n1324: SWAP5\n1325: DUP6\n1326: SUB\n1327: PUSH2 0x0100\n1330: EXP\n1331: SUB\n1332: DUP1\n1333: NOT\n1334: SWAP1\n1335: SWAP3\n1336: AND\n1337: SWAP2\n1338: AND\n1339: OR\n1340: SWAP1\n1341: MSTORE\n1342: PUSH1 0x00\n1344: DUP1\n1345: NOT\n1346: SWAP7\n1347: DUP8\n1348: AND\n1349: DUP8\n1350: AND\n1351: SWAP3\n1352: SWAP1\n1353: SWAP5\n1354: ADD\n1355: SWAP2\n1356: DUP3\n1357: MSTORE\n1358: PUSH1 0x40\n1360: DUP1\n1361: MLOAD\n1362: SWAP3\n1363: DUP3\n1364: ADD\n1365: DUP4\n1366: SWAP1\n1367: SUB\n1368: DUP4\n1369: SHA3\n1370: DUP6\n1371: DUP5\n1372: MSTORE\n1373: SWAP3\n1374: DUP3\n1375: ADD\n1376: DUP1\n1377: DUP3\n1378: MSTORE\n1379: SWAP3\n1380: DUP8\n1381: AND\n1382: DUP8\n1383: AND\n1384: DUP4\n1385: MSTORE\n1386: PUSH1 0xff\n1388: DUP15\n1389: DUP2\n1390: AND\n1391: AND\n1392: SWAP3\n1393: DUP3\n1394: ADD\n1395: SWAP3\n1396: DUP4\n1397: MSTORE\n1398: DUP13\n1399: DUP8\n1400: AND\n1401: DUP8\n1402: AND\n1403: SWAP3\n1404: DUP3\n1405: ADD\n1406: SWAP3\n1407: DUP4\n1408: MSTORE\n1409: DUP12\n1410: DUP8\n1411: AND\n1412: SWAP1\n1413: SWAP7\n1414: AND\n1415: SWAP2\n1416: DUP2\n1417: ADD\n1418: SWAP2\n1419: DUP3\n1420: MSTORE\n1421: SWAP5\n1422: MLOAD\n1423: SWAP1\n1424: DUP6\n1425: ADD\n1426: SWAP6\n1427: POP\n1428: DUP5\n1429: DUP2\n1430: SUB\n1431: SWAP4\n1432: POP\n1433: DUP1\n1434: DUP7\n1435: SUB\n1436: SWAP3\n1437: SWAP1\n1438: SWAP2\n1439: POP\n1440: DUP7\n1441: GAS\n1442: CALL\n1443: ISZERO\n1444: DUP1\n1445: ISZERO\n1446: PUSH2 0x05b3\n1449: JUMPI"
      },
      {
        "offset": 1450,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1450: RETURNDATASIZE\n1451: PUSH1 0x00\n1453: DUP1\n1454: RETURNDATACOPY\n1455: RETURNDATASIZE\n1456: PUSH1 0x00\n1458: REVERT"
      },
      {
        "offset": 1459,
        "length": 40,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50505060206040510351905086600160a060020a031681600160a060020a03161480156105f357",
        "parsedOpcodes": "1459: JUMPDEST\n1460: POP\n1461: POP\n1462: POP\n1463: PUSH1 0x20\n1465: PUSH1 0x40\n1467: MLOAD\n1468: SUB\n1469: MLOAD\n1470: SWAP1\n1471: POP\n1472: DUP7\n1473: PUSH1 0x01\n1475: PUSH1 0xa0\n1477: PUSH1 0x02\n1479: EXP\n1480: SUB\n1481: AND\n1482: DUP2\n1483: PUSH1 0x01\n1485: PUSH1 0xa0\n1487: PUSH1 0x02\n1489: EXP\n1490: SUB\n1491: AND\n1492: EQ\n1493: DUP1\n1494: ISZERO\n1495: PUSH2 0x05f3\n1498: JUMPI"
      },
      {
        "offset": 1499,
        "length": 24,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506000600160a060020a031681600160a060020a03161415",
        "parsedOpcodes": "1499: POP\n1500: PUSH1 0x00\n1502: PUSH1 0x01\n1504: PUSH1 0xa0\n1506: PUSH1 0x02\n1508: EXP\n1509: SUB\n1510: AND\n1511: DUP2\n1512: PUSH1 0x01\n1514: PUSH1 0xa0\n1516: PUSH1 0x02\n1518: EXP\n1519: SUB\n1520: AND\n1521: EQ\n1522: ISZERO"
      },
      {
        "offset": 1523,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b15156105fe57",
        "parsedOpcodes": "1523: JUMPDEST\n1524: ISZERO\n1525: ISZERO\n1526: PUSH2 0x05fe\n1529: JUMPI"
      },
      {
        "offset": 1530,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1530: PUSH1 0x00\n1532: DUP1\n1533: REVERT"
      },
      {
        "offset": 1534,
        "length": 42,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000801980881616815260208082018281520181205460ff6101009290920a90041615151561062c57",
        "parsedOpcodes": "1534: JUMPDEST\n1535: PUSH1 0x00\n1537: DUP1\n1538: NOT\n1539: DUP1\n1540: DUP9\n1541: AND\n1542: AND\n1543: DUP2\n1544: MSTORE\n1545: PUSH1 0x20\n1547: DUP1\n1548: DUP3\n1549: ADD\n1550: DUP3\n1551: DUP2\n1552: MSTORE\n1553: ADD\n1554: DUP2\n1555: SHA3\n1556: SLOAD\n1557: PUSH1 0xff\n1559: PUSH2 0x0100\n1562: SWAP3\n1563: SWAP1\n1564: SWAP3\n1565: EXP\n1566: SWAP1\n1567: DIV\n1568: AND\n1569: ISZERO\n1570: ISZERO\n1571: ISZERO\n1572: PUSH2 0x062c\n1575: JUMPI"
      },
      {
        "offset": 1576,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1576: PUSH1 0x00\n1578: DUP1\n1579: REVERT"
      },
      {
        "offset": 1580,
        "length": 60,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b6001600080886000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050505056",
        "parsedOpcodes": "1580: JUMPDEST\n1581: PUSH1 0x01\n1583: PUSH1 0x00\n1585: DUP1\n1586: DUP9\n1587: PUSH1 0x00\n1589: NOT\n1590: AND\n1591: PUSH1 0x00\n1593: NOT\n1594: AND\n1595: DUP2\n1596: MSTORE\n1597: PUSH1 0x20\n1599: ADD\n1600: SWAP1\n1601: DUP2\n1602: MSTORE\n1603: PUSH1 0x20\n1605: ADD\n1606: PUSH1 0x00\n1608: SHA3\n1609: PUSH1 0x00\n1611: PUSH2 0x0100\n1614: EXP\n1615: DUP2\n1616: SLOAD\n1617: DUP2\n1618: PUSH1 0xff\n1620: MUL\n1621: NOT\n1622: AND\n1623: SWAP1\n1624: DUP4\n1625: ISZERO\n1626: ISZERO\n1627: MUL\n1628: OR\n1629: SWAP1\n1630: SSTORE\n1631: POP\n1632: POP\n1633: POP\n1634: POP\n1635: POP\n1636: POP\n1637: POP\n1638: POP\n1639: JUMP"
      },
      {
        "offset": 1640,
        "length": 121,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b83600160a060020a03166323b872dd8484846040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a031681526020018281526020019350505050602060405180830381600087803b1580156106e557",
        "parsedOpcodes": "1640: JUMPDEST\n1641: DUP4\n1642: PUSH1 0x01\n1644: PUSH1 0xa0\n1646: PUSH1 0x02\n1648: EXP\n1649: SUB\n1650: AND\n1651: PUSH4 0x23b872dd\n1656: DUP5\n1657: DUP5\n1658: DUP5\n1659: PUSH1 0x40\n1661: MLOAD\n1662: DUP5\n1663: PUSH4 0xffffffff\n1668: AND\n1669: PUSH1 0xe0\n1671: PUSH1 0x02\n1673: EXP\n1674: MUL\n1675: DUP2\n1676: MSTORE\n1677: PUSH1 0x04\n1679: ADD\n1680: DUP1\n1681: DUP5\n1682: PUSH1 0x01\n1684: PUSH1 0xa0\n1686: PUSH1 0x02\n1688: EXP\n1689: SUB\n1690: AND\n1691: PUSH1 0x01\n1693: PUSH1 0xa0\n1695: PUSH1 0x02\n1697: EXP\n1698: SUB\n1699: AND\n1700: DUP2\n1701: MSTORE\n1702: PUSH1 0x20\n1704: ADD\n1705: DUP4\n1706: PUSH1 0x01\n1708: PUSH1 0xa0\n1710: PUSH1 0x02\n1712: EXP\n1713: SUB\n1714: AND\n1715: PUSH1 0x01\n1717: PUSH1 0xa0\n1719: PUSH1 0x02\n1721: EXP\n1722: SUB\n1723: AND\n1724: DUP2\n1725: MSTORE\n1726: PUSH1 0x20\n1728: ADD\n1729: DUP3\n1730: DUP2\n1731: MSTORE\n1732: PUSH1 0x20\n1734: ADD\n1735: SWAP4\n1736: POP\n1737: POP\n1738: POP\n1739: POP\n1740: PUSH1 0x20\n1742: PUSH1 0x40\n1744: MLOAD\n1745: DUP1\n1746: DUP4\n1747: SUB\n1748: DUP2\n1749: PUSH1 0x00\n1751: DUP8\n1752: DUP1\n1753: EXTCODESIZE\n1754: ISZERO\n1755: DUP1\n1756: ISZERO\n1757: PUSH2 0x06e5\n1760: JUMPI"
      },
      {
        "offset": 1761,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1761: PUSH1 0x00\n1763: DUP1\n1764: REVERT"
      },
      {
        "offset": 1765,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156106f957",
        "parsedOpcodes": "1765: JUMPDEST\n1766: POP\n1767: GAS\n1768: CALL\n1769: ISZERO\n1770: DUP1\n1771: ISZERO\n1772: PUSH2 0x06f9\n1775: JUMPI"
      },
      {
        "offset": 1776,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1776: RETURNDATASIZE\n1777: PUSH1 0x00\n1779: DUP1\n1780: RETURNDATACOPY\n1781: RETURNDATASIZE\n1782: PUSH1 0x00\n1784: REVERT"
      },
      {
        "offset": 1785,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561070f57",
        "parsedOpcodes": "1785: JUMPDEST\n1786: POP\n1787: POP\n1788: POP\n1789: POP\n1790: PUSH1 0x40\n1792: MLOAD\n1793: RETURNDATASIZE\n1794: PUSH1 0x20\n1796: DUP2\n1797: LT\n1798: ISZERO\n1799: PUSH2 0x070f\n1802: JUMPI"
      },
      {
        "offset": 1803,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1803: PUSH1 0x00\n1805: DUP1\n1806: REVERT"
      },
      {
        "offset": 1807,
        "length": 9,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5051151561071c57",
        "parsedOpcodes": "1807: JUMPDEST\n1808: POP\n1809: MLOAD\n1810: ISZERO\n1811: ISZERO\n1812: PUSH2 0x071c\n1815: JUMPI"
      },
      {
        "offset": 1816,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1816: PUSH1 0x00\n1818: DUP1\n1819: REVERT"
      },
      {
        "offset": 1820,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "1820: JUMPDEST\n1821: POP\n1822: POP\n1823: POP\n1824: POP\n1825: JUMP"
      },
      {
        "offset": 1826,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1826: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          50
        ]
      },
      {
        "from": 13,
        "to": [
          39,
          55
        ]
      },
      {
        "from": 39,
        "to": [
          50,
          217
        ]
      },
      {
        "from": 50,
        "to": [
          1826
        ]
      },
      {
        "from": 55,
        "to": [
          63,
          67
        ]
      },
      {
        "from": 63,
        "to": [
          1826
        ]
      },
      {
        "from": 67,
        "to": [
          309
        ]
      },
      {
        "from": 215,
        "to": [
          1826
        ]
      },
      {
        "from": 217,
        "to": [
          225,
          229
        ]
      },
      {
        "from": 225,
        "to": [
          1826
        ]
      },
      {
        "from": 229,
        "to": [
          967,
          967
        ]
      },
      {
        "from": 309,
        "to": [
          462
        ]
      },
      {
        "from": 462,
        "to": [
          473,
          493
        ]
      },
      {
        "from": 473,
        "to": [
          462,
          462
        ]
      },
      {
        "from": 493,
        "to": [
          1205,
          1205
        ]
      },
      {
        "from": 558,
        "to": [
          690
        ]
      },
      {
        "from": 690,
        "to": [
          699,
          714
        ]
      },
      {
        "from": 699,
        "to": [
          690,
          690,
          690
        ]
      },
      {
        "from": 714,
        "to": [
          734,
          759
        ]
      },
      {
        "from": 734,
        "to": [
          759
        ]
      },
      {
        "from": 759,
        "to": [
          842,
          846
        ]
      },
      {
        "from": 842,
        "to": [
          1826
        ]
      },
      {
        "from": 846,
        "to": [
          857,
          866
        ]
      },
      {
        "from": 857,
        "to": [
          1826
        ]
      },
      {
        "from": 866,
        "to": [
          215
        ]
      },
      {
        "from": 967,
        "to": [
          1205,
          1205
        ]
      },
      {
        "from": 1065,
        "to": [
          1640
        ]
      },
      {
        "from": 1092,
        "to": [
          215
        ]
      },
      {
        "from": 1205,
        "to": [
          1285
        ]
      },
      {
        "from": 1285,
        "to": [
          1296,
          1316
        ]
      },
      {
        "from": 1296,
        "to": [
          1285,
          1285,
          1285
        ]
      },
      {
        "from": 1316,
        "to": [
          1450,
          1459
        ]
      },
      {
        "from": 1450,
        "to": [
          1826
        ]
      },
      {
        "from": 1459,
        "to": [
          1499,
          1523
        ]
      },
      {
        "from": 1499,
        "to": [
          1523
        ]
      },
      {
        "from": 1523,
        "to": [
          1530,
          1534
        ]
      },
      {
        "from": 1530,
        "to": [
          1826
        ]
      },
      {
        "from": 1534,
        "to": [
          1576,
          1580
        ]
      },
      {
        "from": 1576,
        "to": [
          1826
        ]
      },
      {
        "from": 1580,
        "to": [
          558,
          1065
        ]
      },
      {
        "from": 1640,
        "to": [
          1761,
          1765
        ]
      },
      {
        "from": 1761,
        "to": [
          1826
        ]
      },
      {
        "from": 1765,
        "to": [
          1776,
          1785
        ]
      },
      {
        "from": 1776,
        "to": [
          1826
        ]
      },
      {
        "from": 1785,
        "to": [
          1803,
          1807
        ]
      },
      {
        "from": 1803,
        "to": [
          1826
        ]
      },
      {
        "from": 1807,
        "to": [
          1816,
          1820
        ]
      },
      {
        "from": 1816,
        "to": [
          1826
        ]
      },
      {
        "from": 1820,
        "to": [
          1092
        ]
      },
      {
        "from": 1826,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 63
    }
  }
}