{
  "name": "Analysis_2022-04-05_01-19-06",
  "address": "",
  "binarySource": "6080604052600436106100615763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663297c6cbd81146100665780638800e8e3146100dd578063b68e580c14610066578063d2ebe23a14610136575b600080fd5b34801561007257600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100bf9436949293602493928401919081908401838280828437509497506101979650505050505050565b60408051938452602084019290925282820152519081900360600190f35b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050509235600160a060020a031693506102da92505050565b005b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050508335600160a060020a03169450505060208201359160400135905061067d565b60008060006004846040518082805190602001908083835b602083106101ce5780518252601f1990920191602091820191016101af565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381018420600301548851909460049450899350918291908401908083835b602083106102325780518252601f199092019160209182019101610213565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600401546004866040518082805190602001908083835b6020831061029b5780518252601f19909201916020918201910161027c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600501549398929750929550909350505050565b816000806004836040518082805190602001908083835b602083106103105780518252601f1990920191602091820191016102f1565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a015460ff16915050600581111561035057fe5b146103bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f537461746520696e76616c696400000000000000000000000000000000000000604482015290519081900360640190fd5b8333600160a060020a03166004826040518082805190602001908083835b602083106103f95780518252601f1990920191602091820191016103da565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154600160a060020a03169290921491506104a4905057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436172726965722041646472657373206e6f74207265636f676e697a65642e00604482015290519081900360640190fd5b60016004866040518082805190602001908083835b602083106104d85780518252601f1990920191602091820191016104b9565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561051f57fe5b0217905550836004866040518082805190602001908083835b602083106105575780518252601f199092019160209182019101610538565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600201805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0398891617909155958a166000818152600384528281206001018054909816821790975533875260058352818720349055858301528085528a519085015289517f89323920f6bb22e05be8cee30786f5bd43392166ffd653c9c6ca62ea5ec8958a958b958b9550935083926060840192908701918190849084905b8381101561063b578181015183820152602001610623565b50505050905090810190601f1680156106685780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050505050565b3360008181526002602090815260408083206001808201805473ffffffffffffffffffffffffffffffffffffffff1990811690971790553491829055600160a060020a03891680865260058552948390200180549095169093179093559151865191926004928892918291908401908083835b6020831061070f5780518252601f1990920191602091820191016106f0565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060030194909455505085518492600492889290918291908401908083835b602083106107775780518252601f199092019160209182019101610758565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060049081019590955588518695948a9450925082918401908083835b602083106107dd5780518252601f1990920191602091820191016107be565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184206005019490945550508551600092600492889290918291908401908083835b602083106108465780518252601f199092019160209182019101610827565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561088d57fe5b0217905550336004856040518082805190602001908083835b602083106108c55780518252601f1990920191602091820191016108a6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160016101000a815481600160a060020a030219169083600160a060020a03160217905550826004856040518082805190602001908083835b602083106109525780518252601f199092019160209182019101610933565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039788161790553385830181905295891690850152606080855289519085015288517fcd55cf91d5794d78855598fcda4c9003ff1b7cf44cc1d3bf7d48b9073473abbc958a95909450899350918291608083019187019080838360005b83811015610a165781810151838201526020016109fe565b50505050905090810190601f168015610a435780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050505600a165627a7a72305820fbbb87f5f04d4533b6814c76141790250d9ba1f14d0cfb01d268d4921c416f010029",
  "binaryHash": "2597723c",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820fbbb87f5f04d4533b6814c76141790250d9ba1f14d0cfb01d268d4921c416f010029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649089146524
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100615763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663297c6cbd81146100665780638800e8e3146100dd578063b68e580c14610066578063d2ebe23a14610136575b600080fd5b34801561007257600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100bf9436949293602493928401919081908401838280828437509497506101979650505050505050565b60408051938452602084019290925282820152519081900360600190f35b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050509235600160a060020a031693506102da92505050565b005b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050508335600160a060020a03169450505060208201359160400135905061067d565b60008060006004846040518082805190602001908083835b602083106101ce5780518252601f1990920191602091820191016101af565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381018420600301548851909460049450899350918291908401908083835b602083106102325780518252601f199092019160209182019101610213565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600401546004866040518082805190602001908083835b6020831061029b5780518252601f19909201916020918201910161027c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600501549398929750929550909350505050565b816000806004836040518082805190602001908083835b602083106103105780518252601f1990920191602091820191016102f1565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a015460ff16915050600581111561035057fe5b146103bc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f537461746520696e76616c696400000000000000000000000000000000000000604482015290519081900360640190fd5b8333600160a060020a03166004826040518082805190602001908083835b602083106103f95780518252601f1990920191602091820191016103da565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154600160a060020a03169290921491506104a4905057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436172726965722041646472657373206e6f74207265636f676e697a65642e00604482015290519081900360640190fd5b60016004866040518082805190602001908083835b602083106104d85780518252601f1990920191602091820191016104b9565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561051f57fe5b0217905550836004866040518082805190602001908083835b602083106105575780518252601f199092019160209182019101610538565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600201805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0398891617909155958a166000818152600384528281206001018054909816821790975533875260058352818720349055858301528085528a519085015289517f89323920f6bb22e05be8cee30786f5bd43392166ffd653c9c6ca62ea5ec8958a958b958b9550935083926060840192908701918190849084905b8381101561063b578181015183820152602001610623565b50505050905090810190601f1680156106685780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050505050565b3360008181526002602090815260408083206001808201805473ffffffffffffffffffffffffffffffffffffffff1990811690971790553491829055600160a060020a03891680865260058552948390200180549095169093179093559151865191926004928892918291908401908083835b6020831061070f5780518252601f1990920191602091820191016106f0565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060030194909455505085518492600492889290918291908401908083835b602083106107775780518252601f199092019160209182019101610758565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060049081019590955588518695948a9450925082918401908083835b602083106107dd5780518252601f1990920191602091820191016107be565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184206005019490945550508551600092600492889290918291908401908083835b602083106108465780518252601f199092019160209182019101610827565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561088d57fe5b0217905550336004856040518082805190602001908083835b602083106108c55780518252601f1990920191602091820191016108a6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160016101000a815481600160a060020a030219169083600160a060020a03160217905550826004856040518082805190602001908083835b602083106109525780518252601f199092019160209182019101610933565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039788161790553385830181905295891690850152606080855289519085015288517fcd55cf91d5794d78855598fcda4c9003ff1b7cf44cc1d3bf7d48b9073473abbc958a95909450899350918291608083019187019080838360005b83811015610a165781810151838201526020016109fe565b50505050905090810190601f168015610a435780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061006157",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0061\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663297c6cbd811461006657",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x297c6cbd\n58: DUP2\n59: EQ\n60: PUSH2 0x0066\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638800e8e3146100dd57",
        "parsedOpcodes": "64: DUP1\n65: PUSH4 0x8800e8e3\n70: EQ\n71: PUSH2 0x00dd\n74: JUMPI"
      },
      {
        "offset": 75,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063b68e580c1461006657",
        "parsedOpcodes": "75: DUP1\n76: PUSH4 0xb68e580c\n81: EQ\n82: PUSH2 0x0066\n85: JUMPI"
      },
      {
        "offset": 86,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063d2ebe23a1461013657",
        "parsedOpcodes": "86: DUP1\n87: PUSH4 0xd2ebe23a\n92: EQ\n93: PUSH2 0x0136\n96: JUMPI"
      },
      {
        "offset": 97,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "97: JUMPDEST\n98: PUSH1 0x00\n100: DUP1\n101: REVERT"
      },
      {
        "offset": 102,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561007257",
        "parsedOpcodes": "102: JUMPDEST\n103: CALLVALUE\n104: DUP1\n105: ISZERO\n106: PUSH2 0x0072\n109: JUMPI"
      },
      {
        "offset": 110,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "110: PUSH1 0x00\n112: DUP1\n113: REVERT"
      },
      {
        "offset": 114,
        "length": 77,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526100bf943694929360249392840191908190840183828082843750949750610197965050505050505056",
        "parsedOpcodes": "114: JUMPDEST\n115: POP\n116: PUSH1 0x40\n118: DUP1\n119: MLOAD\n120: PUSH1 0x20\n122: PUSH1 0x04\n124: DUP1\n125: CALLDATALOAD\n126: DUP1\n127: DUP3\n128: ADD\n129: CALLDATALOAD\n130: PUSH1 0x1f\n132: DUP2\n133: ADD\n134: DUP5\n135: SWAP1\n136: DIV\n137: DUP5\n138: MUL\n139: DUP6\n140: ADD\n141: DUP5\n142: ADD\n143: SWAP1\n144: SWAP6\n145: MSTORE\n146: DUP5\n147: DUP5\n148: MSTORE\n149: PUSH2 0x00bf\n152: SWAP5\n153: CALLDATASIZE\n154: SWAP5\n155: SWAP3\n156: SWAP4\n157: PUSH1 0x24\n159: SWAP4\n160: SWAP3\n161: DUP5\n162: ADD\n163: SWAP2\n164: SWAP1\n165: DUP2\n166: SWAP1\n167: DUP5\n168: ADD\n169: DUP4\n170: DUP3\n171: DUP1\n172: DUP3\n173: DUP5\n174: CALLDATACOPY\n175: POP\n176: SWAP5\n177: SWAP8\n178: POP\n179: PUSH2 0x0197\n182: SWAP7\n183: POP\n184: POP\n185: POP\n186: POP\n187: POP\n188: POP\n189: POP\n190: JUMP"
      },
      {
        "offset": 191,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": -3,
        "bytecodeHex": "5b60408051938452602084019290925282820152519081900360600190f3",
        "parsedOpcodes": "191: JUMPDEST\n192: PUSH1 0x40\n194: DUP1\n195: MLOAD\n196: SWAP4\n197: DUP5\n198: MSTORE\n199: PUSH1 0x20\n201: DUP5\n202: ADD\n203: SWAP3\n204: SWAP1\n205: SWAP3\n206: MSTORE\n207: DUP3\n208: DUP3\n209: ADD\n210: MSTORE\n211: MLOAD\n212: SWAP1\n213: DUP2\n214: SWAP1\n215: SUB\n216: PUSH1 0x60\n218: ADD\n219: SWAP1\n220: RETURN"
      },
      {
        "offset": 221,
        "length": 87,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050509235600160a060020a031693506102da9250505056",
        "parsedOpcodes": "221: JUMPDEST\n222: PUSH1 0x40\n224: DUP1\n225: MLOAD\n226: PUSH1 0x20\n228: PUSH1 0x04\n230: DUP1\n231: CALLDATALOAD\n232: DUP1\n233: DUP3\n234: ADD\n235: CALLDATALOAD\n236: PUSH1 0x1f\n238: DUP2\n239: ADD\n240: DUP5\n241: SWAP1\n242: DIV\n243: DUP5\n244: MUL\n245: DUP6\n246: ADD\n247: DUP5\n248: ADD\n249: SWAP1\n250: SWAP6\n251: MSTORE\n252: DUP5\n253: DUP5\n254: MSTORE\n255: PUSH2 0x0134\n258: SWAP5\n259: CALLDATASIZE\n260: SWAP5\n261: SWAP3\n262: SWAP4\n263: PUSH1 0x24\n265: SWAP4\n266: SWAP3\n267: DUP5\n268: ADD\n269: SWAP2\n270: SWAP1\n271: DUP2\n272: SWAP1\n273: DUP5\n274: ADD\n275: DUP4\n276: DUP3\n277: DUP1\n278: DUP3\n279: DUP5\n280: CALLDATACOPY\n281: POP\n282: SWAP5\n283: SWAP8\n284: POP\n285: POP\n286: POP\n287: SWAP3\n288: CALLDATALOAD\n289: PUSH1 0x01\n291: PUSH1 0xa0\n293: PUSH1 0x02\n295: EXP\n296: SUB\n297: AND\n298: SWAP4\n299: POP\n300: PUSH2 0x02da\n303: SWAP3\n304: POP\n305: POP\n306: POP\n307: JUMP"
      },
      {
        "offset": 308,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "308: JUMPDEST\n309: STOP"
      },
      {
        "offset": 310,
        "length": 97,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b6040805160206004803580820135601f810184900484028501840190955284845261013494369492936024939284019190819084018382808284375094975050508335600160a060020a03169450505060208201359160400135905061067d56",
        "parsedOpcodes": "310: JUMPDEST\n311: PUSH1 0x40\n313: DUP1\n314: MLOAD\n315: PUSH1 0x20\n317: PUSH1 0x04\n319: DUP1\n320: CALLDATALOAD\n321: DUP1\n322: DUP3\n323: ADD\n324: CALLDATALOAD\n325: PUSH1 0x1f\n327: DUP2\n328: ADD\n329: DUP5\n330: SWAP1\n331: DIV\n332: DUP5\n333: MUL\n334: DUP6\n335: ADD\n336: DUP5\n337: ADD\n338: SWAP1\n339: SWAP6\n340: MSTORE\n341: DUP5\n342: DUP5\n343: MSTORE\n344: PUSH2 0x0134\n347: SWAP5\n348: CALLDATASIZE\n349: SWAP5\n350: SWAP3\n351: SWAP4\n352: PUSH1 0x24\n354: SWAP4\n355: SWAP3\n356: DUP5\n357: ADD\n358: SWAP2\n359: SWAP1\n360: DUP2\n361: SWAP1\n362: DUP5\n363: ADD\n364: DUP4\n365: DUP3\n366: DUP1\n367: DUP3\n368: DUP5\n369: CALLDATACOPY\n370: POP\n371: SWAP5\n372: SWAP8\n373: POP\n374: POP\n375: POP\n376: DUP4\n377: CALLDATALOAD\n378: PUSH1 0x01\n380: PUSH1 0xa0\n382: PUSH1 0x02\n384: EXP\n385: SUB\n386: AND\n387: SWAP5\n388: POP\n389: POP\n390: POP\n391: PUSH1 0x20\n393: DUP3\n394: ADD\n395: CALLDATALOAD\n396: SWAP2\n397: PUSH1 0x40\n399: ADD\n400: CALLDATALOAD\n401: SWAP1\n402: POP\n403: PUSH2 0x067d\n406: JUMP"
      },
      {
        "offset": 407,
        "length": 24,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b6000806000600484604051808280519060200190808383",
        "parsedOpcodes": "407: JUMPDEST\n408: PUSH1 0x00\n410: DUP1\n411: PUSH1 0x00\n413: PUSH1 0x04\n415: DUP5\n416: PUSH1 0x40\n418: MLOAD\n419: DUP1\n420: DUP3\n421: DUP1\n422: MLOAD\n423: SWAP1\n424: PUSH1 0x20\n426: ADD\n427: SWAP1\n428: DUP1\n429: DUP4\n430: DUP4"
      },
      {
        "offset": 431,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106101ce57",
        "parsedOpcodes": "431: JUMPDEST\n432: PUSH1 0x20\n434: DUP4\n435: LT\n436: PUSH2 0x01ce\n439: JUMPI"
      },
      {
        "offset": 440,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016101af56",
        "parsedOpcodes": "440: DUP1\n441: MLOAD\n442: DUP3\n443: MSTORE\n444: PUSH1 0x1f\n446: NOT\n447: SWAP1\n448: SWAP3\n449: ADD\n450: SWAP2\n451: PUSH1 0x20\n453: SWAP2\n454: DUP3\n455: ADD\n456: SWAP2\n457: ADD\n458: PUSH2 0x01af\n461: JUMP"
      },
      {
        "offset": 462,
        "length": 69,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060030154885190946004945089935091829190840190808383",
        "parsedOpcodes": "462: JUMPDEST\n463: MLOAD\n464: DUP2\n465: MLOAD\n466: PUSH1 0x20\n468: SWAP4\n469: DUP5\n470: SUB\n471: PUSH2 0x0100\n474: EXP\n475: PUSH1 0x00\n477: NOT\n478: ADD\n479: DUP1\n480: NOT\n481: SWAP1\n482: SWAP3\n483: AND\n484: SWAP2\n485: AND\n486: OR\n487: SWAP1\n488: MSTORE\n489: SWAP3\n490: ADD\n491: SWAP5\n492: DUP6\n493: MSTORE\n494: POP\n495: PUSH1 0x40\n497: MLOAD\n498: SWAP4\n499: DUP5\n500: SWAP1\n501: SUB\n502: DUP2\n503: ADD\n504: DUP5\n505: SHA3\n506: PUSH1 0x03\n508: ADD\n509: SLOAD\n510: DUP9\n511: MLOAD\n512: SWAP1\n513: SWAP5\n514: PUSH1 0x04\n516: SWAP5\n517: POP\n518: DUP10\n519: SWAP4\n520: POP\n521: SWAP2\n522: DUP3\n523: SWAP2\n524: SWAP1\n525: DUP5\n526: ADD\n527: SWAP1\n528: DUP1\n529: DUP4\n530: DUP4"
      },
      {
        "offset": 531,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061023257",
        "parsedOpcodes": "531: JUMPDEST\n532: PUSH1 0x20\n534: DUP4\n535: LT\n536: PUSH2 0x0232\n539: JUMPI"
      },
      {
        "offset": 540,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161021356",
        "parsedOpcodes": "540: DUP1\n541: MLOAD\n542: DUP3\n543: MSTORE\n544: PUSH1 0x1f\n546: NOT\n547: SWAP1\n548: SWAP3\n549: ADD\n550: SWAP2\n551: PUSH1 0x20\n553: SWAP2\n554: DUP3\n555: ADD\n556: SWAP2\n557: ADD\n558: PUSH2 0x0213\n561: JUMP"
      },
      {
        "offset": 562,
        "length": 74,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060040154600486604051808280519060200190808383",
        "parsedOpcodes": "562: JUMPDEST\n563: PUSH1 0x01\n565: DUP4\n566: PUSH1 0x20\n568: SUB\n569: PUSH2 0x0100\n572: EXP\n573: SUB\n574: DUP1\n575: NOT\n576: DUP3\n577: MLOAD\n578: AND\n579: DUP2\n580: DUP5\n581: MLOAD\n582: AND\n583: DUP1\n584: DUP3\n585: OR\n586: DUP6\n587: MSTORE\n588: POP\n589: POP\n590: POP\n591: POP\n592: POP\n593: POP\n594: SWAP1\n595: POP\n596: ADD\n597: SWAP2\n598: POP\n599: POP\n600: SWAP1\n601: DUP2\n602: MSTORE\n603: PUSH1 0x20\n605: ADD\n606: PUSH1 0x40\n608: MLOAD\n609: DUP1\n610: SWAP2\n611: SUB\n612: SWAP1\n613: SHA3\n614: PUSH1 0x04\n616: ADD\n617: SLOAD\n618: PUSH1 0x04\n620: DUP7\n621: PUSH1 0x40\n623: MLOAD\n624: DUP1\n625: DUP3\n626: DUP1\n627: MLOAD\n628: SWAP1\n629: PUSH1 0x20\n631: ADD\n632: SWAP1\n633: DUP1\n634: DUP4\n635: DUP4"
      },
      {
        "offset": 636,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061029b57",
        "parsedOpcodes": "636: JUMPDEST\n637: PUSH1 0x20\n639: DUP4\n640: LT\n641: PUSH2 0x029b\n644: JUMPI"
      },
      {
        "offset": 645,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161027c56",
        "parsedOpcodes": "645: DUP1\n646: MLOAD\n647: DUP3\n648: MSTORE\n649: PUSH1 0x1f\n651: NOT\n652: SWAP1\n653: SWAP3\n654: ADD\n655: SWAP2\n656: PUSH1 0x20\n658: SWAP2\n659: DUP3\n660: ADD\n661: SWAP2\n662: ADD\n663: PUSH2 0x027c\n666: JUMP"
      },
      {
        "offset": 667,
        "length": 63,
        "type": "common",
        "stackBalance": -13,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060050154939892975092955090935050505056",
        "parsedOpcodes": "667: JUMPDEST\n668: MLOAD\n669: DUP2\n670: MLOAD\n671: PUSH1 0x20\n673: SWAP4\n674: DUP5\n675: SUB\n676: PUSH2 0x0100\n679: EXP\n680: PUSH1 0x00\n682: NOT\n683: ADD\n684: DUP1\n685: NOT\n686: SWAP1\n687: SWAP3\n688: AND\n689: SWAP2\n690: AND\n691: OR\n692: SWAP1\n693: MSTORE\n694: SWAP3\n695: ADD\n696: SWAP5\n697: DUP6\n698: MSTORE\n699: POP\n700: PUSH1 0x40\n702: MLOAD\n703: SWAP4\n704: DUP5\n705: SWAP1\n706: SUB\n707: ADD\n708: SWAP1\n709: SWAP3\n710: SHA3\n711: PUSH1 0x05\n713: ADD\n714: SLOAD\n715: SWAP4\n716: SWAP9\n717: SWAP3\n718: SWAP8\n719: POP\n720: SWAP3\n721: SWAP6\n722: POP\n723: SWAP1\n724: SWAP4\n725: POP\n726: POP\n727: POP\n728: POP\n729: JUMP"
      },
      {
        "offset": 730,
        "length": 23,
        "type": "common",
        "stackBalance": 12,
        "bytecodeHex": "5b81600080600483604051808280519060200190808383",
        "parsedOpcodes": "730: JUMPDEST\n731: DUP2\n732: PUSH1 0x00\n734: DUP1\n735: PUSH1 0x04\n737: DUP4\n738: PUSH1 0x40\n740: MLOAD\n741: DUP1\n742: DUP3\n743: DUP1\n744: MLOAD\n745: SWAP1\n746: PUSH1 0x20\n748: ADD\n749: SWAP1\n750: DUP1\n751: DUP4\n752: DUP4"
      },
      {
        "offset": 753,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061031057",
        "parsedOpcodes": "753: JUMPDEST\n754: PUSH1 0x20\n756: DUP4\n757: LT\n758: PUSH2 0x0310\n761: JUMPI"
      },
      {
        "offset": 762,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016102f156",
        "parsedOpcodes": "762: DUP1\n763: MLOAD\n764: DUP3\n765: MSTORE\n766: PUSH1 0x1f\n768: NOT\n769: SWAP1\n770: SWAP3\n771: ADD\n772: SWAP2\n773: PUSH1 0x20\n775: SWAP2\n776: DUP3\n777: ADD\n778: SWAP2\n779: ADD\n780: PUSH2 0x02f1\n783: JUMP"
      },
      {
        "offset": 784,
        "length": 63,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a015460ff16915050600581111561035057",
        "parsedOpcodes": "784: JUMPDEST\n785: MLOAD\n786: DUP2\n787: MLOAD\n788: PUSH1 0x20\n790: SWAP4\n791: DUP5\n792: SUB\n793: PUSH2 0x0100\n796: EXP\n797: PUSH1 0x00\n799: NOT\n800: ADD\n801: DUP1\n802: NOT\n803: SWAP1\n804: SWAP3\n805: AND\n806: SWAP2\n807: AND\n808: OR\n809: SWAP1\n810: MSTORE\n811: SWAP3\n812: ADD\n813: SWAP5\n814: DUP6\n815: MSTORE\n816: POP\n817: PUSH1 0x40\n819: MLOAD\n820: SWAP4\n821: DUP5\n822: SWAP1\n823: SUB\n824: ADD\n825: SWAP1\n826: SWAP3\n827: SHA3\n828: PUSH1 0x0a\n830: ADD\n831: SLOAD\n832: PUSH1 0xff\n834: AND\n835: SWAP2\n836: POP\n837: POP\n838: PUSH1 0x05\n840: DUP2\n841: GT\n842: ISZERO\n843: PUSH2 0x0350\n846: JUMPI"
      },
      {
        "offset": 847,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "847: INVALID"
      },
      {
        "offset": 848,
        "length": 6,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b146103bc57",
        "parsedOpcodes": "848: JUMPDEST\n849: EQ\n850: PUSH2 0x03bc\n853: JUMPI"
      },
      {
        "offset": 854,
        "length": 102,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f537461746520696e76616c696400000000000000000000000000000000000000604482015290519081900360640190fd",
        "parsedOpcodes": "854: PUSH1 0x40\n856: DUP1\n857: MLOAD\n858: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n891: DUP2\n892: MSTORE\n893: PUSH1 0x20\n895: PUSH1 0x04\n897: DUP3\n898: ADD\n899: MSTORE\n900: PUSH1 0x0d\n902: PUSH1 0x24\n904: DUP3\n905: ADD\n906: MSTORE\n907: PUSH32 0x537461746520696e76616c696400000000000000000000000000000000000000\n940: PUSH1 0x44\n942: DUP3\n943: ADD\n944: MSTORE\n945: SWAP1\n946: MLOAD\n947: SWAP1\n948: DUP2\n949: SWAP1\n950: SUB\n951: PUSH1 0x64\n953: ADD\n954: SWAP1\n955: REVERT"
      },
      {
        "offset": 956,
        "length": 30,
        "type": "common",
        "stackBalance": 11,
        "bytecodeHex": "5b8333600160a060020a0316600482604051808280519060200190808383",
        "parsedOpcodes": "956: JUMPDEST\n957: DUP4\n958: CALLER\n959: PUSH1 0x01\n961: PUSH1 0xa0\n963: PUSH1 0x02\n965: EXP\n966: SUB\n967: AND\n968: PUSH1 0x04\n970: DUP3\n971: PUSH1 0x40\n973: MLOAD\n974: DUP1\n975: DUP3\n976: DUP1\n977: MLOAD\n978: SWAP1\n979: PUSH1 0x20\n981: ADD\n982: SWAP1\n983: DUP1\n984: DUP4\n985: DUP4"
      },
      {
        "offset": 986,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106103f957",
        "parsedOpcodes": "986: JUMPDEST\n987: PUSH1 0x20\n989: DUP4\n990: LT\n991: PUSH2 0x03f9\n994: JUMPI"
      },
      {
        "offset": 995,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016103da56",
        "parsedOpcodes": "995: DUP1\n996: MLOAD\n997: DUP3\n998: MSTORE\n999: PUSH1 0x1f\n1001: NOT\n1002: SWAP1\n1003: SWAP3\n1004: ADD\n1005: SWAP2\n1006: PUSH1 0x20\n1008: SWAP2\n1009: DUP3\n1010: ADD\n1011: SWAP2\n1012: ADD\n1013: PUSH2 0x03da\n1016: JUMP"
      },
      {
        "offset": 1017,
        "length": 69,
        "type": "common",
        "stackBalance": -10,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922060010154600160a060020a03169290921491506104a4905057",
        "parsedOpcodes": "1017: JUMPDEST\n1018: MLOAD\n1019: DUP2\n1020: MLOAD\n1021: PUSH1 0x20\n1023: SWAP4\n1024: DUP5\n1025: SUB\n1026: PUSH2 0x0100\n1029: EXP\n1030: PUSH1 0x00\n1032: NOT\n1033: ADD\n1034: DUP1\n1035: NOT\n1036: SWAP1\n1037: SWAP3\n1038: AND\n1039: SWAP2\n1040: AND\n1041: OR\n1042: SWAP1\n1043: MSTORE\n1044: SWAP3\n1045: ADD\n1046: SWAP5\n1047: DUP6\n1048: MSTORE\n1049: POP\n1050: PUSH1 0x40\n1052: MLOAD\n1053: SWAP4\n1054: DUP5\n1055: SWAP1\n1056: SUB\n1057: ADD\n1058: SWAP1\n1059: SWAP3\n1060: SHA3\n1061: PUSH1 0x01\n1063: ADD\n1064: SLOAD\n1065: PUSH1 0x01\n1067: PUSH1 0xa0\n1069: PUSH1 0x02\n1071: EXP\n1072: SUB\n1073: AND\n1074: SWAP3\n1075: SWAP1\n1076: SWAP3\n1077: EQ\n1078: SWAP2\n1079: POP\n1080: PUSH2 0x04a4\n1083: SWAP1\n1084: POP\n1085: JUMPI"
      },
      {
        "offset": 1086,
        "length": 102,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436172726965722041646472657373206e6f74207265636f676e697a65642e00604482015290519081900360640190fd",
        "parsedOpcodes": "1086: PUSH1 0x40\n1088: DUP1\n1089: MLOAD\n1090: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n1123: DUP2\n1124: MSTORE\n1125: PUSH1 0x20\n1127: PUSH1 0x04\n1129: DUP3\n1130: ADD\n1131: MSTORE\n1132: PUSH1 0x1f\n1134: PUSH1 0x24\n1136: DUP3\n1137: ADD\n1138: MSTORE\n1139: PUSH32 0x436172726965722041646472657373206e6f74207265636f676e697a65642e00\n1172: PUSH1 0x44\n1174: DUP3\n1175: ADD\n1176: MSTORE\n1177: SWAP1\n1178: MLOAD\n1179: SWAP1\n1180: DUP2\n1181: SWAP1\n1182: SUB\n1183: PUSH1 0x64\n1185: ADD\n1186: SWAP1\n1187: REVERT"
      },
      {
        "offset": 1188,
        "length": 21,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b6001600486604051808280519060200190808383",
        "parsedOpcodes": "1188: JUMPDEST\n1189: PUSH1 0x01\n1191: PUSH1 0x04\n1193: DUP7\n1194: PUSH1 0x40\n1196: MLOAD\n1197: DUP1\n1198: DUP3\n1199: DUP1\n1200: MLOAD\n1201: SWAP1\n1202: PUSH1 0x20\n1204: ADD\n1205: SWAP1\n1206: DUP1\n1207: DUP4\n1208: DUP4"
      },
      {
        "offset": 1209,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106104d857",
        "parsedOpcodes": "1209: JUMPDEST\n1210: PUSH1 0x20\n1212: DUP4\n1213: LT\n1214: PUSH2 0x04d8\n1217: JUMPI"
      },
      {
        "offset": 1218,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016104b956",
        "parsedOpcodes": "1218: DUP1\n1219: MLOAD\n1220: DUP3\n1221: MSTORE\n1222: PUSH1 0x1f\n1224: NOT\n1225: SWAP1\n1226: SWAP3\n1227: ADD\n1228: SWAP2\n1229: PUSH1 0x20\n1231: SWAP2\n1232: DUP3\n1233: ADD\n1234: SWAP2\n1235: ADD\n1236: PUSH2 0x04b9\n1239: JUMP"
      },
      {
        "offset": 1240,
        "length": 70,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561051f57",
        "parsedOpcodes": "1240: JUMPDEST\n1241: MLOAD\n1242: DUP2\n1243: MLOAD\n1244: PUSH1 0x20\n1246: SWAP4\n1247: DUP5\n1248: SUB\n1249: PUSH2 0x0100\n1252: EXP\n1253: PUSH1 0x00\n1255: NOT\n1256: ADD\n1257: DUP1\n1258: NOT\n1259: SWAP1\n1260: SWAP3\n1261: AND\n1262: SWAP2\n1263: AND\n1264: OR\n1265: SWAP1\n1266: MSTORE\n1267: SWAP3\n1268: ADD\n1269: SWAP5\n1270: DUP6\n1271: MSTORE\n1272: POP\n1273: PUSH1 0x40\n1275: MLOAD\n1276: SWAP4\n1277: DUP5\n1278: SWAP1\n1279: SUB\n1280: ADD\n1281: SWAP1\n1282: SWAP3\n1283: SHA3\n1284: PUSH1 0x0a\n1286: ADD\n1287: DUP1\n1288: SLOAD\n1289: SWAP1\n1290: SWAP3\n1291: POP\n1292: PUSH1 0xff\n1294: NOT\n1295: AND\n1296: SWAP1\n1297: POP\n1298: PUSH1 0x01\n1300: DUP4\n1301: PUSH1 0x05\n1303: DUP2\n1304: GT\n1305: ISZERO\n1306: PUSH2 0x051f\n1309: JUMPI"
      },
      {
        "offset": 1310,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1310: INVALID"
      },
      {
        "offset": 1311,
        "length": 25,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b021790555083600486604051808280519060200190808383",
        "parsedOpcodes": "1311: JUMPDEST\n1312: MUL\n1313: OR\n1314: SWAP1\n1315: SSTORE\n1316: POP\n1317: DUP4\n1318: PUSH1 0x04\n1320: DUP7\n1321: PUSH1 0x40\n1323: MLOAD\n1324: DUP1\n1325: DUP3\n1326: DUP1\n1327: MLOAD\n1328: SWAP1\n1329: PUSH1 0x20\n1331: ADD\n1332: SWAP1\n1333: DUP1\n1334: DUP4\n1335: DUP4"
      },
      {
        "offset": 1336,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061055757",
        "parsedOpcodes": "1336: JUMPDEST\n1337: PUSH1 0x20\n1339: DUP4\n1340: LT\n1341: PUSH2 0x0557\n1344: JUMPI"
      },
      {
        "offset": 1345,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161053856",
        "parsedOpcodes": "1345: DUP1\n1346: MLOAD\n1347: DUP3\n1348: MSTORE\n1349: PUSH1 0x1f\n1351: NOT\n1352: SWAP1\n1353: SWAP3\n1354: ADD\n1355: SWAP2\n1356: PUSH1 0x20\n1358: SWAP2\n1359: DUP3\n1360: ADD\n1361: SWAP2\n1362: ADD\n1363: PUSH2 0x0538\n1366: JUMP"
      },
      {
        "offset": 1367,
        "length": 204,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600201805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0398891617909155958a166000818152600384528281206001018054909816821790975533875260058352818720349055858301528085528a519085015289517f89323920f6bb22e05be8cee30786f5bd43392166ffd653c9c6ca62ea5ec8958a958b958b955093508392606084019290870191819084908490",
        "parsedOpcodes": "1367: JUMPDEST\n1368: MLOAD\n1369: DUP2\n1370: MLOAD\n1371: PUSH1 0x20\n1373: SWAP4\n1374: DUP5\n1375: SUB\n1376: PUSH2 0x0100\n1379: EXP\n1380: PUSH1 0x00\n1382: NOT\n1383: ADD\n1384: DUP1\n1385: NOT\n1386: SWAP1\n1387: SWAP3\n1388: AND\n1389: SWAP2\n1390: AND\n1391: OR\n1392: SWAP1\n1393: MSTORE\n1394: SWAP3\n1395: ADD\n1396: SWAP5\n1397: DUP6\n1398: MSTORE\n1399: POP\n1400: PUSH1 0x40\n1402: DUP1\n1403: MLOAD\n1404: SWAP5\n1405: DUP6\n1406: SWAP1\n1407: SUB\n1408: DUP3\n1409: ADD\n1410: DUP6\n1411: SHA3\n1412: PUSH1 0x02\n1414: ADD\n1415: DUP1\n1416: SLOAD\n1417: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1438: NOT\n1439: SWAP1\n1440: DUP2\n1441: AND\n1442: PUSH1 0x01\n1444: PUSH1 0xa0\n1446: PUSH1 0x02\n1448: EXP\n1449: SUB\n1450: SWAP9\n1451: DUP10\n1452: AND\n1453: OR\n1454: SWAP1\n1455: SWAP2\n1456: SSTORE\n1457: SWAP6\n1458: DUP11\n1459: AND\n1460: PUSH1 0x00\n1462: DUP2\n1463: DUP2\n1464: MSTORE\n1465: PUSH1 0x03\n1467: DUP5\n1468: MSTORE\n1469: DUP3\n1470: DUP2\n1471: SHA3\n1472: PUSH1 0x01\n1474: ADD\n1475: DUP1\n1476: SLOAD\n1477: SWAP1\n1478: SWAP9\n1479: AND\n1480: DUP3\n1481: OR\n1482: SWAP1\n1483: SWAP8\n1484: SSTORE\n1485: CALLER\n1486: DUP8\n1487: MSTORE\n1488: PUSH1 0x05\n1490: DUP4\n1491: MSTORE\n1492: DUP2\n1493: DUP8\n1494: SHA3\n1495: CALLVALUE\n1496: SWAP1\n1497: SSTORE\n1498: DUP6\n1499: DUP4\n1500: ADD\n1501: MSTORE\n1502: DUP1\n1503: DUP6\n1504: MSTORE\n1505: DUP11\n1506: MLOAD\n1507: SWAP1\n1508: DUP6\n1509: ADD\n1510: MSTORE\n1511: DUP10\n1512: MLOAD\n1513: PUSH32 0x89323920f6bb22e05be8cee30786f5bd43392166ffd653c9c6ca62ea5ec8958a\n1546: SWAP6\n1547: DUP12\n1548: SWAP6\n1549: DUP12\n1550: SWAP6\n1551: POP\n1552: SWAP4\n1553: POP\n1554: DUP4\n1555: SWAP3\n1556: PUSH1 0x60\n1558: DUP5\n1559: ADD\n1560: SWAP3\n1561: SWAP1\n1562: DUP8\n1563: ADD\n1564: SWAP2\n1565: DUP2\n1566: SWAP1\n1567: DUP5\n1568: SWAP1\n1569: DUP5\n1570: SWAP1"
      },
      {
        "offset": 1571,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8381101561063b57",
        "parsedOpcodes": "1571: JUMPDEST\n1572: DUP4\n1573: DUP2\n1574: LT\n1575: ISZERO\n1576: PUSH2 0x063b\n1579: JUMPI"
      },
      {
        "offset": 1580,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "818101518382015260200161062356",
        "parsedOpcodes": "1580: DUP2\n1581: DUP2\n1582: ADD\n1583: MLOAD\n1584: DUP4\n1585: DUP3\n1586: ADD\n1587: MSTORE\n1588: PUSH1 0x20\n1590: ADD\n1591: PUSH2 0x0623\n1594: JUMP"
      },
      {
        "offset": 1595,
        "length": 20,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f16801561066857",
        "parsedOpcodes": "1595: JUMPDEST\n1596: POP\n1597: POP\n1598: POP\n1599: POP\n1600: SWAP1\n1601: POP\n1602: SWAP1\n1603: DUP2\n1604: ADD\n1605: SWAP1\n1606: PUSH1 0x1f\n1608: AND\n1609: DUP1\n1610: ISZERO\n1611: PUSH2 0x0668\n1614: JUMPI"
      },
      {
        "offset": 1615,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "1615: DUP1\n1616: DUP3\n1617: SUB\n1618: DUP1\n1619: MLOAD\n1620: PUSH1 0x01\n1622: DUP4\n1623: PUSH1 0x20\n1625: SUB\n1626: PUSH2 0x0100\n1629: EXP\n1630: SUB\n1631: NOT\n1632: AND\n1633: DUP2\n1634: MSTORE\n1635: PUSH1 0x20\n1637: ADD\n1638: SWAP2\n1639: POP"
      },
      {
        "offset": 1640,
        "length": 21,
        "type": "common",
        "stackBalance": -13,
        "bytecodeHex": "5b50935050505060405180910390a1505050505056",
        "parsedOpcodes": "1640: JUMPDEST\n1641: POP\n1642: SWAP4\n1643: POP\n1644: POP\n1645: POP\n1646: POP\n1647: PUSH1 0x40\n1649: MLOAD\n1650: DUP1\n1651: SWAP2\n1652: SUB\n1653: SWAP1\n1654: LOG1\n1655: POP\n1656: POP\n1657: POP\n1658: POP\n1659: POP\n1660: JUMP"
      },
      {
        "offset": 1661,
        "length": 115,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b3360008181526002602090815260408083206001808201805473ffffffffffffffffffffffffffffffffffffffff1990811690971790553491829055600160a060020a0389168086526005855294839020018054909516909317909355915186519192600492889291829190840190808383",
        "parsedOpcodes": "1661: JUMPDEST\n1662: CALLER\n1663: PUSH1 0x00\n1665: DUP2\n1666: DUP2\n1667: MSTORE\n1668: PUSH1 0x02\n1670: PUSH1 0x20\n1672: SWAP1\n1673: DUP2\n1674: MSTORE\n1675: PUSH1 0x40\n1677: DUP1\n1678: DUP4\n1679: SHA3\n1680: PUSH1 0x01\n1682: DUP1\n1683: DUP3\n1684: ADD\n1685: DUP1\n1686: SLOAD\n1687: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1708: NOT\n1709: SWAP1\n1710: DUP2\n1711: AND\n1712: SWAP1\n1713: SWAP8\n1714: OR\n1715: SWAP1\n1716: SSTORE\n1717: CALLVALUE\n1718: SWAP2\n1719: DUP3\n1720: SWAP1\n1721: SSTORE\n1722: PUSH1 0x01\n1724: PUSH1 0xa0\n1726: PUSH1 0x02\n1728: EXP\n1729: SUB\n1730: DUP10\n1731: AND\n1732: DUP1\n1733: DUP7\n1734: MSTORE\n1735: PUSH1 0x05\n1737: DUP6\n1738: MSTORE\n1739: SWAP5\n1740: DUP4\n1741: SWAP1\n1742: SHA3\n1743: ADD\n1744: DUP1\n1745: SLOAD\n1746: SWAP1\n1747: SWAP6\n1748: AND\n1749: SWAP1\n1750: SWAP4\n1751: OR\n1752: SWAP1\n1753: SWAP4\n1754: SSTORE\n1755: SWAP2\n1756: MLOAD\n1757: DUP7\n1758: MLOAD\n1759: SWAP2\n1760: SWAP3\n1761: PUSH1 0x04\n1763: SWAP3\n1764: DUP9\n1765: SWAP3\n1766: SWAP2\n1767: DUP3\n1768: SWAP2\n1769: SWAP1\n1770: DUP5\n1771: ADD\n1772: SWAP1\n1773: DUP1\n1774: DUP4\n1775: DUP4"
      },
      {
        "offset": 1776,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061070f57",
        "parsedOpcodes": "1776: JUMPDEST\n1777: PUSH1 0x20\n1779: DUP4\n1780: LT\n1781: PUSH2 0x070f\n1784: JUMPI"
      },
      {
        "offset": 1785,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016106f056",
        "parsedOpcodes": "1785: DUP1\n1786: MLOAD\n1787: DUP3\n1788: MSTORE\n1789: PUSH1 0x1f\n1791: NOT\n1792: SWAP1\n1793: SWAP3\n1794: ADD\n1795: SWAP2\n1796: PUSH1 0x20\n1798: SWAP2\n1799: DUP3\n1800: ADD\n1801: SWAP2\n1802: ADD\n1803: PUSH2 0x06f0\n1806: JUMP"
      },
      {
        "offset": 1807,
        "length": 73,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b51815160209384036101000a600019018019909216911617905292019485525060405193849003810184206003019490945550508551849260049288929091829190840190808383",
        "parsedOpcodes": "1807: JUMPDEST\n1808: MLOAD\n1809: DUP2\n1810: MLOAD\n1811: PUSH1 0x20\n1813: SWAP4\n1814: DUP5\n1815: SUB\n1816: PUSH2 0x0100\n1819: EXP\n1820: PUSH1 0x00\n1822: NOT\n1823: ADD\n1824: DUP1\n1825: NOT\n1826: SWAP1\n1827: SWAP3\n1828: AND\n1829: SWAP2\n1830: AND\n1831: OR\n1832: SWAP1\n1833: MSTORE\n1834: SWAP3\n1835: ADD\n1836: SWAP5\n1837: DUP6\n1838: MSTORE\n1839: POP\n1840: PUSH1 0x40\n1842: MLOAD\n1843: SWAP4\n1844: DUP5\n1845: SWAP1\n1846: SUB\n1847: DUP2\n1848: ADD\n1849: DUP5\n1850: SHA3\n1851: PUSH1 0x03\n1853: ADD\n1854: SWAP5\n1855: SWAP1\n1856: SWAP5\n1857: SSTORE\n1858: POP\n1859: POP\n1860: DUP6\n1861: MLOAD\n1862: DUP5\n1863: SWAP3\n1864: PUSH1 0x04\n1866: SWAP3\n1867: DUP9\n1868: SWAP3\n1869: SWAP1\n1870: SWAP2\n1871: DUP3\n1872: SWAP2\n1873: SWAP1\n1874: DUP5\n1875: ADD\n1876: SWAP1\n1877: DUP1\n1878: DUP4\n1879: DUP4"
      },
      {
        "offset": 1880,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061077757",
        "parsedOpcodes": "1880: JUMPDEST\n1881: PUSH1 0x20\n1883: DUP4\n1884: LT\n1885: PUSH2 0x0777\n1888: JUMPI"
      },
      {
        "offset": 1889,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161075856",
        "parsedOpcodes": "1889: DUP1\n1890: MLOAD\n1891: DUP3\n1892: MSTORE\n1893: PUSH1 0x1f\n1895: NOT\n1896: SWAP1\n1897: SWAP3\n1898: ADD\n1899: SWAP2\n1900: PUSH1 0x20\n1902: SWAP2\n1903: DUP3\n1904: ADD\n1905: SWAP2\n1906: ADD\n1907: PUSH2 0x0758\n1910: JUMP"
      },
      {
        "offset": 1911,
        "length": 71,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101842060049081019590955588518695948a945092508291840190808383",
        "parsedOpcodes": "1911: JUMPDEST\n1912: MLOAD\n1913: DUP2\n1914: MLOAD\n1915: PUSH1 0x20\n1917: SWAP4\n1918: DUP5\n1919: SUB\n1920: PUSH2 0x0100\n1923: EXP\n1924: PUSH1 0x00\n1926: NOT\n1927: ADD\n1928: DUP1\n1929: NOT\n1930: SWAP1\n1931: SWAP3\n1932: AND\n1933: SWAP2\n1934: AND\n1935: OR\n1936: SWAP1\n1937: MSTORE\n1938: SWAP3\n1939: ADD\n1940: SWAP5\n1941: DUP6\n1942: MSTORE\n1943: POP\n1944: PUSH1 0x40\n1946: MLOAD\n1947: SWAP4\n1948: DUP5\n1949: SWAP1\n1950: SUB\n1951: DUP2\n1952: ADD\n1953: DUP5\n1954: SHA3\n1955: PUSH1 0x04\n1957: SWAP1\n1958: DUP2\n1959: ADD\n1960: SWAP6\n1961: SWAP1\n1962: SWAP6\n1963: SSTORE\n1964: DUP9\n1965: MLOAD\n1966: DUP7\n1967: SWAP6\n1968: SWAP5\n1969: DUP11\n1970: SWAP5\n1971: POP\n1972: SWAP3\n1973: POP\n1974: DUP3\n1975: SWAP2\n1976: DUP5\n1977: ADD\n1978: SWAP1\n1979: DUP1\n1980: DUP4\n1981: DUP4"
      },
      {
        "offset": 1982,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106107dd57",
        "parsedOpcodes": "1982: JUMPDEST\n1983: PUSH1 0x20\n1985: DUP4\n1986: LT\n1987: PUSH2 0x07dd\n1990: JUMPI"
      },
      {
        "offset": 1991,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016107be56",
        "parsedOpcodes": "1991: DUP1\n1992: MLOAD\n1993: DUP3\n1994: MSTORE\n1995: PUSH1 0x1f\n1997: NOT\n1998: SWAP1\n1999: SWAP3\n2000: ADD\n2001: SWAP2\n2002: PUSH1 0x20\n2004: SWAP2\n2005: DUP3\n2006: ADD\n2007: SWAP2\n2008: ADD\n2009: PUSH2 0x07be\n2012: JUMP"
      },
      {
        "offset": 2013,
        "length": 74,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790529201948552506040519384900381018420600501949094555050855160009260049288929091829190840190808383",
        "parsedOpcodes": "2013: JUMPDEST\n2014: MLOAD\n2015: DUP2\n2016: MLOAD\n2017: PUSH1 0x20\n2019: SWAP4\n2020: DUP5\n2021: SUB\n2022: PUSH2 0x0100\n2025: EXP\n2026: PUSH1 0x00\n2028: NOT\n2029: ADD\n2030: DUP1\n2031: NOT\n2032: SWAP1\n2033: SWAP3\n2034: AND\n2035: SWAP2\n2036: AND\n2037: OR\n2038: SWAP1\n2039: MSTORE\n2040: SWAP3\n2041: ADD\n2042: SWAP5\n2043: DUP6\n2044: MSTORE\n2045: POP\n2046: PUSH1 0x40\n2048: MLOAD\n2049: SWAP4\n2050: DUP5\n2051: SWAP1\n2052: SUB\n2053: DUP2\n2054: ADD\n2055: DUP5\n2056: SHA3\n2057: PUSH1 0x05\n2059: ADD\n2060: SWAP5\n2061: SWAP1\n2062: SWAP5\n2063: SSTORE\n2064: POP\n2065: POP\n2066: DUP6\n2067: MLOAD\n2068: PUSH1 0x00\n2070: SWAP3\n2071: PUSH1 0x04\n2073: SWAP3\n2074: DUP9\n2075: SWAP3\n2076: SWAP1\n2077: SWAP2\n2078: DUP3\n2079: SWAP2\n2080: SWAP1\n2081: DUP5\n2082: ADD\n2083: SWAP1\n2084: DUP1\n2085: DUP4\n2086: DUP4"
      },
      {
        "offset": 2087,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061084657",
        "parsedOpcodes": "2087: JUMPDEST\n2088: PUSH1 0x20\n2090: DUP4\n2091: LT\n2092: PUSH2 0x0846\n2095: JUMPI"
      },
      {
        "offset": 2096,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161082756",
        "parsedOpcodes": "2096: DUP1\n2097: MLOAD\n2098: DUP3\n2099: MSTORE\n2100: PUSH1 0x1f\n2102: NOT\n2103: SWAP1\n2104: SWAP3\n2105: ADD\n2106: SWAP2\n2107: PUSH1 0x20\n2109: SWAP2\n2110: DUP3\n2111: ADD\n2112: SWAP2\n2113: ADD\n2114: PUSH2 0x0827\n2117: JUMP"
      },
      {
        "offset": 2118,
        "length": 70,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220600a01805490925060ff19169050600183600581111561088d57",
        "parsedOpcodes": "2118: JUMPDEST\n2119: MLOAD\n2120: DUP2\n2121: MLOAD\n2122: PUSH1 0x20\n2124: SWAP4\n2125: DUP5\n2126: SUB\n2127: PUSH2 0x0100\n2130: EXP\n2131: PUSH1 0x00\n2133: NOT\n2134: ADD\n2135: DUP1\n2136: NOT\n2137: SWAP1\n2138: SWAP3\n2139: AND\n2140: SWAP2\n2141: AND\n2142: OR\n2143: SWAP1\n2144: MSTORE\n2145: SWAP3\n2146: ADD\n2147: SWAP5\n2148: DUP6\n2149: MSTORE\n2150: POP\n2151: PUSH1 0x40\n2153: MLOAD\n2154: SWAP4\n2155: DUP5\n2156: SWAP1\n2157: SUB\n2158: ADD\n2159: SWAP1\n2160: SWAP3\n2161: SHA3\n2162: PUSH1 0x0a\n2164: ADD\n2165: DUP1\n2166: SLOAD\n2167: SWAP1\n2168: SWAP3\n2169: POP\n2170: PUSH1 0xff\n2172: NOT\n2173: AND\n2174: SWAP1\n2175: POP\n2176: PUSH1 0x01\n2178: DUP4\n2179: PUSH1 0x05\n2181: DUP2\n2182: GT\n2183: ISZERO\n2184: PUSH2 0x088d\n2187: JUMPI"
      },
      {
        "offset": 2188,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "2188: INVALID"
      },
      {
        "offset": 2189,
        "length": 25,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "5b021790555033600485604051808280519060200190808383",
        "parsedOpcodes": "2189: JUMPDEST\n2190: MUL\n2191: OR\n2192: SWAP1\n2193: SSTORE\n2194: POP\n2195: CALLER\n2196: PUSH1 0x04\n2198: DUP6\n2199: PUSH1 0x40\n2201: MLOAD\n2202: DUP1\n2203: DUP3\n2204: DUP1\n2205: MLOAD\n2206: SWAP1\n2207: PUSH1 0x20\n2209: ADD\n2210: SWAP1\n2211: DUP1\n2212: DUP4\n2213: DUP4"
      },
      {
        "offset": 2214,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b602083106108c557",
        "parsedOpcodes": "2214: JUMPDEST\n2215: PUSH1 0x20\n2217: DUP4\n2218: LT\n2219: PUSH2 0x08c5\n2222: JUMPI"
      },
      {
        "offset": 2223,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f1990920191602091820191016108a656",
        "parsedOpcodes": "2223: DUP1\n2224: MLOAD\n2225: DUP3\n2226: MSTORE\n2227: PUSH1 0x1f\n2229: NOT\n2230: SWAP1\n2231: SWAP3\n2232: ADD\n2233: SWAP2\n2234: PUSH1 0x20\n2236: SWAP2\n2237: DUP3\n2238: ADD\n2239: SWAP2\n2240: ADD\n2241: PUSH2 0x08a6\n2244: JUMP"
      },
      {
        "offset": 2245,
        "length": 110,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160016101000a815481600160a060020a030219169083600160a060020a0316021790555082600485604051808280519060200190808383",
        "parsedOpcodes": "2245: JUMPDEST\n2246: PUSH1 0x01\n2248: DUP4\n2249: PUSH1 0x20\n2251: SUB\n2252: PUSH2 0x0100\n2255: EXP\n2256: SUB\n2257: DUP1\n2258: NOT\n2259: DUP3\n2260: MLOAD\n2261: AND\n2262: DUP2\n2263: DUP5\n2264: MLOAD\n2265: AND\n2266: DUP1\n2267: DUP3\n2268: OR\n2269: DUP6\n2270: MSTORE\n2271: POP\n2272: POP\n2273: POP\n2274: POP\n2275: POP\n2276: POP\n2277: SWAP1\n2278: POP\n2279: ADD\n2280: SWAP2\n2281: POP\n2282: POP\n2283: SWAP1\n2284: DUP2\n2285: MSTORE\n2286: PUSH1 0x20\n2288: ADD\n2289: PUSH1 0x40\n2291: MLOAD\n2292: DUP1\n2293: SWAP2\n2294: SUB\n2295: SWAP1\n2296: SHA3\n2297: PUSH1 0x00\n2299: ADD\n2300: PUSH1 0x01\n2302: PUSH2 0x0100\n2305: EXP\n2306: DUP2\n2307: SLOAD\n2308: DUP2\n2309: PUSH1 0x01\n2311: PUSH1 0xa0\n2313: PUSH1 0x02\n2315: EXP\n2316: SUB\n2317: MUL\n2318: NOT\n2319: AND\n2320: SWAP1\n2321: DUP4\n2322: PUSH1 0x01\n2324: PUSH1 0xa0\n2326: PUSH1 0x02\n2328: EXP\n2329: SUB\n2330: AND\n2331: MUL\n2332: OR\n2333: SWAP1\n2334: SSTORE\n2335: POP\n2336: DUP3\n2337: PUSH1 0x04\n2339: DUP6\n2340: PUSH1 0x40\n2342: MLOAD\n2343: DUP1\n2344: DUP3\n2345: DUP1\n2346: MLOAD\n2347: SWAP1\n2348: PUSH1 0x20\n2350: ADD\n2351: SWAP1\n2352: DUP1\n2353: DUP4\n2354: DUP4"
      },
      {
        "offset": 2355,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831061095257",
        "parsedOpcodes": "2355: JUMPDEST\n2356: PUSH1 0x20\n2358: DUP4\n2359: LT\n2360: PUSH2 0x0952\n2363: JUMPI"
      },
      {
        "offset": 2364,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80518252601f19909201916020918201910161093356",
        "parsedOpcodes": "2364: DUP1\n2365: MLOAD\n2366: DUP3\n2367: MSTORE\n2368: PUSH1 0x1f\n2370: NOT\n2371: SWAP1\n2372: SWAP3\n2373: ADD\n2374: SWAP2\n2375: PUSH1 0x20\n2377: SWAP2\n2378: DUP3\n2379: ADD\n2380: SWAP2\n2381: ADD\n2382: PUSH2 0x0933\n2385: JUMP"
      },
      {
        "offset": 2386,
        "length": 172,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382018520600101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039788161790553385830181905295891690850152606080855289519085015288517fcd55cf91d5794d78855598fcda4c9003ff1b7cf44cc1d3bf7d48b9073473abbc958a9590945089935091829160808301918701908083836000",
        "parsedOpcodes": "2386: JUMPDEST\n2387: MLOAD\n2388: DUP2\n2389: MLOAD\n2390: PUSH1 0x20\n2392: SWAP4\n2393: DUP5\n2394: SUB\n2395: PUSH2 0x0100\n2398: EXP\n2399: PUSH1 0x00\n2401: NOT\n2402: ADD\n2403: DUP1\n2404: NOT\n2405: SWAP1\n2406: SWAP3\n2407: AND\n2408: SWAP2\n2409: AND\n2410: OR\n2411: SWAP1\n2412: MSTORE\n2413: SWAP3\n2414: ADD\n2415: SWAP5\n2416: DUP6\n2417: MSTORE\n2418: POP\n2419: PUSH1 0x40\n2421: DUP1\n2422: MLOAD\n2423: SWAP5\n2424: DUP6\n2425: SWAP1\n2426: SUB\n2427: DUP3\n2428: ADD\n2429: DUP6\n2430: SHA3\n2431: PUSH1 0x01\n2433: ADD\n2434: DUP1\n2435: SLOAD\n2436: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n2457: NOT\n2458: AND\n2459: PUSH1 0x01\n2461: PUSH1 0xa0\n2463: PUSH1 0x02\n2465: EXP\n2466: SUB\n2467: SWAP8\n2468: DUP9\n2469: AND\n2470: OR\n2471: SWAP1\n2472: SSTORE\n2473: CALLER\n2474: DUP6\n2475: DUP4\n2476: ADD\n2477: DUP2\n2478: SWAP1\n2479: MSTORE\n2480: SWAP6\n2481: DUP10\n2482: AND\n2483: SWAP1\n2484: DUP6\n2485: ADD\n2486: MSTORE\n2487: PUSH1 0x60\n2489: DUP1\n2490: DUP6\n2491: MSTORE\n2492: DUP10\n2493: MLOAD\n2494: SWAP1\n2495: DUP6\n2496: ADD\n2497: MSTORE\n2498: DUP9\n2499: MLOAD\n2500: PUSH32 0xcd55cf91d5794d78855598fcda4c9003ff1b7cf44cc1d3bf7d48b9073473abbc\n2533: SWAP6\n2534: DUP11\n2535: SWAP6\n2536: SWAP1\n2537: SWAP5\n2538: POP\n2539: DUP10\n2540: SWAP4\n2541: POP\n2542: SWAP2\n2543: DUP3\n2544: SWAP2\n2545: PUSH1 0x80\n2547: DUP4\n2548: ADD\n2549: SWAP2\n2550: DUP8\n2551: ADD\n2552: SWAP1\n2553: DUP1\n2554: DUP4\n2555: DUP4\n2556: PUSH1 0x00"
      },
      {
        "offset": 2558,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b83811015610a1657",
        "parsedOpcodes": "2558: JUMPDEST\n2559: DUP4\n2560: DUP2\n2561: LT\n2562: ISZERO\n2563: PUSH2 0x0a16\n2566: JUMPI"
      },
      {
        "offset": 2567,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "81810151838201526020016109fe56",
        "parsedOpcodes": "2567: DUP2\n2568: DUP2\n2569: ADD\n2570: MLOAD\n2571: DUP4\n2572: DUP3\n2573: ADD\n2574: MSTORE\n2575: PUSH1 0x20\n2577: ADD\n2578: PUSH2 0x09fe\n2581: JUMP"
      },
      {
        "offset": 2582,
        "length": 20,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505050905090810190601f168015610a4357",
        "parsedOpcodes": "2582: JUMPDEST\n2583: POP\n2584: POP\n2585: POP\n2586: POP\n2587: SWAP1\n2588: POP\n2589: SWAP1\n2590: DUP2\n2591: ADD\n2592: SWAP1\n2593: PUSH1 0x1f\n2595: AND\n2596: DUP1\n2597: ISZERO\n2598: PUSH2 0x0a43\n2601: JUMPI"
      },
      {
        "offset": 2602,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "80820380516001836020036101000a03191681526020019150",
        "parsedOpcodes": "2602: DUP1\n2603: DUP3\n2604: SUB\n2605: DUP1\n2606: MLOAD\n2607: PUSH1 0x01\n2609: DUP4\n2610: PUSH1 0x20\n2612: SUB\n2613: PUSH2 0x0100\n2616: EXP\n2617: SUB\n2618: NOT\n2619: AND\n2620: DUP2\n2621: MSTORE\n2622: PUSH1 0x20\n2624: ADD\n2625: SWAP2\n2626: POP"
      },
      {
        "offset": 2627,
        "length": 21,
        "type": "common",
        "stackBalance": -13,
        "bytecodeHex": "5b5094505050505060405180910390a15050505056",
        "parsedOpcodes": "2627: JUMPDEST\n2628: POP\n2629: SWAP5\n2630: POP\n2631: POP\n2632: POP\n2633: POP\n2634: POP\n2635: PUSH1 0x40\n2637: MLOAD\n2638: DUP1\n2639: SWAP2\n2640: SUB\n2641: SWAP1\n2642: LOG1\n2643: POP\n2644: POP\n2645: POP\n2646: POP\n2647: JUMP"
      },
      {
        "offset": 2648,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "2648: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          97
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          102
        ]
      },
      {
        "from": 64,
        "to": [
          75,
          221
        ]
      },
      {
        "from": 75,
        "to": [
          86,
          102
        ]
      },
      {
        "from": 86,
        "to": [
          97,
          310
        ]
      },
      {
        "from": 97,
        "to": [
          2648
        ]
      },
      {
        "from": 102,
        "to": [
          110,
          114
        ]
      },
      {
        "from": 110,
        "to": [
          2648
        ]
      },
      {
        "from": 114,
        "to": [
          407
        ]
      },
      {
        "from": 191,
        "to": [
          2648
        ]
      },
      {
        "from": 221,
        "to": [
          730
        ]
      },
      {
        "from": 308,
        "to": [
          2648
        ]
      },
      {
        "from": 310,
        "to": [
          1661,
          1661
        ]
      },
      {
        "from": 407,
        "to": [
          431
        ]
      },
      {
        "from": 431,
        "to": [
          440,
          462
        ]
      },
      {
        "from": 440,
        "to": [
          431,
          431
        ]
      },
      {
        "from": 462,
        "to": [
          531
        ]
      },
      {
        "from": 531,
        "to": [
          540,
          562
        ]
      },
      {
        "from": 540,
        "to": [
          531,
          531
        ]
      },
      {
        "from": 562,
        "to": [
          636
        ]
      },
      {
        "from": 636,
        "to": [
          645,
          667
        ]
      },
      {
        "from": 645,
        "to": [
          636,
          636
        ]
      },
      {
        "from": 667,
        "to": [
          191
        ]
      },
      {
        "from": 730,
        "to": [
          753
        ]
      },
      {
        "from": 753,
        "to": [
          762,
          784
        ]
      },
      {
        "from": 762,
        "to": [
          753,
          753
        ]
      },
      {
        "from": 784,
        "to": [
          847,
          848
        ]
      },
      {
        "from": 847,
        "to": [
          2648
        ]
      },
      {
        "from": 848,
        "to": [
          854,
          956
        ]
      },
      {
        "from": 854,
        "to": [
          2648
        ]
      },
      {
        "from": 956,
        "to": [
          986
        ]
      },
      {
        "from": 986,
        "to": [
          995,
          1017
        ]
      },
      {
        "from": 995,
        "to": [
          986,
          986
        ]
      },
      {
        "from": 1017,
        "to": [
          1086
        ]
      },
      {
        "from": 1086,
        "to": [
          2648
        ]
      },
      {
        "from": 1188,
        "to": [
          1209
        ]
      },
      {
        "from": 1209,
        "to": [
          1218,
          1240
        ]
      },
      {
        "from": 1218,
        "to": [
          1209
        ]
      },
      {
        "from": 1240,
        "to": [
          1310,
          1311
        ]
      },
      {
        "from": 1310,
        "to": [
          2648
        ]
      },
      {
        "from": 1311,
        "to": [
          1336
        ]
      },
      {
        "from": 1336,
        "to": [
          1345,
          1367
        ]
      },
      {
        "from": 1345,
        "to": [
          1336
        ]
      },
      {
        "from": 1367,
        "to": [
          1571
        ]
      },
      {
        "from": 1571,
        "to": [
          1580,
          1595
        ]
      },
      {
        "from": 1580,
        "to": [
          1571
        ]
      },
      {
        "from": 1595,
        "to": [
          1615,
          1640
        ]
      },
      {
        "from": 1615,
        "to": [
          1640
        ]
      },
      {
        "from": 1640,
        "to": [
          2648
        ]
      },
      {
        "from": 1661,
        "to": [
          1776
        ]
      },
      {
        "from": 1776,
        "to": [
          1785,
          1807
        ]
      },
      {
        "from": 1785,
        "to": [
          1776,
          1776
        ]
      },
      {
        "from": 1807,
        "to": [
          1880
        ]
      },
      {
        "from": 1880,
        "to": [
          1889,
          1911
        ]
      },
      {
        "from": 1889,
        "to": [
          1880,
          1880
        ]
      },
      {
        "from": 1911,
        "to": [
          1982
        ]
      },
      {
        "from": 1982,
        "to": [
          1991,
          2013
        ]
      },
      {
        "from": 1991,
        "to": [
          1982,
          1982
        ]
      },
      {
        "from": 2013,
        "to": [
          2087
        ]
      },
      {
        "from": 2087,
        "to": [
          2096,
          2118
        ]
      },
      {
        "from": 2096,
        "to": [
          2087,
          2087
        ]
      },
      {
        "from": 2118,
        "to": [
          2188,
          2189
        ]
      },
      {
        "from": 2188,
        "to": [
          2648
        ]
      },
      {
        "from": 2189,
        "to": [
          2214
        ]
      },
      {
        "from": 2214,
        "to": [
          2223,
          2245
        ]
      },
      {
        "from": 2223,
        "to": [
          2214,
          2214
        ]
      },
      {
        "from": 2245,
        "to": [
          2355
        ]
      },
      {
        "from": 2355,
        "to": [
          2364,
          2386
        ]
      },
      {
        "from": 2364,
        "to": [
          2355,
          2355
        ]
      },
      {
        "from": 2386,
        "to": [
          2558
        ]
      },
      {
        "from": 2558,
        "to": [
          2567,
          2582
        ]
      },
      {
        "from": 2567,
        "to": [
          2558,
          2558,
          2558
        ]
      },
      {
        "from": 2582,
        "to": [
          2602,
          2627
        ]
      },
      {
        "from": 2602,
        "to": [
          2627
        ]
      },
      {
        "from": 2627,
        "to": [
          308,
          308
        ]
      },
      {
        "from": 2648,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 98
    }
  }
}