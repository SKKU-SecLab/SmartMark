{
  "name": "Analysis_2022-07-07_01-12-28",
  "address": "",
  "binarySource": "6080604052600436106100295760003560e01c80638da5cb5b1461002e578063fe0d94c11461007e575b600080fd5b34801561003a57600080fd5b506100627f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b4881565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c3660046102ff565b610093565b005b336001600160a01b037f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b4816146100c857600080fd5b604051600260248201526000604482018190529060640160408051601f19818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9955fd7b0000000000000000000000000000000000000000000000000000000017905281517f18160ddd00000000000000000000000000000000000000000000000000000000815291519293506000926001600160a01b037f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f16926318160ddd926004808301939192829003018187875af11580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc9190610318565b905060005b838110156102ee576702c68af0bb140000837f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f61021f846002610360565b61022a86600161037f565b610234919061037f565b33604051610241906102f2565b61024e9493929190610397565b6040518091039082f0905080156102625760015b6102da5760058110156102d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c5f424f5a4f0000000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b6102dc565b505b806102e68161041f565b9150506101e1565b5033ff5b61027d8061043b83390190565b60006020828403121561031157600080fd5b5035919050565b60006020828403121561032a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081600019048311821515161561037a5761037a610331565b500290565b6000821982111561039257610392610331565b500190565b608081526000855180608084015260005b818110156103c557602081890181015160a08684010152016103a8565b818111156103d757600060a083860101525b50601f01601f1916820160a00190506103fb60208301866001600160a01b03169052565b83604083015261041660608301846001600160a01b03169052565b95945050505050565b600060001982141561043357610433610331565b506001019056fe608060405260405161027d38038061027d83398101604081905261002291610137565b60005a905060006702c68af0bb140000905060008087516020890184730e9d6552b85be180d941f1ca73ae3e318d2d4f1f87f18061005f57600080fd5b5060005b6002811015610101576001600160a01b0386166323b872dd3086610087858a610249565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156100d657600080fd5b505af11580156100ea573d6000803e3d6000fd5b5050505080806100f990610261565b915050610063565b5033ff5b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461013257600080fd5b919050565b6000806000806080858703121561014d57600080fd5b84516001600160401b038082111561016457600080fd5b818701915087601f83011261017857600080fd5b81518181111561018a5761018a610105565b604051601f8201601f19908116603f011681019083821181831017156101b2576101b2610105565b81604052828152602093508a848487010111156101ce57600080fd5b600091505b828210156101f057848201840151818301850152908301906101d3565b828211156102015760008484830101525b975061021191505087820161011b565b94505050604085015191506102286060860161011b565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b6000821982111561025c5761025c610233565b500190565b600060001982141561027557610275610233565b506001019056fea264697066735822122006b0df54ed6b4b04536b8f38bf057542fadf5d0cc50d9118557e57f3b2c0f35264736f6c634300080b0033",
  "binaryHash": "c492abb1",
  "isOnlyRuntime": true,
  "metadata": "a264697066735822122006b0df54ed6b4b04536b8f38bf057542fadf5d0cc50d9118557e57f3b2c0f35264736f6c634300080b0033",
  "solidityVersion": "0.8.11",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657123948602
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100295760003560e01c80638da5cb5b1461002e578063fe0d94c11461007e575b600080fd5b34801561003a57600080fd5b506100627f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b4881565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c3660046102ff565b610093565b005b336001600160a01b037f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b4816146100c857600080fd5b604051600260248201526000604482018190529060640160408051601f19818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9955fd7b0000000000000000000000000000000000000000000000000000000017905281517f18160ddd00000000000000000000000000000000000000000000000000000000815291519293506000926001600160a01b037f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f16926318160ddd926004808301939192829003018187875af11580156101b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dc9190610318565b905060005b838110156102ee576702c68af0bb140000837f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f61021f846002610360565b61022a86600161037f565b610234919061037f565b33604051610241906102f2565b61024e9493929190610397565b6040518091039082f0905080156102625760015b6102da5760058110156102d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c5f424f5a4f0000000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b6102dc565b505b806102e68161041f565b9150506101e1565b5033ff5b61027d8061043b83390190565b60006020828403121561031157600080fd5b5035919050565b60006020828403121561032a57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081600019048311821515161561037a5761037a610331565b500290565b6000821982111561039257610392610331565b500190565b608081526000855180608084015260005b818110156103c557602081890181015160a08684010152016103a8565b818111156103d757600060a083860101525b50601f01601f1916820160a00190506103fb60208301866001600160a01b03169052565b83604083015261041660608301846001600160a01b03169052565b95945050505050565b600060001982141561043357610433610331565b506001019056fe",
    "remainingData": "fe608060405260405161027d38038061027d83398101604081905261002291610137565b60005a905060006702c68af0bb140000905060008087516020890184730e9d6552b85be180d941f1ca73ae3e318d2d4f1f87f18061005f57600080fd5b5060005b6002811015610101576001600160a01b0386166323b872dd3086610087858a610249565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156100d657600080fd5b505af11580156100ea573d6000803e3d6000fd5b5050505080806100f990610261565b915050610063565b5033ff5b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461013257600080fd5b919050565b6000806000806080858703121561014d57600080fd5b84516001600160401b038082111561016457600080fd5b818701915087601f83011261017857600080fd5b81518181111561018a5761018a610105565b604051601f8201601f19908116603f011681019083821181831017156101b2576101b2610105565b81604052828152602093508a848487010111156101ce57600080fd5b600091505b828210156101f057848201840151818301850152908301906101d3565b828211156102015760008484830101525b975061021191505087820161011b565b94505050604085015191506102286060860161011b565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b6000821982111561025c5761025c610233565b500190565b600060001982141561027557610275610233565b506001019056fe",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061002957",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0029\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c80638da5cb5b1461002e57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH1 0xe0\n18: SHR\n19: DUP1\n20: PUSH4 0x8da5cb5b\n25: EQ\n26: PUSH2 0x002e\n29: JUMPI"
      },
      {
        "offset": 30,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063fe0d94c11461007e57",
        "parsedOpcodes": "30: DUP1\n31: PUSH4 0xfe0d94c1\n36: EQ\n37: PUSH2 0x007e\n40: JUMPI"
      },
      {
        "offset": 41,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "41: JUMPDEST\n42: PUSH1 0x00\n44: DUP1\n45: REVERT"
      },
      {
        "offset": 46,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561003a57",
        "parsedOpcodes": "46: JUMPDEST\n47: CALLVALUE\n48: DUP1\n49: ISZERO\n50: PUSH2 0x003a\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "54: PUSH1 0x00\n56: DUP1\n57: REVERT"
      },
      {
        "offset": 58,
        "length": 40,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506100627f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b488156",
        "parsedOpcodes": "58: JUMPDEST\n59: POP\n60: PUSH2 0x0062\n63: PUSH32 0x00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b48\n96: DUP2\n97: JUMP"
      },
      {
        "offset": 98,
        "length": 28,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b6040516001600160a01b03909116815260200160405180910390f3",
        "parsedOpcodes": "98: JUMPDEST\n99: PUSH1 0x40\n101: MLOAD\n102: PUSH1 0x01\n104: PUSH1 0x01\n106: PUSH1 0xa0\n108: SHL\n109: SUB\n110: SWAP1\n111: SWAP2\n112: AND\n113: DUP2\n114: MSTORE\n115: PUSH1 0x20\n117: ADD\n118: PUSH1 0x40\n120: MLOAD\n121: DUP1\n122: SWAP2\n123: SUB\n124: SWAP1\n125: RETURN"
      },
      {
        "offset": 126,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 4,
        "bytecodeHex": "5b61009161008c3660046102ff56",
        "parsedOpcodes": "126: JUMPDEST\n127: PUSH2 0x0091\n130: PUSH2 0x008c\n133: CALLDATASIZE\n134: PUSH1 0x04\n136: PUSH2 0x02ff\n139: JUMP"
      },
      {
        "offset": 140,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b61009356",
        "parsedOpcodes": "140: JUMPDEST\n141: PUSH2 0x0093\n144: JUMP"
      },
      {
        "offset": 145,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "145: JUMPDEST\n146: STOP"
      },
      {
        "offset": 147,
        "length": 49,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b336001600160a01b037f00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b4816146100c857",
        "parsedOpcodes": "147: JUMPDEST\n148: CALLER\n149: PUSH1 0x01\n151: PUSH1 0x01\n153: PUSH1 0xa0\n155: SHL\n156: SUB\n157: PUSH32 0x00000000000000000000000082416784046af6e6cfc7fda2b362dc6223dd7b48\n190: AND\n191: EQ\n192: PUSH2 0x00c8\n195: JUMPI"
      },
      {
        "offset": 196,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "196: PUSH1 0x00\n198: DUP1\n199: REVERT"
      },
      {
        "offset": 200,
        "length": 231,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b604051600260248201526000604482018190529060640160408051601f19818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9955fd7b0000000000000000000000000000000000000000000000000000000017905281517f18160ddd00000000000000000000000000000000000000000000000000000000815291519293506000926001600160a01b037f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f16926318160ddd926004808301939192829003018187875af11580156101b857",
        "parsedOpcodes": "200: JUMPDEST\n201: PUSH1 0x40\n203: MLOAD\n204: PUSH1 0x02\n206: PUSH1 0x24\n208: DUP3\n209: ADD\n210: MSTORE\n211: PUSH1 0x00\n213: PUSH1 0x44\n215: DUP3\n216: ADD\n217: DUP2\n218: SWAP1\n219: MSTORE\n220: SWAP1\n221: PUSH1 0x64\n223: ADD\n224: PUSH1 0x40\n226: DUP1\n227: MLOAD\n228: PUSH1 0x1f\n230: NOT\n231: DUP2\n232: DUP5\n233: SUB\n234: ADD\n235: DUP2\n236: MSTORE\n237: SWAP2\n238: DUP2\n239: MSTORE\n240: PUSH1 0x20\n242: DUP1\n243: DUP4\n244: ADD\n245: DUP1\n246: MLOAD\n247: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n276: AND\n277: PUSH32 0x9955fd7b00000000000000000000000000000000000000000000000000000000\n310: OR\n311: SWAP1\n312: MSTORE\n313: DUP2\n314: MLOAD\n315: PUSH32 0x18160ddd00000000000000000000000000000000000000000000000000000000\n348: DUP2\n349: MSTORE\n350: SWAP2\n351: MLOAD\n352: SWAP3\n353: SWAP4\n354: POP\n355: PUSH1 0x00\n357: SWAP3\n358: PUSH1 0x01\n360: PUSH1 0x01\n362: PUSH1 0xa0\n364: SHL\n365: SUB\n366: PUSH32 0x0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f\n399: AND\n400: SWAP3\n401: PUSH4 0x18160ddd\n406: SWAP3\n407: PUSH1 0x04\n409: DUP1\n410: DUP4\n411: ADD\n412: SWAP4\n413: SWAP2\n414: SWAP3\n415: DUP3\n416: SWAP1\n417: SUB\n418: ADD\n419: DUP2\n420: DUP8\n421: DUP8\n422: GAS\n423: CALL\n424: ISZERO\n425: DUP1\n426: ISZERO\n427: PUSH2 0x01b8\n430: JUMPI"
      },
      {
        "offset": 431,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "431: RETURNDATASIZE\n432: PUSH1 0x00\n434: DUP1\n435: RETURNDATACOPY\n436: RETURNDATASIZE\n437: PUSH1 0x00\n439: REVERT"
      },
      {
        "offset": 440,
        "length": 36,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b505050506040513d601f19601f820116820180604052508101906101dc919061031856",
        "parsedOpcodes": "440: JUMPDEST\n441: POP\n442: POP\n443: POP\n444: POP\n445: PUSH1 0x40\n447: MLOAD\n448: RETURNDATASIZE\n449: PUSH1 0x1f\n451: NOT\n452: PUSH1 0x1f\n454: DUP3\n455: ADD\n456: AND\n457: DUP3\n458: ADD\n459: DUP1\n460: PUSH1 0x40\n462: MSTORE\n463: POP\n464: DUP2\n465: ADD\n466: SWAP1\n467: PUSH2 0x01dc\n470: SWAP2\n471: SWAP1\n472: PUSH2 0x0318\n475: JUMP"
      },
      {
        "offset": 476,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b90506000",
        "parsedOpcodes": "476: JUMPDEST\n477: SWAP1\n478: POP\n479: PUSH1 0x00"
      },
      {
        "offset": 481,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b838110156102ee57",
        "parsedOpcodes": "481: JUMPDEST\n482: DUP4\n483: DUP2\n484: LT\n485: ISZERO\n486: PUSH2 0x02ee\n489: JUMPI"
      },
      {
        "offset": 490,
        "length": 53,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "6702c68af0bb140000837f0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f61021f84600261036056",
        "parsedOpcodes": "490: PUSH8 0x02c68af0bb140000\n499: DUP4\n500: PUSH32 0x0000000000000000000000000e9d6552b85be180d941f1ca73ae3e318d2d4f1f\n533: PUSH2 0x021f\n536: DUP5\n537: PUSH1 0x02\n539: PUSH2 0x0360\n542: JUMP"
      },
      {
        "offset": 543,
        "length": 11,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b61022a86600161037f56",
        "parsedOpcodes": "543: JUMPDEST\n544: PUSH2 0x022a\n547: DUP7\n548: PUSH1 0x01\n550: PUSH2 0x037f\n553: JUMP"
      },
      {
        "offset": 554,
        "length": 10,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b610234919061037f56",
        "parsedOpcodes": "554: JUMPDEST\n555: PUSH2 0x0234\n558: SWAP2\n559: SWAP1\n560: PUSH2 0x037f\n563: JUMP"
      },
      {
        "offset": 564,
        "length": 13,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b33604051610241906102f256",
        "parsedOpcodes": "564: JUMPDEST\n565: CALLER\n566: PUSH1 0x40\n568: MLOAD\n569: PUSH2 0x0241\n572: SWAP1\n573: PUSH2 0x02f2\n576: JUMP"
      },
      {
        "offset": 577,
        "length": 13,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61024e949392919061039756",
        "parsedOpcodes": "577: JUMPDEST\n578: PUSH2 0x024e\n581: SWAP5\n582: SWAP4\n583: SWAP3\n584: SWAP2\n585: SWAP1\n586: PUSH2 0x0397\n589: JUMP"
      },
      {
        "offset": 590,
        "length": 18,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6040518091039082f09050801561026257",
        "parsedOpcodes": "590: JUMPDEST\n591: PUSH1 0x40\n593: MLOAD\n594: DUP1\n595: SWAP2\n596: SUB\n597: SWAP1\n598: DUP3\n599: CREATE\n600: SWAP1\n601: POP\n602: DUP1\n603: ISZERO\n604: PUSH2 0x0262\n607: JUMPI"
      },
      {
        "offset": 608,
        "length": 2,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "6001",
        "parsedOpcodes": "608: PUSH1 0x01"
      },
      {
        "offset": 610,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6102da57",
        "parsedOpcodes": "610: JUMPDEST\n611: PUSH2 0x02da\n614: JUMPI"
      },
      {
        "offset": 615,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60058110156102d557",
        "parsedOpcodes": "615: PUSH1 0x05\n617: DUP2\n618: LT\n619: ISZERO\n620: PUSH2 0x02d5\n623: JUMPI"
      },
      {
        "offset": 624,
        "length": 101,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c5f424f5a4f0000000000000000000000000000000000000000000000000000604482015260640160405180910390fd",
        "parsedOpcodes": "624: PUSH1 0x40\n626: MLOAD\n627: PUSH32 0x08c379a000000000000000000000000000000000000000000000000000000000\n660: DUP2\n661: MSTORE\n662: PUSH1 0x20\n664: PUSH1 0x04\n666: DUP3\n667: ADD\n668: MSTORE\n669: PUSH1 0x06\n671: PUSH1 0x24\n673: DUP3\n674: ADD\n675: MSTORE\n676: PUSH32 0x4c5f424f5a4f0000000000000000000000000000000000000000000000000000\n709: PUSH1 0x44\n711: DUP3\n712: ADD\n713: MSTORE\n714: PUSH1 0x64\n716: ADD\n717: PUSH1 0x40\n719: MLOAD\n720: DUP1\n721: SWAP2\n722: SUB\n723: SWAP1\n724: REVERT"
      },
      {
        "offset": 725,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6102dc56",
        "parsedOpcodes": "725: JUMPDEST\n726: PUSH2 0x02dc\n729: JUMP"
      },
      {
        "offset": 730,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50",
        "parsedOpcodes": "730: JUMPDEST\n731: POP"
      },
      {
        "offset": 732,
        "length": 10,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b806102e68161041f56",
        "parsedOpcodes": "732: JUMPDEST\n733: DUP1\n734: PUSH2 0x02e6\n737: DUP2\n738: PUSH2 0x041f\n741: JUMP"
      },
      {
        "offset": 742,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b9150506101e156",
        "parsedOpcodes": "742: JUMPDEST\n743: SWAP2\n744: POP\n745: POP\n746: PUSH2 0x01e1\n749: JUMP"
      },
      {
        "offset": 750,
        "length": 4,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5033ff",
        "parsedOpcodes": "750: JUMPDEST\n751: POP\n752: CALLER\n753: SELFDESTRUCT"
      },
      {
        "offset": 754,
        "length": 13,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b61027d8061043b8339019056",
        "parsedOpcodes": "754: JUMPDEST\n755: PUSH2 0x027d\n758: DUP1\n759: PUSH2 0x043b\n762: DUP4\n763: CODECOPY\n764: ADD\n765: SWAP1\n766: JUMP"
      },
      {
        "offset": 767,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60006020828403121561031157",
        "parsedOpcodes": "767: JUMPDEST\n768: PUSH1 0x00\n770: PUSH1 0x20\n772: DUP3\n773: DUP5\n774: SUB\n775: SLT\n776: ISZERO\n777: PUSH2 0x0311\n780: JUMPI"
      },
      {
        "offset": 781,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "781: PUSH1 0x00\n783: DUP1\n784: REVERT"
      },
      {
        "offset": 785,
        "length": 7,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b503591905056",
        "parsedOpcodes": "785: JUMPDEST\n786: POP\n787: CALLDATALOAD\n788: SWAP2\n789: SWAP1\n790: POP\n791: JUMP"
      },
      {
        "offset": 792,
        "length": 14,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60006020828403121561032a57",
        "parsedOpcodes": "792: JUMPDEST\n793: PUSH1 0x00\n795: PUSH1 0x20\n797: DUP3\n798: DUP5\n799: SUB\n800: SLT\n801: ISZERO\n802: PUSH2 0x032a\n805: JUMPI"
      },
      {
        "offset": 806,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "806: PUSH1 0x00\n808: DUP1\n809: REVERT"
      },
      {
        "offset": 810,
        "length": 7,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505191905056",
        "parsedOpcodes": "810: JUMPDEST\n811: POP\n812: MLOAD\n813: SWAP2\n814: SWAP1\n815: POP\n816: JUMP"
      },
      {
        "offset": 817,
        "length": 47,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd",
        "parsedOpcodes": "817: JUMPDEST\n818: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000\n851: PUSH1 0x00\n853: MSTORE\n854: PUSH1 0x11\n856: PUSH1 0x04\n858: MSTORE\n859: PUSH1 0x24\n861: PUSH1 0x00\n863: REVERT"
      },
      {
        "offset": 864,
        "length": 19,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600081600019048311821515161561037a57",
        "parsedOpcodes": "864: JUMPDEST\n865: PUSH1 0x00\n867: DUP2\n868: PUSH1 0x00\n870: NOT\n871: DIV\n872: DUP4\n873: GT\n874: DUP3\n875: ISZERO\n876: ISZERO\n877: AND\n878: ISZERO\n879: PUSH2 0x037a\n882: JUMPI"
      },
      {
        "offset": 883,
        "length": 7,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "61037a61033156",
        "parsedOpcodes": "883: PUSH2 0x037a\n886: PUSH2 0x0331\n889: JUMP"
      },
      {
        "offset": 890,
        "length": 5,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b50029056",
        "parsedOpcodes": "890: JUMPDEST\n891: POP\n892: MUL\n893: SWAP1\n894: JUMP"
      },
      {
        "offset": 895,
        "length": 12,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000821982111561039257",
        "parsedOpcodes": "895: JUMPDEST\n896: PUSH1 0x00\n898: DUP3\n899: NOT\n900: DUP3\n901: GT\n902: ISZERO\n903: PUSH2 0x0392\n906: JUMPI"
      },
      {
        "offset": 907,
        "length": 7,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "61039261033156",
        "parsedOpcodes": "907: PUSH2 0x0392\n910: PUSH2 0x0331\n913: JUMP"
      },
      {
        "offset": 914,
        "length": 5,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b50019056",
        "parsedOpcodes": "914: JUMPDEST\n915: POP\n916: ADD\n917: SWAP1\n918: JUMP"
      },
      {
        "offset": 919,
        "length": 17,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60808152600085518060808401526000",
        "parsedOpcodes": "919: JUMPDEST\n920: PUSH1 0x80\n922: DUP2\n923: MSTORE\n924: PUSH1 0x00\n926: DUP6\n927: MLOAD\n928: DUP1\n929: PUSH1 0x80\n931: DUP5\n932: ADD\n933: MSTORE\n934: PUSH1 0x00"
      },
      {
        "offset": 936,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b818110156103c557",
        "parsedOpcodes": "936: JUMPDEST\n937: DUP2\n938: DUP2\n939: LT\n940: ISZERO\n941: PUSH2 0x03c5\n944: JUMPI"
      },
      {
        "offset": 945,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "602081890181015160a08684010152016103a856",
        "parsedOpcodes": "945: PUSH1 0x20\n947: DUP2\n948: DUP10\n949: ADD\n950: DUP2\n951: ADD\n952: MLOAD\n953: PUSH1 0xa0\n955: DUP7\n956: DUP5\n957: ADD\n958: ADD\n959: MSTORE\n960: ADD\n961: PUSH2 0x03a8\n964: JUMP"
      },
      {
        "offset": 965,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b818111156103d757",
        "parsedOpcodes": "965: JUMPDEST\n966: DUP2\n967: DUP2\n968: GT\n969: ISZERO\n970: PUSH2 0x03d7\n973: JUMPI"
      },
      {
        "offset": 974,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600060a08386010152",
        "parsedOpcodes": "974: PUSH1 0x00\n976: PUSH1 0xa0\n978: DUP4\n979: DUP7\n980: ADD\n981: ADD\n982: MSTORE"
      },
      {
        "offset": 983,
        "length": 36,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50601f01601f1916820160a00190506103fb60208301866001600160a01b0316905256",
        "parsedOpcodes": "983: JUMPDEST\n984: POP\n985: PUSH1 0x1f\n987: ADD\n988: PUSH1 0x1f\n990: NOT\n991: AND\n992: DUP3\n993: ADD\n994: PUSH1 0xa0\n996: ADD\n997: SWAP1\n998: POP\n999: PUSH2 0x03fb\n1002: PUSH1 0x20\n1004: DUP4\n1005: ADD\n1006: DUP7\n1007: PUSH1 0x01\n1009: PUSH1 0x01\n1011: PUSH1 0xa0\n1013: SHL\n1014: SUB\n1015: AND\n1016: SWAP1\n1017: MSTORE\n1018: JUMP"
      },
      {
        "offset": 1019,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b83604083015261041660608301846001600160a01b0316905256",
        "parsedOpcodes": "1019: JUMPDEST\n1020: DUP4\n1021: PUSH1 0x40\n1023: DUP4\n1024: ADD\n1025: MSTORE\n1026: PUSH2 0x0416\n1029: PUSH1 0x60\n1031: DUP4\n1032: ADD\n1033: DUP5\n1034: PUSH1 0x01\n1036: PUSH1 0x01\n1038: PUSH1 0xa0\n1040: SHL\n1041: SUB\n1042: AND\n1043: SWAP1\n1044: MSTORE\n1045: JUMP"
      },
      {
        "offset": 1046,
        "length": 9,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b9594505050505056",
        "parsedOpcodes": "1046: JUMPDEST\n1047: SWAP6\n1048: SWAP5\n1049: POP\n1050: POP\n1051: POP\n1052: POP\n1053: POP\n1054: JUMP"
      },
      {
        "offset": 1055,
        "length": 13,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600060001982141561043357",
        "parsedOpcodes": "1055: JUMPDEST\n1056: PUSH1 0x00\n1058: PUSH1 0x00\n1060: NOT\n1061: DUP3\n1062: EQ\n1063: ISZERO\n1064: PUSH2 0x0433\n1067: JUMPI"
      },
      {
        "offset": 1068,
        "length": 7,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "61043361033156",
        "parsedOpcodes": "1068: PUSH2 0x0433\n1071: PUSH2 0x0331\n1074: JUMP"
      },
      {
        "offset": 1075,
        "length": 7,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b506001019056",
        "parsedOpcodes": "1075: JUMPDEST\n1076: POP\n1077: PUSH1 0x01\n1079: ADD\n1080: SWAP1\n1081: JUMP"
      },
      {
        "offset": 1082,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1082: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          41
        ]
      },
      {
        "from": 13,
        "to": [
          30,
          46
        ]
      },
      {
        "from": 30,
        "to": [
          41,
          126
        ]
      },
      {
        "from": 41,
        "to": [
          1082
        ]
      },
      {
        "from": 46,
        "to": [
          54,
          58
        ]
      },
      {
        "from": 54,
        "to": [
          1082
        ]
      },
      {
        "from": 58,
        "to": [
          98
        ]
      },
      {
        "from": 98,
        "to": [
          1082
        ]
      },
      {
        "from": 126,
        "to": [
          767,
          767
        ]
      },
      {
        "from": 140,
        "to": [
          147,
          147
        ]
      },
      {
        "from": 145,
        "to": [
          1082
        ]
      },
      {
        "from": 147,
        "to": [
          196,
          200
        ]
      },
      {
        "from": 196,
        "to": [
          1082
        ]
      },
      {
        "from": 200,
        "to": [
          431,
          440
        ]
      },
      {
        "from": 431,
        "to": [
          1082
        ]
      },
      {
        "from": 440,
        "to": [
          792,
          792
        ]
      },
      {
        "from": 476,
        "to": [
          481
        ]
      },
      {
        "from": 481,
        "to": [
          490,
          750
        ]
      },
      {
        "from": 490,
        "to": [
          864,
          864,
          864,
          864
        ]
      },
      {
        "from": 543,
        "to": [
          895,
          895,
          895,
          895
        ]
      },
      {
        "from": 554,
        "to": [
          895,
          895,
          895,
          895
        ]
      },
      {
        "from": 564,
        "to": [
          754,
          754,
          754,
          754
        ]
      },
      {
        "from": 577,
        "to": [
          919,
          919,
          919,
          919
        ]
      },
      {
        "from": 590,
        "to": [
          608,
          610
        ]
      },
      {
        "from": 608,
        "to": [
          610
        ]
      },
      {
        "from": 610,
        "to": [
          615,
          730
        ]
      },
      {
        "from": 615,
        "to": [
          624,
          725
        ]
      },
      {
        "from": 624,
        "to": [
          1082
        ]
      },
      {
        "from": 725,
        "to": [
          732
        ]
      },
      {
        "from": 730,
        "to": [
          732
        ]
      },
      {
        "from": 732,
        "to": [
          1055,
          1055,
          1055,
          1055
        ]
      },
      {
        "from": 742,
        "to": [
          481,
          481,
          481,
          481
        ]
      },
      {
        "from": 750,
        "to": [
          1082
        ]
      },
      {
        "from": 754,
        "to": [
          577,
          577,
          577
        ]
      },
      {
        "from": 767,
        "to": [
          781,
          785
        ]
      },
      {
        "from": 781,
        "to": [
          1082
        ]
      },
      {
        "from": 785,
        "to": [
          140
        ]
      },
      {
        "from": 792,
        "to": [
          806,
          810
        ]
      },
      {
        "from": 806,
        "to": [
          1082
        ]
      },
      {
        "from": 810,
        "to": [
          476
        ]
      },
      {
        "from": 817,
        "to": [
          1082
        ]
      },
      {
        "from": 864,
        "to": [
          883,
          890
        ]
      },
      {
        "from": 883,
        "to": [
          817
        ]
      },
      {
        "from": 890,
        "to": [
          543,
          543,
          543
        ]
      },
      {
        "from": 895,
        "to": [
          907,
          914
        ]
      },
      {
        "from": 907,
        "to": [
          817
        ]
      },
      {
        "from": 914,
        "to": [
          554,
          564,
          554,
          564,
          554,
          564
        ]
      },
      {
        "from": 919,
        "to": [
          936
        ]
      },
      {
        "from": 936,
        "to": [
          945,
          965
        ]
      },
      {
        "from": 945,
        "to": [
          936
        ]
      },
      {
        "from": 965,
        "to": [
          974,
          983
        ]
      },
      {
        "from": 974,
        "to": [
          983
        ]
      },
      {
        "from": 983,
        "to": [
          1019,
          1019,
          1019
        ]
      },
      {
        "from": 1019,
        "to": [
          1046,
          1046,
          1046
        ]
      },
      {
        "from": 1046,
        "to": [
          590,
          590,
          590
        ]
      },
      {
        "from": 1055,
        "to": [
          1068,
          1075
        ]
      },
      {
        "from": 1068,
        "to": [
          817
        ]
      },
      {
        "from": 1075,
        "to": [
          742,
          742,
          742
        ]
      },
      {
        "from": 1082,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 1,
      "errorLog": "Critical error: java.lang.IndexOutOfBoundsException: Index -1 out of bounds for length 3\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:459)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeDup(SymbolicExecutionStack.java:64)\n\tat parseTree.SymbolicExecution.SymbolicExecutionStack.executeOpcode(SymbolicExecutionStack.java:43)\n\tat parseTree.cfg.CfgBuilder.resolveOrphanJumps(CfgBuilder.java:211)\n\tat parseTree.cfg.CfgBuilder.buildCfg(CfgBuilder.java:90)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:54)\n\tat parseTree.Contract.\u003cinit\u003e(Contract.java:62)\n\tat cli.MainCLI.call(MainCLI.java:70)\n\tat cli.MainCLI.call(MainCLI.java:24)\n\tat picocli.CommandLine.executeUserObject(CommandLine.java:1933)\n\tat picocli.CommandLine.access$1100(CommandLine.java:145)\n\tat picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2326)\n\tat picocli.CommandLine$RunLast.handle(CommandLine.java:2291)\n\tat picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2159)\n\tat picocli.CommandLine.execute(CommandLine.java:2058)\n\tat cli.MainCLI.main(MainCLI.java:102)\nWarning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 155
    }
  }
}