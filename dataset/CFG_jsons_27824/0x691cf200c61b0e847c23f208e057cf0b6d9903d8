{
  "name": "Analysis_2022-04-05_00-22-50",
  "address": "",
  "binarySource": "6080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e76570778114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100aa94369492936024939284019190819084018382808284375094975050509235600160f860020a03191693506100be92505050565b604080519115158252519081900360200190f35b60006100c8610421565b506040805180820190915260008082526101996020830152845181906001141561013f576040805180820190915260008082526102636020830152875191945061013891889190811061011757fe5b90602001015160f860020a900460f860020a0286856020015163ffffffff16565b925061018f565b600091505b855182101561018f57858281518110151561015b57fe5b90602001015160f860020a900460f860020a0290506101828186856020015163ffffffff16565b9250600190910190610144565b5050519392505050565b6101a1610421565b6000600160f860020a03198416108015906101e0575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b8061022457508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156102245750600160f860020a031983811611155b1561024557506040805180820190915260008152610340602082015261025d565b50604080518082019091526000815261041d60208201525b92915050565b61026b610421565b6000600160f860020a03198416108015906102aa575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b806102ee57508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156102ee5750600160f860020a031983811611155b1561030f57506040805180820190915260018152610340602082015261025d565b600160f860020a031983811690831614156102455750604080518082019091526000815261041d602082015261025d565b610348610421565b6000600160f860020a0319841610801590610387575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b806103cb57508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156103cb5750600160f860020a031983811611155b156103ec57506040805180820190915260018152610340602082015261025d565b600160f860020a0319838116908316141561024557506040805180820190915260008152610263602082015261025d565b6102455b604080518082019091526000815261043a602082015290565bfe00a165627a7a72305820500c8c38c9c627582f1b43387add8841cce3b33d97f020f2c472a253fa25fd0d0029",
  "binaryHash": "cd312f75",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820500c8c38c9c627582f1b43387add8841cce3b33d97f020f2c472a253fa25fd0d0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649085770945
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100405763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e76570778114610045575b600080fd5b34801561005157600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526100aa94369492936024939284019190819084018382808284375094975050509235600160f860020a03191693506100be92505050565b604080519115158252519081900360200190f35b60006100c8610421565b506040805180820190915260008082526101996020830152845181906001141561013f576040805180820190915260008082526102636020830152875191945061013891889190811061011757fe5b90602001015160f860020a900460f860020a0286856020015163ffffffff16565b925061018f565b600091505b855182101561018f57858281518110151561015b57fe5b90602001015160f860020a900460f860020a0290506101828186856020015163ffffffff16565b9250600190910190610144565b5050519392505050565b6101a1610421565b6000600160f860020a03198416108015906101e0575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b8061022457508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156102245750600160f860020a031983811611155b1561024557506040805180820190915260008152610340602082015261025d565b50604080518082019091526000815261041d60208201525b92915050565b61026b610421565b6000600160f860020a03198416108015906102aa575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b806102ee57508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156102ee5750600160f860020a031983811611155b1561030f57506040805180820190915260018152610340602082015261025d565b600160f860020a031983811690831614156102455750604080518082019091526000815261041d602082015261025d565b610348610421565b6000600160f860020a0319841610801590610387575060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a03191611155b806103cb57508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156103cb5750600160f860020a031983811611155b156103ec57506040805180820190915260018152610340602082015261025d565b600160f860020a0319838116908316141561024557506040805180820190915260008152610263602082015261025d565b6102455b604080518082019091526000815261043a602082015290565bfe00",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0040\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663e7657077811461004557",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0xe7657077\n58: DUP2\n59: EQ\n60: PUSH2 0x0045\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "64: JUMPDEST\n65: PUSH1 0x00\n67: DUP1\n68: REVERT"
      },
      {
        "offset": 69,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561005157",
        "parsedOpcodes": "69: JUMPDEST\n70: CALLVALUE\n71: DUP1\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 89,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b506040805160206004803580820135601f81018490048402850184019095528484526100aa94369492936024939284019190819084018382808284375094975050509235600160f860020a03191693506100be9250505056",
        "parsedOpcodes": "81: JUMPDEST\n82: POP\n83: PUSH1 0x40\n85: DUP1\n86: MLOAD\n87: PUSH1 0x20\n89: PUSH1 0x04\n91: DUP1\n92: CALLDATALOAD\n93: DUP1\n94: DUP3\n95: ADD\n96: CALLDATALOAD\n97: PUSH1 0x1f\n99: DUP2\n100: ADD\n101: DUP5\n102: SWAP1\n103: DIV\n104: DUP5\n105: MUL\n106: DUP6\n107: ADD\n108: DUP5\n109: ADD\n110: SWAP1\n111: SWAP6\n112: MSTORE\n113: DUP5\n114: DUP5\n115: MSTORE\n116: PUSH2 0x00aa\n119: SWAP5\n120: CALLDATASIZE\n121: SWAP5\n122: SWAP3\n123: SWAP4\n124: PUSH1 0x24\n126: SWAP4\n127: SWAP3\n128: DUP5\n129: ADD\n130: SWAP2\n131: SWAP1\n132: DUP2\n133: SWAP1\n134: DUP5\n135: ADD\n136: DUP4\n137: DUP3\n138: DUP1\n139: DUP3\n140: DUP5\n141: CALLDATACOPY\n142: POP\n143: SWAP5\n144: SWAP8\n145: POP\n146: POP\n147: POP\n148: SWAP3\n149: CALLDATALOAD\n150: PUSH1 0x01\n152: PUSH1 0xf8\n154: PUSH1 0x02\n156: EXP\n157: SUB\n158: NOT\n159: AND\n160: SWAP4\n161: POP\n162: PUSH2 0x00be\n165: SWAP3\n166: POP\n167: POP\n168: POP\n169: JUMP"
      },
      {
        "offset": 170,
        "length": 20,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604080519115158252519081900360200190f3",
        "parsedOpcodes": "170: JUMPDEST\n171: PUSH1 0x40\n173: DUP1\n174: MLOAD\n175: SWAP2\n176: ISZERO\n177: ISZERO\n178: DUP3\n179: MSTORE\n180: MLOAD\n181: SWAP1\n182: DUP2\n183: SWAP1\n184: SUB\n185: PUSH1 0x20\n187: ADD\n188: SWAP1\n189: RETURN"
      },
      {
        "offset": 190,
        "length": 10,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60006100c861042156",
        "parsedOpcodes": "190: JUMPDEST\n191: PUSH1 0x00\n193: PUSH2 0x00c8\n196: PUSH2 0x0421\n199: JUMP"
      },
      {
        "offset": 200,
        "length": 37,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b506040805180820190915260008082526101996020830152845181906001141561013f57",
        "parsedOpcodes": "200: JUMPDEST\n201: POP\n202: PUSH1 0x40\n204: DUP1\n205: MLOAD\n206: DUP1\n207: DUP3\n208: ADD\n209: SWAP1\n210: SWAP2\n211: MSTORE\n212: PUSH1 0x00\n214: DUP1\n215: DUP3\n216: MSTORE\n217: PUSH2 0x0199\n220: PUSH1 0x20\n222: DUP4\n223: ADD\n224: MSTORE\n225: DUP5\n226: MLOAD\n227: DUP2\n228: SWAP1\n229: PUSH1 0x01\n231: EQ\n232: ISZERO\n233: PUSH2 0x013f\n236: JUMPI"
      },
      {
        "offset": 237,
        "length": 41,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "6040805180820190915260008082526102636020830152875191945061013891889190811061011757",
        "parsedOpcodes": "237: PUSH1 0x40\n239: DUP1\n240: MLOAD\n241: DUP1\n242: DUP3\n243: ADD\n244: SWAP1\n245: SWAP2\n246: MSTORE\n247: PUSH1 0x00\n249: DUP1\n250: DUP3\n251: MSTORE\n252: PUSH2 0x0263\n255: PUSH1 0x20\n257: DUP4\n258: ADD\n259: MSTORE\n260: DUP8\n261: MLOAD\n262: SWAP2\n263: SWAP5\n264: POP\n265: PUSH2 0x0138\n268: SWAP2\n269: DUP9\n270: SWAP2\n271: SWAP1\n272: DUP2\n273: LT\n274: PUSH2 0x0117\n277: JUMPI"
      },
      {
        "offset": 278,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "278: INVALID"
      },
      {
        "offset": 279,
        "length": 33,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b90602001015160f860020a900460f860020a0286856020015163ffffffff1656",
        "parsedOpcodes": "279: JUMPDEST\n280: SWAP1\n281: PUSH1 0x20\n283: ADD\n284: ADD\n285: MLOAD\n286: PUSH1 0xf8\n288: PUSH1 0x02\n290: EXP\n291: SWAP1\n292: DIV\n293: PUSH1 0xf8\n295: PUSH1 0x02\n297: EXP\n298: MUL\n299: DUP7\n300: DUP6\n301: PUSH1 0x20\n303: ADD\n304: MLOAD\n305: PUSH4 0xffffffff\n310: AND\n311: JUMP"
      },
      {
        "offset": 312,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b925061018f56",
        "parsedOpcodes": "312: JUMPDEST\n313: SWAP3\n314: POP\n315: PUSH2 0x018f\n318: JUMP"
      },
      {
        "offset": 319,
        "length": 5,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60009150",
        "parsedOpcodes": "319: JUMPDEST\n320: PUSH1 0x00\n322: SWAP2\n323: POP"
      },
      {
        "offset": 324,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b855182101561018f57",
        "parsedOpcodes": "324: JUMPDEST\n325: DUP6\n326: MLOAD\n327: DUP3\n328: LT\n329: ISZERO\n330: PUSH2 0x018f\n333: JUMPI"
      },
      {
        "offset": 334,
        "length": 12,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "858281518110151561015b57",
        "parsedOpcodes": "334: DUP6\n335: DUP3\n336: DUP2\n337: MLOAD\n338: DUP2\n339: LT\n340: ISZERO\n341: ISZERO\n342: PUSH2 0x015b\n345: JUMPI"
      },
      {
        "offset": 346,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "346: INVALID"
      },
      {
        "offset": 347,
        "length": 39,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b90602001015160f860020a900460f860020a0290506101828186856020015163ffffffff1656",
        "parsedOpcodes": "347: JUMPDEST\n348: SWAP1\n349: PUSH1 0x20\n351: ADD\n352: ADD\n353: MLOAD\n354: PUSH1 0xf8\n356: PUSH1 0x02\n358: EXP\n359: SWAP1\n360: DIV\n361: PUSH1 0xf8\n363: PUSH1 0x02\n365: EXP\n366: MUL\n367: SWAP1\n368: POP\n369: PUSH2 0x0182\n372: DUP2\n373: DUP7\n374: DUP6\n375: PUSH1 0x20\n377: ADD\n378: MLOAD\n379: PUSH4 0xffffffff\n384: AND\n385: JUMP"
      },
      {
        "offset": 386,
        "length": 13,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b925060019091019061014456",
        "parsedOpcodes": "386: JUMPDEST\n387: SWAP3\n388: POP\n389: PUSH1 0x01\n391: SWAP1\n392: SWAP2\n393: ADD\n394: SWAP1\n395: PUSH2 0x0144\n398: JUMP"
      },
      {
        "offset": 399,
        "length": 10,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505051939250505056",
        "parsedOpcodes": "399: JUMPDEST\n400: POP\n401: POP\n402: MLOAD\n403: SWAP4\n404: SWAP3\n405: POP\n406: POP\n407: POP\n408: JUMP"
      },
      {
        "offset": 409,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6101a161042156",
        "parsedOpcodes": "409: JUMPDEST\n410: PUSH2 0x01a1\n413: PUSH2 0x0421\n416: JUMP"
      },
      {
        "offset": 417,
        "length": 22,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000600160f860020a03198416108015906101e057",
        "parsedOpcodes": "417: JUMPDEST\n418: PUSH1 0x00\n420: PUSH1 0x01\n422: PUSH1 0xf8\n424: PUSH1 0x02\n426: EXP\n427: SUB\n428: NOT\n429: DUP5\n430: AND\n431: LT\n432: DUP1\n433: ISZERO\n434: SWAP1\n435: PUSH2 0x01e0\n438: JUMPI"
      },
      {
        "offset": 439,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a0319161115",
        "parsedOpcodes": "439: POP\n440: PUSH1 0x01\n442: DUP3\n443: PUSH1 0xf8\n445: PUSH1 0x02\n447: EXP\n448: SWAP1\n449: DIV\n450: SUB\n451: PUSH1 0xf8\n453: PUSH1 0x02\n455: EXP\n456: MUL\n457: PUSH1 0x01\n459: PUSH1 0xf8\n461: PUSH1 0x02\n463: EXP\n464: SUB\n465: NOT\n466: AND\n467: DUP4\n468: PUSH1 0x01\n470: PUSH1 0xf8\n472: PUSH1 0x02\n474: EXP\n475: SUB\n476: NOT\n477: AND\n478: GT\n479: ISZERO"
      },
      {
        "offset": 480,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8061022457",
        "parsedOpcodes": "480: JUMPDEST\n481: DUP1\n482: PUSH2 0x0224\n485: JUMPI"
      },
      {
        "offset": 486,
        "length": 47,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a0319161015801561022457",
        "parsedOpcodes": "486: POP\n487: DUP2\n488: PUSH1 0xf8\n490: PUSH1 0x02\n492: EXP\n493: SWAP1\n494: DIV\n495: PUSH1 0x01\n497: ADD\n498: PUSH1 0xf8\n500: PUSH1 0x02\n502: EXP\n503: MUL\n504: PUSH1 0x01\n506: PUSH1 0xf8\n508: PUSH1 0x02\n510: EXP\n511: SUB\n512: NOT\n513: AND\n514: DUP4\n515: PUSH1 0x01\n517: PUSH1 0xf8\n519: PUSH1 0x02\n521: EXP\n522: SUB\n523: NOT\n524: AND\n525: LT\n526: ISZERO\n527: DUP1\n528: ISZERO\n529: PUSH2 0x0224\n532: JUMPI"
      },
      {
        "offset": 533,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160f860020a03198381161115",
        "parsedOpcodes": "533: POP\n534: PUSH1 0x01\n536: PUSH1 0xf8\n538: PUSH1 0x02\n540: EXP\n541: SUB\n542: NOT\n543: DUP4\n544: DUP2\n545: AND\n546: GT\n547: ISZERO"
      },
      {
        "offset": 548,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561024557",
        "parsedOpcodes": "548: JUMPDEST\n549: ISZERO\n550: PUSH2 0x0245\n553: JUMPI"
      },
      {
        "offset": 554,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506040805180820190915260008152610340602082015261025d56",
        "parsedOpcodes": "554: POP\n555: PUSH1 0x40\n557: DUP1\n558: MLOAD\n559: DUP1\n560: DUP3\n561: ADD\n562: SWAP1\n563: SWAP2\n564: MSTORE\n565: PUSH1 0x00\n567: DUP2\n568: MSTORE\n569: PUSH2 0x0340\n572: PUSH1 0x20\n574: DUP3\n575: ADD\n576: MSTORE\n577: PUSH2 0x025d\n580: JUMP"
      },
      {
        "offset": 581,
        "length": 24,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b50604080518082019091526000815261041d6020820152",
        "parsedOpcodes": "581: JUMPDEST\n582: POP\n583: PUSH1 0x40\n585: DUP1\n586: MLOAD\n587: DUP1\n588: DUP3\n589: ADD\n590: SWAP1\n591: SWAP2\n592: MSTORE\n593: PUSH1 0x00\n595: DUP2\n596: MSTORE\n597: PUSH2 0x041d\n600: PUSH1 0x20\n602: DUP3\n603: ADD\n604: MSTORE"
      },
      {
        "offset": 605,
        "length": 6,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b9291505056",
        "parsedOpcodes": "605: JUMPDEST\n606: SWAP3\n607: SWAP2\n608: POP\n609: POP\n610: JUMP"
      },
      {
        "offset": 611,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61026b61042156",
        "parsedOpcodes": "611: JUMPDEST\n612: PUSH2 0x026b\n615: PUSH2 0x0421\n618: JUMP"
      },
      {
        "offset": 619,
        "length": 22,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000600160f860020a03198416108015906102aa57",
        "parsedOpcodes": "619: JUMPDEST\n620: PUSH1 0x00\n622: PUSH1 0x01\n624: PUSH1 0xf8\n626: PUSH1 0x02\n628: EXP\n629: SUB\n630: NOT\n631: DUP5\n632: AND\n633: LT\n634: DUP1\n635: ISZERO\n636: SWAP1\n637: PUSH2 0x02aa\n640: JUMPI"
      },
      {
        "offset": 641,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a0319161115",
        "parsedOpcodes": "641: POP\n642: PUSH1 0x01\n644: DUP3\n645: PUSH1 0xf8\n647: PUSH1 0x02\n649: EXP\n650: SWAP1\n651: DIV\n652: SUB\n653: PUSH1 0xf8\n655: PUSH1 0x02\n657: EXP\n658: MUL\n659: PUSH1 0x01\n661: PUSH1 0xf8\n663: PUSH1 0x02\n665: EXP\n666: SUB\n667: NOT\n668: AND\n669: DUP4\n670: PUSH1 0x01\n672: PUSH1 0xf8\n674: PUSH1 0x02\n676: EXP\n677: SUB\n678: NOT\n679: AND\n680: GT\n681: ISZERO"
      },
      {
        "offset": 682,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b806102ee57",
        "parsedOpcodes": "682: JUMPDEST\n683: DUP1\n684: PUSH2 0x02ee\n687: JUMPI"
      },
      {
        "offset": 688,
        "length": 47,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156102ee57",
        "parsedOpcodes": "688: POP\n689: DUP2\n690: PUSH1 0xf8\n692: PUSH1 0x02\n694: EXP\n695: SWAP1\n696: DIV\n697: PUSH1 0x01\n699: ADD\n700: PUSH1 0xf8\n702: PUSH1 0x02\n704: EXP\n705: MUL\n706: PUSH1 0x01\n708: PUSH1 0xf8\n710: PUSH1 0x02\n712: EXP\n713: SUB\n714: NOT\n715: AND\n716: DUP4\n717: PUSH1 0x01\n719: PUSH1 0xf8\n721: PUSH1 0x02\n723: EXP\n724: SUB\n725: NOT\n726: AND\n727: LT\n728: ISZERO\n729: DUP1\n730: ISZERO\n731: PUSH2 0x02ee\n734: JUMPI"
      },
      {
        "offset": 735,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160f860020a03198381161115",
        "parsedOpcodes": "735: POP\n736: PUSH1 0x01\n738: PUSH1 0xf8\n740: PUSH1 0x02\n742: EXP\n743: SUB\n744: NOT\n745: DUP4\n746: DUP2\n747: AND\n748: GT\n749: ISZERO"
      },
      {
        "offset": 750,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561030f57",
        "parsedOpcodes": "750: JUMPDEST\n751: ISZERO\n752: PUSH2 0x030f\n755: JUMPI"
      },
      {
        "offset": 756,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506040805180820190915260018152610340602082015261025d56",
        "parsedOpcodes": "756: POP\n757: PUSH1 0x40\n759: DUP1\n760: MLOAD\n761: DUP1\n762: DUP3\n763: ADD\n764: SWAP1\n765: SWAP2\n766: MSTORE\n767: PUSH1 0x01\n769: DUP2\n770: MSTORE\n771: PUSH2 0x0340\n774: PUSH1 0x20\n776: DUP3\n777: ADD\n778: MSTORE\n779: PUSH2 0x025d\n782: JUMP"
      },
      {
        "offset": 783,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160f860020a0319838116908316141561024557",
        "parsedOpcodes": "783: JUMPDEST\n784: PUSH1 0x01\n786: PUSH1 0xf8\n788: PUSH1 0x02\n790: EXP\n791: SUB\n792: NOT\n793: DUP4\n794: DUP2\n795: AND\n796: SWAP1\n797: DUP4\n798: AND\n799: EQ\n800: ISZERO\n801: PUSH2 0x0245\n804: JUMPI"
      },
      {
        "offset": 805,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50604080518082019091526000815261041d602082015261025d56",
        "parsedOpcodes": "805: POP\n806: PUSH1 0x40\n808: DUP1\n809: MLOAD\n810: DUP1\n811: DUP3\n812: ADD\n813: SWAP1\n814: SWAP2\n815: MSTORE\n816: PUSH1 0x00\n818: DUP2\n819: MSTORE\n820: PUSH2 0x041d\n823: PUSH1 0x20\n825: DUP3\n826: ADD\n827: MSTORE\n828: PUSH2 0x025d\n831: JUMP"
      },
      {
        "offset": 832,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b61034861042156",
        "parsedOpcodes": "832: JUMPDEST\n833: PUSH2 0x0348\n836: PUSH2 0x0421\n839: JUMP"
      },
      {
        "offset": 840,
        "length": 22,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000600160f860020a031984161080159061038757",
        "parsedOpcodes": "840: JUMPDEST\n841: PUSH1 0x00\n843: PUSH1 0x01\n845: PUSH1 0xf8\n847: PUSH1 0x02\n849: EXP\n850: SUB\n851: NOT\n852: DUP5\n853: AND\n854: LT\n855: DUP1\n856: ISZERO\n857: SWAP1\n858: PUSH2 0x0387\n861: JUMPI"
      },
      {
        "offset": 862,
        "length": 41,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5060018260f860020a90040360f860020a02600160f860020a03191683600160f860020a0319161115",
        "parsedOpcodes": "862: POP\n863: PUSH1 0x01\n865: DUP3\n866: PUSH1 0xf8\n868: PUSH1 0x02\n870: EXP\n871: SWAP1\n872: DIV\n873: SUB\n874: PUSH1 0xf8\n876: PUSH1 0x02\n878: EXP\n879: MUL\n880: PUSH1 0x01\n882: PUSH1 0xf8\n884: PUSH1 0x02\n886: EXP\n887: SUB\n888: NOT\n889: AND\n890: DUP4\n891: PUSH1 0x01\n893: PUSH1 0xf8\n895: PUSH1 0x02\n897: EXP\n898: SUB\n899: NOT\n900: AND\n901: GT\n902: ISZERO"
      },
      {
        "offset": 903,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b806103cb57",
        "parsedOpcodes": "903: JUMPDEST\n904: DUP1\n905: PUSH2 0x03cb\n908: JUMPI"
      },
      {
        "offset": 909,
        "length": 47,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508160f860020a900460010160f860020a02600160f860020a03191683600160f860020a031916101580156103cb57",
        "parsedOpcodes": "909: POP\n910: DUP2\n911: PUSH1 0xf8\n913: PUSH1 0x02\n915: EXP\n916: SWAP1\n917: DIV\n918: PUSH1 0x01\n920: ADD\n921: PUSH1 0xf8\n923: PUSH1 0x02\n925: EXP\n926: MUL\n927: PUSH1 0x01\n929: PUSH1 0xf8\n931: PUSH1 0x02\n933: EXP\n934: SUB\n935: NOT\n936: AND\n937: DUP4\n938: PUSH1 0x01\n940: PUSH1 0xf8\n942: PUSH1 0x02\n944: EXP\n945: SUB\n946: NOT\n947: AND\n948: LT\n949: ISZERO\n950: DUP1\n951: ISZERO\n952: PUSH2 0x03cb\n955: JUMPI"
      },
      {
        "offset": 956,
        "length": 15,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "50600160f860020a03198381161115",
        "parsedOpcodes": "956: POP\n957: PUSH1 0x01\n959: PUSH1 0xf8\n961: PUSH1 0x02\n963: EXP\n964: SUB\n965: NOT\n966: DUP4\n967: DUP2\n968: AND\n969: GT\n970: ISZERO"
      },
      {
        "offset": 971,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156103ec57",
        "parsedOpcodes": "971: JUMPDEST\n972: ISZERO\n973: PUSH2 0x03ec\n976: JUMPI"
      },
      {
        "offset": 977,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506040805180820190915260018152610340602082015261025d56",
        "parsedOpcodes": "977: POP\n978: PUSH1 0x40\n980: DUP1\n981: MLOAD\n982: DUP1\n983: DUP3\n984: ADD\n985: SWAP1\n986: SWAP2\n987: MSTORE\n988: PUSH1 0x01\n990: DUP2\n991: MSTORE\n992: PUSH2 0x0340\n995: PUSH1 0x20\n997: DUP3\n998: ADD\n999: MSTORE\n1000: PUSH2 0x025d\n1003: JUMP"
      },
      {
        "offset": 1004,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160f860020a0319838116908316141561024557",
        "parsedOpcodes": "1004: JUMPDEST\n1005: PUSH1 0x01\n1007: PUSH1 0xf8\n1009: PUSH1 0x02\n1011: EXP\n1012: SUB\n1013: NOT\n1014: DUP4\n1015: DUP2\n1016: AND\n1017: SWAP1\n1018: DUP4\n1019: AND\n1020: EQ\n1021: ISZERO\n1022: PUSH2 0x0245\n1025: JUMPI"
      },
      {
        "offset": 1026,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506040805180820190915260008152610263602082015261025d56",
        "parsedOpcodes": "1026: POP\n1027: PUSH1 0x40\n1029: DUP1\n1030: MLOAD\n1031: DUP1\n1032: DUP3\n1033: ADD\n1034: SWAP1\n1035: SWAP2\n1036: MSTORE\n1037: PUSH1 0x00\n1039: DUP2\n1040: MSTORE\n1041: PUSH2 0x0263\n1044: PUSH1 0x20\n1046: DUP3\n1047: ADD\n1048: MSTORE\n1049: PUSH2 0x025d\n1052: JUMP"
      },
      {
        "offset": 1053,
        "length": 4,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b610245",
        "parsedOpcodes": "1053: JUMPDEST\n1054: PUSH2 0x0245"
      },
      {
        "offset": 1057,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b604080518082019091526000815261043a60208201529056",
        "parsedOpcodes": "1057: JUMPDEST\n1058: PUSH1 0x40\n1060: DUP1\n1061: MLOAD\n1062: DUP1\n1063: DUP3\n1064: ADD\n1065: SWAP1\n1066: SWAP2\n1067: MSTORE\n1068: PUSH1 0x00\n1070: DUP2\n1071: MSTORE\n1072: PUSH2 0x043a\n1075: PUSH1 0x20\n1077: DUP3\n1078: ADD\n1079: MSTORE\n1080: SWAP1\n1081: JUMP"
      },
      {
        "offset": 1082,
        "length": 2,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5bfe",
        "parsedOpcodes": "1082: JUMPDEST\n1083: INVALID"
      },
      {
        "offset": 1084,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1084: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          64
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          69
        ]
      },
      {
        "from": 64,
        "to": [
          1084
        ]
      },
      {
        "from": 69,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          1084
        ]
      },
      {
        "from": 81,
        "to": [
          190
        ]
      },
      {
        "from": 170,
        "to": [
          1084
        ]
      },
      {
        "from": 190,
        "to": [
          1057,
          1057
        ]
      },
      {
        "from": 200,
        "to": [
          237,
          319
        ]
      },
      {
        "from": 237,
        "to": [
          278,
          279
        ]
      },
      {
        "from": 278,
        "to": [
          1084
        ]
      },
      {
        "from": 279,
        "to": [
          1084
        ]
      },
      {
        "from": 312,
        "to": [
          399
        ]
      },
      {
        "from": 319,
        "to": [
          324
        ]
      },
      {
        "from": 324,
        "to": [
          334,
          399
        ]
      },
      {
        "from": 334,
        "to": [
          346,
          347
        ]
      },
      {
        "from": 346,
        "to": [
          1084
        ]
      },
      {
        "from": 347,
        "to": [
          1084
        ]
      },
      {
        "from": 386,
        "to": [
          324
        ]
      },
      {
        "from": 399,
        "to": [
          170
        ]
      },
      {
        "from": 409,
        "to": [
          1057
        ]
      },
      {
        "from": 417,
        "to": [
          439,
          480
        ]
      },
      {
        "from": 439,
        "to": [
          480
        ]
      },
      {
        "from": 480,
        "to": [
          486,
          548
        ]
      },
      {
        "from": 486,
        "to": [
          533,
          548
        ]
      },
      {
        "from": 533,
        "to": [
          548
        ]
      },
      {
        "from": 548,
        "to": [
          554,
          581
        ]
      },
      {
        "from": 554,
        "to": [
          605
        ]
      },
      {
        "from": 581,
        "to": [
          605
        ]
      },
      {
        "from": 605,
        "to": [
          1084
        ]
      },
      {
        "from": 611,
        "to": [
          1057
        ]
      },
      {
        "from": 619,
        "to": [
          641,
          682
        ]
      },
      {
        "from": 641,
        "to": [
          682
        ]
      },
      {
        "from": 682,
        "to": [
          688,
          750
        ]
      },
      {
        "from": 688,
        "to": [
          735,
          750
        ]
      },
      {
        "from": 735,
        "to": [
          750
        ]
      },
      {
        "from": 750,
        "to": [
          756,
          783
        ]
      },
      {
        "from": 756,
        "to": [
          605
        ]
      },
      {
        "from": 783,
        "to": [
          805,
          581
        ]
      },
      {
        "from": 805,
        "to": [
          605
        ]
      },
      {
        "from": 832,
        "to": [
          1057
        ]
      },
      {
        "from": 840,
        "to": [
          862,
          903
        ]
      },
      {
        "from": 862,
        "to": [
          903
        ]
      },
      {
        "from": 903,
        "to": [
          909,
          971
        ]
      },
      {
        "from": 909,
        "to": [
          956,
          971
        ]
      },
      {
        "from": 956,
        "to": [
          971
        ]
      },
      {
        "from": 971,
        "to": [
          977,
          1004
        ]
      },
      {
        "from": 977,
        "to": [
          605
        ]
      },
      {
        "from": 1004,
        "to": [
          1026,
          581
        ]
      },
      {
        "from": 1026,
        "to": [
          605
        ]
      },
      {
        "from": 1053,
        "to": [
          1057
        ]
      },
      {
        "from": 1057,
        "to": [
          200
        ]
      },
      {
        "from": 1082,
        "to": [
          1084
        ]
      },
      {
        "from": 1084,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 2,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Orphan jump unresolvable at 385, symbolic execution found an unknown value\nStack: [null, 170, null, null, 0, null, 0, null, 386, null, null, null]\nOrphan jump unresolvable at 311, symbolic execution found an unknown value\nStack: [null, 170, null, null, 0, null, 0, 0, 312, null, null, null]\nWarning: the CFG has 11 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 54
    }
  }
}