{
  "name": "Analysis_2022-07-07_00-48-15",
  "address": "",
  "binarySource": "608060405234801561001057600080fd5b50600436106100365760003560e01c806323c5642f1461003b57806396bee19714610164575b600080fd5b6101626004803603604081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156100f057600080fd5b82018360208201111561010257600080fd5b8035906020019184602083028401116401000000008311171561012457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610190945050505050565b005b6101626004803603604081101561017a57600080fd5b506001600160a01b0381351690602001356103fc565b600082511180156101a2575060008151115b80156101af575080518251145b6101ea5760405162461bcd60e51b815260040180806020018281038252604e81526020018061050c604e913960600191505060405180910390fd5b60005b82518110156102785760008084838151811061020557fe5b6020908102919091018101516001600160a01b0316825281019190915260400160002060020154610100900460ff16156102705760405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd5b6001016101ed565b5060005b82518110156103f757600160008085848151811061029657fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060020160016101000a81548160ff02191690831515021790555060405180608001604052808383815181106102ef57fe5b60200260200101518152602001600081526020016000151581526020016001151581525060008085848151811061032257fe5b6020908102919091018101516001600160a01b03168252818101929092526040908101600020835181559183015160018301558201516002909101805460609093015115156101000261ff001992151560ff199094169390931791909116919091179055825183908290811061039457fe5b60200260200101516001600160a01b03167f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e8383815181106103d257fe5b60200260200101516040518082815260200191505060405180910390a260010161027c565b505050565b6001600160a01b038216600090815260208190526040902060020154610100900460ff161561045c5760405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd5b6001600160a01b03821660008181526020818152604080832060028101805483516080810185528881528086018781528186018881526001606084018181528b8b5299895292518655905191909401559151945161ff001992831661010090811760ff1916961515969096179092169115159490940217909255815184815291517f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e9281900390910190a2505056fe546865206c656e677468206f6620757365722061646472657373656420616e6420616d6f756e74732073686f756c64206265206d61746368656420616e642063616e6e6f7420626520656d707479546865206164647265737320746f20626520616464656420616c7265616479206578697369747320696e2074686520646973747269627574696f6e20636f6e746163742c20706c65617365207573652061206e6577206f6e65a26469706673582212200c92e9eace292dd90f22117df85fdfbfab682209e6a00a1e72c5af9ad8d8122f64736f6c63430006020033",
  "binaryHash": "a95012fa",
  "isOnlyRuntime": true,
  "metadata": "a26469706673582212200c92e9eace292dd90f22117df85fdfbfab682209e6a00a1e72c5af9ad8d8122f64736f6c63430006020033",
  "solidityVersion": "0.6.2",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1657122495684
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806323c5642f1461003b57806396bee19714610164575b600080fd5b6101626004803603604081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156100f057600080fd5b82018360208201111561010257600080fd5b8035906020019184602083028401116401000000008311171561012457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610190945050505050565b005b6101626004803603604081101561017a57600080fd5b506001600160a01b0381351690602001356103fc565b600082511180156101a2575060008151115b80156101af575080518251145b6101ea5760405162461bcd60e51b815260040180806020018281038252604e81526020018061050c604e913960600191505060405180910390fd5b60005b82518110156102785760008084838151811061020557fe5b6020908102919091018101516001600160a01b0316825281019190915260400160002060020154610100900460ff16156102705760405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd5b6001016101ed565b5060005b82518110156103f757600160008085848151811061029657fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060020160016101000a81548160ff02191690831515021790555060405180608001604052808383815181106102ef57fe5b60200260200101518152602001600081526020016000151581526020016001151581525060008085848151811061032257fe5b6020908102919091018101516001600160a01b03168252818101929092526040908101600020835181559183015160018301558201516002909101805460609093015115156101000261ff001992151560ff199094169390931791909116919091179055825183908290811061039457fe5b60200260200101516001600160a01b03167f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e8383815181106103d257fe5b60200260200101516040518082815260200191505060405180910390a260010161027c565b505050565b6001600160a01b038216600090815260208190526040902060020154610100900460ff161561045c5760405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd5b6001600160a01b03821660008181526020818152604080832060028101805483516080810185528881528086018781528186018881526001606084018181528b8b5299895292518655905191909401559151945161ff001992831661010090811760ff1916961515969096179092169115159490940217909255815184815291517f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e9281900390910190a2505056fe546865206c656e677468206f6620757365722061646472657373656420616e6420616d6f756e74732073686f756c64206265206d61746368656420616e642063616e6e6f7420626520656d707479546865206164647265737320746f20626520616464656420616c7265616479206578697369747320696e2074686520646973747269627574696f6e20636f6e746163742c20706c65617365207573652061206e657720",
    "remainingData": "fe546865206c656e677468206f6620757365722061646472657373656420616e6420616d6f756e74732073686f756c64206265206d61746368656420616e642063616e6e6f7420626520656d707479546865206164647265737320746f20626520616464656420616c7265616479206578697369747320696e2074686520646973747269627574696f6e20636f6e746163742c20706c65617365207573652061206e6577206f6e65",
    "nodes": [
      {
        "offset": 0,
        "length": 12,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "608060405234801561001057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: CALLVALUE\n6: DUP1\n7: ISZERO\n8: PUSH2 0x0010\n11: JUMPI"
      },
      {
        "offset": 12,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "12: PUSH1 0x00\n14: DUP1\n15: REVERT"
      },
      {
        "offset": 16,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b506004361061003657",
        "parsedOpcodes": "16: JUMPDEST\n17: POP\n18: PUSH1 0x04\n20: CALLDATASIZE\n21: LT\n22: PUSH2 0x0036\n25: JUMPI"
      },
      {
        "offset": 26,
        "length": 17,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "60003560e01c806323c5642f1461003b57",
        "parsedOpcodes": "26: PUSH1 0x00\n28: CALLDATALOAD\n29: PUSH1 0xe0\n31: SHR\n32: DUP1\n33: PUSH4 0x23c5642f\n38: EQ\n39: PUSH2 0x003b\n42: JUMPI"
      },
      {
        "offset": 43,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806396bee1971461016457",
        "parsedOpcodes": "43: DUP1\n44: PUSH4 0x96bee197\n49: EQ\n50: PUSH2 0x0164\n53: JUMPI"
      },
      {
        "offset": 54,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "54: JUMPDEST\n55: PUSH1 0x00\n57: DUP1\n58: REVERT"
      },
      {
        "offset": 59,
        "length": 18,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b6101626004803603604081101561005157",
        "parsedOpcodes": "59: JUMPDEST\n60: PUSH2 0x0162\n63: PUSH1 0x04\n65: DUP1\n66: CALLDATASIZE\n67: SUB\n68: PUSH1 0x40\n70: DUP2\n71: LT\n72: ISZERO\n73: PUSH2 0x0051\n76: JUMPI"
      },
      {
        "offset": 77,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "77: PUSH1 0x00\n79: DUP1\n80: REVERT"
      },
      {
        "offset": 81,
        "length": 23,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b81019060208101813564010000000081111561006c57",
        "parsedOpcodes": "81: JUMPDEST\n82: DUP2\n83: ADD\n84: SWAP1\n85: PUSH1 0x20\n87: DUP2\n88: ADD\n89: DUP2\n90: CALLDATALOAD\n91: PUSH5 0x0100000000\n97: DUP2\n98: GT\n99: ISZERO\n100: PUSH2 0x006c\n103: JUMPI"
      },
      {
        "offset": 104,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "104: PUSH1 0x00\n106: DUP1\n107: REVERT"
      },
      {
        "offset": 108,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b82018360208201111561007e57",
        "parsedOpcodes": "108: JUMPDEST\n109: DUP3\n110: ADD\n111: DUP4\n112: PUSH1 0x20\n114: DUP3\n115: ADD\n116: GT\n117: ISZERO\n118: PUSH2 0x007e\n121: JUMPI"
      },
      {
        "offset": 122,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "122: PUSH1 0x00\n124: DUP1\n125: REVERT"
      },
      {
        "offset": 126,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b803590602001918460208302840111640100000000831117156100a057",
        "parsedOpcodes": "126: JUMPDEST\n127: DUP1\n128: CALLDATALOAD\n129: SWAP1\n130: PUSH1 0x20\n132: ADD\n133: SWAP2\n134: DUP5\n135: PUSH1 0x20\n137: DUP4\n138: MUL\n139: DUP5\n140: ADD\n141: GT\n142: PUSH5 0x0100000000\n148: DUP4\n149: GT\n150: OR\n151: ISZERO\n152: PUSH2 0x00a0\n155: JUMPI"
      },
      {
        "offset": 156,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "156: PUSH1 0x00\n158: DUP1\n159: REVERT"
      },
      {
        "offset": 160,
        "length": 76,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156100f057",
        "parsedOpcodes": "160: JUMPDEST\n161: SWAP2\n162: SWAP1\n163: DUP1\n164: DUP1\n165: PUSH1 0x20\n167: MUL\n168: PUSH1 0x20\n170: ADD\n171: PUSH1 0x40\n173: MLOAD\n174: SWAP1\n175: DUP2\n176: ADD\n177: PUSH1 0x40\n179: MSTORE\n180: DUP1\n181: SWAP4\n182: SWAP3\n183: SWAP2\n184: SWAP1\n185: DUP2\n186: DUP2\n187: MSTORE\n188: PUSH1 0x20\n190: ADD\n191: DUP4\n192: DUP4\n193: PUSH1 0x20\n195: MUL\n196: DUP1\n197: DUP3\n198: DUP5\n199: CALLDATACOPY\n200: PUSH1 0x00\n202: SWAP3\n203: ADD\n204: SWAP2\n205: SWAP1\n206: SWAP2\n207: MSTORE\n208: POP\n209: SWAP3\n210: SWAP6\n211: SWAP5\n212: SWAP4\n213: PUSH1 0x20\n215: DUP2\n216: ADD\n217: SWAP4\n218: POP\n219: CALLDATALOAD\n220: SWAP2\n221: POP\n222: POP\n223: PUSH5 0x0100000000\n229: DUP2\n230: GT\n231: ISZERO\n232: PUSH2 0x00f0\n235: JUMPI"
      },
      {
        "offset": 236,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "236: PUSH1 0x00\n238: DUP1\n239: REVERT"
      },
      {
        "offset": 240,
        "length": 14,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b82018360208201111561010257",
        "parsedOpcodes": "240: JUMPDEST\n241: DUP3\n242: ADD\n243: DUP4\n244: PUSH1 0x20\n246: DUP3\n247: ADD\n248: GT\n249: ISZERO\n250: PUSH2 0x0102\n253: JUMPI"
      },
      {
        "offset": 254,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "254: PUSH1 0x00\n256: DUP1\n257: REVERT"
      },
      {
        "offset": 258,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b8035906020019184602083028401116401000000008311171561012457",
        "parsedOpcodes": "258: JUMPDEST\n259: DUP1\n260: CALLDATALOAD\n261: SWAP1\n262: PUSH1 0x20\n264: ADD\n265: SWAP2\n266: DUP5\n267: PUSH1 0x20\n269: DUP4\n270: MUL\n271: DUP5\n272: ADD\n273: GT\n274: PUSH5 0x0100000000\n280: DUP4\n281: GT\n282: OR\n283: ISZERO\n284: PUSH2 0x0124\n287: JUMPI"
      },
      {
        "offset": 288,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "288: PUSH1 0x00\n290: DUP1\n291: REVERT"
      },
      {
        "offset": 292,
        "length": 62,
        "type": "dispatcher",
        "stackBalance": -4,
        "bytecodeHex": "5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061019094505050505056",
        "parsedOpcodes": "292: JUMPDEST\n293: SWAP2\n294: SWAP1\n295: DUP1\n296: DUP1\n297: PUSH1 0x20\n299: MUL\n300: PUSH1 0x20\n302: ADD\n303: PUSH1 0x40\n305: MLOAD\n306: SWAP1\n307: DUP2\n308: ADD\n309: PUSH1 0x40\n311: MSTORE\n312: DUP1\n313: SWAP4\n314: SWAP3\n315: SWAP2\n316: SWAP1\n317: DUP2\n318: DUP2\n319: MSTORE\n320: PUSH1 0x20\n322: ADD\n323: DUP4\n324: DUP4\n325: PUSH1 0x20\n327: MUL\n328: DUP1\n329: DUP3\n330: DUP5\n331: CALLDATACOPY\n332: PUSH1 0x00\n334: SWAP3\n335: ADD\n336: SWAP2\n337: SWAP1\n338: SWAP2\n339: MSTORE\n340: POP\n341: SWAP3\n342: SWAP6\n343: POP\n344: PUSH2 0x0190\n347: SWAP5\n348: POP\n349: POP\n350: POP\n351: POP\n352: POP\n353: JUMP"
      },
      {
        "offset": 354,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "354: JUMPDEST\n355: STOP"
      },
      {
        "offset": 356,
        "length": 18,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6101626004803603604081101561017a57",
        "parsedOpcodes": "356: JUMPDEST\n357: PUSH2 0x0162\n360: PUSH1 0x04\n362: DUP1\n363: CALLDATASIZE\n364: SUB\n365: PUSH1 0x40\n367: DUP2\n368: LT\n369: ISZERO\n370: PUSH2 0x017a\n373: JUMPI"
      },
      {
        "offset": 374,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "374: PUSH1 0x00\n376: DUP1\n377: REVERT"
      },
      {
        "offset": 378,
        "length": 22,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506001600160a01b0381351690602001356103fc56",
        "parsedOpcodes": "378: JUMPDEST\n379: POP\n380: PUSH1 0x01\n382: PUSH1 0x01\n384: PUSH1 0xa0\n386: SHL\n387: SUB\n388: DUP2\n389: CALLDATALOAD\n390: AND\n391: SWAP1\n392: PUSH1 0x20\n394: ADD\n395: CALLDATALOAD\n396: PUSH2 0x03fc\n399: JUMP"
      },
      {
        "offset": 400,
        "length": 12,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600082511180156101a257",
        "parsedOpcodes": "400: JUMPDEST\n401: PUSH1 0x00\n403: DUP3\n404: MLOAD\n405: GT\n406: DUP1\n407: ISZERO\n408: PUSH2 0x01a2\n411: JUMPI"
      },
      {
        "offset": 412,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "506000815111",
        "parsedOpcodes": "412: POP\n413: PUSH1 0x00\n415: DUP2\n416: MLOAD\n417: GT"
      },
      {
        "offset": 418,
        "length": 7,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b80156101af57",
        "parsedOpcodes": "418: JUMPDEST\n419: DUP1\n420: ISZERO\n421: PUSH2 0x01af\n424: JUMPI"
      },
      {
        "offset": 425,
        "length": 6,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508051825114",
        "parsedOpcodes": "425: POP\n426: DUP1\n427: MLOAD\n428: DUP3\n429: MLOAD\n430: EQ"
      },
      {
        "offset": 431,
        "length": 5,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6101ea57",
        "parsedOpcodes": "431: JUMPDEST\n432: PUSH2 0x01ea\n435: JUMPI"
      },
      {
        "offset": 436,
        "length": 54,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60405162461bcd60e51b815260040180806020018281038252604e81526020018061050c604e913960600191505060405180910390fd",
        "parsedOpcodes": "436: PUSH1 0x40\n438: MLOAD\n439: PUSH3 0x461bcd\n443: PUSH1 0xe5\n445: SHL\n446: DUP2\n447: MSTORE\n448: PUSH1 0x04\n450: ADD\n451: DUP1\n452: DUP1\n453: PUSH1 0x20\n455: ADD\n456: DUP3\n457: DUP2\n458: SUB\n459: DUP3\n460: MSTORE\n461: PUSH1 0x4e\n463: DUP2\n464: MSTORE\n465: PUSH1 0x20\n467: ADD\n468: DUP1\n469: PUSH2 0x050c\n472: PUSH1 0x4e\n474: SWAP2\n475: CODECOPY\n476: PUSH1 0x60\n478: ADD\n479: SWAP2\n480: POP\n481: POP\n482: PUSH1 0x40\n484: MLOAD\n485: DUP1\n486: SWAP2\n487: SUB\n488: SWAP1\n489: REVERT"
      },
      {
        "offset": 490,
        "length": 3,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000",
        "parsedOpcodes": "490: JUMPDEST\n491: PUSH1 0x00"
      },
      {
        "offset": 493,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b825181101561027857",
        "parsedOpcodes": "493: JUMPDEST\n494: DUP3\n495: MLOAD\n496: DUP2\n497: LT\n498: ISZERO\n499: PUSH2 0x0278\n502: JUMPI"
      },
      {
        "offset": 503,
        "length": 13,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "60008084838151811061020557",
        "parsedOpcodes": "503: PUSH1 0x00\n505: DUP1\n506: DUP5\n507: DUP4\n508: DUP2\n509: MLOAD\n510: DUP2\n511: LT\n512: PUSH2 0x0205\n515: JUMPI"
      },
      {
        "offset": 516,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "516: INVALID"
      },
      {
        "offset": 517,
        "length": 53,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b6020908102919091018101516001600160a01b0316825281019190915260400160002060020154610100900460ff161561027057",
        "parsedOpcodes": "517: JUMPDEST\n518: PUSH1 0x20\n520: SWAP1\n521: DUP2\n522: MUL\n523: SWAP2\n524: SWAP1\n525: SWAP2\n526: ADD\n527: DUP2\n528: ADD\n529: MLOAD\n530: PUSH1 0x01\n532: PUSH1 0x01\n534: PUSH1 0xa0\n536: SHL\n537: SUB\n538: AND\n539: DUP3\n540: MSTORE\n541: DUP2\n542: ADD\n543: SWAP2\n544: SWAP1\n545: SWAP2\n546: MSTORE\n547: PUSH1 0x40\n549: ADD\n550: PUSH1 0x00\n552: SHA3\n553: PUSH1 0x02\n555: ADD\n556: SLOAD\n557: PUSH2 0x0100\n560: SWAP1\n561: DIV\n562: PUSH1 0xff\n564: AND\n565: ISZERO\n566: PUSH2 0x0270\n569: JUMPI"
      },
      {
        "offset": 570,
        "length": 54,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd",
        "parsedOpcodes": "570: PUSH1 0x40\n572: MLOAD\n573: PUSH3 0x461bcd\n577: PUSH1 0xe5\n579: SHL\n580: DUP2\n581: MSTORE\n582: PUSH1 0x04\n584: ADD\n585: DUP1\n586: DUP1\n587: PUSH1 0x20\n589: ADD\n590: DUP3\n591: DUP2\n592: SUB\n593: DUP3\n594: MSTORE\n595: PUSH1 0x59\n597: DUP2\n598: MSTORE\n599: PUSH1 0x20\n601: ADD\n602: DUP1\n603: PUSH2 0x055a\n606: PUSH1 0x59\n608: SWAP2\n609: CODECOPY\n610: PUSH1 0x60\n612: ADD\n613: SWAP2\n614: POP\n615: POP\n616: PUSH1 0x40\n618: MLOAD\n619: DUP1\n620: SWAP2\n621: SUB\n622: SWAP1\n623: REVERT"
      },
      {
        "offset": 624,
        "length": 8,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001016101ed56",
        "parsedOpcodes": "624: JUMPDEST\n625: PUSH1 0x01\n627: ADD\n628: PUSH2 0x01ed\n631: JUMP"
      },
      {
        "offset": 632,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b506000",
        "parsedOpcodes": "632: JUMPDEST\n633: POP\n634: PUSH1 0x00"
      },
      {
        "offset": 636,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b82518110156103f757",
        "parsedOpcodes": "636: JUMPDEST\n637: DUP3\n638: MLOAD\n639: DUP2\n640: LT\n641: ISZERO\n642: PUSH2 0x03f7\n645: JUMPI"
      },
      {
        "offset": 646,
        "length": 15,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "600160008085848151811061029657",
        "parsedOpcodes": "646: PUSH1 0x01\n648: PUSH1 0x00\n650: DUP1\n651: DUP6\n652: DUP5\n653: DUP2\n654: MLOAD\n655: DUP2\n656: LT\n657: PUSH2 0x0296\n660: JUMPI"
      },
      {
        "offset": 661,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "661: INVALID"
      },
      {
        "offset": 662,
        "length": 88,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060020160016101000a81548160ff02191690831515021790555060405180608001604052808383815181106102ef57",
        "parsedOpcodes": "662: JUMPDEST\n663: PUSH1 0x20\n665: MUL\n666: PUSH1 0x20\n668: ADD\n669: ADD\n670: MLOAD\n671: PUSH1 0x01\n673: PUSH1 0x01\n675: PUSH1 0xa0\n677: SHL\n678: SUB\n679: AND\n680: PUSH1 0x01\n682: PUSH1 0x01\n684: PUSH1 0xa0\n686: SHL\n687: SUB\n688: AND\n689: DUP2\n690: MSTORE\n691: PUSH1 0x20\n693: ADD\n694: SWAP1\n695: DUP2\n696: MSTORE\n697: PUSH1 0x20\n699: ADD\n700: PUSH1 0x00\n702: SHA3\n703: PUSH1 0x02\n705: ADD\n706: PUSH1 0x01\n708: PUSH2 0x0100\n711: EXP\n712: DUP2\n713: SLOAD\n714: DUP2\n715: PUSH1 0xff\n717: MUL\n718: NOT\n719: AND\n720: SWAP1\n721: DUP4\n722: ISZERO\n723: ISZERO\n724: MUL\n725: OR\n726: SWAP1\n727: SSTORE\n728: POP\n729: PUSH1 0x40\n731: MLOAD\n732: DUP1\n733: PUSH1 0x80\n735: ADD\n736: PUSH1 0x40\n738: MSTORE\n739: DUP1\n740: DUP4\n741: DUP4\n742: DUP2\n743: MLOAD\n744: DUP2\n745: LT\n746: PUSH2 0x02ef\n749: JUMPI"
      },
      {
        "offset": 750,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "750: INVALID"
      },
      {
        "offset": 751,
        "length": 50,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60200260200101518152602001600081526020016000151581526020016001151581525060008085848151811061032257",
        "parsedOpcodes": "751: JUMPDEST\n752: PUSH1 0x20\n754: MUL\n755: PUSH1 0x20\n757: ADD\n758: ADD\n759: MLOAD\n760: DUP2\n761: MSTORE\n762: PUSH1 0x20\n764: ADD\n765: PUSH1 0x00\n767: DUP2\n768: MSTORE\n769: PUSH1 0x20\n771: ADD\n772: PUSH1 0x00\n774: ISZERO\n775: ISZERO\n776: DUP2\n777: MSTORE\n778: PUSH1 0x20\n780: ADD\n781: PUSH1 0x01\n783: ISZERO\n784: ISZERO\n785: DUP2\n786: MSTORE\n787: POP\n788: PUSH1 0x00\n790: DUP1\n791: DUP6\n792: DUP5\n793: DUP2\n794: MLOAD\n795: DUP2\n796: LT\n797: PUSH2 0x0322\n800: JUMPI"
      },
      {
        "offset": 801,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "801: INVALID"
      },
      {
        "offset": 802,
        "length": 113,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6020908102919091018101516001600160a01b03168252818101929092526040908101600020835181559183015160018301558201516002909101805460609093015115156101000261ff001992151560ff199094169390931791909116919091179055825183908290811061039457",
        "parsedOpcodes": "802: JUMPDEST\n803: PUSH1 0x20\n805: SWAP1\n806: DUP2\n807: MUL\n808: SWAP2\n809: SWAP1\n810: SWAP2\n811: ADD\n812: DUP2\n813: ADD\n814: MLOAD\n815: PUSH1 0x01\n817: PUSH1 0x01\n819: PUSH1 0xa0\n821: SHL\n822: SUB\n823: AND\n824: DUP3\n825: MSTORE\n826: DUP2\n827: DUP2\n828: ADD\n829: SWAP3\n830: SWAP1\n831: SWAP3\n832: MSTORE\n833: PUSH1 0x40\n835: SWAP1\n836: DUP2\n837: ADD\n838: PUSH1 0x00\n840: SHA3\n841: DUP4\n842: MLOAD\n843: DUP2\n844: SSTORE\n845: SWAP2\n846: DUP4\n847: ADD\n848: MLOAD\n849: PUSH1 0x01\n851: DUP4\n852: ADD\n853: SSTORE\n854: DUP3\n855: ADD\n856: MLOAD\n857: PUSH1 0x02\n859: SWAP1\n860: SWAP2\n861: ADD\n862: DUP1\n863: SLOAD\n864: PUSH1 0x60\n866: SWAP1\n867: SWAP4\n868: ADD\n869: MLOAD\n870: ISZERO\n871: ISZERO\n872: PUSH2 0x0100\n875: MUL\n876: PUSH2 0xff00\n879: NOT\n880: SWAP3\n881: ISZERO\n882: ISZERO\n883: PUSH1 0xff\n885: NOT\n886: SWAP1\n887: SWAP5\n888: AND\n889: SWAP4\n890: SWAP1\n891: SWAP4\n892: OR\n893: SWAP2\n894: SWAP1\n895: SWAP2\n896: AND\n897: SWAP2\n898: SWAP1\n899: SWAP2\n900: OR\n901: SWAP1\n902: SSTORE\n903: DUP3\n904: MLOAD\n905: DUP4\n906: SWAP1\n907: DUP3\n908: SWAP1\n909: DUP2\n910: LT\n911: PUSH2 0x0394\n914: JUMPI"
      },
      {
        "offset": 915,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "915: INVALID"
      },
      {
        "offset": 916,
        "length": 61,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60200260200101516001600160a01b03167f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e8383815181106103d257",
        "parsedOpcodes": "916: JUMPDEST\n917: PUSH1 0x20\n919: MUL\n920: PUSH1 0x20\n922: ADD\n923: ADD\n924: MLOAD\n925: PUSH1 0x01\n927: PUSH1 0x01\n929: PUSH1 0xa0\n931: SHL\n932: SUB\n933: AND\n934: PUSH32 0x367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e\n967: DUP4\n968: DUP4\n969: DUP2\n970: MLOAD\n971: DUP2\n972: LT\n973: PUSH2 0x03d2\n976: JUMPI"
      },
      {
        "offset": 977,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "977: INVALID"
      },
      {
        "offset": 978,
        "length": 37,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b60200260200101516040518082815260200191505060405180910390a260010161027c56",
        "parsedOpcodes": "978: JUMPDEST\n979: PUSH1 0x20\n981: MUL\n982: PUSH1 0x20\n984: ADD\n985: ADD\n986: MLOAD\n987: PUSH1 0x40\n989: MLOAD\n990: DUP1\n991: DUP3\n992: DUP2\n993: MSTORE\n994: PUSH1 0x20\n996: ADD\n997: SWAP2\n998: POP\n999: POP\n1000: PUSH1 0x40\n1002: MLOAD\n1003: DUP1\n1004: SWAP2\n1005: SUB\n1006: SWAP1\n1007: LOG2\n1008: PUSH1 0x01\n1010: ADD\n1011: PUSH2 0x027c\n1014: JUMP"
      },
      {
        "offset": 1015,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "1015: JUMPDEST\n1016: POP\n1017: POP\n1018: POP\n1019: JUMP"
      },
      {
        "offset": 1020,
        "length": 42,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001600160a01b038216600090815260208190526040902060020154610100900460ff161561045c57",
        "parsedOpcodes": "1020: JUMPDEST\n1021: PUSH1 0x01\n1023: PUSH1 0x01\n1025: PUSH1 0xa0\n1027: SHL\n1028: SUB\n1029: DUP3\n1030: AND\n1031: PUSH1 0x00\n1033: SWAP1\n1034: DUP2\n1035: MSTORE\n1036: PUSH1 0x20\n1038: DUP2\n1039: SWAP1\n1040: MSTORE\n1041: PUSH1 0x40\n1043: SWAP1\n1044: SHA3\n1045: PUSH1 0x02\n1047: ADD\n1048: SLOAD\n1049: PUSH2 0x0100\n1052: SWAP1\n1053: DIV\n1054: PUSH1 0xff\n1056: AND\n1057: ISZERO\n1058: PUSH2 0x045c\n1061: JUMPI"
      },
      {
        "offset": 1062,
        "length": 54,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60405162461bcd60e51b815260040180806020018281038252605981526020018061055a6059913960600191505060405180910390fd",
        "parsedOpcodes": "1062: PUSH1 0x40\n1064: MLOAD\n1065: PUSH3 0x461bcd\n1069: PUSH1 0xe5\n1071: SHL\n1072: DUP2\n1073: MSTORE\n1074: PUSH1 0x04\n1076: ADD\n1077: DUP1\n1078: DUP1\n1079: PUSH1 0x20\n1081: ADD\n1082: DUP3\n1083: DUP2\n1084: SUB\n1085: DUP3\n1086: MSTORE\n1087: PUSH1 0x59\n1089: DUP2\n1090: MSTORE\n1091: PUSH1 0x20\n1093: ADD\n1094: DUP1\n1095: PUSH2 0x055a\n1098: PUSH1 0x59\n1100: SWAP2\n1101: CODECOPY\n1102: PUSH1 0x60\n1104: ADD\n1105: SWAP2\n1106: POP\n1107: POP\n1108: PUSH1 0x40\n1110: MLOAD\n1111: DUP1\n1112: SWAP2\n1113: SUB\n1114: SWAP1\n1115: REVERT"
      },
      {
        "offset": 1116,
        "length": 175,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6001600160a01b03821660008181526020818152604080832060028101805483516080810185528881528086018781528186018881526001606084018181528b8b5299895292518655905191909401559151945161ff001992831661010090811760ff1916961515969096179092169115159490940217909255815184815291517f367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e9281900390910190a2505056",
        "parsedOpcodes": "1116: JUMPDEST\n1117: PUSH1 0x01\n1119: PUSH1 0x01\n1121: PUSH1 0xa0\n1123: SHL\n1124: SUB\n1125: DUP3\n1126: AND\n1127: PUSH1 0x00\n1129: DUP2\n1130: DUP2\n1131: MSTORE\n1132: PUSH1 0x20\n1134: DUP2\n1135: DUP2\n1136: MSTORE\n1137: PUSH1 0x40\n1139: DUP1\n1140: DUP4\n1141: SHA3\n1142: PUSH1 0x02\n1144: DUP2\n1145: ADD\n1146: DUP1\n1147: SLOAD\n1148: DUP4\n1149: MLOAD\n1150: PUSH1 0x80\n1152: DUP2\n1153: ADD\n1154: DUP6\n1155: MSTORE\n1156: DUP9\n1157: DUP2\n1158: MSTORE\n1159: DUP1\n1160: DUP7\n1161: ADD\n1162: DUP8\n1163: DUP2\n1164: MSTORE\n1165: DUP2\n1166: DUP7\n1167: ADD\n1168: DUP9\n1169: DUP2\n1170: MSTORE\n1171: PUSH1 0x01\n1173: PUSH1 0x60\n1175: DUP5\n1176: ADD\n1177: DUP2\n1178: DUP2\n1179: MSTORE\n1180: DUP12\n1181: DUP12\n1182: MSTORE\n1183: SWAP10\n1184: DUP10\n1185: MSTORE\n1186: SWAP3\n1187: MLOAD\n1188: DUP7\n1189: SSTORE\n1190: SWAP1\n1191: MLOAD\n1192: SWAP2\n1193: SWAP1\n1194: SWAP5\n1195: ADD\n1196: SSTORE\n1197: SWAP2\n1198: MLOAD\n1199: SWAP5\n1200: MLOAD\n1201: PUSH2 0xff00\n1204: NOT\n1205: SWAP3\n1206: DUP4\n1207: AND\n1208: PUSH2 0x0100\n1211: SWAP1\n1212: DUP2\n1213: OR\n1214: PUSH1 0xff\n1216: NOT\n1217: AND\n1218: SWAP7\n1219: ISZERO\n1220: ISZERO\n1221: SWAP7\n1222: SWAP1\n1223: SWAP7\n1224: OR\n1225: SWAP1\n1226: SWAP3\n1227: AND\n1228: SWAP2\n1229: ISZERO\n1230: ISZERO\n1231: SWAP5\n1232: SWAP1\n1233: SWAP5\n1234: MUL\n1235: OR\n1236: SWAP1\n1237: SWAP3\n1238: SSTORE\n1239: DUP2\n1240: MLOAD\n1241: DUP5\n1242: DUP2\n1243: MSTORE\n1244: SWAP2\n1245: MLOAD\n1246: PUSH32 0x367720012556849cd313ddad2cd9fa2cfe6a8c73f20e5c3f98c85e937e70c48e\n1279: SWAP3\n1280: DUP2\n1281: SWAP1\n1282: SUB\n1283: SWAP1\n1284: SWAP2\n1285: ADD\n1286: SWAP1\n1287: LOG2\n1288: POP\n1289: POP\n1290: JUMP"
      },
      {
        "offset": 1291,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1291: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          12,
          16
        ]
      },
      {
        "from": 12,
        "to": [
          1291
        ]
      },
      {
        "from": 16,
        "to": [
          26,
          54
        ]
      },
      {
        "from": 26,
        "to": [
          43,
          59
        ]
      },
      {
        "from": 43,
        "to": [
          54,
          356
        ]
      },
      {
        "from": 54,
        "to": [
          1291
        ]
      },
      {
        "from": 59,
        "to": [
          77,
          81
        ]
      },
      {
        "from": 77,
        "to": [
          1291
        ]
      },
      {
        "from": 81,
        "to": [
          104,
          108
        ]
      },
      {
        "from": 104,
        "to": [
          1291
        ]
      },
      {
        "from": 108,
        "to": [
          122,
          126
        ]
      },
      {
        "from": 122,
        "to": [
          1291
        ]
      },
      {
        "from": 126,
        "to": [
          156,
          160
        ]
      },
      {
        "from": 156,
        "to": [
          1291
        ]
      },
      {
        "from": 160,
        "to": [
          236,
          240
        ]
      },
      {
        "from": 236,
        "to": [
          1291
        ]
      },
      {
        "from": 240,
        "to": [
          254,
          258
        ]
      },
      {
        "from": 254,
        "to": [
          1291
        ]
      },
      {
        "from": 258,
        "to": [
          288,
          292
        ]
      },
      {
        "from": 288,
        "to": [
          1291
        ]
      },
      {
        "from": 292,
        "to": [
          400
        ]
      },
      {
        "from": 354,
        "to": [
          1291
        ]
      },
      {
        "from": 356,
        "to": [
          374,
          378
        ]
      },
      {
        "from": 374,
        "to": [
          1291
        ]
      },
      {
        "from": 378,
        "to": [
          1020,
          1020
        ]
      },
      {
        "from": 400,
        "to": [
          412,
          418
        ]
      },
      {
        "from": 412,
        "to": [
          418
        ]
      },
      {
        "from": 418,
        "to": [
          425,
          431
        ]
      },
      {
        "from": 425,
        "to": [
          431
        ]
      },
      {
        "from": 431,
        "to": [
          436,
          490
        ]
      },
      {
        "from": 436,
        "to": [
          1291
        ]
      },
      {
        "from": 490,
        "to": [
          493
        ]
      },
      {
        "from": 493,
        "to": [
          503,
          632
        ]
      },
      {
        "from": 503,
        "to": [
          516,
          517
        ]
      },
      {
        "from": 516,
        "to": [
          1291
        ]
      },
      {
        "from": 517,
        "to": [
          570,
          624
        ]
      },
      {
        "from": 570,
        "to": [
          1291
        ]
      },
      {
        "from": 624,
        "to": [
          493,
          493,
          493
        ]
      },
      {
        "from": 632,
        "to": [
          636
        ]
      },
      {
        "from": 636,
        "to": [
          646,
          1015
        ]
      },
      {
        "from": 646,
        "to": [
          661,
          662
        ]
      },
      {
        "from": 661,
        "to": [
          1291
        ]
      },
      {
        "from": 662,
        "to": [
          750,
          751
        ]
      },
      {
        "from": 750,
        "to": [
          1291
        ]
      },
      {
        "from": 751,
        "to": [
          801,
          802
        ]
      },
      {
        "from": 801,
        "to": [
          1291
        ]
      },
      {
        "from": 802,
        "to": [
          915,
          916
        ]
      },
      {
        "from": 915,
        "to": [
          1291
        ]
      },
      {
        "from": 916,
        "to": [
          977,
          978
        ]
      },
      {
        "from": 977,
        "to": [
          1291
        ]
      },
      {
        "from": 978,
        "to": [
          636,
          636,
          636
        ]
      },
      {
        "from": 1015,
        "to": [
          354,
          354
        ]
      },
      {
        "from": 1020,
        "to": [
          1062,
          1116
        ]
      },
      {
        "from": 1062,
        "to": [
          1291
        ]
      },
      {
        "from": 1116,
        "to": [
          354
        ]
      },
      {
        "from": 1291,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 132
    }
  }
}