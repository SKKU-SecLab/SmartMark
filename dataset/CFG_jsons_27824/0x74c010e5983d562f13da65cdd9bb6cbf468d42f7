{
  "name": "Analysis_2022-04-04_23-49-07",
  "address": "",
  "binarySource": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ff746f61461005c5780638da5cb5b1461008a578063a6f9dae1146100e1575b600080fd5b610088600480360381019080803590602001908201803590602001919091929391929390505050610124565b005b34801561009657600080fd5b5061009f610375565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ed57600080fd5b50610122600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061039a565b005b6060600080600061016686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610438565b935083600281518110151561017757fe5b9060200190602002015160019004925083600381518110151561019657fe5b906020019060200201516001900491508360058151811015156101b557fe5b9060200190602002015160019004905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610259578073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610253573d6000803e3d6000fd5b5061036d565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b505050506040513d602081101561035a57600080fd5b8101908080519060200190929190505050505b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103f557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600080600084600081518110151561044e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900492508260ff166040519080825280602002602001820160405280156104f05781602001602082028038833980820191505090505b509350600191505b8260ff168260ff1611151561054d5781602002600186010151905080846001840360ff1681518110151561052857fe5b90602001906020020190600019169081600019168152505081806001019250506104f8565b5050509190505600a165627a7a7230582062e31d9fb368e62a8fe69057129228388211543ff2dcbdf3705469bdc63d28040029",
  "binaryHash": "1da7b8",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a7230582062e31d9fb368e62a8fe69057129228388211543ff2dcbdf3705469bdc63d28040029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649083747463
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ff746f61461005c5780638da5cb5b1461008a578063a6f9dae1146100e1575b600080fd5b610088600480360381019080803590602001908201803590602001919091929391929390505050610124565b005b34801561009657600080fd5b5061009f610375565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ed57600080fd5b50610122600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061039a565b005b6060600080600061016686868080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050610438565b935083600281518110151561017757fe5b9060200190602002015160019004925083600381518110151561019657fe5b906020019060200201516001900491508360058151811015156101b557fe5b9060200190602002015160019004905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610259578073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610253573d6000803e3d6000fd5b5061036d565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b505050506040513d602081101561035a57600080fd5b8101908080519060200190929190505050505b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103f557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060600080600084600081518110151561044e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900492508260ff166040519080825280602002602001820160405280156104f05781602001602082028038833980820191505090505b509350600191505b8260ff168260ff1611151561054d5781602002600186010151905080846001840360ff1681518110151561052857fe5b90602001906020020190600019169081600019168152505081806001019250506104f8565b5050509190505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061005757",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0057\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634ff746f61461005c57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x4ff746f6\n60: EQ\n61: PUSH2 0x005c\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80638da5cb5b1461008a57",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x8da5cb5b\n71: EQ\n72: PUSH2 0x008a\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063a6f9dae1146100e157",
        "parsedOpcodes": "76: DUP1\n77: PUSH4 0xa6f9dae1\n82: EQ\n83: PUSH2 0x00e1\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b600080fd",
        "parsedOpcodes": "87: JUMPDEST\n88: PUSH1 0x00\n90: DUP1\n91: REVERT"
      },
      {
        "offset": 92,
        "length": 44,
        "type": "dispatcher",
        "stackBalance": 3,
        "bytecodeHex": "5b61008860048036038101908080359060200190820180359060200191909192939192939050505061012456",
        "parsedOpcodes": "92: JUMPDEST\n93: PUSH2 0x0088\n96: PUSH1 0x04\n98: DUP1\n99: CALLDATASIZE\n100: SUB\n101: DUP2\n102: ADD\n103: SWAP1\n104: DUP1\n105: DUP1\n106: CALLDATALOAD\n107: SWAP1\n108: PUSH1 0x20\n110: ADD\n111: SWAP1\n112: DUP3\n113: ADD\n114: DUP1\n115: CALLDATALOAD\n116: SWAP1\n117: PUSH1 0x20\n119: ADD\n120: SWAP2\n121: SWAP1\n122: SWAP2\n123: SWAP3\n124: SWAP4\n125: SWAP2\n126: SWAP3\n127: SWAP4\n128: SWAP1\n129: POP\n130: POP\n131: POP\n132: PUSH2 0x0124\n135: JUMP"
      },
      {
        "offset": 136,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "136: JUMPDEST\n137: STOP"
      },
      {
        "offset": 138,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561009657",
        "parsedOpcodes": "138: JUMPDEST\n139: CALLVALUE\n140: DUP1\n141: ISZERO\n142: PUSH2 0x0096\n145: JUMPI"
      },
      {
        "offset": 146,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "146: PUSH1 0x00\n148: DUP1\n149: REVERT"
      },
      {
        "offset": 150,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061009f61037556",
        "parsedOpcodes": "150: JUMPDEST\n151: POP\n152: PUSH2 0x009f\n155: PUSH2 0x0375\n158: JUMP"
      },
      {
        "offset": 159,
        "length": 66,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f3",
        "parsedOpcodes": "159: JUMPDEST\n160: PUSH1 0x40\n162: MLOAD\n163: DUP1\n164: DUP3\n165: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n186: AND\n187: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n208: AND\n209: DUP2\n210: MSTORE\n211: PUSH1 0x20\n213: ADD\n214: SWAP2\n215: POP\n216: POP\n217: PUSH1 0x40\n219: MLOAD\n220: DUP1\n221: SWAP2\n222: SUB\n223: SWAP1\n224: RETURN"
      },
      {
        "offset": 225,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100ed57",
        "parsedOpcodes": "225: JUMPDEST\n226: CALLVALUE\n227: DUP1\n228: ISZERO\n229: PUSH2 0x00ed\n232: JUMPI"
      },
      {
        "offset": 233,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "233: PUSH1 0x00\n235: DUP1\n236: REVERT"
      },
      {
        "offset": 237,
        "length": 53,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b50610122600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061039a56",
        "parsedOpcodes": "237: JUMPDEST\n238: POP\n239: PUSH2 0x0122\n242: PUSH1 0x04\n244: DUP1\n245: CALLDATASIZE\n246: SUB\n247: DUP2\n248: ADD\n249: SWAP1\n250: DUP1\n251: DUP1\n252: CALLDATALOAD\n253: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n274: AND\n275: SWAP1\n276: PUSH1 0x20\n278: ADD\n279: SWAP1\n280: SWAP3\n281: SWAP2\n282: SWAP1\n283: POP\n284: POP\n285: POP\n286: PUSH2 0x039a\n289: JUMP"
      },
      {
        "offset": 290,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "290: JUMPDEST\n291: STOP"
      },
      {
        "offset": 292,
        "length": 66,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b6060600080600061016686868080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505061043856",
        "parsedOpcodes": "292: JUMPDEST\n293: PUSH1 0x60\n295: PUSH1 0x00\n297: DUP1\n298: PUSH1 0x00\n300: PUSH2 0x0166\n303: DUP7\n304: DUP7\n305: DUP1\n306: DUP1\n307: PUSH1 0x1f\n309: ADD\n310: PUSH1 0x20\n312: DUP1\n313: SWAP2\n314: DIV\n315: MUL\n316: PUSH1 0x20\n318: ADD\n319: PUSH1 0x40\n321: MLOAD\n322: SWAP1\n323: DUP2\n324: ADD\n325: PUSH1 0x40\n327: MSTORE\n328: DUP1\n329: SWAP4\n330: SWAP3\n331: SWAP2\n332: SWAP1\n333: DUP2\n334: DUP2\n335: MSTORE\n336: PUSH1 0x20\n338: ADD\n339: DUP4\n340: DUP4\n341: DUP1\n342: DUP3\n343: DUP5\n344: CALLDATACOPY\n345: DUP3\n346: ADD\n347: SWAP2\n348: POP\n349: POP\n350: POP\n351: POP\n352: POP\n353: POP\n354: PUSH2 0x0438\n357: JUMP"
      },
      {
        "offset": 358,
        "length": 16,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b935083600281518110151561017757",
        "parsedOpcodes": "358: JUMPDEST\n359: SWAP4\n360: POP\n361: DUP4\n362: PUSH1 0x02\n364: DUP2\n365: MLOAD\n366: DUP2\n367: LT\n368: ISZERO\n369: ISZERO\n370: PUSH2 0x0177\n373: JUMPI"
      },
      {
        "offset": 374,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "374: INVALID"
      },
      {
        "offset": 375,
        "length": 30,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9060200190602002015160019004925083600381518110151561019657",
        "parsedOpcodes": "375: JUMPDEST\n376: SWAP1\n377: PUSH1 0x20\n379: ADD\n380: SWAP1\n381: PUSH1 0x20\n383: MUL\n384: ADD\n385: MLOAD\n386: PUSH1 0x01\n388: SWAP1\n389: DIV\n390: SWAP3\n391: POP\n392: DUP4\n393: PUSH1 0x03\n395: DUP2\n396: MLOAD\n397: DUP2\n398: LT\n399: ISZERO\n400: ISZERO\n401: PUSH2 0x0196\n404: JUMPI"
      },
      {
        "offset": 405,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "405: INVALID"
      },
      {
        "offset": 406,
        "length": 30,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b906020019060200201516001900491508360058151811015156101b557",
        "parsedOpcodes": "406: JUMPDEST\n407: SWAP1\n408: PUSH1 0x20\n410: ADD\n411: SWAP1\n412: PUSH1 0x20\n414: MUL\n415: ADD\n416: MLOAD\n417: PUSH1 0x01\n419: SWAP1\n420: DIV\n421: SWAP2\n422: POP\n423: DUP4\n424: PUSH1 0x05\n426: DUP2\n427: MLOAD\n428: DUP2\n429: LT\n430: ISZERO\n431: ISZERO\n432: PUSH2 0x01b5\n435: JUMPI"
      },
      {
        "offset": 436,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "436: INVALID"
      },
      {
        "offset": 437,
        "length": 89,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b9060200190602002015160019004905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561025957",
        "parsedOpcodes": "437: JUMPDEST\n438: SWAP1\n439: PUSH1 0x20\n441: ADD\n442: SWAP1\n443: PUSH1 0x20\n445: MUL\n446: ADD\n447: MLOAD\n448: PUSH1 0x01\n450: SWAP1\n451: DIV\n452: SWAP1\n453: POP\n454: PUSH20 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n475: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n496: AND\n497: DUP4\n498: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n519: AND\n520: EQ\n521: ISZERO\n522: PUSH2 0x0259\n525: JUMPI"
      },
      {
        "offset": 526,
        "length": 60,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "8073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561025357",
        "parsedOpcodes": "526: DUP1\n527: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n548: AND\n549: PUSH2 0x08fc\n552: CALLVALUE\n553: SWAP1\n554: DUP2\n555: ISZERO\n556: MUL\n557: SWAP1\n558: PUSH1 0x40\n560: MLOAD\n561: PUSH1 0x00\n563: PUSH1 0x40\n565: MLOAD\n566: DUP1\n567: DUP4\n568: SUB\n569: DUP2\n570: DUP6\n571: DUP9\n572: DUP9\n573: CALL\n574: SWAP4\n575: POP\n576: POP\n577: POP\n578: POP\n579: ISZERO\n580: DUP1\n581: ISZERO\n582: PUSH2 0x0253\n585: JUMPI"
      },
      {
        "offset": 586,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "586: RETURNDATASIZE\n587: PUSH1 0x00\n589: DUP1\n590: RETURNDATACOPY\n591: RETURNDATASIZE\n592: PUSH1 0x00\n594: REVERT"
      },
      {
        "offset": 595,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5061036d56",
        "parsedOpcodes": "595: JUMPDEST\n596: POP\n597: PUSH2 0x036d\n600: JUMP"
      },
      {
        "offset": 601,
        "length": 211,
        "type": "common",
        "stackBalance": 10,
        "bytecodeHex": "5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561033057",
        "parsedOpcodes": "601: JUMPDEST\n602: DUP3\n603: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n624: AND\n625: PUSH4 0x23b872dd\n630: CALLER\n631: DUP4\n632: DUP6\n633: PUSH1 0x40\n635: MLOAD\n636: DUP5\n637: PUSH4 0xffffffff\n642: AND\n643: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n673: MUL\n674: DUP2\n675: MSTORE\n676: PUSH1 0x04\n678: ADD\n679: DUP1\n680: DUP5\n681: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n702: AND\n703: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n724: AND\n725: DUP2\n726: MSTORE\n727: PUSH1 0x20\n729: ADD\n730: DUP4\n731: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n752: AND\n753: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n774: AND\n775: DUP2\n776: MSTORE\n777: PUSH1 0x20\n779: ADD\n780: DUP3\n781: DUP2\n782: MSTORE\n783: PUSH1 0x20\n785: ADD\n786: SWAP4\n787: POP\n788: POP\n789: POP\n790: POP\n791: PUSH1 0x20\n793: PUSH1 0x40\n795: MLOAD\n796: DUP1\n797: DUP4\n798: SUB\n799: DUP2\n800: PUSH1 0x00\n802: DUP8\n803: DUP1\n804: EXTCODESIZE\n805: ISZERO\n806: DUP1\n807: ISZERO\n808: PUSH2 0x0330\n811: JUMPI"
      },
      {
        "offset": 812,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "812: PUSH1 0x00\n814: DUP1\n815: REVERT"
      },
      {
        "offset": 816,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561034457",
        "parsedOpcodes": "816: JUMPDEST\n817: POP\n818: GAS\n819: CALL\n820: ISZERO\n821: DUP1\n822: ISZERO\n823: PUSH2 0x0344\n826: JUMPI"
      },
      {
        "offset": 827,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "827: RETURNDATASIZE\n828: PUSH1 0x00\n830: DUP1\n831: RETURNDATACOPY\n832: RETURNDATASIZE\n833: PUSH1 0x00\n835: REVERT"
      },
      {
        "offset": 836,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561035a57",
        "parsedOpcodes": "836: JUMPDEST\n837: POP\n838: POP\n839: POP\n840: POP\n841: PUSH1 0x40\n843: MLOAD\n844: RETURNDATASIZE\n845: PUSH1 0x20\n847: DUP2\n848: LT\n849: ISZERO\n850: PUSH2 0x035a\n853: JUMPI"
      },
      {
        "offset": 854,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "854: PUSH1 0x00\n856: DUP1\n857: REVERT"
      },
      {
        "offset": 858,
        "length": 19,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b810190808051906020019092919050505050",
        "parsedOpcodes": "858: JUMPDEST\n859: DUP2\n860: ADD\n861: SWAP1\n862: DUP1\n863: DUP1\n864: MLOAD\n865: SWAP1\n866: PUSH1 0x20\n868: ADD\n869: SWAP1\n870: SWAP3\n871: SWAP2\n872: SWAP1\n873: POP\n874: POP\n875: POP\n876: POP"
      },
      {
        "offset": 877,
        "length": 8,
        "type": "common",
        "stackBalance": -7,
        "bytecodeHex": "5b50505050505056",
        "parsedOpcodes": "877: JUMPDEST\n878: POP\n879: POP\n880: POP\n881: POP\n882: POP\n883: POP\n884: JUMP"
      },
      {
        "offset": 885,
        "length": 37,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156",
        "parsedOpcodes": "885: JUMPDEST\n886: PUSH1 0x00\n888: DUP1\n889: SWAP1\n890: SLOAD\n891: SWAP1\n892: PUSH2 0x0100\n895: EXP\n896: SWAP1\n897: DIV\n898: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n919: AND\n920: DUP2\n921: JUMP"
      },
      {
        "offset": 922,
        "length": 87,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103f557",
        "parsedOpcodes": "922: JUMPDEST\n923: PUSH1 0x00\n925: DUP1\n926: SWAP1\n927: SLOAD\n928: SWAP1\n929: PUSH2 0x0100\n932: EXP\n933: SWAP1\n934: DIV\n935: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n956: AND\n957: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n978: AND\n979: CALLER\n980: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1001: AND\n1002: EQ\n1003: ISZERO\n1004: ISZERO\n1005: PUSH2 0x03f5\n1008: JUMPI"
      },
      {
        "offset": 1009,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1009: PUSH1 0x00\n1011: DUP1\n1012: REVERT"
      },
      {
        "offset": 1013,
        "length": 67,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056",
        "parsedOpcodes": "1013: JUMPDEST\n1014: DUP1\n1015: PUSH1 0x00\n1017: DUP1\n1018: PUSH2 0x0100\n1021: EXP\n1022: DUP2\n1023: SLOAD\n1024: DUP2\n1025: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1046: MUL\n1047: NOT\n1048: AND\n1049: SWAP1\n1050: DUP4\n1051: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1072: AND\n1073: MUL\n1074: OR\n1075: SWAP1\n1076: SSTORE\n1077: POP\n1078: POP\n1079: JUMP"
      },
      {
        "offset": 1080,
        "length": 21,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b6060600080600084600081518110151561044e57",
        "parsedOpcodes": "1080: JUMPDEST\n1081: PUSH1 0x60\n1083: PUSH1 0x00\n1085: DUP1\n1086: PUSH1 0x00\n1088: DUP5\n1089: PUSH1 0x00\n1091: DUP2\n1092: MLOAD\n1093: DUP2\n1094: LT\n1095: ISZERO\n1096: ISZERO\n1097: PUSH2 0x044e\n1100: JUMPI"
      },
      {
        "offset": 1101,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1101: INVALID"
      },
      {
        "offset": 1102,
        "length": 142,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900492508260ff166040519080825280602002602001820160405280156104f057",
        "parsedOpcodes": "1102: JUMPDEST\n1103: SWAP1\n1104: PUSH1 0x20\n1106: ADD\n1107: ADD\n1108: MLOAD\n1109: PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000\n1142: SWAP1\n1143: DIV\n1144: PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000\n1177: MUL\n1178: PUSH32 0x0100000000000000000000000000000000000000000000000000000000000000\n1211: SWAP1\n1212: DIV\n1213: SWAP3\n1214: POP\n1215: DUP3\n1216: PUSH1 0xff\n1218: AND\n1219: PUSH1 0x40\n1221: MLOAD\n1222: SWAP1\n1223: DUP1\n1224: DUP3\n1225: MSTORE\n1226: DUP1\n1227: PUSH1 0x20\n1229: MUL\n1230: PUSH1 0x20\n1232: ADD\n1233: DUP3\n1234: ADD\n1235: PUSH1 0x40\n1237: MSTORE\n1238: DUP1\n1239: ISZERO\n1240: PUSH2 0x04f0\n1243: JUMPI"
      },
      {
        "offset": 1244,
        "length": 20,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8160200160208202803883398082019150509050",
        "parsedOpcodes": "1244: DUP2\n1245: PUSH1 0x20\n1247: ADD\n1248: PUSH1 0x20\n1250: DUP3\n1251: MUL\n1252: DUP1\n1253: CODESIZE\n1254: DUP4\n1255: CODECOPY\n1256: DUP1\n1257: DUP3\n1258: ADD\n1259: SWAP2\n1260: POP\n1261: POP\n1262: SWAP1\n1263: POP"
      },
      {
        "offset": 1264,
        "length": 8,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b50935060019150",
        "parsedOpcodes": "1264: JUMPDEST\n1265: POP\n1266: SWAP4\n1267: POP\n1268: PUSH1 0x01\n1270: SWAP2\n1271: POP"
      },
      {
        "offset": 1272,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8260ff168260ff1611151561054d57",
        "parsedOpcodes": "1272: JUMPDEST\n1273: DUP3\n1274: PUSH1 0xff\n1276: AND\n1277: DUP3\n1278: PUSH1 0xff\n1280: AND\n1281: GT\n1282: ISZERO\n1283: ISZERO\n1284: PUSH2 0x054d\n1287: JUMPI"
      },
      {
        "offset": 1288,
        "length": 31,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "81602002600186010151905080846001840360ff1681518110151561052857",
        "parsedOpcodes": "1288: DUP2\n1289: PUSH1 0x20\n1291: MUL\n1292: PUSH1 0x01\n1294: DUP7\n1295: ADD\n1296: ADD\n1297: MLOAD\n1298: SWAP1\n1299: POP\n1300: DUP1\n1301: DUP5\n1302: PUSH1 0x01\n1304: DUP5\n1305: SUB\n1306: PUSH1 0xff\n1308: AND\n1309: DUP2\n1310: MLOAD\n1311: DUP2\n1312: LT\n1313: ISZERO\n1314: ISZERO\n1315: PUSH2 0x0528\n1318: JUMPI"
      },
      {
        "offset": 1319,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1319: INVALID"
      },
      {
        "offset": 1320,
        "length": 37,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b90602001906020020190600019169081600019168152505081806001019250506104f856",
        "parsedOpcodes": "1320: JUMPDEST\n1321: SWAP1\n1322: PUSH1 0x20\n1324: ADD\n1325: SWAP1\n1326: PUSH1 0x20\n1328: MUL\n1329: ADD\n1330: SWAP1\n1331: PUSH1 0x00\n1333: NOT\n1334: AND\n1335: SWAP1\n1336: DUP2\n1337: PUSH1 0x00\n1339: NOT\n1340: AND\n1341: DUP2\n1342: MSTORE\n1343: POP\n1344: POP\n1345: DUP2\n1346: DUP1\n1347: PUSH1 0x01\n1349: ADD\n1350: SWAP3\n1351: POP\n1352: POP\n1353: PUSH2 0x04f8\n1356: JUMP"
      },
      {
        "offset": 1357,
        "length": 8,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b50505091905056",
        "parsedOpcodes": "1357: JUMPDEST\n1358: POP\n1359: POP\n1360: POP\n1361: SWAP2\n1362: SWAP1\n1363: POP\n1364: JUMP"
      },
      {
        "offset": 1365,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1365: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          87
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          92
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          138
        ]
      },
      {
        "from": 76,
        "to": [
          87,
          225
        ]
      },
      {
        "from": 87,
        "to": [
          1365
        ]
      },
      {
        "from": 92,
        "to": [
          292,
          292
        ]
      },
      {
        "from": 136,
        "to": [
          1365
        ]
      },
      {
        "from": 138,
        "to": [
          146,
          150
        ]
      },
      {
        "from": 146,
        "to": [
          1365
        ]
      },
      {
        "from": 150,
        "to": [
          885,
          885
        ]
      },
      {
        "from": 159,
        "to": [
          1365
        ]
      },
      {
        "from": 225,
        "to": [
          233,
          237
        ]
      },
      {
        "from": 233,
        "to": [
          1365
        ]
      },
      {
        "from": 237,
        "to": [
          922,
          922
        ]
      },
      {
        "from": 290,
        "to": [
          1365
        ]
      },
      {
        "from": 292,
        "to": [
          1080,
          1080
        ]
      },
      {
        "from": 358,
        "to": [
          374,
          375
        ]
      },
      {
        "from": 374,
        "to": [
          1365
        ]
      },
      {
        "from": 375,
        "to": [
          405,
          406
        ]
      },
      {
        "from": 405,
        "to": [
          1365
        ]
      },
      {
        "from": 406,
        "to": [
          436,
          437
        ]
      },
      {
        "from": 436,
        "to": [
          1365
        ]
      },
      {
        "from": 437,
        "to": [
          526,
          601
        ]
      },
      {
        "from": 526,
        "to": [
          586,
          595
        ]
      },
      {
        "from": 586,
        "to": [
          1365
        ]
      },
      {
        "from": 595,
        "to": [
          877,
          877
        ]
      },
      {
        "from": 601,
        "to": [
          812,
          816
        ]
      },
      {
        "from": 812,
        "to": [
          1365
        ]
      },
      {
        "from": 816,
        "to": [
          827,
          836
        ]
      },
      {
        "from": 827,
        "to": [
          1365
        ]
      },
      {
        "from": 836,
        "to": [
          854,
          858
        ]
      },
      {
        "from": 854,
        "to": [
          1365
        ]
      },
      {
        "from": 858,
        "to": [
          877
        ]
      },
      {
        "from": 877,
        "to": [
          136,
          136
        ]
      },
      {
        "from": 885,
        "to": [
          159
        ]
      },
      {
        "from": 922,
        "to": [
          1009,
          1013
        ]
      },
      {
        "from": 1009,
        "to": [
          1365
        ]
      },
      {
        "from": 1013,
        "to": [
          290
        ]
      },
      {
        "from": 1080,
        "to": [
          1101,
          1102
        ]
      },
      {
        "from": 1101,
        "to": [
          1365
        ]
      },
      {
        "from": 1102,
        "to": [
          1244,
          1264
        ]
      },
      {
        "from": 1244,
        "to": [
          1264
        ]
      },
      {
        "from": 1264,
        "to": [
          1272
        ]
      },
      {
        "from": 1272,
        "to": [
          1288,
          1357
        ]
      },
      {
        "from": 1288,
        "to": [
          1319,
          1320
        ]
      },
      {
        "from": 1319,
        "to": [
          1365
        ]
      },
      {
        "from": 1320,
        "to": [
          1272,
          1272,
          1272
        ]
      },
      {
        "from": 1357,
        "to": [
          358,
          358
        ]
      },
      {
        "from": 1365,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 56
    }
  }
}