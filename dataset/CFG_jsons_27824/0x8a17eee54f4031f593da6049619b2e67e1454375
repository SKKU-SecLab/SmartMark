{
  "name": "Analysis_2022-04-05_00-38-13",
  "address": "",
  "binarySource": "6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416636f7bc9be81146100bc575b34600014156100565761005161011a565b6100ba565b66033c8cb763f00034141561006d57610051610359565b60008033600160a060020a0316600160a060020a0316815260200190815260200160002060000154600014156100aa576100a56104e7565b6100b2565b6100b261011a565b6100ba6105f4565b005b3480156100c857600080fd5b506100dd600160a060020a0360043516610730565b6040518085815260200184815260200183600160a060020a0316600160a060020a0316815260200182815260200194505050505060405180910390f35b6101226107db565b60008060008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a03168152602001600382015481525050925082600001516000141580156101bd575082606001514314155b156103545761170c83606001514303606460028660000151028115156101df57fe5b04028115156101ea57fe5b04915061020483602001518361076c90919063ffffffff16565b600084015190915061021d90600263ffffffff61078416565b81111561026b5761025083602001516102446002866000015161078490919063ffffffff16565b9063ffffffff6107a916565b60006020850181905243606086015234908501529150610286565b60208301805183019052436060840152600083018051340190525b8260008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550606082015181600301559050508130600160a060020a03163110156103195730600160a060020a03163191505b33600160a060020a03166108fc839081150290604051600060405180830381858888f19350505050158015610352573d6000803e3d6000fd5b505b505050565b6103616107db565b600066033c8cb763f0003414156104e35760008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a031681526020016003820154815250509150816000015160001415156104e357610440346102446064610434603c610428886020015189600001516107a990919063ffffffff16565b9063ffffffff61078416565b9063ffffffff6107bd16565b905033600160a060020a03166108fc829081150290604051600060405180830381858888f1935050505015801561047b573d6000803e3d6000fd5b5060006020808401828152848301838152600160a060020a033381168116855283850185815290930184209051818501559051600182015560408501516002820180549184166101009590950a94850294909302191692909217905560608301516003909101555b5050565b60006104f16107db565b73f3b7229fd298031c39d4368066cc7995649f321b915036600014151561054f5761054c6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437506107d4945050505050565b91505b6080604051908101604052803481526020016000815260200183600160a060020a031681526020014381525090508060008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550606082015181600301559050505050565b600080600033600160a060020a0316600160a060020a0316815260200190815260200160002060020160009054906101000a9004600160a060020a0316905073f3b7229fd298031c39d4368066cc7995649f321b600160a060020a031681600160a060020a031614156106af5773f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc600a3481151561068e57fe5b049081150290604051600060405180830381858888f193505050505061072d565b73f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc6014348115156106dc57fe5b049081150290604051600060405180830381858888f193505050505080600160a060020a03166108fc60143481151561071157fe5b049081150290604051600060405180830381858888f150505050505b50565b6000602081905290815260408120808201546001820154600283015460039093015491939092600160a060020a036101009290920a9004169084565b600082820183811015151561077d57fe5b9392505050565b6000828202838214806107a1575082848281151561079e57fe5b04145b151561077d57fe5b60008282111515156107b757fe5b50900390565b60008082848115156107cb57fe5b04949350505050565b6014015190565b60806040519081016040528060008152602001600081526020016000600160a060020a031681526020016000815250905600a165627a7a72305820e027b5c5f3d2f64c04948e75a366378d0e05079d94c348a8b1beff8c1272998c0029",
  "binaryHash": "cf14c264",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820e027b5c5f3d2f64c04948e75a366378d0e05079d94c348a8b1beff8c1272998c0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649086693224
    }
  },
  "runtimeCfg": {
    "bytecode": "6080604052600436106100405763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416636f7bc9be81146100bc575b34600014156100565761005161011a565b6100ba565b66033c8cb763f00034141561006d57610051610359565b60008033600160a060020a0316600160a060020a0316815260200190815260200160002060000154600014156100aa576100a56104e7565b6100b2565b6100b261011a565b6100ba6105f4565b005b3480156100c857600080fd5b506100dd600160a060020a0360043516610730565b6040518085815260200184815260200183600160a060020a0316600160a060020a0316815260200182815260200194505050505060405180910390f35b6101226107db565b60008060008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a03168152602001600382015481525050925082600001516000141580156101bd575082606001514314155b156103545761170c83606001514303606460028660000151028115156101df57fe5b04028115156101ea57fe5b04915061020483602001518361076c90919063ffffffff16565b600084015190915061021d90600263ffffffff61078416565b81111561026b5761025083602001516102446002866000015161078490919063ffffffff16565b9063ffffffff6107a916565b60006020850181905243606086015234908501529150610286565b60208301805183019052436060840152600083018051340190525b8260008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550606082015181600301559050508130600160a060020a03163110156103195730600160a060020a03163191505b33600160a060020a03166108fc839081150290604051600060405180830381858888f19350505050158015610352573d6000803e3d6000fd5b505b505050565b6103616107db565b600066033c8cb763f0003414156104e35760008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a031681526020016003820154815250509150816000015160001415156104e357610440346102446064610434603c610428886020015189600001516107a990919063ffffffff16565b9063ffffffff61078416565b9063ffffffff6107bd16565b905033600160a060020a03166108fc829081150290604051600060405180830381858888f1935050505015801561047b573d6000803e3d6000fd5b5060006020808401828152848301838152600160a060020a033381168116855283850185815290930184209051818501559051600182015560408501516002820180549184166101009590950a94850294909302191692909217905560608301516003909101555b5050565b60006104f16107db565b73f3b7229fd298031c39d4368066cc7995649f321b915036600014151561054f5761054c6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437506107d4945050505050565b91505b6080604051908101604052803481526020016000815260200183600160a060020a031681526020014381525090508060008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550606082015181600301559050505050565b600080600033600160a060020a0316600160a060020a0316815260200190815260200160002060020160009054906101000a9004600160a060020a0316905073f3b7229fd298031c39d4368066cc7995649f321b600160a060020a031681600160a060020a031614156106af5773f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc600a3481151561068e57fe5b049081150290604051600060405180830381858888f193505050505061072d565b73f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc6014348115156106dc57fe5b049081150290604051600060405180830381858888f193505050505080600160a060020a03166108fc60143481151561071157fe5b049081150290604051600060405180830381858888f150505050505b50565b6000602081905290815260408120808201546001820154600283015460039093015491939092600160a060020a036101009290920a9004169084565b600082820183811015151561077d57fe5b9392505050565b6000828202838214806107a1575082848281151561079e57fe5b04145b151561077d57fe5b60008282111515156107b757fe5b50900390565b60008082848115156107cb57fe5b04949350505050565b6014015190565b60806040519081016040528060008152602001600081526020016000600160a060020a031681526020016000815250905600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061004057",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0040\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 51,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "63ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416636f7bc9be81146100bc57",
        "parsedOpcodes": "13: PUSH4 0xffffffff\n18: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n48: PUSH1 0x00\n50: CALLDATALOAD\n51: DIV\n52: AND\n53: PUSH4 0x6f7bc9be\n58: DUP2\n59: EQ\n60: PUSH2 0x00bc\n63: JUMPI"
      },
      {
        "offset": 64,
        "length": 10,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b346000141561005657",
        "parsedOpcodes": "64: JUMPDEST\n65: CALLVALUE\n66: PUSH1 0x00\n68: EQ\n69: ISZERO\n70: PUSH2 0x0056\n73: JUMPI"
      },
      {
        "offset": 74,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "61005161011a56",
        "parsedOpcodes": "74: PUSH2 0x0051\n77: PUSH2 0x011a\n80: JUMP"
      },
      {
        "offset": 81,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b6100ba56",
        "parsedOpcodes": "81: JUMPDEST\n82: PUSH2 0x00ba\n85: JUMP"
      },
      {
        "offset": 86,
        "length": 16,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b66033c8cb763f00034141561006d57",
        "parsedOpcodes": "86: JUMPDEST\n87: PUSH7 0x033c8cb763f000\n95: CALLVALUE\n96: EQ\n97: ISZERO\n98: PUSH2 0x006d\n101: JUMPI"
      },
      {
        "offset": 102,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "61005161035956",
        "parsedOpcodes": "102: PUSH2 0x0051\n105: PUSH2 0x0359\n108: JUMP"
      },
      {
        "offset": 109,
        "length": 49,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b60008033600160a060020a0316600160a060020a0316815260200190815260200160002060000154600014156100aa57",
        "parsedOpcodes": "109: JUMPDEST\n110: PUSH1 0x00\n112: DUP1\n113: CALLER\n114: PUSH1 0x01\n116: PUSH1 0xa0\n118: PUSH1 0x02\n120: EXP\n121: SUB\n122: AND\n123: PUSH1 0x01\n125: PUSH1 0xa0\n127: PUSH1 0x02\n129: EXP\n130: SUB\n131: AND\n132: DUP2\n133: MSTORE\n134: PUSH1 0x20\n136: ADD\n137: SWAP1\n138: DUP2\n139: MSTORE\n140: PUSH1 0x20\n142: ADD\n143: PUSH1 0x00\n145: SHA3\n146: PUSH1 0x00\n148: ADD\n149: SLOAD\n150: PUSH1 0x00\n152: EQ\n153: ISZERO\n154: PUSH2 0x00aa\n157: JUMPI"
      },
      {
        "offset": 158,
        "length": 7,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6100a56104e756",
        "parsedOpcodes": "158: PUSH2 0x00a5\n161: PUSH2 0x04e7\n164: JUMP"
      },
      {
        "offset": 165,
        "length": 5,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b6100b256",
        "parsedOpcodes": "165: JUMPDEST\n166: PUSH2 0x00b2\n169: JUMP"
      },
      {
        "offset": 170,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100b261011a56",
        "parsedOpcodes": "170: JUMPDEST\n171: PUSH2 0x00b2\n174: PUSH2 0x011a\n177: JUMP"
      },
      {
        "offset": 178,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b6100ba6105f456",
        "parsedOpcodes": "178: JUMPDEST\n179: PUSH2 0x00ba\n182: PUSH2 0x05f4\n185: JUMP"
      },
      {
        "offset": 186,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "186: JUMPDEST\n187: STOP"
      },
      {
        "offset": 188,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100c857",
        "parsedOpcodes": "188: JUMPDEST\n189: CALLVALUE\n190: DUP1\n191: ISZERO\n192: PUSH2 0x00c8\n195: JUMPI"
      },
      {
        "offset": 196,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "196: PUSH1 0x00\n198: DUP1\n199: REVERT"
      },
      {
        "offset": 200,
        "length": 21,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506100dd600160a060020a036004351661073056",
        "parsedOpcodes": "200: JUMPDEST\n201: POP\n202: PUSH2 0x00dd\n205: PUSH1 0x01\n207: PUSH1 0xa0\n209: PUSH1 0x02\n211: EXP\n212: SUB\n213: PUSH1 0x04\n215: CALLDATALOAD\n216: AND\n217: PUSH2 0x0730\n220: JUMP"
      },
      {
        "offset": 221,
        "length": 61,
        "type": "dispatcher",
        "stackBalance": -4,
        "bytecodeHex": "5b6040518085815260200184815260200183600160a060020a0316600160a060020a0316815260200182815260200194505050505060405180910390f3",
        "parsedOpcodes": "221: JUMPDEST\n222: PUSH1 0x40\n224: MLOAD\n225: DUP1\n226: DUP6\n227: DUP2\n228: MSTORE\n229: PUSH1 0x20\n231: ADD\n232: DUP5\n233: DUP2\n234: MSTORE\n235: PUSH1 0x20\n237: ADD\n238: DUP4\n239: PUSH1 0x01\n241: PUSH1 0xa0\n243: PUSH1 0x02\n245: EXP\n246: SUB\n247: AND\n248: PUSH1 0x01\n250: PUSH1 0xa0\n252: PUSH1 0x02\n254: EXP\n255: SUB\n256: AND\n257: DUP2\n258: MSTORE\n259: PUSH1 0x20\n261: ADD\n262: DUP3\n263: DUP2\n264: MSTORE\n265: PUSH1 0x20\n267: ADD\n268: SWAP5\n269: POP\n270: POP\n271: POP\n272: POP\n273: POP\n274: PUSH1 0x40\n276: MLOAD\n277: DUP1\n278: SWAP2\n279: SUB\n280: SWAP1\n281: RETURN"
      },
      {
        "offset": 282,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6101226107db56",
        "parsedOpcodes": "282: JUMPDEST\n283: PUSH2 0x0122\n286: PUSH2 0x07db\n289: JUMP"
      },
      {
        "offset": 290,
        "length": 146,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b60008060008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a03168152602001600382015481525050925082600001516000141580156101bd57",
        "parsedOpcodes": "290: JUMPDEST\n291: PUSH1 0x00\n293: DUP1\n294: PUSH1 0x00\n296: DUP1\n297: CALLER\n298: PUSH1 0x01\n300: PUSH1 0xa0\n302: PUSH1 0x02\n304: EXP\n305: SUB\n306: AND\n307: PUSH1 0x01\n309: PUSH1 0xa0\n311: PUSH1 0x02\n313: EXP\n314: SUB\n315: AND\n316: DUP2\n317: MSTORE\n318: PUSH1 0x20\n320: ADD\n321: SWAP1\n322: DUP2\n323: MSTORE\n324: PUSH1 0x20\n326: ADD\n327: PUSH1 0x00\n329: SHA3\n330: PUSH1 0x80\n332: PUSH1 0x40\n334: MLOAD\n335: SWAP1\n336: DUP2\n337: ADD\n338: PUSH1 0x40\n340: MSTORE\n341: SWAP1\n342: DUP2\n343: PUSH1 0x00\n345: DUP3\n346: ADD\n347: SLOAD\n348: DUP2\n349: MSTORE\n350: PUSH1 0x20\n352: ADD\n353: PUSH1 0x01\n355: DUP3\n356: ADD\n357: SLOAD\n358: DUP2\n359: MSTORE\n360: PUSH1 0x20\n362: ADD\n363: PUSH1 0x02\n365: DUP3\n366: ADD\n367: PUSH1 0x00\n369: SWAP1\n370: SLOAD\n371: SWAP1\n372: PUSH2 0x0100\n375: EXP\n376: SWAP1\n377: DIV\n378: PUSH1 0x01\n380: PUSH1 0xa0\n382: PUSH1 0x02\n384: EXP\n385: SUB\n386: AND\n387: PUSH1 0x01\n389: PUSH1 0xa0\n391: PUSH1 0x02\n393: EXP\n394: SUB\n395: AND\n396: PUSH1 0x01\n398: PUSH1 0xa0\n400: PUSH1 0x02\n402: EXP\n403: SUB\n404: AND\n405: DUP2\n406: MSTORE\n407: PUSH1 0x20\n409: ADD\n410: PUSH1 0x03\n412: DUP3\n413: ADD\n414: SLOAD\n415: DUP2\n416: MSTORE\n417: POP\n418: POP\n419: SWAP3\n420: POP\n421: DUP3\n422: PUSH1 0x00\n424: ADD\n425: MLOAD\n426: PUSH1 0x00\n428: EQ\n429: ISZERO\n430: DUP1\n431: ISZERO\n432: PUSH2 0x01bd\n435: JUMPI"
      },
      {
        "offset": 436,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "508260600151431415",
        "parsedOpcodes": "436: POP\n437: DUP3\n438: PUSH1 0x60\n440: ADD\n441: MLOAD\n442: NUMBER\n443: EQ\n444: ISZERO"
      },
      {
        "offset": 445,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b1561035457",
        "parsedOpcodes": "445: JUMPDEST\n446: ISZERO\n447: PUSH2 0x0354\n450: JUMPI"
      },
      {
        "offset": 451,
        "length": 27,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "61170c83606001514303606460028660000151028115156101df57",
        "parsedOpcodes": "451: PUSH2 0x170c\n454: DUP4\n455: PUSH1 0x60\n457: ADD\n458: MLOAD\n459: NUMBER\n460: SUB\n461: PUSH1 0x64\n463: PUSH1 0x02\n465: DUP7\n466: PUSH1 0x00\n468: ADD\n469: MLOAD\n470: MUL\n471: DUP2\n472: ISZERO\n473: ISZERO\n474: PUSH2 0x01df\n477: JUMPI"
      },
      {
        "offset": 478,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "478: INVALID"
      },
      {
        "offset": 479,
        "length": 10,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b04028115156101ea57",
        "parsedOpcodes": "479: JUMPDEST\n480: DIV\n481: MUL\n482: DUP2\n483: ISZERO\n484: ISZERO\n485: PUSH2 0x01ea\n488: JUMPI"
      },
      {
        "offset": 489,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "489: INVALID"
      },
      {
        "offset": 490,
        "length": 26,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b04915061020483602001518361076c90919063ffffffff1656",
        "parsedOpcodes": "490: JUMPDEST\n491: DIV\n492: SWAP2\n493: POP\n494: PUSH2 0x0204\n497: DUP4\n498: PUSH1 0x20\n500: ADD\n501: MLOAD\n502: DUP4\n503: PUSH2 0x076c\n506: SWAP1\n507: SWAP2\n508: SWAP1\n509: PUSH4 0xffffffff\n514: AND\n515: JUMP"
      },
      {
        "offset": 516,
        "length": 25,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600084015190915061021d90600263ffffffff6107841656",
        "parsedOpcodes": "516: JUMPDEST\n517: PUSH1 0x00\n519: DUP5\n520: ADD\n521: MLOAD\n522: SWAP1\n523: SWAP2\n524: POP\n525: PUSH2 0x021d\n528: SWAP1\n529: PUSH1 0x02\n531: PUSH4 0xffffffff\n536: PUSH2 0x0784\n539: AND\n540: JUMP"
      },
      {
        "offset": 541,
        "length": 8,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b81111561026b57",
        "parsedOpcodes": "541: JUMPDEST\n542: DUP2\n543: GT\n544: ISZERO\n545: PUSH2 0x026b\n548: JUMPI"
      },
      {
        "offset": 549,
        "length": 31,
        "type": "common",
        "stackBalance": 5,
        "bytecodeHex": "61025083602001516102446002866000015161078490919063ffffffff1656",
        "parsedOpcodes": "549: PUSH2 0x0250\n552: DUP4\n553: PUSH1 0x20\n555: ADD\n556: MLOAD\n557: PUSH2 0x0244\n560: PUSH1 0x02\n562: DUP7\n563: PUSH1 0x00\n565: ADD\n566: MLOAD\n567: PUSH2 0x0784\n570: SWAP1\n571: SWAP2\n572: SWAP1\n573: PUSH4 0xffffffff\n578: AND\n579: JUMP"
      },
      {
        "offset": 580,
        "length": 12,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9063ffffffff6107a91656",
        "parsedOpcodes": "580: JUMPDEST\n581: SWAP1\n582: PUSH4 0xffffffff\n587: PUSH2 0x07a9\n590: AND\n591: JUMP"
      },
      {
        "offset": 592,
        "length": 27,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b6000602085018190524360608601523490850152915061028656",
        "parsedOpcodes": "592: JUMPDEST\n593: PUSH1 0x00\n595: PUSH1 0x20\n597: DUP6\n598: ADD\n599: DUP2\n600: SWAP1\n601: MSTORE\n602: NUMBER\n603: PUSH1 0x60\n605: DUP7\n606: ADD\n607: MSTORE\n608: CALLVALUE\n609: SWAP1\n610: DUP6\n611: ADD\n612: MSTORE\n613: SWAP2\n614: POP\n615: PUSH2 0x0286\n618: JUMP"
      },
      {
        "offset": 619,
        "length": 27,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020830180518301905243606084015260008301805134019052",
        "parsedOpcodes": "619: JUMPDEST\n620: PUSH1 0x20\n622: DUP4\n623: ADD\n624: DUP1\n625: MLOAD\n626: DUP4\n627: ADD\n628: SWAP1\n629: MSTORE\n630: NUMBER\n631: PUSH1 0x60\n633: DUP5\n634: ADD\n635: MSTORE\n636: PUSH1 0x00\n638: DUP4\n639: ADD\n640: DUP1\n641: MLOAD\n642: CALLVALUE\n643: ADD\n644: SWAP1\n645: MSTORE"
      },
      {
        "offset": 646,
        "length": 134,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b8260008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550606082015181600301559050508130600160a060020a031631101561031957",
        "parsedOpcodes": "646: JUMPDEST\n647: DUP3\n648: PUSH1 0x00\n650: DUP1\n651: CALLER\n652: PUSH1 0x01\n654: PUSH1 0xa0\n656: PUSH1 0x02\n658: EXP\n659: SUB\n660: AND\n661: PUSH1 0x01\n663: PUSH1 0xa0\n665: PUSH1 0x02\n667: EXP\n668: SUB\n669: AND\n670: DUP2\n671: MSTORE\n672: PUSH1 0x20\n674: ADD\n675: SWAP1\n676: DUP2\n677: MSTORE\n678: PUSH1 0x20\n680: ADD\n681: PUSH1 0x00\n683: SHA3\n684: PUSH1 0x00\n686: DUP3\n687: ADD\n688: MLOAD\n689: DUP2\n690: PUSH1 0x00\n692: ADD\n693: SSTORE\n694: PUSH1 0x20\n696: DUP3\n697: ADD\n698: MLOAD\n699: DUP2\n700: PUSH1 0x01\n702: ADD\n703: SSTORE\n704: PUSH1 0x40\n706: DUP3\n707: ADD\n708: MLOAD\n709: DUP2\n710: PUSH1 0x02\n712: ADD\n713: PUSH1 0x00\n715: PUSH2 0x0100\n718: EXP\n719: DUP2\n720: SLOAD\n721: DUP2\n722: PUSH1 0x01\n724: PUSH1 0xa0\n726: PUSH1 0x02\n728: EXP\n729: SUB\n730: MUL\n731: NOT\n732: AND\n733: SWAP1\n734: DUP4\n735: PUSH1 0x01\n737: PUSH1 0xa0\n739: PUSH1 0x02\n741: EXP\n742: SUB\n743: AND\n744: MUL\n745: OR\n746: SWAP1\n747: SSTORE\n748: POP\n749: PUSH1 0x60\n751: DUP3\n752: ADD\n753: MLOAD\n754: DUP2\n755: PUSH1 0x03\n757: ADD\n758: SSTORE\n759: SWAP1\n760: POP\n761: POP\n762: DUP2\n763: ADDRESS\n764: PUSH1 0x01\n766: PUSH1 0xa0\n768: PUSH1 0x02\n770: EXP\n771: SUB\n772: AND\n773: BALANCE\n774: LT\n775: ISZERO\n776: PUSH2 0x0319\n779: JUMPI"
      },
      {
        "offset": 780,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "30600160a060020a0316319150",
        "parsedOpcodes": "780: ADDRESS\n781: PUSH1 0x01\n783: PUSH1 0xa0\n785: PUSH1 0x02\n787: EXP\n788: SUB\n789: AND\n790: BALANCE\n791: SWAP2\n792: POP"
      },
      {
        "offset": 793,
        "length": 48,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b33600160a060020a03166108fc839081150290604051600060405180830381858888f1935050505015801561035257",
        "parsedOpcodes": "793: JUMPDEST\n794: CALLER\n795: PUSH1 0x01\n797: PUSH1 0xa0\n799: PUSH1 0x02\n801: EXP\n802: SUB\n803: AND\n804: PUSH2 0x08fc\n807: DUP4\n808: SWAP1\n809: DUP2\n810: ISZERO\n811: MUL\n812: SWAP1\n813: PUSH1 0x40\n815: MLOAD\n816: PUSH1 0x00\n818: PUSH1 0x40\n820: MLOAD\n821: DUP1\n822: DUP4\n823: SUB\n824: DUP2\n825: DUP6\n826: DUP9\n827: DUP9\n828: CALL\n829: SWAP4\n830: POP\n831: POP\n832: POP\n833: POP\n834: ISZERO\n835: DUP1\n836: ISZERO\n837: PUSH2 0x0352\n840: JUMPI"
      },
      {
        "offset": 841,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "841: RETURNDATASIZE\n842: PUSH1 0x00\n844: DUP1\n845: RETURNDATACOPY\n846: RETURNDATASIZE\n847: PUSH1 0x00\n849: REVERT"
      },
      {
        "offset": 850,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50",
        "parsedOpcodes": "850: JUMPDEST\n851: POP"
      },
      {
        "offset": 852,
        "length": 5,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b50505056",
        "parsedOpcodes": "852: JUMPDEST\n853: POP\n854: POP\n855: POP\n856: JUMP"
      },
      {
        "offset": 857,
        "length": 8,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6103616107db56",
        "parsedOpcodes": "857: JUMPDEST\n858: PUSH2 0x0361\n861: PUSH2 0x07db\n864: JUMP"
      },
      {
        "offset": 865,
        "length": 18,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600066033c8cb763f0003414156104e357",
        "parsedOpcodes": "865: JUMPDEST\n866: PUSH1 0x00\n868: PUSH7 0x033c8cb763f000\n876: CALLVALUE\n877: EQ\n878: ISZERO\n879: PUSH2 0x04e3\n882: JUMPI"
      },
      {
        "offset": 883,
        "length": 141,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "60008033600160a060020a0316600160a060020a031681526020019081526020016000206080604051908101604052908160008201548152602001600182015481526020016002820160009054906101000a9004600160a060020a0316600160a060020a0316600160a060020a031681526020016003820154815250509150816000015160001415156104e357",
        "parsedOpcodes": "883: PUSH1 0x00\n885: DUP1\n886: CALLER\n887: PUSH1 0x01\n889: PUSH1 0xa0\n891: PUSH1 0x02\n893: EXP\n894: SUB\n895: AND\n896: PUSH1 0x01\n898: PUSH1 0xa0\n900: PUSH1 0x02\n902: EXP\n903: SUB\n904: AND\n905: DUP2\n906: MSTORE\n907: PUSH1 0x20\n909: ADD\n910: SWAP1\n911: DUP2\n912: MSTORE\n913: PUSH1 0x20\n915: ADD\n916: PUSH1 0x00\n918: SHA3\n919: PUSH1 0x80\n921: PUSH1 0x40\n923: MLOAD\n924: SWAP1\n925: DUP2\n926: ADD\n927: PUSH1 0x40\n929: MSTORE\n930: SWAP1\n931: DUP2\n932: PUSH1 0x00\n934: DUP3\n935: ADD\n936: SLOAD\n937: DUP2\n938: MSTORE\n939: PUSH1 0x20\n941: ADD\n942: PUSH1 0x01\n944: DUP3\n945: ADD\n946: SLOAD\n947: DUP2\n948: MSTORE\n949: PUSH1 0x20\n951: ADD\n952: PUSH1 0x02\n954: DUP3\n955: ADD\n956: PUSH1 0x00\n958: SWAP1\n959: SLOAD\n960: SWAP1\n961: PUSH2 0x0100\n964: EXP\n965: SWAP1\n966: DIV\n967: PUSH1 0x01\n969: PUSH1 0xa0\n971: PUSH1 0x02\n973: EXP\n974: SUB\n975: AND\n976: PUSH1 0x01\n978: PUSH1 0xa0\n980: PUSH1 0x02\n982: EXP\n983: SUB\n984: AND\n985: PUSH1 0x01\n987: PUSH1 0xa0\n989: PUSH1 0x02\n991: EXP\n992: SUB\n993: AND\n994: DUP2\n995: MSTORE\n996: PUSH1 0x20\n998: ADD\n999: PUSH1 0x03\n1001: DUP3\n1002: ADD\n1003: SLOAD\n1004: DUP2\n1005: MSTORE\n1006: POP\n1007: POP\n1008: SWAP2\n1009: POP\n1010: DUP2\n1011: PUSH1 0x00\n1013: ADD\n1014: MLOAD\n1015: PUSH1 0x00\n1017: EQ\n1018: ISZERO\n1019: ISZERO\n1020: PUSH2 0x04e3\n1023: JUMPI"
      },
      {
        "offset": 1024,
        "length": 40,
        "type": "common",
        "stackBalance": 9,
        "bytecodeHex": "610440346102446064610434603c610428886020015189600001516107a990919063ffffffff1656",
        "parsedOpcodes": "1024: PUSH2 0x0440\n1027: CALLVALUE\n1028: PUSH2 0x0244\n1031: PUSH1 0x64\n1033: PUSH2 0x0434\n1036: PUSH1 0x3c\n1038: PUSH2 0x0428\n1041: DUP9\n1042: PUSH1 0x20\n1044: ADD\n1045: MLOAD\n1046: DUP10\n1047: PUSH1 0x00\n1049: ADD\n1050: MLOAD\n1051: PUSH2 0x07a9\n1054: SWAP1\n1055: SWAP2\n1056: SWAP1\n1057: PUSH4 0xffffffff\n1062: AND\n1063: JUMP"
      },
      {
        "offset": 1064,
        "length": 12,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9063ffffffff6107841656",
        "parsedOpcodes": "1064: JUMPDEST\n1065: SWAP1\n1066: PUSH4 0xffffffff\n1071: PUSH2 0x0784\n1074: AND\n1075: JUMP"
      },
      {
        "offset": 1076,
        "length": 12,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b9063ffffffff6107bd1656",
        "parsedOpcodes": "1076: JUMPDEST\n1077: SWAP1\n1078: PUSH4 0xffffffff\n1083: PUSH2 0x07bd\n1086: AND\n1087: JUMP"
      },
      {
        "offset": 1088,
        "length": 50,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b905033600160a060020a03166108fc829081150290604051600060405180830381858888f1935050505015801561047b57",
        "parsedOpcodes": "1088: JUMPDEST\n1089: SWAP1\n1090: POP\n1091: CALLER\n1092: PUSH1 0x01\n1094: PUSH1 0xa0\n1096: PUSH1 0x02\n1098: EXP\n1099: SUB\n1100: AND\n1101: PUSH2 0x08fc\n1104: DUP3\n1105: SWAP1\n1106: DUP2\n1107: ISZERO\n1108: MUL\n1109: SWAP1\n1110: PUSH1 0x40\n1112: MLOAD\n1113: PUSH1 0x00\n1115: PUSH1 0x40\n1117: MLOAD\n1118: DUP1\n1119: DUP4\n1120: SUB\n1121: DUP2\n1122: DUP6\n1123: DUP9\n1124: DUP9\n1125: CALL\n1126: SWAP4\n1127: POP\n1128: POP\n1129: POP\n1130: POP\n1131: ISZERO\n1132: DUP1\n1133: ISZERO\n1134: PUSH2 0x047b\n1137: JUMPI"
      },
      {
        "offset": 1138,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1138: RETURNDATASIZE\n1139: PUSH1 0x00\n1141: DUP1\n1142: RETURNDATACOPY\n1143: RETURNDATASIZE\n1144: PUSH1 0x00\n1146: REVERT"
      },
      {
        "offset": 1147,
        "length": 104,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b5060006020808401828152848301838152600160a060020a033381168116855283850185815290930184209051818501559051600182015560408501516002820180549184166101009590950a9485029490930219169290921790556060830151600390910155",
        "parsedOpcodes": "1147: JUMPDEST\n1148: POP\n1149: PUSH1 0x00\n1151: PUSH1 0x20\n1153: DUP1\n1154: DUP5\n1155: ADD\n1156: DUP3\n1157: DUP2\n1158: MSTORE\n1159: DUP5\n1160: DUP4\n1161: ADD\n1162: DUP4\n1163: DUP2\n1164: MSTORE\n1165: PUSH1 0x01\n1167: PUSH1 0xa0\n1169: PUSH1 0x02\n1171: EXP\n1172: SUB\n1173: CALLER\n1174: DUP2\n1175: AND\n1176: DUP2\n1177: AND\n1178: DUP6\n1179: MSTORE\n1180: DUP4\n1181: DUP6\n1182: ADD\n1183: DUP6\n1184: DUP2\n1185: MSTORE\n1186: SWAP1\n1187: SWAP4\n1188: ADD\n1189: DUP5\n1190: SHA3\n1191: SWAP1\n1192: MLOAD\n1193: DUP2\n1194: DUP6\n1195: ADD\n1196: SSTORE\n1197: SWAP1\n1198: MLOAD\n1199: PUSH1 0x01\n1201: DUP3\n1202: ADD\n1203: SSTORE\n1204: PUSH1 0x40\n1206: DUP6\n1207: ADD\n1208: MLOAD\n1209: PUSH1 0x02\n1211: DUP3\n1212: ADD\n1213: DUP1\n1214: SLOAD\n1215: SWAP2\n1216: DUP5\n1217: AND\n1218: PUSH2 0x0100\n1221: SWAP6\n1222: SWAP1\n1223: SWAP6\n1224: EXP\n1225: SWAP5\n1226: DUP6\n1227: MUL\n1228: SWAP5\n1229: SWAP1\n1230: SWAP4\n1231: MUL\n1232: NOT\n1233: AND\n1234: SWAP3\n1235: SWAP1\n1236: SWAP3\n1237: OR\n1238: SWAP1\n1239: SSTORE\n1240: PUSH1 0x60\n1242: DUP4\n1243: ADD\n1244: MLOAD\n1245: PUSH1 0x03\n1247: SWAP1\n1248: SWAP2\n1249: ADD\n1250: SSTORE"
      },
      {
        "offset": 1251,
        "length": 4,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b505056",
        "parsedOpcodes": "1251: JUMPDEST\n1252: POP\n1253: POP\n1254: JUMP"
      },
      {
        "offset": 1255,
        "length": 10,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b60006104f16107db56",
        "parsedOpcodes": "1255: JUMPDEST\n1256: PUSH1 0x00\n1258: PUSH2 0x04f1\n1261: PUSH2 0x07db\n1264: JUMP"
      },
      {
        "offset": 1265,
        "length": 34,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b73f3b7229fd298031c39d4368066cc7995649f321b915036600014151561054f57",
        "parsedOpcodes": "1265: JUMPDEST\n1266: PUSH20 0xf3b7229fd298031c39d4368066cc7995649f321b\n1287: SWAP2\n1288: POP\n1289: CALLDATASIZE\n1290: PUSH1 0x00\n1292: EQ\n1293: ISZERO\n1294: ISZERO\n1295: PUSH2 0x054f\n1298: JUMPI"
      },
      {
        "offset": 1299,
        "length": 57,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "61054c6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437506107d494505050505056",
        "parsedOpcodes": "1299: PUSH2 0x054c\n1302: PUSH1 0x00\n1304: CALLDATASIZE\n1305: DUP1\n1306: DUP1\n1307: PUSH1 0x1f\n1309: ADD\n1310: PUSH1 0x20\n1312: DUP1\n1313: SWAP2\n1314: DIV\n1315: MUL\n1316: PUSH1 0x20\n1318: ADD\n1319: PUSH1 0x40\n1321: MLOAD\n1322: SWAP1\n1323: DUP2\n1324: ADD\n1325: PUSH1 0x40\n1327: MSTORE\n1328: DUP1\n1329: SWAP4\n1330: SWAP3\n1331: SWAP2\n1332: SWAP1\n1333: DUP2\n1334: DUP2\n1335: MSTORE\n1336: PUSH1 0x20\n1338: ADD\n1339: DUP4\n1340: DUP4\n1341: DUP1\n1342: DUP3\n1343: DUP5\n1344: CALLDATACOPY\n1345: POP\n1346: PUSH2 0x07d4\n1349: SWAP5\n1350: POP\n1351: POP\n1352: POP\n1353: POP\n1354: POP\n1355: JUMP"
      },
      {
        "offset": 1356,
        "length": 3,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b9150",
        "parsedOpcodes": "1356: JUMPDEST\n1357: SWAP2\n1358: POP"
      },
      {
        "offset": 1359,
        "length": 165,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b6080604051908101604052803481526020016000815260200183600160a060020a031681526020014381525090508060008033600160a060020a0316600160a060020a03168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a815481600160a060020a030219169083600160a060020a0316021790555060608201518160030155905050505056",
        "parsedOpcodes": "1359: JUMPDEST\n1360: PUSH1 0x80\n1362: PUSH1 0x40\n1364: MLOAD\n1365: SWAP1\n1366: DUP2\n1367: ADD\n1368: PUSH1 0x40\n1370: MSTORE\n1371: DUP1\n1372: CALLVALUE\n1373: DUP2\n1374: MSTORE\n1375: PUSH1 0x20\n1377: ADD\n1378: PUSH1 0x00\n1380: DUP2\n1381: MSTORE\n1382: PUSH1 0x20\n1384: ADD\n1385: DUP4\n1386: PUSH1 0x01\n1388: PUSH1 0xa0\n1390: PUSH1 0x02\n1392: EXP\n1393: SUB\n1394: AND\n1395: DUP2\n1396: MSTORE\n1397: PUSH1 0x20\n1399: ADD\n1400: NUMBER\n1401: DUP2\n1402: MSTORE\n1403: POP\n1404: SWAP1\n1405: POP\n1406: DUP1\n1407: PUSH1 0x00\n1409: DUP1\n1410: CALLER\n1411: PUSH1 0x01\n1413: PUSH1 0xa0\n1415: PUSH1 0x02\n1417: EXP\n1418: SUB\n1419: AND\n1420: PUSH1 0x01\n1422: PUSH1 0xa0\n1424: PUSH1 0x02\n1426: EXP\n1427: SUB\n1428: AND\n1429: DUP2\n1430: MSTORE\n1431: PUSH1 0x20\n1433: ADD\n1434: SWAP1\n1435: DUP2\n1436: MSTORE\n1437: PUSH1 0x20\n1439: ADD\n1440: PUSH1 0x00\n1442: SHA3\n1443: PUSH1 0x00\n1445: DUP3\n1446: ADD\n1447: MLOAD\n1448: DUP2\n1449: PUSH1 0x00\n1451: ADD\n1452: SSTORE\n1453: PUSH1 0x20\n1455: DUP3\n1456: ADD\n1457: MLOAD\n1458: DUP2\n1459: PUSH1 0x01\n1461: ADD\n1462: SSTORE\n1463: PUSH1 0x40\n1465: DUP3\n1466: ADD\n1467: MLOAD\n1468: DUP2\n1469: PUSH1 0x02\n1471: ADD\n1472: PUSH1 0x00\n1474: PUSH2 0x0100\n1477: EXP\n1478: DUP2\n1479: SLOAD\n1480: DUP2\n1481: PUSH1 0x01\n1483: PUSH1 0xa0\n1485: PUSH1 0x02\n1487: EXP\n1488: SUB\n1489: MUL\n1490: NOT\n1491: AND\n1492: SWAP1\n1493: DUP4\n1494: PUSH1 0x01\n1496: PUSH1 0xa0\n1498: PUSH1 0x02\n1500: EXP\n1501: SUB\n1502: AND\n1503: MUL\n1504: OR\n1505: SWAP1\n1506: SSTORE\n1507: POP\n1508: PUSH1 0x60\n1510: DUP3\n1511: ADD\n1512: MLOAD\n1513: DUP2\n1514: PUSH1 0x03\n1516: ADD\n1517: SSTORE\n1518: SWAP1\n1519: POP\n1520: POP\n1521: POP\n1522: POP\n1523: JUMP"
      },
      {
        "offset": 1524,
        "length": 110,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b600080600033600160a060020a0316600160a060020a0316815260200190815260200160002060020160009054906101000a9004600160a060020a0316905073f3b7229fd298031c39d4368066cc7995649f321b600160a060020a031681600160a060020a031614156106af57",
        "parsedOpcodes": "1524: JUMPDEST\n1525: PUSH1 0x00\n1527: DUP1\n1528: PUSH1 0x00\n1530: CALLER\n1531: PUSH1 0x01\n1533: PUSH1 0xa0\n1535: PUSH1 0x02\n1537: EXP\n1538: SUB\n1539: AND\n1540: PUSH1 0x01\n1542: PUSH1 0xa0\n1544: PUSH1 0x02\n1546: EXP\n1547: SUB\n1548: AND\n1549: DUP2\n1550: MSTORE\n1551: PUSH1 0x20\n1553: ADD\n1554: SWAP1\n1555: DUP2\n1556: MSTORE\n1557: PUSH1 0x20\n1559: ADD\n1560: PUSH1 0x00\n1562: SHA3\n1563: PUSH1 0x02\n1565: ADD\n1566: PUSH1 0x00\n1568: SWAP1\n1569: SLOAD\n1570: SWAP1\n1571: PUSH2 0x0100\n1574: EXP\n1575: SWAP1\n1576: DIV\n1577: PUSH1 0x01\n1579: PUSH1 0xa0\n1581: PUSH1 0x02\n1583: EXP\n1584: SUB\n1585: AND\n1586: SWAP1\n1587: POP\n1588: PUSH20 0xf3b7229fd298031c39d4368066cc7995649f321b\n1609: PUSH1 0x01\n1611: PUSH1 0xa0\n1613: PUSH1 0x02\n1615: EXP\n1616: SUB\n1617: AND\n1618: DUP2\n1619: PUSH1 0x01\n1621: PUSH1 0xa0\n1623: PUSH1 0x02\n1625: EXP\n1626: SUB\n1627: AND\n1628: EQ\n1629: ISZERO\n1630: PUSH2 0x06af\n1633: JUMPI"
      },
      {
        "offset": 1634,
        "length": 43,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "73f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc600a3481151561068e57",
        "parsedOpcodes": "1634: PUSH20 0xf3b7229fd298031c39d4368066cc7995649f321b\n1655: PUSH1 0x01\n1657: PUSH1 0xa0\n1659: PUSH1 0x02\n1661: EXP\n1662: SUB\n1663: AND\n1664: PUSH2 0x08fc\n1667: PUSH1 0x0a\n1669: CALLVALUE\n1670: DUP2\n1671: ISZERO\n1672: ISZERO\n1673: PUSH2 0x068e\n1676: JUMPI"
      },
      {
        "offset": 1677,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1677: INVALID"
      },
      {
        "offset": 1678,
        "length": 33,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b049081150290604051600060405180830381858888f193505050505061072d56",
        "parsedOpcodes": "1678: JUMPDEST\n1679: DIV\n1680: SWAP1\n1681: DUP2\n1682: ISZERO\n1683: MUL\n1684: SWAP1\n1685: PUSH1 0x40\n1687: MLOAD\n1688: PUSH1 0x00\n1690: PUSH1 0x40\n1692: MLOAD\n1693: DUP1\n1694: DUP4\n1695: SUB\n1696: DUP2\n1697: DUP6\n1698: DUP9\n1699: DUP9\n1700: CALL\n1701: SWAP4\n1702: POP\n1703: POP\n1704: POP\n1705: POP\n1706: POP\n1707: PUSH2 0x072d\n1710: JUMP"
      },
      {
        "offset": 1711,
        "length": 44,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b73f3b7229fd298031c39d4368066cc7995649f321b600160a060020a03166108fc6014348115156106dc57",
        "parsedOpcodes": "1711: JUMPDEST\n1712: PUSH20 0xf3b7229fd298031c39d4368066cc7995649f321b\n1733: PUSH1 0x01\n1735: PUSH1 0xa0\n1737: PUSH1 0x02\n1739: EXP\n1740: SUB\n1741: AND\n1742: PUSH2 0x08fc\n1745: PUSH1 0x14\n1747: CALLVALUE\n1748: DUP2\n1749: ISZERO\n1750: ISZERO\n1751: PUSH2 0x06dc\n1754: JUMPI"
      },
      {
        "offset": 1755,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1755: INVALID"
      },
      {
        "offset": 1756,
        "length": 52,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b049081150290604051600060405180830381858888f193505050505080600160a060020a03166108fc60143481151561071157",
        "parsedOpcodes": "1756: JUMPDEST\n1757: DIV\n1758: SWAP1\n1759: DUP2\n1760: ISZERO\n1761: MUL\n1762: SWAP1\n1763: PUSH1 0x40\n1765: MLOAD\n1766: PUSH1 0x00\n1768: PUSH1 0x40\n1770: MLOAD\n1771: DUP1\n1772: DUP4\n1773: SUB\n1774: DUP2\n1775: DUP6\n1776: DUP9\n1777: DUP9\n1778: CALL\n1779: SWAP4\n1780: POP\n1781: POP\n1782: POP\n1783: POP\n1784: POP\n1785: DUP1\n1786: PUSH1 0x01\n1788: PUSH1 0xa0\n1790: PUSH1 0x02\n1792: EXP\n1793: SUB\n1794: AND\n1795: PUSH2 0x08fc\n1798: PUSH1 0x14\n1800: CALLVALUE\n1801: DUP2\n1802: ISZERO\n1803: ISZERO\n1804: PUSH2 0x0711\n1807: JUMPI"
      },
      {
        "offset": 1808,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1808: INVALID"
      },
      {
        "offset": 1809,
        "length": 28,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b049081150290604051600060405180830381858888f15050505050",
        "parsedOpcodes": "1809: JUMPDEST\n1810: DIV\n1811: SWAP1\n1812: DUP2\n1813: ISZERO\n1814: MUL\n1815: SWAP1\n1816: PUSH1 0x40\n1818: MLOAD\n1819: PUSH1 0x00\n1821: PUSH1 0x40\n1823: MLOAD\n1824: DUP1\n1825: DUP4\n1826: SUB\n1827: DUP2\n1828: DUP6\n1829: DUP9\n1830: DUP9\n1831: CALL\n1832: POP\n1833: POP\n1834: POP\n1835: POP\n1836: POP"
      },
      {
        "offset": 1837,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1837: JUMPDEST\n1838: POP\n1839: JUMP"
      },
      {
        "offset": 1840,
        "length": 60,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6000602081905290815260408120808201546001820154600283015460039093015491939092600160a060020a036101009290920a900416908456",
        "parsedOpcodes": "1840: JUMPDEST\n1841: PUSH1 0x00\n1843: PUSH1 0x20\n1845: DUP2\n1846: SWAP1\n1847: MSTORE\n1848: SWAP1\n1849: DUP2\n1850: MSTORE\n1851: PUSH1 0x40\n1853: DUP2\n1854: SHA3\n1855: DUP1\n1856: DUP3\n1857: ADD\n1858: SLOAD\n1859: PUSH1 0x01\n1861: DUP3\n1862: ADD\n1863: SLOAD\n1864: PUSH1 0x02\n1866: DUP4\n1867: ADD\n1868: SLOAD\n1869: PUSH1 0x03\n1871: SWAP1\n1872: SWAP4\n1873: ADD\n1874: SLOAD\n1875: SWAP2\n1876: SWAP4\n1877: SWAP1\n1878: SWAP3\n1879: PUSH1 0x01\n1881: PUSH1 0xa0\n1883: PUSH1 0x02\n1885: EXP\n1886: SUB\n1887: PUSH2 0x0100\n1890: SWAP3\n1891: SWAP1\n1892: SWAP3\n1893: EXP\n1894: SWAP1\n1895: DIV\n1896: AND\n1897: SWAP1\n1898: DUP5\n1899: JUMP"
      },
      {
        "offset": 1900,
        "length": 16,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b600082820183811015151561077d57",
        "parsedOpcodes": "1900: JUMPDEST\n1901: PUSH1 0x00\n1903: DUP3\n1904: DUP3\n1905: ADD\n1906: DUP4\n1907: DUP2\n1908: LT\n1909: ISZERO\n1910: ISZERO\n1911: ISZERO\n1912: PUSH2 0x077d\n1915: JUMPI"
      },
      {
        "offset": 1916,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1916: INVALID"
      },
      {
        "offset": 1917,
        "length": 7,
        "type": "common",
        "stackBalance": -4,
        "bytecodeHex": "5b939250505056",
        "parsedOpcodes": "1917: JUMPDEST\n1918: SWAP4\n1919: SWAP3\n1920: POP\n1921: POP\n1922: POP\n1923: JUMP"
      },
      {
        "offset": 1924,
        "length": 14,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b6000828202838214806107a157",
        "parsedOpcodes": "1924: JUMPDEST\n1925: PUSH1 0x00\n1927: DUP3\n1928: DUP3\n1929: MUL\n1930: DUP4\n1931: DUP3\n1932: EQ\n1933: DUP1\n1934: PUSH2 0x07a1\n1937: JUMPI"
      },
      {
        "offset": 1938,
        "length": 11,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5082848281151561079e57",
        "parsedOpcodes": "1938: POP\n1939: DUP3\n1940: DUP5\n1941: DUP3\n1942: DUP2\n1943: ISZERO\n1944: ISZERO\n1945: PUSH2 0x079e\n1948: JUMPI"
      },
      {
        "offset": 1949,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1949: INVALID"
      },
      {
        "offset": 1950,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b0414",
        "parsedOpcodes": "1950: JUMPDEST\n1951: DIV\n1952: EQ"
      },
      {
        "offset": 1953,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b151561077d57",
        "parsedOpcodes": "1953: JUMPDEST\n1954: ISZERO\n1955: ISZERO\n1956: PUSH2 0x077d\n1959: JUMPI"
      },
      {
        "offset": 1960,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1960: INVALID"
      },
      {
        "offset": 1961,
        "length": 13,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b60008282111515156107b757",
        "parsedOpcodes": "1961: JUMPDEST\n1962: PUSH1 0x00\n1964: DUP3\n1965: DUP3\n1966: GT\n1967: ISZERO\n1968: ISZERO\n1969: ISZERO\n1970: PUSH2 0x07b7\n1973: JUMPI"
      },
      {
        "offset": 1974,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1974: INVALID"
      },
      {
        "offset": 1975,
        "length": 6,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b5090039056",
        "parsedOpcodes": "1975: JUMPDEST\n1976: POP\n1977: SWAP1\n1978: SUB\n1979: SWAP1\n1980: JUMP"
      },
      {
        "offset": 1981,
        "length": 13,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "5b60008082848115156107cb57",
        "parsedOpcodes": "1981: JUMPDEST\n1982: PUSH1 0x00\n1984: DUP1\n1985: DUP3\n1986: DUP5\n1987: DUP2\n1988: ISZERO\n1989: ISZERO\n1990: PUSH2 0x07cb\n1993: JUMPI"
      },
      {
        "offset": 1994,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1994: INVALID"
      },
      {
        "offset": 1995,
        "length": 9,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b0494935050505056",
        "parsedOpcodes": "1995: JUMPDEST\n1996: DIV\n1997: SWAP5\n1998: SWAP4\n1999: POP\n2000: POP\n2001: POP\n2002: POP\n2003: JUMP"
      },
      {
        "offset": 2004,
        "length": 7,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b601401519056",
        "parsedOpcodes": "2004: JUMPDEST\n2005: PUSH1 0x14\n2007: ADD\n2008: MLOAD\n2009: SWAP1\n2010: JUMP"
      },
      {
        "offset": 2011,
        "length": 50,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60806040519081016040528060008152602001600081526020016000600160a060020a0316815260200160008152509056",
        "parsedOpcodes": "2011: JUMPDEST\n2012: PUSH1 0x80\n2014: PUSH1 0x40\n2016: MLOAD\n2017: SWAP1\n2018: DUP2\n2019: ADD\n2020: PUSH1 0x40\n2022: MSTORE\n2023: DUP1\n2024: PUSH1 0x00\n2026: DUP2\n2027: MSTORE\n2028: PUSH1 0x20\n2030: ADD\n2031: PUSH1 0x00\n2033: DUP2\n2034: MSTORE\n2035: PUSH1 0x20\n2037: ADD\n2038: PUSH1 0x00\n2040: PUSH1 0x01\n2042: PUSH1 0xa0\n2044: PUSH1 0x02\n2046: EXP\n2047: SUB\n2048: AND\n2049: DUP2\n2050: MSTORE\n2051: PUSH1 0x20\n2053: ADD\n2054: PUSH1 0x00\n2056: DUP2\n2057: MSTORE\n2058: POP\n2059: SWAP1\n2060: JUMP"
      },
      {
        "offset": 2061,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "2061: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          64
        ]
      },
      {
        "from": 13,
        "to": [
          64,
          188
        ]
      },
      {
        "from": 64,
        "to": [
          74,
          86
        ]
      },
      {
        "from": 74,
        "to": [
          282,
          282,
          282
        ]
      },
      {
        "from": 81,
        "to": [
          186,
          186,
          186,
          186,
          186
        ]
      },
      {
        "from": 86,
        "to": [
          102,
          109
        ]
      },
      {
        "from": 102,
        "to": [
          857,
          857,
          857
        ]
      },
      {
        "from": 109,
        "to": [
          158,
          170
        ]
      },
      {
        "from": 158,
        "to": [
          1255,
          1255,
          1255
        ]
      },
      {
        "from": 165,
        "to": [
          178,
          178,
          178
        ]
      },
      {
        "from": 170,
        "to": [
          282,
          282,
          282
        ]
      },
      {
        "from": 178,
        "to": [
          1524,
          1524,
          1524,
          1524,
          1524
        ]
      },
      {
        "from": 186,
        "to": [
          2061
        ]
      },
      {
        "from": 188,
        "to": [
          196,
          200
        ]
      },
      {
        "from": 196,
        "to": [
          2061
        ]
      },
      {
        "from": 200,
        "to": [
          1840,
          1840
        ]
      },
      {
        "from": 221,
        "to": [
          2061
        ]
      },
      {
        "from": 282,
        "to": [
          2011,
          2011,
          2011,
          2011,
          2011
        ]
      },
      {
        "from": 290,
        "to": [
          436,
          445
        ]
      },
      {
        "from": 436,
        "to": [
          445
        ]
      },
      {
        "from": 445,
        "to": [
          451,
          852
        ]
      },
      {
        "from": 451,
        "to": [
          478,
          479
        ]
      },
      {
        "from": 478,
        "to": [
          2061
        ]
      },
      {
        "from": 479,
        "to": [
          489,
          490
        ]
      },
      {
        "from": 489,
        "to": [
          2061
        ]
      },
      {
        "from": 490,
        "to": [
          1900,
          1900,
          1900,
          1900
        ]
      },
      {
        "from": 516,
        "to": [
          1924,
          1924,
          1924,
          1924
        ]
      },
      {
        "from": 541,
        "to": [
          549,
          619
        ]
      },
      {
        "from": 549,
        "to": [
          1924,
          1924,
          1924,
          1924
        ]
      },
      {
        "from": 580,
        "to": [
          1961,
          1961,
          1961,
          1961,
          1961,
          1961
        ]
      },
      {
        "from": 592,
        "to": [
          646,
          646,
          646,
          646,
          646
        ]
      },
      {
        "from": 619,
        "to": [
          646
        ]
      },
      {
        "from": 646,
        "to": [
          780,
          793
        ]
      },
      {
        "from": 780,
        "to": [
          793
        ]
      },
      {
        "from": 793,
        "to": [
          841,
          850
        ]
      },
      {
        "from": 841,
        "to": [
          2061
        ]
      },
      {
        "from": 850,
        "to": [
          852
        ]
      },
      {
        "from": 852,
        "to": [
          178,
          178,
          81,
          81,
          178,
          178,
          81,
          81
        ]
      },
      {
        "from": 857,
        "to": [
          2011,
          2011,
          2011
        ]
      },
      {
        "from": 865,
        "to": [
          883,
          1251
        ]
      },
      {
        "from": 883,
        "to": [
          1024,
          1251
        ]
      },
      {
        "from": 1024,
        "to": [
          1961,
          1961
        ]
      },
      {
        "from": 1064,
        "to": [
          1924,
          1924
        ]
      },
      {
        "from": 1076,
        "to": [
          1981,
          1981
        ]
      },
      {
        "from": 1088,
        "to": [
          1138,
          1147
        ]
      },
      {
        "from": 1138,
        "to": [
          2061
        ]
      },
      {
        "from": 1147,
        "to": [
          1251
        ]
      },
      {
        "from": 1251,
        "to": [
          81,
          81,
          81,
          81,
          81,
          81
        ]
      },
      {
        "from": 1255,
        "to": [
          2011,
          2011,
          2011
        ]
      },
      {
        "from": 1265,
        "to": [
          1299,
          1359
        ]
      },
      {
        "from": 1299,
        "to": [
          2004,
          2004
        ]
      },
      {
        "from": 1356,
        "to": [
          1359
        ]
      },
      {
        "from": 1359,
        "to": [
          165,
          165,
          165,
          165
        ]
      },
      {
        "from": 1524,
        "to": [
          1634,
          1711
        ]
      },
      {
        "from": 1634,
        "to": [
          1677,
          1678
        ]
      },
      {
        "from": 1677,
        "to": [
          2061
        ]
      },
      {
        "from": 1678,
        "to": [
          1837,
          1837,
          1837
        ]
      },
      {
        "from": 1711,
        "to": [
          1755,
          1756
        ]
      },
      {
        "from": 1755,
        "to": [
          2061
        ]
      },
      {
        "from": 1756,
        "to": [
          1808,
          1809
        ]
      },
      {
        "from": 1808,
        "to": [
          2061
        ]
      },
      {
        "from": 1809,
        "to": [
          1837
        ]
      },
      {
        "from": 1837,
        "to": [
          186,
          186,
          186,
          186
        ]
      },
      {
        "from": 1840,
        "to": [
          221
        ]
      },
      {
        "from": 1900,
        "to": [
          1916,
          1917
        ]
      },
      {
        "from": 1916,
        "to": [
          2061
        ]
      },
      {
        "from": 1917,
        "to": [
          516,
          541,
          580,
          1076,
          516,
          541,
          580,
          516,
          541,
          580,
          1076,
          516,
          541,
          580
        ]
      },
      {
        "from": 1924,
        "to": [
          1938,
          1953
        ]
      },
      {
        "from": 1938,
        "to": [
          1949,
          1950
        ]
      },
      {
        "from": 1949,
        "to": [
          2061
        ]
      },
      {
        "from": 1950,
        "to": [
          1953
        ]
      },
      {
        "from": 1953,
        "to": [
          1960,
          1917
        ]
      },
      {
        "from": 1960,
        "to": [
          2061
        ]
      },
      {
        "from": 1961,
        "to": [
          1974,
          1975
        ]
      },
      {
        "from": 1974,
        "to": [
          2061
        ]
      },
      {
        "from": 1975,
        "to": [
          592,
          1064,
          1088,
          592,
          592,
          1064,
          1088,
          592
        ]
      },
      {
        "from": 1981,
        "to": [
          1994,
          1995
        ]
      },
      {
        "from": 1994,
        "to": [
          2061
        ]
      },
      {
        "from": 1995,
        "to": [
          580,
          580
        ]
      },
      {
        "from": 2004,
        "to": [
          1356,
          1356
        ]
      },
      {
        "from": 2011,
        "to": [
          290,
          1265,
          865,
          290,
          290,
          1265,
          865,
          290
        ]
      },
      {
        "from": 2061,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 85
    }
  }
}