{
  "name": "Analysis_2022-04-05_00-34-23",
  "address": "",
  "binarySource": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c7caded146100595780633ccfd60b14610070578063fb19b0c014610087575b005b34801561006557600080fd5b5061006e6100ed565b005b34801561007c57600080fd5b50610085610161565b005b34801561009357600080fd5b506100eb6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061021c565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610219573d6000803e3d6000fd5b50565b6000806000809250600090505b83518110156104f657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d858381518110151561027e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff16815260200191505061014060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b505050506040513d61014081101561030c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596509091929394955090919293945090919293509091925090915090505080935050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631940a93685838151811015156103f557fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff168152602001915050602060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b8101908080519060200190929190505050801561049b5750825b156104e9578184828151811015156104af57fe5b906020019060200201519080600181540180825580915050906001820390600052602060002001600090919263ffffffff16909190915055505b8080600101915050610229565b505050505600a165627a7a72305820d1c6d28707dab011b6402143a39a1514bb090d93f6bcb96aead427a918f1379e0029",
  "binaryHash": "dd620616",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a72305820d1c6d28707dab011b6402143a39a1514bb090d93f6bcb96aead427a918f1379e0029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649086463364
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c7caded146100595780633ccfd60b14610070578063fb19b0c014610087575b005b34801561006557600080fd5b5061006e6100ed565b005b34801561007c57600080fd5b50610085610161565b005b34801561009357600080fd5b506100eb6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061021c565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610219573d6000803e3d6000fd5b50565b6000806000809250600090505b83518110156104f657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d858381518110151561027e57fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff16815260200191505061014060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b505050506040513d61014081101561030c57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596509091929394955090919293945090919293509091925090915090505080935050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631940a93685838151811015156103f557fe5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff168152602001915050602060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050506040513d602081101561048157600080fd5b8101908080519060200190929190505050801561049b5750825b156104e9578184828151811015156104af57fe5b906020019060200201519080600181540180825580915050906001820390600052602060002001600090919263ffffffff16909190915055505b8080600101915050610229565b505050505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061005757",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0057\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c7caded1461005957",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x0c7caded\n60: EQ\n61: PUSH2 0x0059\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80633ccfd60b1461007057",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x3ccfd60b\n71: EQ\n72: PUSH2 0x0070\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063fb19b0c01461008757",
        "parsedOpcodes": "76: DUP1\n77: PUSH4 0xfb19b0c0\n82: EQ\n83: PUSH2 0x0087\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "87: JUMPDEST\n88: STOP"
      },
      {
        "offset": 89,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561006557",
        "parsedOpcodes": "89: JUMPDEST\n90: CALLVALUE\n91: DUP1\n92: ISZERO\n93: PUSH2 0x0065\n96: JUMPI"
      },
      {
        "offset": 97,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "97: PUSH1 0x00\n99: DUP1\n100: REVERT"
      },
      {
        "offset": 101,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061006e6100ed56",
        "parsedOpcodes": "101: JUMPDEST\n102: POP\n103: PUSH2 0x006e\n106: PUSH2 0x00ed\n109: JUMP"
      },
      {
        "offset": 110,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "110: JUMPDEST\n111: STOP"
      },
      {
        "offset": 112,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561007c57",
        "parsedOpcodes": "112: JUMPDEST\n113: CALLVALUE\n114: DUP1\n115: ISZERO\n116: PUSH2 0x007c\n119: JUMPI"
      },
      {
        "offset": 120,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "120: PUSH1 0x00\n122: DUP1\n123: REVERT"
      },
      {
        "offset": 124,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061008561016156",
        "parsedOpcodes": "124: JUMPDEST\n125: POP\n126: PUSH2 0x0085\n129: PUSH2 0x0161\n132: JUMP"
      },
      {
        "offset": 133,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "133: JUMPDEST\n134: STOP"
      },
      {
        "offset": 135,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561009357",
        "parsedOpcodes": "135: JUMPDEST\n136: CALLVALUE\n137: DUP1\n138: ISZERO\n139: PUSH2 0x0093\n142: JUMPI"
      },
      {
        "offset": 143,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "143: PUSH1 0x00\n145: DUP1\n146: REVERT"
      },
      {
        "offset": 147,
        "length": 88,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506100eb6004803603810190808035906020019082018035906020019080806020026020016040519081016040528093929190818152602001838360200280828437820191505050505050919291929050505061021c56",
        "parsedOpcodes": "147: JUMPDEST\n148: POP\n149: PUSH2 0x00eb\n152: PUSH1 0x04\n154: DUP1\n155: CALLDATASIZE\n156: SUB\n157: DUP2\n158: ADD\n159: SWAP1\n160: DUP1\n161: DUP1\n162: CALLDATALOAD\n163: SWAP1\n164: PUSH1 0x20\n166: ADD\n167: SWAP1\n168: DUP3\n169: ADD\n170: DUP1\n171: CALLDATALOAD\n172: SWAP1\n173: PUSH1 0x20\n175: ADD\n176: SWAP1\n177: DUP1\n178: DUP1\n179: PUSH1 0x20\n181: MUL\n182: PUSH1 0x20\n184: ADD\n185: PUSH1 0x40\n187: MLOAD\n188: SWAP1\n189: DUP2\n190: ADD\n191: PUSH1 0x40\n193: MSTORE\n194: DUP1\n195: SWAP4\n196: SWAP3\n197: SWAP2\n198: SWAP1\n199: DUP2\n200: DUP2\n201: MSTORE\n202: PUSH1 0x20\n204: ADD\n205: DUP4\n206: DUP4\n207: PUSH1 0x20\n209: MUL\n210: DUP1\n211: DUP3\n212: DUP5\n213: CALLDATACOPY\n214: DUP3\n215: ADD\n216: SWAP2\n217: POP\n218: POP\n219: POP\n220: POP\n221: POP\n222: POP\n223: SWAP2\n224: SWAP3\n225: SWAP2\n226: SWAP3\n227: SWAP1\n228: POP\n229: POP\n230: POP\n231: PUSH2 0x021c\n234: JUMP"
      },
      {
        "offset": 235,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "235: JUMPDEST\n236: STOP"
      },
      {
        "offset": 237,
        "length": 87,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014857",
        "parsedOpcodes": "237: JUMPDEST\n238: PUSH1 0x00\n240: DUP1\n241: SWAP1\n242: SLOAD\n243: SWAP1\n244: PUSH2 0x0100\n247: EXP\n248: SWAP1\n249: DIV\n250: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n271: AND\n272: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n293: AND\n294: CALLER\n295: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n316: AND\n317: EQ\n318: ISZERO\n319: ISZERO\n320: PUSH2 0x0148\n323: JUMPI"
      },
      {
        "offset": 324,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "324: PUSH1 0x00\n326: DUP1\n327: REVERT"
      },
      {
        "offset": 328,
        "length": 25,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b3073ffffffffffffffffffffffffffffffffffffffff16ff",
        "parsedOpcodes": "328: JUMPDEST\n329: ADDRESS\n330: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n351: AND\n352: SELFDESTRUCT"
      },
      {
        "offset": 353,
        "length": 87,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bc57",
        "parsedOpcodes": "353: JUMPDEST\n354: PUSH1 0x00\n356: DUP1\n357: SWAP1\n358: SLOAD\n359: SWAP1\n360: PUSH2 0x0100\n363: EXP\n364: SWAP1\n365: DIV\n366: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n387: AND\n388: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n409: AND\n410: CALLER\n411: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n432: AND\n433: EQ\n434: ISZERO\n435: ISZERO\n436: PUSH2 0x01bc\n439: JUMPI"
      },
      {
        "offset": 440,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "440: PUSH1 0x00\n442: DUP1\n443: REVERT"
      },
      {
        "offset": 444,
        "length": 84,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561021957",
        "parsedOpcodes": "444: JUMPDEST\n445: CALLER\n446: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n467: AND\n468: PUSH2 0x08fc\n471: ADDRESS\n472: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n493: AND\n494: BALANCE\n495: SWAP1\n496: DUP2\n497: ISZERO\n498: MUL\n499: SWAP1\n500: PUSH1 0x40\n502: MLOAD\n503: PUSH1 0x00\n505: PUSH1 0x40\n507: MLOAD\n508: DUP1\n509: DUP4\n510: SUB\n511: DUP2\n512: DUP6\n513: DUP9\n514: DUP9\n515: CALL\n516: SWAP4\n517: POP\n518: POP\n519: POP\n520: POP\n521: ISZERO\n522: DUP1\n523: ISZERO\n524: PUSH2 0x0219\n527: JUMPI"
      },
      {
        "offset": 528,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "528: RETURNDATASIZE\n529: PUSH1 0x00\n531: DUP1\n532: RETURNDATACOPY\n533: RETURNDATASIZE\n534: PUSH1 0x00\n536: REVERT"
      },
      {
        "offset": 537,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "537: JUMPDEST\n538: POP\n539: JUMP"
      },
      {
        "offset": 540,
        "length": 13,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "5b600080600080925060009050",
        "parsedOpcodes": "540: JUMPDEST\n541: PUSH1 0x00\n543: DUP1\n544: PUSH1 0x00\n546: DUP1\n547: SWAP3\n548: POP\n549: PUSH1 0x00\n551: SWAP1\n552: POP"
      },
      {
        "offset": 553,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b83518110156104f657",
        "parsedOpcodes": "553: JUMPDEST\n554: DUP4\n555: MLOAD\n556: DUP2\n557: LT\n558: ISZERO\n559: PUSH2 0x04f6\n562: JUMPI"
      },
      {
        "offset": 563,
        "length": 74,
        "type": "common",
        "stackBalance": 4,
        "bytecodeHex": "600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d858381518110151561027e57",
        "parsedOpcodes": "563: PUSH1 0x01\n565: PUSH1 0x00\n567: SWAP1\n568: SLOAD\n569: SWAP1\n570: PUSH2 0x0100\n573: EXP\n574: SWAP1\n575: DIV\n576: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n597: AND\n598: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n619: AND\n620: PUSH4 0xe98b7f4d\n625: DUP6\n626: DUP4\n627: DUP2\n628: MLOAD\n629: DUP2\n630: LT\n631: ISZERO\n632: ISZERO\n633: PUSH2 0x027e\n636: JUMPI"
      },
      {
        "offset": 637,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "637: INVALID"
      },
      {
        "offset": 638,
        "length": 95,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff16815260200191505061014060405180830381600087803b1580156102e157",
        "parsedOpcodes": "638: JUMPDEST\n639: SWAP1\n640: PUSH1 0x20\n642: ADD\n643: SWAP1\n644: PUSH1 0x20\n646: MUL\n647: ADD\n648: MLOAD\n649: PUSH1 0x40\n651: MLOAD\n652: DUP3\n653: PUSH4 0xffffffff\n658: AND\n659: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n689: MUL\n690: DUP2\n691: MSTORE\n692: PUSH1 0x04\n694: ADD\n695: DUP1\n696: DUP3\n697: PUSH4 0xffffffff\n702: AND\n703: DUP2\n704: MSTORE\n705: PUSH1 0x20\n707: ADD\n708: SWAP2\n709: POP\n710: POP\n711: PUSH2 0x0140\n714: PUSH1 0x40\n716: MLOAD\n717: DUP1\n718: DUP4\n719: SUB\n720: DUP2\n721: PUSH1 0x00\n723: DUP8\n724: DUP1\n725: EXTCODESIZE\n726: ISZERO\n727: DUP1\n728: ISZERO\n729: PUSH2 0x02e1\n732: JUMPI"
      },
      {
        "offset": 733,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "733: PUSH1 0x00\n735: DUP1\n736: REVERT"
      },
      {
        "offset": 737,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af11580156102f557",
        "parsedOpcodes": "737: JUMPDEST\n738: POP\n739: GAS\n740: CALL\n741: ISZERO\n742: DUP1\n743: ISZERO\n744: PUSH2 0x02f5\n747: JUMPI"
      },
      {
        "offset": 748,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "748: RETURNDATASIZE\n749: PUSH1 0x00\n751: DUP1\n752: RETURNDATACOPY\n753: RETURNDATASIZE\n754: PUSH1 0x00\n756: REVERT"
      },
      {
        "offset": 757,
        "length": 19,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d61014081101561030c57",
        "parsedOpcodes": "757: JUMPDEST\n758: POP\n759: POP\n760: POP\n761: POP\n762: PUSH1 0x40\n764: MLOAD\n765: RETURNDATASIZE\n766: PUSH2 0x0140\n769: DUP2\n770: LT\n771: ISZERO\n772: PUSH2 0x030c\n775: JUMPI"
      },
      {
        "offset": 776,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "776: PUSH1 0x00\n778: DUP1\n779: REVERT"
      },
      {
        "offset": 780,
        "length": 232,
        "type": "common",
        "stackBalance": 2,
        "bytecodeHex": "5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596509091929394955090919293945090919293509091925090915090505080935050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631940a93685838151811015156103f557",
        "parsedOpcodes": "780: JUMPDEST\n781: DUP2\n782: ADD\n783: SWAP1\n784: DUP1\n785: DUP1\n786: MLOAD\n787: SWAP1\n788: PUSH1 0x20\n790: ADD\n791: SWAP1\n792: SWAP3\n793: SWAP2\n794: SWAP1\n795: DUP1\n796: MLOAD\n797: SWAP1\n798: PUSH1 0x20\n800: ADD\n801: SWAP1\n802: SWAP3\n803: SWAP2\n804: SWAP1\n805: DUP1\n806: MLOAD\n807: SWAP1\n808: PUSH1 0x20\n810: ADD\n811: SWAP1\n812: SWAP3\n813: SWAP2\n814: SWAP1\n815: DUP1\n816: MLOAD\n817: SWAP1\n818: PUSH1 0x20\n820: ADD\n821: SWAP1\n822: SWAP3\n823: SWAP2\n824: SWAP1\n825: DUP1\n826: MLOAD\n827: SWAP1\n828: PUSH1 0x20\n830: ADD\n831: SWAP1\n832: SWAP3\n833: SWAP2\n834: SWAP1\n835: DUP1\n836: MLOAD\n837: SWAP1\n838: PUSH1 0x20\n840: ADD\n841: SWAP1\n842: SWAP3\n843: SWAP2\n844: SWAP1\n845: DUP1\n846: MLOAD\n847: SWAP1\n848: PUSH1 0x20\n850: ADD\n851: SWAP1\n852: SWAP3\n853: SWAP2\n854: SWAP1\n855: DUP1\n856: MLOAD\n857: SWAP1\n858: PUSH1 0x20\n860: ADD\n861: SWAP1\n862: SWAP3\n863: SWAP2\n864: SWAP1\n865: DUP1\n866: MLOAD\n867: SWAP1\n868: PUSH1 0x20\n870: ADD\n871: SWAP1\n872: SWAP3\n873: SWAP2\n874: SWAP1\n875: DUP1\n876: MLOAD\n877: SWAP1\n878: PUSH1 0x20\n880: ADD\n881: SWAP1\n882: SWAP3\n883: SWAP2\n884: SWAP1\n885: POP\n886: POP\n887: POP\n888: SWAP1\n889: SWAP2\n890: SWAP3\n891: SWAP4\n892: SWAP5\n893: SWAP6\n894: SWAP7\n895: SWAP8\n896: SWAP9\n897: POP\n898: SWAP1\n899: SWAP2\n900: SWAP3\n901: SWAP4\n902: SWAP5\n903: SWAP6\n904: SWAP7\n905: POP\n906: SWAP1\n907: SWAP2\n908: SWAP3\n909: SWAP4\n910: SWAP5\n911: SWAP6\n912: POP\n913: SWAP1\n914: SWAP2\n915: SWAP3\n916: SWAP4\n917: SWAP5\n918: POP\n919: SWAP1\n920: SWAP2\n921: SWAP3\n922: SWAP4\n923: POP\n924: SWAP1\n925: SWAP2\n926: SWAP3\n927: POP\n928: SWAP1\n929: SWAP2\n930: POP\n931: SWAP1\n932: POP\n933: POP\n934: DUP1\n935: SWAP4\n936: POP\n937: POP\n938: PUSH1 0x01\n940: PUSH1 0x00\n942: SWAP1\n943: SLOAD\n944: SWAP1\n945: PUSH2 0x0100\n948: EXP\n949: SWAP1\n950: DIV\n951: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n972: AND\n973: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n994: AND\n995: PUSH4 0x1940a936\n1000: DUP6\n1001: DUP4\n1002: DUP2\n1003: MLOAD\n1004: DUP2\n1005: LT\n1006: ISZERO\n1007: ISZERO\n1008: PUSH2 0x03f5\n1011: JUMPI"
      },
      {
        "offset": 1012,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1012: INVALID"
      },
      {
        "offset": 1013,
        "length": 94,
        "type": "common",
        "stackBalance": 6,
        "bytecodeHex": "5b906020019060200201516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808263ffffffff168152602001915050602060405180830381600087803b15801561045757",
        "parsedOpcodes": "1013: JUMPDEST\n1014: SWAP1\n1015: PUSH1 0x20\n1017: ADD\n1018: SWAP1\n1019: PUSH1 0x20\n1021: MUL\n1022: ADD\n1023: MLOAD\n1024: PUSH1 0x40\n1026: MLOAD\n1027: DUP3\n1028: PUSH4 0xffffffff\n1033: AND\n1034: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n1064: MUL\n1065: DUP2\n1066: MSTORE\n1067: PUSH1 0x04\n1069: ADD\n1070: DUP1\n1071: DUP3\n1072: PUSH4 0xffffffff\n1077: AND\n1078: DUP2\n1079: MSTORE\n1080: PUSH1 0x20\n1082: ADD\n1083: SWAP2\n1084: POP\n1085: POP\n1086: PUSH1 0x20\n1088: PUSH1 0x40\n1090: MLOAD\n1091: DUP1\n1092: DUP4\n1093: SUB\n1094: DUP2\n1095: PUSH1 0x00\n1097: DUP8\n1098: DUP1\n1099: EXTCODESIZE\n1100: ISZERO\n1101: DUP1\n1102: ISZERO\n1103: PUSH2 0x0457\n1106: JUMPI"
      },
      {
        "offset": 1107,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1107: PUSH1 0x00\n1109: DUP1\n1110: REVERT"
      },
      {
        "offset": 1111,
        "length": 11,
        "type": "common",
        "stackBalance": -6,
        "bytecodeHex": "5b505af115801561046b57",
        "parsedOpcodes": "1111: JUMPDEST\n1112: POP\n1113: GAS\n1114: CALL\n1115: ISZERO\n1116: DUP1\n1117: ISZERO\n1118: PUSH2 0x046b\n1121: JUMPI"
      },
      {
        "offset": 1122,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "1122: RETURNDATASIZE\n1123: PUSH1 0x00\n1125: DUP1\n1126: RETURNDATACOPY\n1127: RETURNDATASIZE\n1128: PUSH1 0x00\n1130: REVERT"
      },
      {
        "offset": 1131,
        "length": 18,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b505050506040513d602081101561048157",
        "parsedOpcodes": "1131: JUMPDEST\n1132: POP\n1133: POP\n1134: POP\n1135: POP\n1136: PUSH1 0x40\n1138: MLOAD\n1139: RETURNDATASIZE\n1140: PUSH1 0x20\n1142: DUP2\n1143: LT\n1144: ISZERO\n1145: PUSH2 0x0481\n1148: JUMPI"
      },
      {
        "offset": 1149,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "1149: PUSH1 0x00\n1151: DUP1\n1152: REVERT"
      },
      {
        "offset": 1153,
        "length": 24,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b8101908080519060200190929190505050801561049b57",
        "parsedOpcodes": "1153: JUMPDEST\n1154: DUP2\n1155: ADD\n1156: SWAP1\n1157: DUP1\n1158: DUP1\n1159: MLOAD\n1160: SWAP1\n1161: PUSH1 0x20\n1163: ADD\n1164: SWAP1\n1165: SWAP3\n1166: SWAP2\n1167: SWAP1\n1168: POP\n1169: POP\n1170: POP\n1171: DUP1\n1172: ISZERO\n1173: PUSH2 0x049b\n1176: JUMPI"
      },
      {
        "offset": 1177,
        "length": 2,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5082",
        "parsedOpcodes": "1177: POP\n1178: DUP3"
      },
      {
        "offset": 1179,
        "length": 6,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b156104e957",
        "parsedOpcodes": "1179: JUMPDEST\n1180: ISZERO\n1181: PUSH2 0x04e9\n1184: JUMPI"
      },
      {
        "offset": 1185,
        "length": 13,
        "type": "common",
        "stackBalance": 3,
        "bytecodeHex": "8184828151811015156104af57",
        "parsedOpcodes": "1185: DUP2\n1186: DUP5\n1187: DUP3\n1188: DUP2\n1189: MLOAD\n1190: DUP2\n1191: LT\n1192: ISZERO\n1193: ISZERO\n1194: PUSH2 0x04af\n1197: JUMPI"
      },
      {
        "offset": 1198,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "fe",
        "parsedOpcodes": "1198: INVALID"
      },
      {
        "offset": 1199,
        "length": 58,
        "type": "common",
        "stackBalance": -3,
        "bytecodeHex": "5b906020019060200201519080600181540180825580915050906001820390600052602060002001600090919263ffffffff1690919091505550",
        "parsedOpcodes": "1199: JUMPDEST\n1200: SWAP1\n1201: PUSH1 0x20\n1203: ADD\n1204: SWAP1\n1205: PUSH1 0x20\n1207: MUL\n1208: ADD\n1209: MLOAD\n1210: SWAP1\n1211: DUP1\n1212: PUSH1 0x01\n1214: DUP2\n1215: SLOAD\n1216: ADD\n1217: DUP1\n1218: DUP3\n1219: SSTORE\n1220: DUP1\n1221: SWAP2\n1222: POP\n1223: POP\n1224: SWAP1\n1225: PUSH1 0x01\n1227: DUP3\n1228: SUB\n1229: SWAP1\n1230: PUSH1 0x00\n1232: MSTORE\n1233: PUSH1 0x20\n1235: PUSH1 0x00\n1237: SHA3\n1238: ADD\n1239: PUSH1 0x00\n1241: SWAP1\n1242: SWAP2\n1243: SWAP3\n1244: PUSH4 0xffffffff\n1249: AND\n1250: SWAP1\n1251: SWAP2\n1252: SWAP1\n1253: SWAP2\n1254: POP\n1255: SSTORE\n1256: POP"
      },
      {
        "offset": 1257,
        "length": 13,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b808060010191505061022956",
        "parsedOpcodes": "1257: JUMPDEST\n1258: DUP1\n1259: DUP1\n1260: PUSH1 0x01\n1262: ADD\n1263: SWAP2\n1264: POP\n1265: POP\n1266: PUSH2 0x0229\n1269: JUMP"
      },
      {
        "offset": 1270,
        "length": 6,
        "type": "common",
        "stackBalance": -5,
        "bytecodeHex": "5b5050505056",
        "parsedOpcodes": "1270: JUMPDEST\n1271: POP\n1272: POP\n1273: POP\n1274: POP\n1275: JUMP"
      },
      {
        "offset": 1276,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1276: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          87
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          89
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          112
        ]
      },
      {
        "from": 76,
        "to": [
          87,
          135
        ]
      },
      {
        "from": 87,
        "to": [
          1276
        ]
      },
      {
        "from": 89,
        "to": [
          97,
          101
        ]
      },
      {
        "from": 97,
        "to": [
          1276
        ]
      },
      {
        "from": 101,
        "to": [
          237,
          237
        ]
      },
      {
        "from": 110,
        "to": [
          1276
        ]
      },
      {
        "from": 112,
        "to": [
          120,
          124
        ]
      },
      {
        "from": 120,
        "to": [
          1276
        ]
      },
      {
        "from": 124,
        "to": [
          353,
          353
        ]
      },
      {
        "from": 133,
        "to": [
          1276
        ]
      },
      {
        "from": 135,
        "to": [
          143,
          147
        ]
      },
      {
        "from": 143,
        "to": [
          1276
        ]
      },
      {
        "from": 147,
        "to": [
          540,
          540
        ]
      },
      {
        "from": 235,
        "to": [
          1276
        ]
      },
      {
        "from": 237,
        "to": [
          324,
          328
        ]
      },
      {
        "from": 324,
        "to": [
          1276
        ]
      },
      {
        "from": 328,
        "to": [
          1276
        ]
      },
      {
        "from": 353,
        "to": [
          440,
          444
        ]
      },
      {
        "from": 440,
        "to": [
          1276
        ]
      },
      {
        "from": 444,
        "to": [
          528,
          537
        ]
      },
      {
        "from": 528,
        "to": [
          1276
        ]
      },
      {
        "from": 537,
        "to": [
          133
        ]
      },
      {
        "from": 540,
        "to": [
          553
        ]
      },
      {
        "from": 553,
        "to": [
          563,
          1270
        ]
      },
      {
        "from": 563,
        "to": [
          637,
          638
        ]
      },
      {
        "from": 637,
        "to": [
          1276
        ]
      },
      {
        "from": 638,
        "to": [
          733,
          737
        ]
      },
      {
        "from": 733,
        "to": [
          1276
        ]
      },
      {
        "from": 737,
        "to": [
          748,
          757
        ]
      },
      {
        "from": 748,
        "to": [
          1276
        ]
      },
      {
        "from": 757,
        "to": [
          776,
          780
        ]
      },
      {
        "from": 776,
        "to": [
          1276
        ]
      },
      {
        "from": 780,
        "to": [
          1012,
          1013
        ]
      },
      {
        "from": 1012,
        "to": [
          1276
        ]
      },
      {
        "from": 1013,
        "to": [
          1107,
          1111
        ]
      },
      {
        "from": 1107,
        "to": [
          1276
        ]
      },
      {
        "from": 1111,
        "to": [
          1122,
          1131
        ]
      },
      {
        "from": 1122,
        "to": [
          1276
        ]
      },
      {
        "from": 1131,
        "to": [
          1149,
          1153
        ]
      },
      {
        "from": 1149,
        "to": [
          1276
        ]
      },
      {
        "from": 1153,
        "to": [
          1177,
          1179
        ]
      },
      {
        "from": 1177,
        "to": [
          1179
        ]
      },
      {
        "from": 1179,
        "to": [
          1185,
          1257
        ]
      },
      {
        "from": 1185,
        "to": [
          1198,
          1199
        ]
      },
      {
        "from": 1198,
        "to": [
          1276
        ]
      },
      {
        "from": 1199,
        "to": [
          1257
        ]
      },
      {
        "from": 1257,
        "to": [
          553,
          553,
          553,
          553,
          553
        ]
      },
      {
        "from": 1270,
        "to": [
          235,
          235
        ]
      },
      {
        "from": 1276,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 100
    }
  }
}