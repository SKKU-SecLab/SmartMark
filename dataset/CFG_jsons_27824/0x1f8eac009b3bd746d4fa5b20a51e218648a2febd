{
  "name": "Analysis_2022-04-05_03-24-33",
  "address": "",
  "binarySource": "608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806331fb67c21461007a57806352efea6e146100d657806361728f39146100ed5780637ccb13c414610120578063f43fa80514610189578063f4dafe71146101bc575b005b6100d4600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101ed565b005b3480156100e257600080fd5b506100eb61037a565b005b3480156100f957600080fd5b50610102610411565b60405180826000191660001916815260200191505060405180910390f35b34801561012c57600080fd5b50610187600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610417565b005b34801561019557600080fd5b5061019e610506565b60405180826000191660001916815260200191505060405180910390f35b3480156101c857600080fd5b506101eb6004803603810190808035600019169060200190929190505050610510565b005b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561022757600080fd5b806040516020018082805190602001908083835b602083101515610260578051825260208201915060208101905060208303925061023b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156102c957805182526020820191506020810190506020830392506102a4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660005460001916141561037757670de0b6b3a7640000341115610376573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610374573d6000803e3d6000fd5b505b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103d657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60005481565b600060010260005460001916141561050357806040516020018082805190602001908083835b602083101515610462578051825260208201915060208101905060208303925061043d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156104cb57805182526020820191506020810190506020830392506104a6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600081600019169055505b50565b6000600254905090565b600060010260005460001916141561052e5780600081600019169055505b505600a165627a7a7230582099535cb83cf7a02b76d71642ab800aa51e05735db66bf93d0fe24c5bb3734c020029",
  "binaryHash": "a59a8901",
  "isOnlyRuntime": true,
  "metadata": "a165627a7a7230582099535cb83cf7a02b76d71642ab800aa51e05735db66bf93d0fe24c5bb3734c020029",
  "solidityVersion": "\u003c 0.5.9",
  "constructorRemainingData": "",
  "constructorCfg": {
    "bytecode": "",
    "remainingData": "",
    "nodes": [],
    "successors": [],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 0,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "",
      "buildTimeMillis": 1649096673196
    }
  },
  "runtimeCfg": {
    "bytecode": "608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806331fb67c21461007a57806352efea6e146100d657806361728f39146100ed5780637ccb13c414610120578063f43fa80514610189578063f4dafe71146101bc575b005b6100d4600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101ed565b005b3480156100e257600080fd5b506100eb61037a565b005b3480156100f957600080fd5b50610102610411565b60405180826000191660001916815260200191505060405180910390f35b34801561012c57600080fd5b50610187600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610417565b005b34801561019557600080fd5b5061019e610506565b60405180826000191660001916815260200191505060405180910390f35b3480156101c857600080fd5b506101eb6004803603810190808035600019169060200190929190505050610510565b005b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561022757600080fd5b806040516020018082805190602001908083835b602083101515610260578051825260208201915060208101905060208303925061023b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156102c957805182526020820191506020810190506020830392506102a4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660005460001916141561037757670de0b6b3a7640000341115610376573373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610374573d6000803e3d6000fd5b505b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103d657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60005481565b600060010260005460001916141561050357806040516020018082805190602001908083835b602083101515610462578051825260208201915060208101905060208303925061043d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156104cb57805182526020820191506020810190506020830392506104a6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600081600019169055505b50565b6000600254905090565b600060010260005460001916141561052e5780600081600019169055505b505600",
    "remainingData": "00",
    "nodes": [
      {
        "offset": 0,
        "length": 13,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "60806040526004361061007857",
        "parsedOpcodes": "0: PUSH1 0x80\n2: PUSH1 0x40\n4: MSTORE\n5: PUSH1 0x04\n7: CALLDATASIZE\n8: LT\n9: PUSH2 0x0078\n12: JUMPI"
      },
      {
        "offset": 13,
        "length": 52,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "6000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806331fb67c21461007a57",
        "parsedOpcodes": "13: PUSH1 0x00\n15: CALLDATALOAD\n16: PUSH29 0x0100000000000000000000000000000000000000000000000000000000\n46: SWAP1\n47: DIV\n48: PUSH4 0xffffffff\n53: AND\n54: DUP1\n55: PUSH4 0x31fb67c2\n60: EQ\n61: PUSH2 0x007a\n64: JUMPI"
      },
      {
        "offset": 65,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806352efea6e146100d657",
        "parsedOpcodes": "65: DUP1\n66: PUSH4 0x52efea6e\n71: EQ\n72: PUSH2 0x00d6\n75: JUMPI"
      },
      {
        "offset": 76,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "806361728f39146100ed57",
        "parsedOpcodes": "76: DUP1\n77: PUSH4 0x61728f39\n82: EQ\n83: PUSH2 0x00ed\n86: JUMPI"
      },
      {
        "offset": 87,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "80637ccb13c41461012057",
        "parsedOpcodes": "87: DUP1\n88: PUSH4 0x7ccb13c4\n93: EQ\n94: PUSH2 0x0120\n97: JUMPI"
      },
      {
        "offset": 98,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f43fa8051461018957",
        "parsedOpcodes": "98: DUP1\n99: PUSH4 0xf43fa805\n104: EQ\n105: PUSH2 0x0189\n108: JUMPI"
      },
      {
        "offset": 109,
        "length": 11,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "8063f4dafe71146101bc57",
        "parsedOpcodes": "109: DUP1\n110: PUSH4 0xf4dafe71\n115: EQ\n116: PUSH2 0x01bc\n119: JUMPI"
      },
      {
        "offset": 120,
        "length": 2,
        "type": "fallback",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "120: JUMPDEST\n121: STOP"
      },
      {
        "offset": 122,
        "length": 90,
        "type": "dispatcher",
        "stackBalance": 2,
        "bytecodeHex": "5b6100d4600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101ed56",
        "parsedOpcodes": "122: JUMPDEST\n123: PUSH2 0x00d4\n126: PUSH1 0x04\n128: DUP1\n129: CALLDATASIZE\n130: SUB\n131: DUP2\n132: ADD\n133: SWAP1\n134: DUP1\n135: DUP1\n136: CALLDATALOAD\n137: SWAP1\n138: PUSH1 0x20\n140: ADD\n141: SWAP1\n142: DUP3\n143: ADD\n144: DUP1\n145: CALLDATALOAD\n146: SWAP1\n147: PUSH1 0x20\n149: ADD\n150: SWAP1\n151: DUP1\n152: DUP1\n153: PUSH1 0x1f\n155: ADD\n156: PUSH1 0x20\n158: DUP1\n159: SWAP2\n160: DIV\n161: MUL\n162: PUSH1 0x20\n164: ADD\n165: PUSH1 0x40\n167: MLOAD\n168: SWAP1\n169: DUP2\n170: ADD\n171: PUSH1 0x40\n173: MSTORE\n174: DUP1\n175: SWAP4\n176: SWAP3\n177: SWAP2\n178: SWAP1\n179: DUP2\n180: DUP2\n181: MSTORE\n182: PUSH1 0x20\n184: ADD\n185: DUP4\n186: DUP4\n187: DUP1\n188: DUP3\n189: DUP5\n190: CALLDATACOPY\n191: DUP3\n192: ADD\n193: SWAP2\n194: POP\n195: POP\n196: POP\n197: POP\n198: POP\n199: POP\n200: SWAP2\n201: SWAP3\n202: SWAP2\n203: SWAP3\n204: SWAP1\n205: POP\n206: POP\n207: POP\n208: PUSH2 0x01ed\n211: JUMP"
      },
      {
        "offset": 212,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "212: JUMPDEST\n213: STOP"
      },
      {
        "offset": 214,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100e257",
        "parsedOpcodes": "214: JUMPDEST\n215: CALLVALUE\n216: DUP1\n217: ISZERO\n218: PUSH2 0x00e2\n221: JUMPI"
      },
      {
        "offset": 222,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "222: PUSH1 0x00\n224: DUP1\n225: REVERT"
      },
      {
        "offset": 226,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b506100eb61037a56",
        "parsedOpcodes": "226: JUMPDEST\n227: POP\n228: PUSH2 0x00eb\n231: PUSH2 0x037a\n234: JUMP"
      },
      {
        "offset": 235,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "235: JUMPDEST\n236: STOP"
      },
      {
        "offset": 237,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156100f957",
        "parsedOpcodes": "237: JUMPDEST\n238: CALLVALUE\n239: DUP1\n240: ISZERO\n241: PUSH2 0x00f9\n244: JUMPI"
      },
      {
        "offset": 245,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "245: PUSH1 0x00\n247: DUP1\n248: REVERT"
      },
      {
        "offset": 249,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061010261041156",
        "parsedOpcodes": "249: JUMPDEST\n250: POP\n251: PUSH2 0x0102\n254: PUSH2 0x0411\n257: JUMP"
      },
      {
        "offset": 258,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405180826000191660001916815260200191505060405180910390f3",
        "parsedOpcodes": "258: JUMPDEST\n259: PUSH1 0x40\n261: MLOAD\n262: DUP1\n263: DUP3\n264: PUSH1 0x00\n266: NOT\n267: AND\n268: PUSH1 0x00\n270: NOT\n271: AND\n272: DUP2\n273: MSTORE\n274: PUSH1 0x20\n276: ADD\n277: SWAP2\n278: POP\n279: POP\n280: PUSH1 0x40\n282: MLOAD\n283: DUP1\n284: SWAP2\n285: SUB\n286: SWAP1\n287: RETURN"
      },
      {
        "offset": 288,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561012c57",
        "parsedOpcodes": "288: JUMPDEST\n289: CALLVALUE\n290: DUP1\n291: ISZERO\n292: PUSH2 0x012c\n295: JUMPI"
      },
      {
        "offset": 296,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "296: PUSH1 0x00\n298: DUP1\n299: REVERT"
      },
      {
        "offset": 300,
        "length": 91,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b50610187600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061041756",
        "parsedOpcodes": "300: JUMPDEST\n301: POP\n302: PUSH2 0x0187\n305: PUSH1 0x04\n307: DUP1\n308: CALLDATASIZE\n309: SUB\n310: DUP2\n311: ADD\n312: SWAP1\n313: DUP1\n314: DUP1\n315: CALLDATALOAD\n316: SWAP1\n317: PUSH1 0x20\n319: ADD\n320: SWAP1\n321: DUP3\n322: ADD\n323: DUP1\n324: CALLDATALOAD\n325: SWAP1\n326: PUSH1 0x20\n328: ADD\n329: SWAP1\n330: DUP1\n331: DUP1\n332: PUSH1 0x1f\n334: ADD\n335: PUSH1 0x20\n337: DUP1\n338: SWAP2\n339: DIV\n340: MUL\n341: PUSH1 0x20\n343: ADD\n344: PUSH1 0x40\n346: MLOAD\n347: SWAP1\n348: DUP2\n349: ADD\n350: PUSH1 0x40\n352: MSTORE\n353: DUP1\n354: SWAP4\n355: SWAP3\n356: SWAP2\n357: SWAP1\n358: DUP2\n359: DUP2\n360: MSTORE\n361: PUSH1 0x20\n363: ADD\n364: DUP4\n365: DUP4\n366: DUP1\n367: DUP3\n368: DUP5\n369: CALLDATACOPY\n370: DUP3\n371: ADD\n372: SWAP2\n373: POP\n374: POP\n375: POP\n376: POP\n377: POP\n378: POP\n379: SWAP2\n380: SWAP3\n381: SWAP2\n382: SWAP3\n383: SWAP1\n384: POP\n385: POP\n386: POP\n387: PUSH2 0x0417\n390: JUMP"
      },
      {
        "offset": 391,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "391: JUMPDEST\n392: STOP"
      },
      {
        "offset": 393,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b34801561019557",
        "parsedOpcodes": "393: JUMPDEST\n394: CALLVALUE\n395: DUP1\n396: ISZERO\n397: PUSH2 0x0195\n400: JUMPI"
      },
      {
        "offset": 401,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "401: PUSH1 0x00\n403: DUP1\n404: REVERT"
      },
      {
        "offset": 405,
        "length": 9,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b5061019e61050656",
        "parsedOpcodes": "405: JUMPDEST\n406: POP\n407: PUSH2 0x019e\n410: PUSH2 0x0506\n413: JUMP"
      },
      {
        "offset": 414,
        "length": 30,
        "type": "dispatcher",
        "stackBalance": -1,
        "bytecodeHex": "5b60405180826000191660001916815260200191505060405180910390f3",
        "parsedOpcodes": "414: JUMPDEST\n415: PUSH1 0x40\n417: MLOAD\n418: DUP1\n419: DUP3\n420: PUSH1 0x00\n422: NOT\n423: AND\n424: PUSH1 0x00\n426: NOT\n427: AND\n428: DUP2\n429: MSTORE\n430: PUSH1 0x20\n432: ADD\n433: SWAP2\n434: POP\n435: POP\n436: PUSH1 0x40\n438: MLOAD\n439: DUP1\n440: SWAP2\n441: SUB\n442: SWAP1\n443: RETURN"
      },
      {
        "offset": 444,
        "length": 8,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b3480156101c857",
        "parsedOpcodes": "444: JUMPDEST\n445: CALLVALUE\n446: DUP1\n447: ISZERO\n448: PUSH2 0x01c8\n451: JUMPI"
      },
      {
        "offset": 452,
        "length": 4,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "452: PUSH1 0x00\n454: DUP1\n455: REVERT"
      },
      {
        "offset": 456,
        "length": 35,
        "type": "dispatcher",
        "stackBalance": 1,
        "bytecodeHex": "5b506101eb600480360381019080803560001916906020019092919050505061051056",
        "parsedOpcodes": "456: JUMPDEST\n457: POP\n458: PUSH2 0x01eb\n461: PUSH1 0x04\n463: DUP1\n464: CALLDATASIZE\n465: SUB\n466: DUP2\n467: ADD\n468: SWAP1\n469: DUP1\n470: DUP1\n471: CALLDATALOAD\n472: PUSH1 0x00\n474: NOT\n475: AND\n476: SWAP1\n477: PUSH1 0x20\n479: ADD\n480: SWAP1\n481: SWAP3\n482: SWAP2\n483: SWAP1\n484: POP\n485: POP\n486: POP\n487: PUSH2 0x0510\n490: JUMP"
      },
      {
        "offset": 491,
        "length": 2,
        "type": "dispatcher",
        "stackBalance": 0,
        "bytecodeHex": "5b00",
        "parsedOpcodes": "491: JUMPDEST\n492: STOP"
      },
      {
        "offset": 493,
        "length": 54,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561022757",
        "parsedOpcodes": "493: JUMPDEST\n494: ORIGIN\n495: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n516: AND\n517: CALLER\n518: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n539: AND\n540: EQ\n541: ISZERO\n542: ISZERO\n543: PUSH2 0x0227\n546: JUMPI"
      },
      {
        "offset": 547,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "547: PUSH1 0x00\n549: DUP1\n550: REVERT"
      },
      {
        "offset": 551,
        "length": 20,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "5b80604051602001808280519060200190808383",
        "parsedOpcodes": "551: JUMPDEST\n552: DUP1\n553: PUSH1 0x40\n555: MLOAD\n556: PUSH1 0x20\n558: ADD\n559: DUP1\n560: DUP3\n561: DUP1\n562: MLOAD\n563: SWAP1\n564: PUSH1 0x20\n566: ADD\n567: SWAP1\n568: DUP1\n569: DUP4\n570: DUP4"
      },
      {
        "offset": 571,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60208310151561026057",
        "parsedOpcodes": "571: JUMPDEST\n572: PUSH1 0x20\n574: DUP4\n575: LT\n576: ISZERO\n577: ISZERO\n578: PUSH2 0x0260\n581: JUMPI"
      },
      {
        "offset": 582,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8051825260208201915060208101905060208303925061023b56",
        "parsedOpcodes": "582: DUP1\n583: MLOAD\n584: DUP3\n585: MSTORE\n586: PUSH1 0x20\n588: DUP3\n589: ADD\n590: SWAP2\n591: POP\n592: PUSH1 0x20\n594: DUP2\n595: ADD\n596: SWAP1\n597: POP\n598: PUSH1 0x20\n600: DUP4\n601: SUB\n602: SWAP3\n603: POP\n604: PUSH2 0x023b\n607: JUMP"
      },
      {
        "offset": 608,
        "length": 68,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052604051808280519060200190808383",
        "parsedOpcodes": "608: JUMPDEST\n609: PUSH1 0x01\n611: DUP4\n612: PUSH1 0x20\n614: SUB\n615: PUSH2 0x0100\n618: EXP\n619: SUB\n620: DUP1\n621: NOT\n622: DUP3\n623: MLOAD\n624: AND\n625: DUP2\n626: DUP5\n627: MLOAD\n628: AND\n629: DUP1\n630: DUP3\n631: OR\n632: DUP6\n633: MSTORE\n634: POP\n635: POP\n636: POP\n637: POP\n638: POP\n639: POP\n640: SWAP1\n641: POP\n642: ADD\n643: SWAP2\n644: POP\n645: POP\n646: PUSH1 0x40\n648: MLOAD\n649: PUSH1 0x20\n651: DUP2\n652: DUP4\n653: SUB\n654: SUB\n655: DUP2\n656: MSTORE\n657: SWAP1\n658: PUSH1 0x40\n660: MSTORE\n661: PUSH1 0x40\n663: MLOAD\n664: DUP1\n665: DUP3\n666: DUP1\n667: MLOAD\n668: SWAP1\n669: PUSH1 0x20\n671: ADD\n672: SWAP1\n673: DUP1\n674: DUP4\n675: DUP4"
      },
      {
        "offset": 676,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831015156102c957",
        "parsedOpcodes": "676: JUMPDEST\n677: PUSH1 0x20\n679: DUP4\n680: LT\n681: ISZERO\n682: ISZERO\n683: PUSH2 0x02c9\n686: JUMPI"
      },
      {
        "offset": 687,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805182526020820191506020810190506020830392506102a456",
        "parsedOpcodes": "687: DUP1\n688: MLOAD\n689: DUP3\n690: MSTORE\n691: PUSH1 0x20\n693: DUP3\n694: ADD\n695: SWAP2\n696: POP\n697: PUSH1 0x20\n699: DUP2\n700: ADD\n701: SWAP1\n702: POP\n703: PUSH1 0x20\n705: DUP4\n706: SUB\n707: SWAP3\n708: POP\n709: PUSH2 0x02a4\n712: JUMP"
      },
      {
        "offset": 713,
        "length": 63,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660005460001916141561037757",
        "parsedOpcodes": "713: JUMPDEST\n714: PUSH1 0x01\n716: DUP4\n717: PUSH1 0x20\n719: SUB\n720: PUSH2 0x0100\n723: EXP\n724: SUB\n725: DUP1\n726: NOT\n727: DUP3\n728: MLOAD\n729: AND\n730: DUP2\n731: DUP5\n732: MLOAD\n733: AND\n734: DUP1\n735: DUP3\n736: OR\n737: DUP6\n738: MSTORE\n739: POP\n740: POP\n741: POP\n742: POP\n743: POP\n744: POP\n745: SWAP1\n746: POP\n747: ADD\n748: SWAP2\n749: POP\n750: POP\n751: PUSH1 0x40\n753: MLOAD\n754: DUP1\n755: SWAP2\n756: SUB\n757: SWAP1\n758: SHA3\n759: PUSH1 0x00\n761: NOT\n762: AND\n763: PUSH1 0x00\n765: SLOAD\n766: PUSH1 0x00\n768: NOT\n769: AND\n770: EQ\n771: ISZERO\n772: PUSH2 0x0377\n775: JUMPI"
      },
      {
        "offset": 776,
        "length": 16,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "670de0b6b3a764000034111561037657",
        "parsedOpcodes": "776: PUSH8 0x0de0b6b3a7640000\n785: CALLVALUE\n786: GT\n787: ISZERO\n788: PUSH2 0x0376\n791: JUMPI"
      },
      {
        "offset": 792,
        "length": 83,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561037457",
        "parsedOpcodes": "792: CALLER\n793: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n814: AND\n815: PUSH2 0x08fc\n818: ADDRESS\n819: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n840: AND\n841: BALANCE\n842: SWAP1\n843: DUP2\n844: ISZERO\n845: MUL\n846: SWAP1\n847: PUSH1 0x40\n849: MLOAD\n850: PUSH1 0x00\n852: PUSH1 0x40\n854: MLOAD\n855: DUP1\n856: DUP4\n857: SUB\n858: DUP2\n859: DUP6\n860: DUP9\n861: DUP9\n862: CALL\n863: SWAP4\n864: POP\n865: POP\n866: POP\n867: POP\n868: ISZERO\n869: DUP1\n870: ISZERO\n871: PUSH2 0x0374\n874: JUMPI"
      },
      {
        "offset": 875,
        "length": 9,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "3d6000803e3d6000fd",
        "parsedOpcodes": "875: RETURNDATASIZE\n876: PUSH1 0x00\n878: DUP1\n879: RETURNDATACOPY\n880: RETURNDATASIZE\n881: PUSH1 0x00\n883: REVERT"
      },
      {
        "offset": 884,
        "length": 2,
        "type": "common",
        "stackBalance": -1,
        "bytecodeHex": "5b50",
        "parsedOpcodes": "884: JUMPDEST\n885: POP"
      },
      {
        "offset": 886,
        "length": 1,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b",
        "parsedOpcodes": "886: JUMPDEST"
      },
      {
        "offset": 887,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "887: JUMPDEST\n888: POP\n889: JUMP"
      },
      {
        "offset": 890,
        "length": 88,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103d657",
        "parsedOpcodes": "890: JUMPDEST\n891: PUSH1 0x01\n893: PUSH1 0x00\n895: SWAP1\n896: SLOAD\n897: SWAP1\n898: PUSH2 0x0100\n901: EXP\n902: SWAP1\n903: DIV\n904: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n925: AND\n926: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n947: AND\n948: CALLER\n949: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n970: AND\n971: EQ\n972: ISZERO\n973: ISZERO\n974: PUSH2 0x03d6\n977: JUMPI"
      },
      {
        "offset": 978,
        "length": 4,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "600080fd",
        "parsedOpcodes": "978: PUSH1 0x00\n980: DUP1\n981: REVERT"
      },
      {
        "offset": 982,
        "length": 59,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff",
        "parsedOpcodes": "982: JUMPDEST\n983: PUSH1 0x01\n985: PUSH1 0x00\n987: SWAP1\n988: SLOAD\n989: SWAP1\n990: PUSH2 0x0100\n993: EXP\n994: SWAP1\n995: DIV\n996: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1017: AND\n1018: PUSH20 0xffffffffffffffffffffffffffffffffffffffff\n1039: AND\n1040: SELFDESTRUCT"
      },
      {
        "offset": 1041,
        "length": 6,
        "type": "common",
        "stackBalance": 1,
        "bytecodeHex": "5b6000548156",
        "parsedOpcodes": "1041: JUMPDEST\n1042: PUSH1 0x00\n1044: SLOAD\n1045: DUP2\n1046: JUMP"
      },
      {
        "offset": 1047,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600060010260005460001916141561050357",
        "parsedOpcodes": "1047: JUMPDEST\n1048: PUSH1 0x00\n1050: PUSH1 0x01\n1052: MUL\n1053: PUSH1 0x00\n1055: SLOAD\n1056: PUSH1 0x00\n1058: NOT\n1059: AND\n1060: EQ\n1061: ISZERO\n1062: PUSH2 0x0503\n1065: JUMPI"
      },
      {
        "offset": 1066,
        "length": 19,
        "type": "common",
        "stackBalance": 8,
        "bytecodeHex": "80604051602001808280519060200190808383",
        "parsedOpcodes": "1066: DUP1\n1067: PUSH1 0x40\n1069: MLOAD\n1070: PUSH1 0x20\n1072: ADD\n1073: DUP1\n1074: DUP3\n1075: DUP1\n1076: MLOAD\n1077: SWAP1\n1078: PUSH1 0x20\n1080: ADD\n1081: SWAP1\n1082: DUP1\n1083: DUP4\n1084: DUP4"
      },
      {
        "offset": 1085,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b60208310151561046257",
        "parsedOpcodes": "1085: JUMPDEST\n1086: PUSH1 0x20\n1088: DUP4\n1089: LT\n1090: ISZERO\n1091: ISZERO\n1092: PUSH2 0x0462\n1095: JUMPI"
      },
      {
        "offset": 1096,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8051825260208201915060208101905060208303925061043d56",
        "parsedOpcodes": "1096: DUP1\n1097: MLOAD\n1098: DUP3\n1099: MSTORE\n1100: PUSH1 0x20\n1102: DUP3\n1103: ADD\n1104: SWAP2\n1105: POP\n1106: PUSH1 0x20\n1108: DUP2\n1109: ADD\n1110: SWAP1\n1111: POP\n1112: PUSH1 0x20\n1114: DUP4\n1115: SUB\n1116: SWAP3\n1117: POP\n1118: PUSH2 0x043d\n1121: JUMP"
      },
      {
        "offset": 1122,
        "length": 68,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052604051808280519060200190808383",
        "parsedOpcodes": "1122: JUMPDEST\n1123: PUSH1 0x01\n1125: DUP4\n1126: PUSH1 0x20\n1128: SUB\n1129: PUSH2 0x0100\n1132: EXP\n1133: SUB\n1134: DUP1\n1135: NOT\n1136: DUP3\n1137: MLOAD\n1138: AND\n1139: DUP2\n1140: DUP5\n1141: MLOAD\n1142: AND\n1143: DUP1\n1144: DUP3\n1145: OR\n1146: DUP6\n1147: MSTORE\n1148: POP\n1149: POP\n1150: POP\n1151: POP\n1152: POP\n1153: POP\n1154: SWAP1\n1155: POP\n1156: ADD\n1157: SWAP2\n1158: POP\n1159: POP\n1160: PUSH1 0x40\n1162: MLOAD\n1163: PUSH1 0x20\n1165: DUP2\n1166: DUP4\n1167: SUB\n1168: SUB\n1169: DUP2\n1170: MSTORE\n1171: SWAP1\n1172: PUSH1 0x40\n1174: MSTORE\n1175: PUSH1 0x40\n1177: MLOAD\n1178: DUP1\n1179: DUP3\n1180: DUP1\n1181: MLOAD\n1182: SWAP1\n1183: PUSH1 0x20\n1185: ADD\n1186: SWAP1\n1187: DUP1\n1188: DUP4\n1189: DUP4"
      },
      {
        "offset": 1190,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b6020831015156104cb57",
        "parsedOpcodes": "1190: JUMPDEST\n1191: PUSH1 0x20\n1193: DUP4\n1194: LT\n1195: ISZERO\n1196: ISZERO\n1197: PUSH2 0x04cb\n1200: JUMPI"
      },
      {
        "offset": 1201,
        "length": 26,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "805182526020820191506020810190506020830392506104a656",
        "parsedOpcodes": "1201: DUP1\n1202: MLOAD\n1203: DUP3\n1204: MSTORE\n1205: PUSH1 0x20\n1207: DUP3\n1208: ADD\n1209: SWAP2\n1210: POP\n1211: PUSH1 0x20\n1213: DUP2\n1214: ADD\n1215: SWAP1\n1216: POP\n1217: PUSH1 0x20\n1219: DUP4\n1220: SUB\n1221: SWAP3\n1222: POP\n1223: PUSH2 0x04a6\n1226: JUMP"
      },
      {
        "offset": 1227,
        "length": 56,
        "type": "common",
        "stackBalance": -8,
        "bytecodeHex": "5b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060008160001916905550",
        "parsedOpcodes": "1227: JUMPDEST\n1228: PUSH1 0x01\n1230: DUP4\n1231: PUSH1 0x20\n1233: SUB\n1234: PUSH2 0x0100\n1237: EXP\n1238: SUB\n1239: DUP1\n1240: NOT\n1241: DUP3\n1242: MLOAD\n1243: AND\n1244: DUP2\n1245: DUP5\n1246: MLOAD\n1247: AND\n1248: DUP1\n1249: DUP3\n1250: OR\n1251: DUP6\n1252: MSTORE\n1253: POP\n1254: POP\n1255: POP\n1256: POP\n1257: POP\n1258: POP\n1259: SWAP1\n1260: POP\n1261: ADD\n1262: SWAP2\n1263: POP\n1264: POP\n1265: PUSH1 0x40\n1267: MLOAD\n1268: DUP1\n1269: SWAP2\n1270: SUB\n1271: SWAP1\n1272: SHA3\n1273: PUSH1 0x00\n1275: DUP2\n1276: PUSH1 0x00\n1278: NOT\n1279: AND\n1280: SWAP1\n1281: SSTORE\n1282: POP"
      },
      {
        "offset": 1283,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1283: JUMPDEST\n1284: POP\n1285: JUMP"
      },
      {
        "offset": 1286,
        "length": 10,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600060025490509056",
        "parsedOpcodes": "1286: JUMPDEST\n1287: PUSH1 0x00\n1289: PUSH1 0x02\n1291: SLOAD\n1292: SWAP1\n1293: POP\n1294: SWAP1\n1295: JUMP"
      },
      {
        "offset": 1296,
        "length": 19,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "5b600060010260005460001916141561052e57",
        "parsedOpcodes": "1296: JUMPDEST\n1297: PUSH1 0x00\n1299: PUSH1 0x01\n1301: MUL\n1302: PUSH1 0x00\n1304: SLOAD\n1305: PUSH1 0x00\n1307: NOT\n1308: AND\n1309: EQ\n1310: ISZERO\n1311: PUSH2 0x052e\n1314: JUMPI"
      },
      {
        "offset": 1315,
        "length": 11,
        "type": "common",
        "stackBalance": 0,
        "bytecodeHex": "8060008160001916905550",
        "parsedOpcodes": "1315: DUP1\n1316: PUSH1 0x00\n1318: DUP2\n1319: PUSH1 0x00\n1321: NOT\n1322: AND\n1323: SWAP1\n1324: SSTORE\n1325: POP"
      },
      {
        "offset": 1326,
        "length": 3,
        "type": "common",
        "stackBalance": -2,
        "bytecodeHex": "5b5056",
        "parsedOpcodes": "1326: JUMPDEST\n1327: POP\n1328: JUMP"
      },
      {
        "offset": 1329,
        "length": 0,
        "type": "exit",
        "stackBalance": 0,
        "bytecodeHex": "",
        "parsedOpcodes": "1329: EXIT BLOCK"
      }
    ],
    "successors": [
      {
        "from": 0,
        "to": [
          13,
          120
        ]
      },
      {
        "from": 13,
        "to": [
          65,
          122
        ]
      },
      {
        "from": 65,
        "to": [
          76,
          214
        ]
      },
      {
        "from": 76,
        "to": [
          87,
          237
        ]
      },
      {
        "from": 87,
        "to": [
          98,
          288
        ]
      },
      {
        "from": 98,
        "to": [
          109,
          393
        ]
      },
      {
        "from": 109,
        "to": [
          120,
          444
        ]
      },
      {
        "from": 120,
        "to": [
          1329
        ]
      },
      {
        "from": 122,
        "to": [
          493,
          493
        ]
      },
      {
        "from": 212,
        "to": [
          1329
        ]
      },
      {
        "from": 214,
        "to": [
          222,
          226
        ]
      },
      {
        "from": 222,
        "to": [
          1329
        ]
      },
      {
        "from": 226,
        "to": [
          890,
          890
        ]
      },
      {
        "from": 235,
        "to": [
          1329
        ]
      },
      {
        "from": 237,
        "to": [
          245,
          249
        ]
      },
      {
        "from": 245,
        "to": [
          1329
        ]
      },
      {
        "from": 249,
        "to": [
          1041,
          1041
        ]
      },
      {
        "from": 258,
        "to": [
          1329
        ]
      },
      {
        "from": 288,
        "to": [
          296,
          300
        ]
      },
      {
        "from": 296,
        "to": [
          1329
        ]
      },
      {
        "from": 300,
        "to": [
          1047,
          1047
        ]
      },
      {
        "from": 391,
        "to": [
          1329
        ]
      },
      {
        "from": 393,
        "to": [
          401,
          405
        ]
      },
      {
        "from": 401,
        "to": [
          1329
        ]
      },
      {
        "from": 405,
        "to": [
          1286,
          1286
        ]
      },
      {
        "from": 414,
        "to": [
          1329
        ]
      },
      {
        "from": 444,
        "to": [
          452,
          456
        ]
      },
      {
        "from": 452,
        "to": [
          1329
        ]
      },
      {
        "from": 456,
        "to": [
          1296,
          1296
        ]
      },
      {
        "from": 491,
        "to": [
          1329
        ]
      },
      {
        "from": 493,
        "to": [
          547,
          551
        ]
      },
      {
        "from": 547,
        "to": [
          1329
        ]
      },
      {
        "from": 551,
        "to": [
          571
        ]
      },
      {
        "from": 571,
        "to": [
          582,
          608
        ]
      },
      {
        "from": 582,
        "to": [
          571,
          571
        ]
      },
      {
        "from": 608,
        "to": [
          676
        ]
      },
      {
        "from": 676,
        "to": [
          687,
          713
        ]
      },
      {
        "from": 687,
        "to": [
          676,
          676
        ]
      },
      {
        "from": 713,
        "to": [
          776,
          887
        ]
      },
      {
        "from": 776,
        "to": [
          792,
          886
        ]
      },
      {
        "from": 792,
        "to": [
          875,
          884
        ]
      },
      {
        "from": 875,
        "to": [
          1329
        ]
      },
      {
        "from": 884,
        "to": [
          886
        ]
      },
      {
        "from": 886,
        "to": [
          887
        ]
      },
      {
        "from": 887,
        "to": [
          212,
          212
        ]
      },
      {
        "from": 890,
        "to": [
          978,
          982
        ]
      },
      {
        "from": 978,
        "to": [
          1329
        ]
      },
      {
        "from": 982,
        "to": [
          1329
        ]
      },
      {
        "from": 1041,
        "to": [
          258
        ]
      },
      {
        "from": 1047,
        "to": [
          1066,
          1283
        ]
      },
      {
        "from": 1066,
        "to": [
          1085
        ]
      },
      {
        "from": 1085,
        "to": [
          1096,
          1122
        ]
      },
      {
        "from": 1096,
        "to": [
          1085,
          1085
        ]
      },
      {
        "from": 1122,
        "to": [
          1190
        ]
      },
      {
        "from": 1190,
        "to": [
          1201,
          1227
        ]
      },
      {
        "from": 1201,
        "to": [
          1190,
          1190
        ]
      },
      {
        "from": 1227,
        "to": [
          1283
        ]
      },
      {
        "from": 1283,
        "to": [
          391,
          391
        ]
      },
      {
        "from": 1286,
        "to": [
          414
        ]
      },
      {
        "from": 1296,
        "to": [
          1315,
          1326
        ]
      },
      {
        "from": 1315,
        "to": [
          1326
        ]
      },
      {
        "from": 1326,
        "to": [
          491,
          491
        ]
      },
      {
        "from": 1329,
        "to": []
      }
    ],
    "buildReport": {
      "directJumpTargetErrors": 0,
      "orphanJumpTargetNullErrors": 0,
      "orphanJumpTargetUnknownErrors": 0,
      "loopDepthExceededErrors": 0,
      "multipleRootNodesErrors": 1,
      "stackExceededErrors": 0,
      "blockLimitErrors": 0,
      "criticalErrors": 0,
      "errorLog": "Warning: the CFG has 2 root nodes (a.k.a. nodes without predecessors)\n",
      "buildTimeMillis": 52
    }
  }
}